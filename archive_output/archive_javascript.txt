================================================================================
File: App.js
Path: .\backend\App.js
Size: 466
Modified: 2025-04-20T11:49:19.493375
Created: 2025-03-28T21:45:20.764993
Hash: 5264420b15662214d0f1c9272be3aa08b1e1de00cb63748768a82f093ce53cd4
Lines: 19
================================================================================
// File: src/App.js
// Last Modified: 2026-03-29
import React from 'react';
import MyInterface from './components/MyInterface';
import './App.css';
import Container from '@mui/material/Container';
import Typography from '@mui/material/Typography';

function App() {
    return (
        <Container maxWidth="md">
            <div className="App">
                <MyInterface />
            </div>
        </Container>
    );
}

export default App;

================================================================================
File: BusinessManagement.js
Path: .\components\BusinessManagement.js
Size: 2086
Modified: 2025-04-20T11:49:19.524649
Created: 2025-03-29T03:37:07.424202
Hash: 1e0ca6ae327059e13f397d490c8bcf524a40256e4c1e37cd2fe206fd0dd81761
Lines: 43
================================================================================
// File: src/components/BusinessManagement.js
// Last Modified: 2026-03-29

import React, { useState } from 'react';
import { TextField, Button, Typography, Card, CardContent, Box } from '@mui/material';
import { fetchBusinessDetails as fetchBusinessDetailsApi } from '../services/testService';

function BusinessManagement({ businessName, setBusinessName, businessOutput, setBusinessOutput, fetchBusinessDetails, handleSnackbarOpen, apiKey, businessId, }) {
    const handleFetchBusinessDetails = async () => {
        if (!businessId) {
            setBusinessOutput("Please enter a Business ID.");
            handleSnackbarOpen("Please enter a Business ID.", "warning")
            return;
        }
        try {
            const response = await fetchBusinessDetailsApi(businessId, apiKey)
            //setBusinessOutput("Business endpoint not implemented yet.");

            setBusinessOutput(JSON.stringify(response, null, 2)); // this data will be displayed in json form
            handleSnackbarOpen("Business endpoint Fetched!", "info")

        } catch (error) {
            setBusinessOutput(`Error: ${error.message}`);
            handleSnackbarOpen(error.message, "error")
        }
    };

    return (
        <Card sx={{ mt: 2 }}>
            <CardContent>
                <Typography variant="h6" gutterBottom>Business Management</Typography>
                <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2, mt: 2 }}>
                    <TextField label="Business Name" variant="outlined" value={businessName} onChange={(e) => setBusinessName(e.target.value)} />
                    <Button variant="contained" onClick={() => console.log("Create Business not yet implemented")}>Create Business</Button>
                    <Button variant="contained" onClick={handleFetchBusinessDetails}>Fetch Business Details</Button>
                    <Typography variant="body1">{businessOutput}</Typography>
                </Box>
            </CardContent>
        </Card>
    );
}

export default BusinessManagement;

================================================================================
File: ErrorDisplay.js
Path: .\components\ErrorDisplay.js
Size: 224
Modified: 2025-04-20T11:49:19.578851
Created: 2025-03-28T17:41:15.357819
Hash: d9fc498ba30cb164ed56c300c6edf9f0fb76b8d6bc96582cc60bf92532c6a91d
Lines: 11
================================================================================
import React from 'react';

function ErrorDisplay({ message }) {
  return (
    <div style={{ color: 'red', margin: '10px' }}>
      <strong>Error:</strong> {message}
    </div>
  );
}

export default ErrorDisplay;

================================================================================
File: HealthCheck.js
Path: .\components\HealthCheck.js
Size: 1423
Modified: 2025-04-20T11:49:19.610116
Created: 2025-03-28T17:39:08.379094
Hash: 512cab4c2319857d95d17ed057110949f55f7561632c64a0c8240a4a459fc598
Lines: 52
================================================================================
import React, { useState, useEffect } from 'react';
import { getHealthCheck } from '../services/healthCheckService';
import ErrorDisplay from './ErrorDisplay';
import LoadingIndicator from './LoadingIndicator';
import './HealthCheck.css'; // Import the CSS file

function HealthCheck() {
  const [healthData, setHealthData] = useState(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);

  useEffect(() => {
    const fetchHealthData = async () => {
      setLoading(true);
      setError(null);
      try {
        const data = await getHealthCheck();
        setHealthData(data);
      } catch (e) {
        setError(e.message);
      } finally {
        setLoading(false);
      }
    };

    fetchHealthData();
  }, []);

  if (loading) {
    return <LoadingIndicator />;
  }

  if (error) {
    return <ErrorDisplay message={error} />;
  }

  return (
    <div className="health-check-container">
      <h2>Health Check</h2>
      {healthData && (
        <div className="health-data">
          <p><strong>Status:</strong> {healthData.status}</p>
          <p><strong>Date:</strong> {healthData.date}</p>
          <p><strong>Database:</strong> {healthData.database}</p>
          <p><strong>Schemas Loaded:</strong> {healthData.schemas_loaded}</p>
        </div>
      )}
    </div>
  );
}

export default HealthCheck;

================================================================================
File: healthCheckService.js
Path: .\components\healthCheckService.js
Size: 932
Modified: 2025-04-20T11:49:19.657024
Created: 2025-03-28T17:42:18.913431
Hash: e364d21ff4f3ea3a30733aa443fb79020d6c27097888ea0fc14c9f45a21519c6
Lines: 26
================================================================================
const API_KEY = 'YOUR_API_KEY'; // Replace with your actual API key
const API_ENDPOINT = '/health'; // Replace with your API endpoint if different

export const getHealthCheck = async () => {
  try {
    const response = await fetch(API_ENDPOINT, {
      method: 'GET',
      headers: {
        'Authorization': `Bearer ${API_KEY}`,
        'Content-Type': 'application/json'  // Ensure Content-Type is set
      }
    });

    if (!response.ok) {
      const errorData = await response.json(); // Try to get error message from API
      const errorMessage = errorData.message || `HTTP error! Status: ${response.status}`;
      throw new Error(errorMessage); // Throw the API's error message
    }

    const data = await response.json();
    return data;
  } catch (error) {
    console.error("Error fetching health check:", error);
    throw error; // Re-throw the error for the component to handle
  }
};

================================================================================
File: LoadingIndicator.js
Path: .\components\LoadingIndicator.js
Size: 184
Modified: 2025-04-20T11:49:19.688282
Created: 2025-03-28T17:41:50.839494
Hash: 3bda0a8d4ad1de87eaee4f894d9778482b4a34dc7e347851a408a7b2ebdbc5be
Lines: 11
================================================================================
import React from 'react';

function LoadingIndicator() {
  return (
    <div style={{ margin: '10px' }}>
      Loading...
    </div>
  );
}

export default LoadingIndicator;

================================================================================
File: Login.js
Path: .\components\Login.js
Size: 4678
Modified: 2025-04-20T11:49:19.735087
Created: 2025-04-06T15:48:18.667110
Hash: c5eba3eb9ef7e590154d14974c42d2264797681308b2a5e497ba54d8d89ba075
Lines: 115
================================================================================
import React, { useState } from 'react';
import { TextField, Button, Typography, Card, CardContent, Box, CircularProgress } from '@mui/material';
import { useNavigate } from 'react-router-dom';
import { API_CONFIG, AUTH_CONFIG } from '../config';
import { login } from '../services/authService';

function Login({ 
    setIsAuthenticated, 
    handleSnackbarOpen,
    setUserId,
    setBusinessId,
    setBusinessApiKey
}) {
    const [isLoading, setIsLoading] = useState(false);
    const [userIdInput, setUserIdInput] = useState(API_CONFIG.DEFAULTS.USER_ID);
    const [businessIdInput, setBusinessIdInput] = useState(API_CONFIG.DEFAULTS.BUSINESS_ID);
    const [businessApiKeyInput, setBusinessApiKeyInput] = useState(API_CONFIG.DEFAULTS.API_KEY);
    const navigate = useNavigate();

    const handleSubmit = async (event) => {
        event.preventDefault();
        setIsLoading(true);

        // Trim inputs to avoid whitespace issues
        const trimmedUserId = userIdInput.trim();
        const trimmedBusinessId = businessIdInput.trim();
        const trimmedBusinessApiKey = businessApiKeyInput.trim();

        try {
            console.log('Logging in with:', {
                userId: trimmedUserId,
                businessId: trimmedBusinessId,
                businessApiKey: trimmedBusinessApiKey
            });

            const data = await login(trimmedUserId, trimmedBusinessId, trimmedBusinessApiKey);
            
            if (data.success) {
                // Update parent state
                setUserId(trimmedUserId);
                setBusinessId(trimmedBusinessId);
                setBusinessApiKey(trimmedBusinessApiKey);

                handleSnackbarOpen('Login successful', 'success');
                setIsAuthenticated(true);
                navigate('/');
            } else {
                throw new Error(data.error || 'Login failed');
            }
        } catch (error) {
            console.error('Login error:', error);
            handleSnackbarOpen(error.message || 'Login failed', 'error');
            setIsAuthenticated(false);
        } finally {
            setIsLoading(false);
        }
    };

    return (
        <Card sx={{ mt: 4, maxWidth: 400, mx: 'auto' }}>
            <CardContent>
                <Typography variant="h5" gutterBottom align="center">
                    Login
                </Typography>
                <Box component="form" onSubmit={handleSubmit} sx={{ display: 'flex', flexDirection: 'column', gap: 2, mt: 2 }}>
                    <TextField 
                        label="User ID" 
                        variant="outlined" 
                        value={userIdInput}
                        onChange={(e) => setUserIdInput(e.target.value)}
                        disabled={isLoading}
                        required
                        error={!userIdInput}
                        helperText={!userIdInput ? "User ID is required" : ""}
                        fullWidth
                    />
                    <TextField 
                        label="Business ID" 
                        variant="outlined" 
                        value={businessIdInput}
                        onChange={(e) => setBusinessIdInput(e.target.value)}
                        disabled={isLoading}
                        required
                        error={!businessIdInput}
                        helperText={!businessIdInput ? "Business ID is required" : ""}
                        fullWidth
                    />
                    <TextField
                        label="Business API Key"
                        variant="outlined"
                        value={businessApiKeyInput}
                        onChange={(e) => setBusinessApiKeyInput(e.target.value)}
                        disabled={isLoading}
                        type="password"
                        required
                        error={!businessApiKeyInput}
                        helperText={!businessApiKeyInput ? "Business API Key is required" : ""}
                        fullWidth
                    />
                    <Button 
                        type="submit" 
                        variant="contained" 
                        color="primary" 
                        disabled={isLoading}
                        fullWidth
                    >
                        {isLoading ? <CircularProgress size={24} /> : 'Login'}
                    </Button>
                </Box>
            </CardContent>
        </Card>
    );
}

export default Login;

================================================================================
File: MyInterface.js
Path: .\components\MyInterface.js
Size: 13679
Modified: 2025-04-20T11:49:19.781952
Created: 2025-03-28T18:40:04.865679
Hash: e08b77330a801b27c13195cdbbd17c8481471809996b4e32f235acbc8e9f7c6f
Lines: 285
================================================================================
// File: src/components/MyInterface.js
// Last Modified: 2026-03-30
import React, { useState, useEffect } from 'react';
import './MyInterface.css';
import {
    TextField, Button, Typography, Card, CardContent, Box, TextareaAutosize,
    Snackbar, Alert, Grid, Select, MenuItem, InputLabel, FormControl
} from '@mui/material';
import {
    saveConfig as saveConfigApi,
    createUser as createUserApi,
    fetchBusinessDetails as fetchBusinessDetailsApi,
    createTemplate as createTemplateApi,
    fetchTemplates as fetchTemplatesApi,
    createStage as createStageApi,
    fetchStages as fetchStagesApi,
    processMessage as processMessageApi,
    getStage as getStageApi, // new one
    updateStage as updateStageApi, // new one
    getDefaultTemplates as getDefaultTemplatesApi,
    saveDefaultTemplate as saveDefaultTemplateApi // new api end point
} from '../services/testService'
import Configuration from './Configuration';
import UserManagement from './UserManagement';
import BusinessManagement from './BusinessManagement';
import TemplateManagement from './TemplateManagement';
import StageManagement from './StageManagement';
import SendMessage from './SendMessage';

function MyInterface() {
    const [apiKey, setApiKey] = useState(localStorage.getItem('icmpApiKey') || '');
    const [userId, setUserId] = useState('');
    const [businessId, setBusinessId] = useState('');
    const [defaultTemplates, setDefaultTemplates] = React.useState([]);
    const [firstName, setFirstName] = useState('');
    const [lastName, setLastName] = useState('');
    const [email, setEmail] = useState('');
    const [availableVariable, setAvailableVariable] = React.useState([]);
    const [selectedVariable, setSelectedVariable] = React.useState('');
    const [businessName, setBusinessName] = useState('');
    const [templateID, setTemplateID] = React.useState('');
    const [templateName, setTemplateName] = useState('');
    const [templateText, setTemplateText] = useState('');
    const [stageId, setStageId] = useState(''); // Stage ID for editing
    const [stageName, setStageName] = useState('');
    const [stageDescription, setStageDescription] = useState('');
    const [stageType, setStageType] = useState('');
    const [selectionTemplateId, setSelectionTemplateId] = useState('');
    const [selectionCustomPrompt, setSelectionCustomPrompt] = useState('');
    const [extractionTemplateId, setExtractionTemplateId] = useState('');
    const [extractionCustomPrompt, setExtractionCustomPrompt] = useState('');
    const [responseTemplateId, setResponseTemplateId] = useState('');
    const [responseCustomPrompt, setResponseCustomPrompt] = useState('');
    const [messageInput, setMessageInput] = useState('');

    const [configOutput, setConfigOutput] = useState('');
    const [userOutput, setUserOutput] = useState('');
    const [businessOutput, setBusinessOutput] = useState('');
    const [templateOutput, setTemplateOutput] = useState('');
    const [stageOutput, setStageOutput] = useState('');
    const [messageOutput, setMessageOutput] = useState('');

    // Snackbar
    const [snackbarOpen, setSnackbarOpen] = useState(false);
    const [snackbarMessage, setSnackbarMessage] = useState('');
    const [snackbarSeverity, setSnackbarSeverity] = useState('success'); // or 'error'

    // Open and close snackbar
    const handleSnackbarOpen = (message, severity) => {
        setSnackbarMessage(message);
        setSnackbarSeverity(severity);
        setSnackbarOpen(true);
    };

    const handleSnackbarClose = (event, reason) => {
        if (reason === 'clickaway') {
            return;
        }
        setSnackbarOpen(false);
    };

    // Configuration
    const saveConfig = async () => {
        try {
            const response = await saveConfigApi(apiKey, userId, businessId)
            localStorage.setItem('icmpApiKey', apiKey);
            setConfigOutput(`Configuration Saved:\nUser ID: ${userId}\nBusiness ID: ${businessId}\nAPI Key: ${apiKey}`);
            handleSnackbarOpen("Configuration Saved!", "success")

        } catch (error) {
            setConfigOutput(`Error: ${error.message}`);
            handleSnackbarOpen(error.message, "error")
        }
    };

    //user section
    const createUser = async () => {
        try {
            const response = await createUserApi(firstName, lastName, email)
            setUserOutput("User Created (dummy)");
            handleSnackbarOpen("User Created!", "success")

        } catch (error) {
            setUserOutput(`Error: ${error.message}`);
            handleSnackbarOpen(error.message, "error")

        }
    };

    const fetchBusinessDetails = async () => {
        if (!businessId) {
            setBusinessOutput("Please enter a Business ID.");
            handleSnackbarOpen("Please enter a Business ID.", "warning")
            return;
        }
        try {
            const response = await fetchBusinessDetailsApi(businessId, apiKey)
            setBusinessOutput("Business endpoint not implemented yet.");
            handleSnackbarOpen("Business endpoint not implemented yet.", "info")

        } catch (error) {
            setBusinessOutput(`Error: ${error.message}`);
            handleSnackbarOpen(error.message, "error")

        }
    };

    const createTemplate = async () => {
        const templateData = {
            template_name: templateName,
            template_text: templateText
        };
        try {
            const data = await createTemplateApi(templateData, apiKey)
            setTemplateOutput(`Template Created: ${data.template_id}`);
            handleSnackbarOpen(`Template Created: ${data.template_id}`, "success")
        } catch (error) {
            setTemplateOutput(`Error: ${error.message}`);
            handleSnackbarOpen(error.message, "error")

        }
    };

    const fetchTemplates = async () => {
        try {
            const data = await fetchTemplatesApi(apiKey)
            setTemplateOutput(JSON.stringify(data, null, 2));
            handleSnackbarOpen("Templates Fetched!", "success")

        } catch (error) {
            setTemplateOutput(`Error: ${error.message}`);
            handleSnackbarOpen(error.message, "error")
        }
    };

    const addVariableToTemplate = () => {
        // Combine the static and dynamic variables
        let newTemplateText = templateText + "{" + selectedVariable + "}";
        setTemplateText(newTemplateText);
    };

    const handleTemplateSelection = (event) => {
        const selectedTemplateId = event.target.value;
        setTemplateID(selectedTemplateId);
        // Find the selected template object
        const selectedTemplate = defaultTemplates.find(template => template.template_id === selectedTemplateId);

        // If the template is found, update the templateText state
        if (selectedTemplate) {
            setTemplateText(selectedTemplate.template_text);
        } else {
            setTemplateText(''); // Clear the template text if the template is not found
        }

    };

    const handleSaveDefaultTemplate = async () => {
        try {
            const templateData = {
                template_name: templateName,
                template_text: templateText
            };
            // const data = await createTemplateApi(templateData, apiKey)
            // await saveDefaultTemplateApi(templateData, apiKey); // Implement API call to save the current template to defaults
            setTemplateOutput(`Template Saved to Defaults: ${templateID}`);
            handleSnackbarOpen(`Template Saved to Defaults: ${templateID}`, "success");

        } catch (error) {
            handleSnackbarOpen(`Error saving template: ${error.message}`, "error");
        }
    };

    const handleVariableSelection = (event) => {
        setSelectedVariable(event.target.value);
    };
    //stage section
    const createStage = async () => {
        const stageData = {
            business_id: businessId,
            stage_name: stageName,
            stage_description: stageDescription,
            stage_type: stageType,
            selection_template_id: selectionTemplateId || null,
            selection_custom_prompt: selectionCustomPrompt || null,
            extraction_template_id: extractionTemplateId || null,
            extraction_custom_prompt: extractionCustomPrompt || null,
            response_template_id: responseTemplateId || null,
            response_custom_prompt: responseCustomPrompt || null
        };

        try {
            const data = await createStageApi(stageData, apiKey)
            setStageOutput(`Stage Created: ${data.stage_id}`);
            handleSnackbarOpen(`Stage Created: ${data.stage_id}`, "success")
        } catch (error) {
            setStageOutput(`Error: ${error.message}`);
            handleSnackbarOpen(error.message, "error")
        }
    };

    const fetchStages = async () => {
        if (!businessId) {
            setStageOutput("Please enter a Business ID.");
            handleSnackbarOpen("Please enter a Business ID.", "warning");

            return;
        }
        try {
            const data = await fetchStagesApi(businessId, apiKey)
            setStageOutput(JSON.stringify(data, null, 2));
            handleSnackbarOpen("Stages Fetched!", "success")

        } catch (error) {
            setStageOutput(`Error: ${error.message}`);
            handleSnackbarOpen(error.message, "error")
        }
    };

    const processMessage = async () => {
        const messageData = {
            business_id: businessId,
            user_id: userId,
            message: messageInput
        };
        try {
            const data = await processMessageApi(messageData, apiKey)
            setMessageOutput(`Response: ${data.response}\nConversation ID: ${data.conversation_id}`);
            handleSnackbarOpen(`Response: ${data.response}\nConversation ID: ${data.conversation_id}`, "success")

        } catch (error) {
            setMessageOutput(`Error: ${error.message}`);
            handleSnackbarOpen(error.message, "error")
        }
    };

    useEffect(() => {
        // When the app load, load the API KEY
        const storedApiKey = localStorage.getItem('icmpApiKey');
        if (storedApiKey) {
            setApiKey(storedApiKey);
        }
    }, []);

    return (
        <div className="container">
            <Typography variant="h4" align="center" gutterBottom>ICMP Proof of Concept</Typography>

            <Configuration apiKey={apiKey} setApiKey={setApiKey} userId={userId} setUserId={setUserId} businessId={businessId} setBusinessId={setBusinessId} handleSnackbarOpen={handleSnackbarOpen} />
            <UserManagement firstName={firstName} setFirstName={setFirstName} lastName={lastName} setLastName={setLastName} email={email} setEmail={setEmail} userOutput={userOutput} createUser={createUser} handleSnackbarOpen={handleSnackbarOpen} />
            <BusinessManagement businessName={businessName} setBusinessName={setBusinessName} businessOutput={businessOutput} fetchBusinessDetails={fetchBusinessDetails} handleSnackbarOpen={handleSnackbarOpen} />
            <TemplateManagement templateID={templateID} setTemplateID={setTemplateID} availableVariable={availableVariable} setAvailableVariable={setAvailableVariable} selectedVariable={selectedVariable} setSelectedVariable={setSelectedVariable} handleTemplateSelection={handleTemplateSelection} handleVariableSelection={handleVariableSelection} addVariableToTemplate={addVariableToTemplate} templateName={templateName} setTemplateName={setTemplateName} templateText={templateText} setTemplateText={setTemplateText} templateOutput={templateOutput} createTemplate={createTemplate} fetchTemplates={fetchTemplates} handleSnackbarOpen={handleSnackbarOpen} />
            <StageManagement stageId={stageId} setStageId={setStageId} stageName={stageName} setStageName={setStageName} stageDescription={stageDescription} setStageDescription={setStageDescription} stageType={stageType} setStageType={setStageType} selectionTemplateId={selectionTemplateId} setSelectionTemplateId={setSelectionTemplateId} selectionCustomPrompt={selectionCustomPrompt} setSelectionCustomPrompt={setSelectionCustomPrompt} extractionTemplateId={extractionTemplateId} setExtractionTemplateId={setExtractionTemplateId} extractionCustomPrompt={extractionCustomPrompt} setExtractionCustomPrompt={setExtractionCustomPrompt} responseTemplateId={responseTemplateId} setResponseTemplateId={setResponseTemplateId} responseCustomPrompt={responseCustomPrompt} setResponseCustomPrompt={setResponseCustomPrompt} stageOutput={stageOutput} createStage={createStage} updateStage={processMessage} fetchStages={fetchStages} handleSnackbarOpen={handleSnackbarOpen} />
            <SendMessage messageInput={messageInput} setMessageInput={setMessageInput} messageOutput={messageOutput} processMessage={processMessage} handleSnackbarOpen={handleSnackbarOpen} />

            {/* Snackbar for notifications */}
            <Snackbar open={snackbarOpen} autoHideDuration={6000} onClose={handleSnackbarClose} anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}>
                <Alert onClose={handleSnackbarClose} severity={snackbarSeverity} sx={{ width: '100%' }}>
                    {snackbarMessage}
                </Alert>
            </Snackbar>
        </div>
    );
}

export default MyInterface;

================================================================================
File: babel.config.js
Path: .\front-end\babel.config.js
Size: 189
Modified: 2025-04-17T01:19:06.946331
Created: 2025-04-02T00:27:15.608115
Hash: 6616c21f78b9a46392d35beeccbad7fb0cd3655b9f672782410a349d9e62fb58
Lines: 9
================================================================================
module.exports = {
  presets: [
    ['@babel/preset-env', { targets: { node: 'current' } }],
    '@babel/preset-react'
  ],
  plugins: [
    '@babel/plugin-transform-runtime'
  ]
};

================================================================================
File: jest.config.js
Path: .\front-end\jest.config.js
Size: 576
Modified: 2025-04-17T01:19:06.995194
Created: 2025-04-02T00:18:56.960119
Hash: b1d7165b0f62558fc4e4569b657cc475ceae2de6e07eb73464cae92fa052f22c
Lines: 21
================================================================================
module.exports = {
  testEnvironment: 'jsdom',
  transform: {
    '^.+\\.(js|jsx)$': 'babel-jest',
  },
  transformIgnorePatterns: [
    '/node_modules/(?!(axios)/)'
  ],
  setupFilesAfterEnv: ['<rootDir>/src/setupTests.js'],
  moduleNameMapper: {
    '\\.(css|less|sass|scss)$': 'identity-obj-proxy',
    '\\.(gif|ttf|eot|svg)$': '<rootDir>/__mocks__/fileMock.js'
  },
  testMatch: ['**/__tests__/**/*.js', '**/?(*.)+(spec|test).js'],
  verbose: true,
  collectCoverage: true,
  coveragePathIgnorePatterns: [
    '/node_modules/',
    '/__tests__/'
  ]
};

================================================================================
File: 453.d6cecd2f.chunk.js
Path: .\front-end\build\static\js\453.d6cecd2f.chunk.js
Size: 4515
Modified: 2025-04-19T15:46:53.356833
Created: 2025-04-19T15:46:53.334045
Hash: 5295c5ce1d4e1e1b59387ee8a1711f37451654dc457906a25884ccbcfb40a06b
Lines: 2
================================================================================
"use strict";(self.webpackChunkicmp_ui=self.webpackChunkicmp_ui||[]).push([[453],{6453:(e,t,n)=>{n.r(t),n.d(t,{getCLS:()=>y,getFCP:()=>g,getFID:()=>C,getLCP:()=>P,getTTFB:()=>D});var i,r,a,o,u=function(e,t){return{name:e,value:void 0===t?-1:t,delta:0,entries:[],id:"v2-".concat(Date.now(),"-").concat(Math.floor(8999999999999*Math.random())+1e12)}},c=function(e,t){try{if(PerformanceObserver.supportedEntryTypes.includes(e)){if("first-input"===e&&!("PerformanceEventTiming"in self))return;var n=new PerformanceObserver((function(e){return e.getEntries().map(t)}));return n.observe({type:e,buffered:!0}),n}}catch(e){}},f=function(e,t){var n=function n(i){"pagehide"!==i.type&&"hidden"!==document.visibilityState||(e(i),t&&(removeEventListener("visibilitychange",n,!0),removeEventListener("pagehide",n,!0)))};addEventListener("visibilitychange",n,!0),addEventListener("pagehide",n,!0)},s=function(e){addEventListener("pageshow",(function(t){t.persisted&&e(t)}),!0)},m=function(e,t,n){var i;return function(r){t.value>=0&&(r||n)&&(t.delta=t.value-(i||0),(t.delta||void 0===i)&&(i=t.value,e(t)))}},v=-1,p=function(){return"hidden"===document.visibilityState?0:1/0},d=function(){f((function(e){var t=e.timeStamp;v=t}),!0)},l=function(){return v<0&&(v=p(),d(),s((function(){setTimeout((function(){v=p(),d()}),0)}))),{get firstHiddenTime(){return v}}},g=function(e,t){var n,i=l(),r=u("FCP"),a=function(e){"first-contentful-paint"===e.name&&(f&&f.disconnect(),e.startTime<i.firstHiddenTime&&(r.value=e.startTime,r.entries.push(e),n(!0)))},o=window.performance&&performance.getEntriesByName&&performance.getEntriesByName("first-contentful-paint")[0],f=o?null:c("paint",a);(o||f)&&(n=m(e,r,t),o&&a(o),s((function(i){r=u("FCP"),n=m(e,r,t),requestAnimationFrame((function(){requestAnimationFrame((function(){r.value=performance.now()-i.timeStamp,n(!0)}))}))})))},h=!1,T=-1,y=function(e,t){h||(g((function(e){T=e.value})),h=!0);var n,i=function(t){T>-1&&e(t)},r=u("CLS",0),a=0,o=[],v=function(e){if(!e.hadRecentInput){var t=o[0],i=o[o.length-1];a&&e.startTime-i.startTime<1e3&&e.startTime-t.startTime<5e3?(a+=e.value,o.push(e)):(a=e.value,o=[e]),a>r.value&&(r.value=a,r.entries=o,n())}},p=c("layout-shift",v);p&&(n=m(i,r,t),f((function(){p.takeRecords().map(v),n(!0)})),s((function(){a=0,T=-1,r=u("CLS",0),n=m(i,r,t)})))},E={passive:!0,capture:!0},w=new Date,L=function(e,t){i||(i=t,r=e,a=new Date,F(removeEventListener),S())},S=function(){if(r>=0&&r<a-w){var e={entryType:"first-input",name:i.type,target:i.target,cancelable:i.cancelable,startTime:i.timeStamp,processingStart:i.timeStamp+r};o.forEach((function(t){t(e)})),o=[]}},b=function(e){if(e.cancelable){var t=(e.timeStamp>1e12?new Date:performance.now())-e.timeStamp;"pointerdown"==e.type?function(e,t){var n=function(){L(e,t),r()},i=function(){r()},r=function(){removeEventListener("pointerup",n,E),removeEventListener("pointercancel",i,E)};addEventListener("pointerup",n,E),addEventListener("pointercancel",i,E)}(t,e):L(t,e)}},F=function(e){["mousedown","keydown","touchstart","pointerdown"].forEach((function(t){return e(t,b,E)}))},C=function(e,t){var n,a=l(),v=u("FID"),p=function(e){e.startTime<a.firstHiddenTime&&(v.value=e.processingStart-e.startTime,v.entries.push(e),n(!0))},d=c("first-input",p);n=m(e,v,t),d&&f((function(){d.takeRecords().map(p),d.disconnect()}),!0),d&&s((function(){var a;v=u("FID"),n=m(e,v,t),o=[],r=-1,i=null,F(addEventListener),a=p,o.push(a),S()}))},k={},P=function(e,t){var n,i=l(),r=u("LCP"),a=function(e){var t=e.startTime;t<i.firstHiddenTime&&(r.value=t,r.entries.push(e),n())},o=c("largest-contentful-paint",a);if(o){n=m(e,r,t);var v=function(){k[r.id]||(o.takeRecords().map(a),o.disconnect(),k[r.id]=!0,n(!0))};["keydown","click"].forEach((function(e){addEventListener(e,v,{once:!0,capture:!0})})),f(v,!0),s((function(i){r=u("LCP"),n=m(e,r,t),requestAnimationFrame((function(){requestAnimationFrame((function(){r.value=performance.now()-i.timeStamp,k[r.id]=!0,n(!0)}))}))}))}},D=function(e){var t,n=u("TTFB");t=function(){try{var t=performance.getEntriesByType("navigation")[0]||function(){var e=performance.timing,t={entryType:"navigation",startTime:0};for(var n in e)"navigationStart"!==n&&"toJSON"!==n&&(t[n]=Math.max(e[n]-e.navigationStart,0));return t}();if(n.value=n.delta=t.responseStart,n.value<0||n.value>performance.now())return;n.entries=[t],e(n)}catch(e){}},"complete"===document.readyState?setTimeout(t,0):addEventListener("load",(function(){return setTimeout(t,0)}))}}}]);
//# sourceMappingURL=453.d6cecd2f.chunk.js.map

================================================================================
File: main.b08dd1c0.js
Path: .\front-end\build\static\js\main.b08dd1c0.js
Size: 530047
Modified: 2025-04-19T15:46:53.357006
Created: 2025-04-19T15:46:53.335001
Hash: 589370b132efb2cd2b2cec41e9c22acb2350457e832def2c4d96812b1fa884a9
Lines: 103
================================================================================
/*! For license information please see main.b08dd1c0.js.LICENSE.txt */
(()=>{var e={39:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"default",{enumerable:!0,get:function(){return r.createSvgIcon}});var r=n(4421)},191:(e,t)=>{"use strict";var n=Symbol.for("react.transitional.element"),r=Symbol.for("react.portal"),o=Symbol.for("react.fragment"),a=Symbol.for("react.strict_mode"),i=Symbol.for("react.profiler");Symbol.for("react.provider");var l=Symbol.for("react.consumer"),s=Symbol.for("react.context"),c=Symbol.for("react.forward_ref"),u=Symbol.for("react.suspense"),d=Symbol.for("react.suspense_list"),p=Symbol.for("react.memo"),f=Symbol.for("react.lazy"),m=Symbol.for("react.view_transition"),h=Symbol.for("react.client.reference");function g(e){if("object"===typeof e&&null!==e){var t=e.$$typeof;switch(t){case n:switch(e=e.type){case o:case i:case a:case u:case d:case m:return e;default:switch(e=e&&e.$$typeof){case s:case c:case f:case p:case l:return e;default:return t}}case r:return t}}}t.vM=c,t.lD=p},219:(e,t,n)=>{"use strict";var r=n(3763),o={childContextTypes:!0,contextType:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDefaultProps:!0,getDerivedStateFromError:!0,getDerivedStateFromProps:!0,mixins:!0,propTypes:!0,type:!0},a={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},i={$$typeof:!0,compare:!0,defaultProps:!0,displayName:!0,propTypes:!0,type:!0},l={};function s(e){return r.isMemo(e)?i:l[e.$$typeof]||o}l[r.ForwardRef]={$$typeof:!0,render:!0,defaultProps:!0,displayName:!0,propTypes:!0},l[r.Memo]=i;var c=Object.defineProperty,u=Object.getOwnPropertyNames,d=Object.getOwnPropertySymbols,p=Object.getOwnPropertyDescriptor,f=Object.getPrototypeOf,m=Object.prototype;e.exports=function e(t,n,r){if("string"!==typeof n){if(m){var o=f(n);o&&o!==m&&e(t,o,r)}var i=u(n);d&&(i=i.concat(d(n)));for(var l=s(t),h=s(n),g=0;g<i.length;++g){var v=i[g];if(!a[v]&&(!r||!r[v])&&(!h||!h[v])&&(!l||!l[v])){var y=p(n,v);try{c(t,v,y)}catch(b){}}}}return t}},457:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>r.A});var r=n(7868)},579:(e,t,n)=>{"use strict";e.exports=n(1153)},805:(e,t,n)=>{"use strict";n(5881)},869:(e,t,n)=>{"use strict";n.d(t,{A:()=>a});n(5043);var r=n(3290),o=n(579);function a(e){const{styles:t,defaultTheme:n={}}=e,a="function"===typeof t?e=>{return t(void 0===(r=e)||null===r||0===Object.keys(r).length?n:e);var r}:t;return(0,o.jsx)(r.mL,{styles:a})}},918:(e,t,n)=>{"use strict";function r(e){var t=Object.create(null);return function(n){return void 0===t[n]&&(t[n]=e(n)),t[n]}}n.d(t,{A:()=>r})},950:(e,t,n)=>{"use strict";n.d(t,{A:()=>r});const r=n(3468).A},977:(e,t,n)=>{"use strict";var r=n(4994);t.A=void 0;var o=r(n(39)),a=n(579);t.A=(0,o.default)((0,a.jsx)("path",{d:"m20 12-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8z"}),"ArrowDownward")},1153:(e,t,n)=>{"use strict";var r=n(5043),o=Symbol.for("react.element"),a=Symbol.for("react.fragment"),i=Object.prototype.hasOwnProperty,l=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,s={key:!0,ref:!0,__self:!0,__source:!0};function c(e,t,n){var r,a={},c=null,u=null;for(r in void 0!==n&&(c=""+n),void 0!==t.key&&(c=""+t.key),void 0!==t.ref&&(u=t.ref),t)i.call(t,r)&&!s.hasOwnProperty(r)&&(a[r]=t[r]);if(e&&e.defaultProps)for(r in t=e.defaultProps)void 0===a[r]&&(a[r]=t[r]);return{$$typeof:o,type:e,key:c,ref:u,props:a,_owner:l.current}}t.Fragment=a,t.jsx=c,t.jsxs=c},1188:(e,t,n)=>{"use strict";n.d(t,{A:()=>r});const r=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:Number.MIN_SAFE_INTEGER,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:Number.MAX_SAFE_INTEGER;return Math.max(t,Math.min(e,n))}},1668:(e,t,n)=>{"use strict";function r(e){return e&&e.ownerDocument||document}n.d(t,{A:()=>r})},1702:(e,t,n)=>{"use strict";var r=n(4994);t.A=void 0;var o=r(n(39)),a=n(579);t.A=(0,o.default)((0,a.jsx)("path",{d:"m17 7-1.41 1.41L18.17 11H8v2h10.17l-2.58 2.58L17 17l5-5zM4 5h8V3H4c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h8v-2H4z"}),"Logout")},1722:(e,t,n)=>{"use strict";n.d(t,{Rk:()=>r,SF:()=>o,sk:()=>a});function r(e,t,n){var r="";return n.split(" ").forEach((function(n){void 0!==e[n]?t.push(e[n]+";"):n&&(r+=n+" ")})),r}var o=function(e,t,n){var r=e.key+"-"+t.name;!1===n&&void 0===e.registered[r]&&(e.registered[r]=t.styles)},a=function(e,t,n){o(e,t,n);var r=e.key+"-"+t.name;if(void 0===e.inserted[t.name]){var a=t;do{e.insert(t===a?"."+r:"",a,e.sheet,!0),a=a.next}while(void 0!==a)}}},1782:(e,t,n)=>{"use strict";n.d(t,{A:()=>a});var r=n(5043),o=n(4440);const a=function(e){const t=r.useRef(e);return(0,o.A)((()=>{t.current=e})),r.useRef((function(){return(0,t.current)(...arguments)})).current}},2372:(e,t,n)=>{"use strict";n.d(t,{Ay:()=>a,li:()=>o});var r=n(9386);const o={active:"active",checked:"checked",completed:"completed",disabled:"disabled",error:"error",expanded:"expanded",focused:"focused",focusVisible:"focusVisible",open:"open",readOnly:"readOnly",required:"required",selected:"selected"};function a(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"Mui";const a=o[t];return a?`${n}-${a}`:`${r.A.generate(e)}-${t}`}},2374:(e,t,n)=>{"use strict";t.A=void 0;var r=function(e,t){if(!t&&e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var n=a(t);if(n&&n.has(e))return n.get(e);var r={__proto__:null},o=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var i in e)if("default"!==i&&Object.prototype.hasOwnProperty.call(e,i)){var l=o?Object.getOwnPropertyDescriptor(e,i):null;l&&(l.get||l.set)?Object.defineProperty(r,i,l):r[i]=e[i]}return r.default=e,n&&n.set(e,r),r}(n(5043)),o=n(3174);function a(e){if("function"!=typeof WeakMap)return null;var t=new WeakMap,n=new WeakMap;return(a=function(e){return e?n:t})(e)}t.A=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;const t=r.useContext(o.ThemeContext);return t&&(n=t,0!==Object.keys(n).length)?t:e;var n}},2427:(e,t,n)=>{"use strict";n.d(t,{A:()=>r});const r=n(1668).A},2456:(e,t,n)=>{"use strict";function r(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return t.reduce(((e,t)=>null==t?e:function(){for(var n=arguments.length,r=new Array(n),o=0;o<n;o++)r[o]=arguments[o];e.apply(this,r),t.apply(this,r)}),(()=>{}))}n.d(t,{A:()=>r})},2462:(e,t,n)=>{"use strict";var r=n(4994);t.A=void 0;var o=r(n(39)),a=n(579);t.A=(0,o.default)((0,a.jsx)("path",{d:"m11.99 18.54-7.37-5.73L3 14.07l9 7 9-7-1.63-1.27zM12 16l7.36-5.73L21 9l-9-7-9 7 1.63 1.27z"}),"Layers")},2505:(e,t,n)=>{"use strict";var r=n(4994);t.A=void 0;var o=r(n(39)),a=n(579);t.A=(0,o.default)((0,a.jsx)("path",{d:"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6z"}),"Add")},2532:(e,t,n)=>{"use strict";n.d(t,{A:()=>o});var r=n(2372);function o(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"Mui";const o={};return t.forEach((t=>{o[t]=(0,r.Ay)(e,t,n)})),o}},2730:(e,t,n)=>{"use strict";var r=n(5043),o=n(8853);function a(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var i=new Set,l={};function s(e,t){c(e,t),c(e+"Capture",t)}function c(e,t){for(l[e]=t,e=0;e<t.length;e++)i.add(t[e])}var u=!("undefined"===typeof window||"undefined"===typeof window.document||"undefined"===typeof window.document.createElement),d=Object.prototype.hasOwnProperty,p=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,f={},m={};function h(e,t,n,r,o,a,i){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=o,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=a,this.removeEmptyString=i}var g={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){g[e]=new h(e,0,!1,e,null,!1,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];g[t]=new h(t,1,!1,e[1],null,!1,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){g[e]=new h(e,2,!1,e.toLowerCase(),null,!1,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){g[e]=new h(e,2,!1,e,null,!1,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){g[e]=new h(e,3,!1,e.toLowerCase(),null,!1,!1)})),["checked","multiple","muted","selected"].forEach((function(e){g[e]=new h(e,3,!0,e,null,!1,!1)})),["capture","download"].forEach((function(e){g[e]=new h(e,4,!1,e,null,!1,!1)})),["cols","rows","size","span"].forEach((function(e){g[e]=new h(e,6,!1,e,null,!1,!1)})),["rowSpan","start"].forEach((function(e){g[e]=new h(e,5,!1,e.toLowerCase(),null,!1,!1)}));var v=/[\-:]([a-z])/g;function y(e){return e[1].toUpperCase()}function b(e,t,n,r){var o=g.hasOwnProperty(t)?g[t]:null;(null!==o?0!==o.type:r||!(2<t.length)||"o"!==t[0]&&"O"!==t[0]||"n"!==t[1]&&"N"!==t[1])&&(function(e,t,n,r){if(null===t||"undefined"===typeof t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,o,r)&&(n=null),r||null===o?function(e){return!!d.call(m,e)||!d.call(f,e)&&(p.test(e)?m[e]=!0:(f[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):o.mustUseProperty?e[o.propertyName]=null===n?3!==o.type&&"":n:(t=o.attributeName,r=o.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(o=o.type)||4===o&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(v,y);g[t]=new h(t,1,!1,e,null,!1,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(v,y);g[t]=new h(t,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(v,y);g[t]=new h(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)})),["tabIndex","crossOrigin"].forEach((function(e){g[e]=new h(e,1,!1,e.toLowerCase(),null,!1,!1)})),g.xlinkHref=new h("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach((function(e){g[e]=new h(e,1,!1,e.toLowerCase(),null,!0,!0)}));var x=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,A=Symbol.for("react.element"),w=Symbol.for("react.portal"),S=Symbol.for("react.fragment"),k=Symbol.for("react.strict_mode"),C=Symbol.for("react.profiler"),E=Symbol.for("react.provider"),j=Symbol.for("react.context"),_=Symbol.for("react.forward_ref"),P=Symbol.for("react.suspense"),R=Symbol.for("react.suspense_list"),I=Symbol.for("react.memo"),T=Symbol.for("react.lazy");Symbol.for("react.scope"),Symbol.for("react.debug_trace_mode");var $=Symbol.for("react.offscreen");Symbol.for("react.legacy_hidden"),Symbol.for("react.cache"),Symbol.for("react.tracing_marker");var O=Symbol.iterator;function N(e){return null===e||"object"!==typeof e?null:"function"===typeof(e=O&&e[O]||e["@@iterator"])?e:null}var M,L=Object.assign;function z(e){if(void 0===M)try{throw Error()}catch(n){var t=n.stack.trim().match(/\n( *(at )?)/);M=t&&t[1]||""}return"\n"+M+e}var D=!1;function F(e,t){if(!e||D)return"";D=!0;var n=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(t)if(t=function(){throw Error()},Object.defineProperty(t.prototype,"props",{set:function(){throw Error()}}),"object"===typeof Reflect&&Reflect.construct){try{Reflect.construct(t,[])}catch(c){var r=c}Reflect.construct(e,[],t)}else{try{t.call()}catch(c){r=c}e.call(t.prototype)}else{try{throw Error()}catch(c){r=c}e()}}catch(c){if(c&&r&&"string"===typeof c.stack){for(var o=c.stack.split("\n"),a=r.stack.split("\n"),i=o.length-1,l=a.length-1;1<=i&&0<=l&&o[i]!==a[l];)l--;for(;1<=i&&0<=l;i--,l--)if(o[i]!==a[l]){if(1!==i||1!==l)do{if(i--,0>--l||o[i]!==a[l]){var s="\n"+o[i].replace(" at new "," at ");return e.displayName&&s.includes("<anonymous>")&&(s=s.replace("<anonymous>",e.displayName)),s}}while(1<=i&&0<=l);break}}}finally{D=!1,Error.prepareStackTrace=n}return(e=e?e.displayName||e.name:"")?z(e):""}function B(e){switch(e.tag){case 5:return z(e.type);case 16:return z("Lazy");case 13:return z("Suspense");case 19:return z("SuspenseList");case 0:case 2:case 15:return e=F(e.type,!1);case 11:return e=F(e.type.render,!1);case 1:return e=F(e.type,!0);default:return""}}function W(e){if(null==e)return null;if("function"===typeof e)return e.displayName||e.name||null;if("string"===typeof e)return e;switch(e){case S:return"Fragment";case w:return"Portal";case C:return"Profiler";case k:return"StrictMode";case P:return"Suspense";case R:return"SuspenseList"}if("object"===typeof e)switch(e.$$typeof){case j:return(e.displayName||"Context")+".Consumer";case E:return(e._context.displayName||"Context")+".Provider";case _:var t=e.render;return(e=e.displayName)||(e=""!==(e=t.displayName||t.name||"")?"ForwardRef("+e+")":"ForwardRef"),e;case I:return null!==(t=e.displayName||null)?t:W(e.type)||"Memo";case T:t=e._payload,e=e._init;try{return W(e(t))}catch(n){}}return null}function U(e){var t=e.type;switch(e.tag){case 24:return"Cache";case 9:return(t.displayName||"Context")+".Consumer";case 10:return(t._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return e=(e=t.render).displayName||e.name||"",t.displayName||(""!==e?"ForwardRef("+e+")":"ForwardRef");case 7:return"Fragment";case 5:return t;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return W(t);case 8:return t===k?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if("function"===typeof t)return t.displayName||t.name||null;if("string"===typeof t)return t}return null}function V(e){switch(typeof e){case"boolean":case"number":case"string":case"undefined":case"object":return e;default:return""}}function H(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function K(e){e._valueTracker||(e._valueTracker=function(e){var t=H(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&"undefined"!==typeof n&&"function"===typeof n.get&&"function"===typeof n.set){var o=n.get,a=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return o.call(this)},set:function(e){r=""+e,a.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function q(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=H(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}function G(e){if("undefined"===typeof(e=e||("undefined"!==typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function X(e,t){var n=t.checked;return L({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function Q(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=V(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function Y(e,t){null!=(t=t.checked)&&b(e,"checked",t,!1)}function J(e,t){Y(e,t);var n=V(t.value),r=t.type;if(null!=n)"number"===r?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?ee(e,t.type,n):t.hasOwnProperty("defaultValue")&&ee(e,t.type,V(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function Z(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function ee(e,t,n){"number"===t&&G(e.ownerDocument)===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}var te=Array.isArray;function ne(e,t,n,r){if(e=e.options,t){t={};for(var o=0;o<n.length;o++)t["$"+n[o]]=!0;for(n=0;n<e.length;n++)o=t.hasOwnProperty("$"+e[n].value),e[n].selected!==o&&(e[n].selected=o),o&&r&&(e[n].defaultSelected=!0)}else{for(n=""+V(n),t=null,o=0;o<e.length;o++){if(e[o].value===n)return e[o].selected=!0,void(r&&(e[o].defaultSelected=!0));null!==t||e[o].disabled||(t=e[o])}null!==t&&(t.selected=!0)}}function re(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(a(91));return L({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function oe(e,t){var n=t.value;if(null==n){if(n=t.children,t=t.defaultValue,null!=n){if(null!=t)throw Error(a(92));if(te(n)){if(1<n.length)throw Error(a(93));n=n[0]}t=n}null==t&&(t=""),n=t}e._wrapperState={initialValue:V(n)}}function ae(e,t){var n=V(t.value),r=V(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=""+r)}function ie(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}function le(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function se(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?le(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var ce,ue,de=(ue=function(e,t){if("http://www.w3.org/2000/svg"!==e.namespaceURI||"innerHTML"in e)e.innerHTML=t;else{for((ce=ce||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=ce.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,n,r){MSApp.execUnsafeLocalFunction((function(){return ue(e,t)}))}:ue);function pe(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var fe={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},me=["Webkit","ms","Moz","O"];function he(e,t,n){return null==t||"boolean"===typeof t||""===t?"":n||"number"!==typeof t||0===t||fe.hasOwnProperty(e)&&fe[e]?(""+t).trim():t+"px"}function ge(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),o=he(n,t[n],r);"float"===n&&(n="cssFloat"),r?e.setProperty(n,o):e[n]=o}}Object.keys(fe).forEach((function(e){me.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),fe[t]=fe[e]}))}));var ve=L({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function ye(e,t){if(t){if(ve[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(a(137,e));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(a(60));if("object"!==typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(a(61))}if(null!=t.style&&"object"!==typeof t.style)throw Error(a(62))}}function be(e,t){if(-1===e.indexOf("-"))return"string"===typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var xe=null;function Ae(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var we=null,Se=null,ke=null;function Ce(e){if(e=xo(e)){if("function"!==typeof we)throw Error(a(280));var t=e.stateNode;t&&(t=wo(t),we(e.stateNode,e.type,t))}}function Ee(e){Se?ke?ke.push(e):ke=[e]:Se=e}function je(){if(Se){var e=Se,t=ke;if(ke=Se=null,Ce(e),t)for(e=0;e<t.length;e++)Ce(t[e])}}function _e(e,t){return e(t)}function Pe(){}var Re=!1;function Ie(e,t,n){if(Re)return e(t,n);Re=!0;try{return _e(e,t,n)}finally{Re=!1,(null!==Se||null!==ke)&&(Pe(),je())}}function Te(e,t){var n=e.stateNode;if(null===n)return null;var r=wo(n);if(null===r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}if(e)return null;if(n&&"function"!==typeof n)throw Error(a(231,t,typeof n));return n}var $e=!1;if(u)try{var Oe={};Object.defineProperty(Oe,"passive",{get:function(){$e=!0}}),window.addEventListener("test",Oe,Oe),window.removeEventListener("test",Oe,Oe)}catch(ue){$e=!1}function Ne(e,t,n,r,o,a,i,l,s){var c=Array.prototype.slice.call(arguments,3);try{t.apply(n,c)}catch(u){this.onError(u)}}var Me=!1,Le=null,ze=!1,De=null,Fe={onError:function(e){Me=!0,Le=e}};function Be(e,t,n,r,o,a,i,l,s){Me=!1,Le=null,Ne.apply(Fe,arguments)}function We(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!==(4098&(t=e).flags)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function Ue(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&(null!==(e=e.alternate)&&(t=e.memoizedState)),null!==t)return t.dehydrated}return null}function Ve(e){if(We(e)!==e)throw Error(a(188))}function He(e){return null!==(e=function(e){var t=e.alternate;if(!t){if(null===(t=We(e)))throw Error(a(188));return t!==e?null:e}for(var n=e,r=t;;){var o=n.return;if(null===o)break;var i=o.alternate;if(null===i){if(null!==(r=o.return)){n=r;continue}break}if(o.child===i.child){for(i=o.child;i;){if(i===n)return Ve(o),e;if(i===r)return Ve(o),t;i=i.sibling}throw Error(a(188))}if(n.return!==r.return)n=o,r=i;else{for(var l=!1,s=o.child;s;){if(s===n){l=!0,n=o,r=i;break}if(s===r){l=!0,r=o,n=i;break}s=s.sibling}if(!l){for(s=i.child;s;){if(s===n){l=!0,n=i,r=o;break}if(s===r){l=!0,r=i,n=o;break}s=s.sibling}if(!l)throw Error(a(189))}}if(n.alternate!==r)throw Error(a(190))}if(3!==n.tag)throw Error(a(188));return n.stateNode.current===n?e:t}(e))?Ke(e):null}function Ke(e){if(5===e.tag||6===e.tag)return e;for(e=e.child;null!==e;){var t=Ke(e);if(null!==t)return t;e=e.sibling}return null}var qe=o.unstable_scheduleCallback,Ge=o.unstable_cancelCallback,Xe=o.unstable_shouldYield,Qe=o.unstable_requestPaint,Ye=o.unstable_now,Je=o.unstable_getCurrentPriorityLevel,Ze=o.unstable_ImmediatePriority,et=o.unstable_UserBlockingPriority,tt=o.unstable_NormalPriority,nt=o.unstable_LowPriority,rt=o.unstable_IdlePriority,ot=null,at=null;var it=Math.clz32?Math.clz32:function(e){return e>>>=0,0===e?32:31-(lt(e)/st|0)|0},lt=Math.log,st=Math.LN2;var ct=64,ut=4194304;function dt(e){switch(e&-e){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return 4194240&e;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return 130023424&e;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return e}}function pt(e,t){var n=e.pendingLanes;if(0===n)return 0;var r=0,o=e.suspendedLanes,a=e.pingedLanes,i=268435455&n;if(0!==i){var l=i&~o;0!==l?r=dt(l):0!==(a&=i)&&(r=dt(a))}else 0!==(i=n&~o)?r=dt(i):0!==a&&(r=dt(a));if(0===r)return 0;if(0!==t&&t!==r&&0===(t&o)&&((o=r&-r)>=(a=t&-t)||16===o&&0!==(4194240&a)))return t;if(0!==(4&r)&&(r|=16&n),0!==(t=e.entangledLanes))for(e=e.entanglements,t&=r;0<t;)o=1<<(n=31-it(t)),r|=e[n],t&=~o;return r}function ft(e,t){switch(e){case 1:case 2:case 4:return t+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return t+5e3;default:return-1}}function mt(e){return 0!==(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function ht(){var e=ct;return 0===(4194240&(ct<<=1))&&(ct=64),e}function gt(e){for(var t=[],n=0;31>n;n++)t.push(e);return t}function vt(e,t,n){e.pendingLanes|=t,536870912!==t&&(e.suspendedLanes=0,e.pingedLanes=0),(e=e.eventTimes)[t=31-it(t)]=n}function yt(e,t){var n=e.entangledLanes|=t;for(e=e.entanglements;n;){var r=31-it(n),o=1<<r;o&t|e[r]&t&&(e[r]|=t),n&=~o}}var bt=0;function xt(e){return 1<(e&=-e)?4<e?0!==(268435455&e)?16:536870912:4:1}var At,wt,St,kt,Ct,Et=!1,jt=[],_t=null,Pt=null,Rt=null,It=new Map,Tt=new Map,$t=[],Ot="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function Nt(e,t){switch(e){case"focusin":case"focusout":_t=null;break;case"dragenter":case"dragleave":Pt=null;break;case"mouseover":case"mouseout":Rt=null;break;case"pointerover":case"pointerout":It.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":Tt.delete(t.pointerId)}}function Mt(e,t,n,r,o,a){return null===e||e.nativeEvent!==a?(e={blockedOn:t,domEventName:n,eventSystemFlags:r,nativeEvent:a,targetContainers:[o]},null!==t&&(null!==(t=xo(t))&&wt(t)),e):(e.eventSystemFlags|=r,t=e.targetContainers,null!==o&&-1===t.indexOf(o)&&t.push(o),e)}function Lt(e){var t=bo(e.target);if(null!==t){var n=We(t);if(null!==n)if(13===(t=n.tag)){if(null!==(t=Ue(n)))return e.blockedOn=t,void Ct(e.priority,(function(){St(n)}))}else if(3===t&&n.stateNode.current.memoizedState.isDehydrated)return void(e.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}e.blockedOn=null}function zt(e){if(null!==e.blockedOn)return!1;for(var t=e.targetContainers;0<t.length;){var n=Xt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==n)return null!==(t=xo(n))&&wt(t),e.blockedOn=n,!1;var r=new(n=e.nativeEvent).constructor(n.type,n);xe=r,n.target.dispatchEvent(r),xe=null,t.shift()}return!0}function Dt(e,t,n){zt(e)&&n.delete(t)}function Ft(){Et=!1,null!==_t&&zt(_t)&&(_t=null),null!==Pt&&zt(Pt)&&(Pt=null),null!==Rt&&zt(Rt)&&(Rt=null),It.forEach(Dt),Tt.forEach(Dt)}function Bt(e,t){e.blockedOn===t&&(e.blockedOn=null,Et||(Et=!0,o.unstable_scheduleCallback(o.unstable_NormalPriority,Ft)))}function Wt(e){function t(t){return Bt(t,e)}if(0<jt.length){Bt(jt[0],e);for(var n=1;n<jt.length;n++){var r=jt[n];r.blockedOn===e&&(r.blockedOn=null)}}for(null!==_t&&Bt(_t,e),null!==Pt&&Bt(Pt,e),null!==Rt&&Bt(Rt,e),It.forEach(t),Tt.forEach(t),n=0;n<$t.length;n++)(r=$t[n]).blockedOn===e&&(r.blockedOn=null);for(;0<$t.length&&null===(n=$t[0]).blockedOn;)Lt(n),null===n.blockedOn&&$t.shift()}var Ut=x.ReactCurrentBatchConfig,Vt=!0;function Ht(e,t,n,r){var o=bt,a=Ut.transition;Ut.transition=null;try{bt=1,qt(e,t,n,r)}finally{bt=o,Ut.transition=a}}function Kt(e,t,n,r){var o=bt,a=Ut.transition;Ut.transition=null;try{bt=4,qt(e,t,n,r)}finally{bt=o,Ut.transition=a}}function qt(e,t,n,r){if(Vt){var o=Xt(e,t,n,r);if(null===o)Vr(e,t,r,Gt,n),Nt(e,r);else if(function(e,t,n,r,o){switch(t){case"focusin":return _t=Mt(_t,e,t,n,r,o),!0;case"dragenter":return Pt=Mt(Pt,e,t,n,r,o),!0;case"mouseover":return Rt=Mt(Rt,e,t,n,r,o),!0;case"pointerover":var a=o.pointerId;return It.set(a,Mt(It.get(a)||null,e,t,n,r,o)),!0;case"gotpointercapture":return a=o.pointerId,Tt.set(a,Mt(Tt.get(a)||null,e,t,n,r,o)),!0}return!1}(o,e,t,n,r))r.stopPropagation();else if(Nt(e,r),4&t&&-1<Ot.indexOf(e)){for(;null!==o;){var a=xo(o);if(null!==a&&At(a),null===(a=Xt(e,t,n,r))&&Vr(e,t,r,Gt,n),a===o)break;o=a}null!==o&&r.stopPropagation()}else Vr(e,t,r,null,n)}}var Gt=null;function Xt(e,t,n,r){if(Gt=null,null!==(e=bo(e=Ae(r))))if(null===(t=We(e)))e=null;else if(13===(n=t.tag)){if(null!==(e=Ue(t)))return e;e=null}else if(3===n){if(t.stateNode.current.memoizedState.isDehydrated)return 3===t.tag?t.stateNode.containerInfo:null;e=null}else t!==e&&(e=null);return Gt=e,null}function Qt(e){switch(e){case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 1;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"toggle":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 4;case"message":switch(Je()){case Ze:return 1;case et:return 4;case tt:case nt:return 16;case rt:return 536870912;default:return 16}default:return 16}}var Yt=null,Jt=null,Zt=null;function en(){if(Zt)return Zt;var e,t,n=Jt,r=n.length,o="value"in Yt?Yt.value:Yt.textContent,a=o.length;for(e=0;e<r&&n[e]===o[e];e++);var i=r-e;for(t=1;t<=i&&n[r-t]===o[a-t];t++);return Zt=o.slice(e,1<t?1-t:void 0)}function tn(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}function nn(){return!0}function rn(){return!1}function on(e){function t(t,n,r,o,a){for(var i in this._reactName=t,this._targetInst=r,this.type=n,this.nativeEvent=o,this.target=a,this.currentTarget=null,e)e.hasOwnProperty(i)&&(t=e[i],this[i]=t?t(o):o[i]);return this.isDefaultPrevented=(null!=o.defaultPrevented?o.defaultPrevented:!1===o.returnValue)?nn:rn,this.isPropagationStopped=rn,this}return L(t.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!==typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=nn)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!==typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=nn)},persist:function(){},isPersistent:nn}),t}var an,ln,sn,cn={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},un=on(cn),dn=L({},cn,{view:0,detail:0}),pn=on(dn),fn=L({},dn,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:Cn,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==sn&&(sn&&"mousemove"===e.type?(an=e.screenX-sn.screenX,ln=e.screenY-sn.screenY):ln=an=0,sn=e),an)},movementY:function(e){return"movementY"in e?e.movementY:ln}}),mn=on(fn),hn=on(L({},fn,{dataTransfer:0})),gn=on(L({},dn,{relatedTarget:0})),vn=on(L({},cn,{animationName:0,elapsedTime:0,pseudoElement:0})),yn=L({},cn,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),bn=on(yn),xn=on(L({},cn,{data:0})),An={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},wn={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},Sn={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function kn(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Sn[e])&&!!t[e]}function Cn(){return kn}var En=L({},dn,{key:function(e){if(e.key){var t=An[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=tn(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?wn[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:Cn,charCode:function(e){return"keypress"===e.type?tn(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?tn(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),jn=on(En),_n=on(L({},fn,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),Pn=on(L({},dn,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:Cn})),Rn=on(L({},cn,{propertyName:0,elapsedTime:0,pseudoElement:0})),In=L({},fn,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0}),Tn=on(In),$n=[9,13,27,32],On=u&&"CompositionEvent"in window,Nn=null;u&&"documentMode"in document&&(Nn=document.documentMode);var Mn=u&&"TextEvent"in window&&!Nn,Ln=u&&(!On||Nn&&8<Nn&&11>=Nn),zn=String.fromCharCode(32),Dn=!1;function Fn(e,t){switch(e){case"keyup":return-1!==$n.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function Bn(e){return"object"===typeof(e=e.detail)&&"data"in e?e.data:null}var Wn=!1;var Un={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Vn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Un[e.type]:"textarea"===t}function Hn(e,t,n,r){Ee(r),0<(t=Kr(t,"onChange")).length&&(n=new un("onChange","change",null,n,r),e.push({event:n,listeners:t}))}var Kn=null,qn=null;function Gn(e){zr(e,0)}function Xn(e){if(q(Ao(e)))return e}function Qn(e,t){if("change"===e)return t}var Yn=!1;if(u){var Jn;if(u){var Zn="oninput"in document;if(!Zn){var er=document.createElement("div");er.setAttribute("oninput","return;"),Zn="function"===typeof er.oninput}Jn=Zn}else Jn=!1;Yn=Jn&&(!document.documentMode||9<document.documentMode)}function tr(){Kn&&(Kn.detachEvent("onpropertychange",nr),qn=Kn=null)}function nr(e){if("value"===e.propertyName&&Xn(qn)){var t=[];Hn(t,qn,e,Ae(e)),Ie(Gn,t)}}function rr(e,t,n){"focusin"===e?(tr(),qn=n,(Kn=t).attachEvent("onpropertychange",nr)):"focusout"===e&&tr()}function or(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Xn(qn)}function ar(e,t){if("click"===e)return Xn(t)}function ir(e,t){if("input"===e||"change"===e)return Xn(t)}var lr="function"===typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e===1/t)||e!==e&&t!==t};function sr(e,t){if(lr(e,t))return!0;if("object"!==typeof e||null===e||"object"!==typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++){var o=n[r];if(!d.call(t,o)||!lr(e[o],t[o]))return!1}return!0}function cr(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function ur(e,t){var n,r=cr(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=cr(r)}}function dr(e,t){return!(!e||!t)&&(e===t||(!e||3!==e.nodeType)&&(t&&3===t.nodeType?dr(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}function pr(){for(var e=window,t=G();t instanceof e.HTMLIFrameElement;){try{var n="string"===typeof t.contentWindow.location.href}catch(r){n=!1}if(!n)break;t=G((e=t.contentWindow).document)}return t}function fr(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}function mr(e){var t=pr(),n=e.focusedElem,r=e.selectionRange;if(t!==n&&n&&n.ownerDocument&&dr(n.ownerDocument.documentElement,n)){if(null!==r&&fr(n))if(t=r.start,void 0===(e=r.end)&&(e=t),"selectionStart"in n)n.selectionStart=t,n.selectionEnd=Math.min(e,n.value.length);else if((e=(t=n.ownerDocument||document)&&t.defaultView||window).getSelection){e=e.getSelection();var o=n.textContent.length,a=Math.min(r.start,o);r=void 0===r.end?a:Math.min(r.end,o),!e.extend&&a>r&&(o=r,r=a,a=o),o=ur(n,a);var i=ur(n,r);o&&i&&(1!==e.rangeCount||e.anchorNode!==o.node||e.anchorOffset!==o.offset||e.focusNode!==i.node||e.focusOffset!==i.offset)&&((t=t.createRange()).setStart(o.node,o.offset),e.removeAllRanges(),a>r?(e.addRange(t),e.extend(i.node,i.offset)):(t.setEnd(i.node,i.offset),e.addRange(t)))}for(t=[],e=n;e=e.parentNode;)1===e.nodeType&&t.push({element:e,left:e.scrollLeft,top:e.scrollTop});for("function"===typeof n.focus&&n.focus(),n=0;n<t.length;n++)(e=t[n]).element.scrollLeft=e.left,e.element.scrollTop=e.top}}var hr=u&&"documentMode"in document&&11>=document.documentMode,gr=null,vr=null,yr=null,br=!1;function xr(e,t,n){var r=n.window===n?n.document:9===n.nodeType?n:n.ownerDocument;br||null==gr||gr!==G(r)||("selectionStart"in(r=gr)&&fr(r)?r={start:r.selectionStart,end:r.selectionEnd}:r={anchorNode:(r=(r.ownerDocument&&r.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:r.anchorOffset,focusNode:r.focusNode,focusOffset:r.focusOffset},yr&&sr(yr,r)||(yr=r,0<(r=Kr(vr,"onSelect")).length&&(t=new un("onSelect","select",null,t,n),e.push({event:t,listeners:r}),t.target=gr)))}function Ar(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var wr={animationend:Ar("Animation","AnimationEnd"),animationiteration:Ar("Animation","AnimationIteration"),animationstart:Ar("Animation","AnimationStart"),transitionend:Ar("Transition","TransitionEnd")},Sr={},kr={};function Cr(e){if(Sr[e])return Sr[e];if(!wr[e])return e;var t,n=wr[e];for(t in n)if(n.hasOwnProperty(t)&&t in kr)return Sr[e]=n[t];return e}u&&(kr=document.createElement("div").style,"AnimationEvent"in window||(delete wr.animationend.animation,delete wr.animationiteration.animation,delete wr.animationstart.animation),"TransitionEvent"in window||delete wr.transitionend.transition);var Er=Cr("animationend"),jr=Cr("animationiteration"),_r=Cr("animationstart"),Pr=Cr("transitionend"),Rr=new Map,Ir="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function Tr(e,t){Rr.set(e,t),s(t,[e])}for(var $r=0;$r<Ir.length;$r++){var Or=Ir[$r];Tr(Or.toLowerCase(),"on"+(Or[0].toUpperCase()+Or.slice(1)))}Tr(Er,"onAnimationEnd"),Tr(jr,"onAnimationIteration"),Tr(_r,"onAnimationStart"),Tr("dblclick","onDoubleClick"),Tr("focusin","onFocus"),Tr("focusout","onBlur"),Tr(Pr,"onTransitionEnd"),c("onMouseEnter",["mouseout","mouseover"]),c("onMouseLeave",["mouseout","mouseover"]),c("onPointerEnter",["pointerout","pointerover"]),c("onPointerLeave",["pointerout","pointerover"]),s("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),s("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),s("onBeforeInput",["compositionend","keypress","textInput","paste"]),s("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),s("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),s("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var Nr="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Mr=new Set("cancel close invalid load scroll toggle".split(" ").concat(Nr));function Lr(e,t,n){var r=e.type||"unknown-event";e.currentTarget=n,function(e,t,n,r,o,i,l,s,c){if(Be.apply(this,arguments),Me){if(!Me)throw Error(a(198));var u=Le;Me=!1,Le=null,ze||(ze=!0,De=u)}}(r,t,void 0,e),e.currentTarget=null}function zr(e,t){t=0!==(4&t);for(var n=0;n<e.length;n++){var r=e[n],o=r.event;r=r.listeners;e:{var a=void 0;if(t)for(var i=r.length-1;0<=i;i--){var l=r[i],s=l.instance,c=l.currentTarget;if(l=l.listener,s!==a&&o.isPropagationStopped())break e;Lr(o,l,c),a=s}else for(i=0;i<r.length;i++){if(s=(l=r[i]).instance,c=l.currentTarget,l=l.listener,s!==a&&o.isPropagationStopped())break e;Lr(o,l,c),a=s}}}if(ze)throw e=De,ze=!1,De=null,e}function Dr(e,t){var n=t[go];void 0===n&&(n=t[go]=new Set);var r=e+"__bubble";n.has(r)||(Ur(t,e,2,!1),n.add(r))}function Fr(e,t,n){var r=0;t&&(r|=4),Ur(n,e,r,t)}var Br="_reactListening"+Math.random().toString(36).slice(2);function Wr(e){if(!e[Br]){e[Br]=!0,i.forEach((function(t){"selectionchange"!==t&&(Mr.has(t)||Fr(t,!1,e),Fr(t,!0,e))}));var t=9===e.nodeType?e:e.ownerDocument;null===t||t[Br]||(t[Br]=!0,Fr("selectionchange",!1,t))}}function Ur(e,t,n,r){switch(Qt(t)){case 1:var o=Ht;break;case 4:o=Kt;break;default:o=qt}n=o.bind(null,t,n,e),o=void 0,!$e||"touchstart"!==t&&"touchmove"!==t&&"wheel"!==t||(o=!0),r?void 0!==o?e.addEventListener(t,n,{capture:!0,passive:o}):e.addEventListener(t,n,!0):void 0!==o?e.addEventListener(t,n,{passive:o}):e.addEventListener(t,n,!1)}function Vr(e,t,n,r,o){var a=r;if(0===(1&t)&&0===(2&t)&&null!==r)e:for(;;){if(null===r)return;var i=r.tag;if(3===i||4===i){var l=r.stateNode.containerInfo;if(l===o||8===l.nodeType&&l.parentNode===o)break;if(4===i)for(i=r.return;null!==i;){var s=i.tag;if((3===s||4===s)&&((s=i.stateNode.containerInfo)===o||8===s.nodeType&&s.parentNode===o))return;i=i.return}for(;null!==l;){if(null===(i=bo(l)))return;if(5===(s=i.tag)||6===s){r=a=i;continue e}l=l.parentNode}}r=r.return}Ie((function(){var r=a,o=Ae(n),i=[];e:{var l=Rr.get(e);if(void 0!==l){var s=un,c=e;switch(e){case"keypress":if(0===tn(n))break e;case"keydown":case"keyup":s=jn;break;case"focusin":c="focus",s=gn;break;case"focusout":c="blur",s=gn;break;case"beforeblur":case"afterblur":s=gn;break;case"click":if(2===n.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":s=mn;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":s=hn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":s=Pn;break;case Er:case jr:case _r:s=vn;break;case Pr:s=Rn;break;case"scroll":s=pn;break;case"wheel":s=Tn;break;case"copy":case"cut":case"paste":s=bn;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":s=_n}var u=0!==(4&t),d=!u&&"scroll"===e,p=u?null!==l?l+"Capture":null:l;u=[];for(var f,m=r;null!==m;){var h=(f=m).stateNode;if(5===f.tag&&null!==h&&(f=h,null!==p&&(null!=(h=Te(m,p))&&u.push(Hr(m,h,f)))),d)break;m=m.return}0<u.length&&(l=new s(l,c,null,n,o),i.push({event:l,listeners:u}))}}if(0===(7&t)){if(s="mouseout"===e||"pointerout"===e,(!(l="mouseover"===e||"pointerover"===e)||n===xe||!(c=n.relatedTarget||n.fromElement)||!bo(c)&&!c[ho])&&(s||l)&&(l=o.window===o?o:(l=o.ownerDocument)?l.defaultView||l.parentWindow:window,s?(s=r,null!==(c=(c=n.relatedTarget||n.toElement)?bo(c):null)&&(c!==(d=We(c))||5!==c.tag&&6!==c.tag)&&(c=null)):(s=null,c=r),s!==c)){if(u=mn,h="onMouseLeave",p="onMouseEnter",m="mouse","pointerout"!==e&&"pointerover"!==e||(u=_n,h="onPointerLeave",p="onPointerEnter",m="pointer"),d=null==s?l:Ao(s),f=null==c?l:Ao(c),(l=new u(h,m+"leave",s,n,o)).target=d,l.relatedTarget=f,h=null,bo(o)===r&&((u=new u(p,m+"enter",c,n,o)).target=f,u.relatedTarget=d,h=u),d=h,s&&c)e:{for(p=c,m=0,f=u=s;f;f=qr(f))m++;for(f=0,h=p;h;h=qr(h))f++;for(;0<m-f;)u=qr(u),m--;for(;0<f-m;)p=qr(p),f--;for(;m--;){if(u===p||null!==p&&u===p.alternate)break e;u=qr(u),p=qr(p)}u=null}else u=null;null!==s&&Gr(i,l,s,u,!1),null!==c&&null!==d&&Gr(i,d,c,u,!0)}if("select"===(s=(l=r?Ao(r):window).nodeName&&l.nodeName.toLowerCase())||"input"===s&&"file"===l.type)var g=Qn;else if(Vn(l))if(Yn)g=ir;else{g=or;var v=rr}else(s=l.nodeName)&&"input"===s.toLowerCase()&&("checkbox"===l.type||"radio"===l.type)&&(g=ar);switch(g&&(g=g(e,r))?Hn(i,g,n,o):(v&&v(e,l,r),"focusout"===e&&(v=l._wrapperState)&&v.controlled&&"number"===l.type&&ee(l,"number",l.value)),v=r?Ao(r):window,e){case"focusin":(Vn(v)||"true"===v.contentEditable)&&(gr=v,vr=r,yr=null);break;case"focusout":yr=vr=gr=null;break;case"mousedown":br=!0;break;case"contextmenu":case"mouseup":case"dragend":br=!1,xr(i,n,o);break;case"selectionchange":if(hr)break;case"keydown":case"keyup":xr(i,n,o)}var y;if(On)e:{switch(e){case"compositionstart":var b="onCompositionStart";break e;case"compositionend":b="onCompositionEnd";break e;case"compositionupdate":b="onCompositionUpdate";break e}b=void 0}else Wn?Fn(e,n)&&(b="onCompositionEnd"):"keydown"===e&&229===n.keyCode&&(b="onCompositionStart");b&&(Ln&&"ko"!==n.locale&&(Wn||"onCompositionStart"!==b?"onCompositionEnd"===b&&Wn&&(y=en()):(Jt="value"in(Yt=o)?Yt.value:Yt.textContent,Wn=!0)),0<(v=Kr(r,b)).length&&(b=new xn(b,e,null,n,o),i.push({event:b,listeners:v}),y?b.data=y:null!==(y=Bn(n))&&(b.data=y))),(y=Mn?function(e,t){switch(e){case"compositionend":return Bn(t);case"keypress":return 32!==t.which?null:(Dn=!0,zn);case"textInput":return(e=t.data)===zn&&Dn?null:e;default:return null}}(e,n):function(e,t){if(Wn)return"compositionend"===e||!On&&Fn(e,t)?(e=en(),Zt=Jt=Yt=null,Wn=!1,e):null;switch(e){case"paste":default:return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return Ln&&"ko"!==t.locale?null:t.data}}(e,n))&&(0<(r=Kr(r,"onBeforeInput")).length&&(o=new xn("onBeforeInput","beforeinput",null,n,o),i.push({event:o,listeners:r}),o.data=y))}zr(i,t)}))}function Hr(e,t,n){return{instance:e,listener:t,currentTarget:n}}function Kr(e,t){for(var n=t+"Capture",r=[];null!==e;){var o=e,a=o.stateNode;5===o.tag&&null!==a&&(o=a,null!=(a=Te(e,n))&&r.unshift(Hr(e,a,o)),null!=(a=Te(e,t))&&r.push(Hr(e,a,o))),e=e.return}return r}function qr(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag);return e||null}function Gr(e,t,n,r,o){for(var a=t._reactName,i=[];null!==n&&n!==r;){var l=n,s=l.alternate,c=l.stateNode;if(null!==s&&s===r)break;5===l.tag&&null!==c&&(l=c,o?null!=(s=Te(n,a))&&i.unshift(Hr(n,s,l)):o||null!=(s=Te(n,a))&&i.push(Hr(n,s,l))),n=n.return}0!==i.length&&e.push({event:t,listeners:i})}var Xr=/\r\n?/g,Qr=/\u0000|\uFFFD/g;function Yr(e){return("string"===typeof e?e:""+e).replace(Xr,"\n").replace(Qr,"")}function Jr(e,t,n){if(t=Yr(t),Yr(e)!==t&&n)throw Error(a(425))}function Zr(){}var eo=null,to=null;function no(e,t){return"textarea"===e||"noscript"===e||"string"===typeof t.children||"number"===typeof t.children||"object"===typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var ro="function"===typeof setTimeout?setTimeout:void 0,oo="function"===typeof clearTimeout?clearTimeout:void 0,ao="function"===typeof Promise?Promise:void 0,io="function"===typeof queueMicrotask?queueMicrotask:"undefined"!==typeof ao?function(e){return ao.resolve(null).then(e).catch(lo)}:ro;function lo(e){setTimeout((function(){throw e}))}function so(e,t){var n=t,r=0;do{var o=n.nextSibling;if(e.removeChild(n),o&&8===o.nodeType)if("/$"===(n=o.data)){if(0===r)return e.removeChild(o),void Wt(t);r--}else"$"!==n&&"$?"!==n&&"$!"!==n||r++;n=o}while(n);Wt(t)}function co(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break;if(8===t){if("$"===(t=e.data)||"$!"===t||"$?"===t)break;if("/$"===t)return null}}return e}function uo(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if("$"===n||"$!"===n||"$?"===n){if(0===t)return e;t--}else"/$"===n&&t++}e=e.previousSibling}return null}var po=Math.random().toString(36).slice(2),fo="__reactFiber$"+po,mo="__reactProps$"+po,ho="__reactContainer$"+po,go="__reactEvents$"+po,vo="__reactListeners$"+po,yo="__reactHandles$"+po;function bo(e){var t=e[fo];if(t)return t;for(var n=e.parentNode;n;){if(t=n[ho]||n[fo]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=uo(e);null!==e;){if(n=e[fo])return n;e=uo(e)}return t}n=(e=n).parentNode}return null}function xo(e){return!(e=e[fo]||e[ho])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function Ao(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(a(33))}function wo(e){return e[mo]||null}var So=[],ko=-1;function Co(e){return{current:e}}function Eo(e){0>ko||(e.current=So[ko],So[ko]=null,ko--)}function jo(e,t){ko++,So[ko]=e.current,e.current=t}var _o={},Po=Co(_o),Ro=Co(!1),Io=_o;function To(e,t){var n=e.type.contextTypes;if(!n)return _o;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var o,a={};for(o in n)a[o]=t[o];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=a),a}function $o(e){return null!==(e=e.childContextTypes)&&void 0!==e}function Oo(){Eo(Ro),Eo(Po)}function No(e,t,n){if(Po.current!==_o)throw Error(a(168));jo(Po,t),jo(Ro,n)}function Mo(e,t,n){var r=e.stateNode;if(t=t.childContextTypes,"function"!==typeof r.getChildContext)return n;for(var o in r=r.getChildContext())if(!(o in t))throw Error(a(108,U(e)||"Unknown",o));return L({},n,r)}function Lo(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||_o,Io=Po.current,jo(Po,e),jo(Ro,Ro.current),!0}function zo(e,t,n){var r=e.stateNode;if(!r)throw Error(a(169));n?(e=Mo(e,t,Io),r.__reactInternalMemoizedMergedChildContext=e,Eo(Ro),Eo(Po),jo(Po,e)):Eo(Ro),jo(Ro,n)}var Do=null,Fo=!1,Bo=!1;function Wo(e){null===Do?Do=[e]:Do.push(e)}function Uo(){if(!Bo&&null!==Do){Bo=!0;var e=0,t=bt;try{var n=Do;for(bt=1;e<n.length;e++){var r=n[e];do{r=r(!0)}while(null!==r)}Do=null,Fo=!1}catch(o){throw null!==Do&&(Do=Do.slice(e+1)),qe(Ze,Uo),o}finally{bt=t,Bo=!1}}return null}var Vo=[],Ho=0,Ko=null,qo=0,Go=[],Xo=0,Qo=null,Yo=1,Jo="";function Zo(e,t){Vo[Ho++]=qo,Vo[Ho++]=Ko,Ko=e,qo=t}function ea(e,t,n){Go[Xo++]=Yo,Go[Xo++]=Jo,Go[Xo++]=Qo,Qo=e;var r=Yo;e=Jo;var o=32-it(r)-1;r&=~(1<<o),n+=1;var a=32-it(t)+o;if(30<a){var i=o-o%5;a=(r&(1<<i)-1).toString(32),r>>=i,o-=i,Yo=1<<32-it(t)+o|n<<o|r,Jo=a+e}else Yo=1<<a|n<<o|r,Jo=e}function ta(e){null!==e.return&&(Zo(e,1),ea(e,1,0))}function na(e){for(;e===Ko;)Ko=Vo[--Ho],Vo[Ho]=null,qo=Vo[--Ho],Vo[Ho]=null;for(;e===Qo;)Qo=Go[--Xo],Go[Xo]=null,Jo=Go[--Xo],Go[Xo]=null,Yo=Go[--Xo],Go[Xo]=null}var ra=null,oa=null,aa=!1,ia=null;function la(e,t){var n=Ic(5,null,null,0);n.elementType="DELETED",n.stateNode=t,n.return=e,null===(t=e.deletions)?(e.deletions=[n],e.flags|=16):t.push(n)}function sa(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,ra=e,oa=co(t.firstChild),!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,ra=e,oa=null,!0);case 13:return null!==(t=8!==t.nodeType?null:t)&&(n=null!==Qo?{id:Yo,overflow:Jo}:null,e.memoizedState={dehydrated:t,treeContext:n,retryLane:1073741824},(n=Ic(18,null,null,0)).stateNode=t,n.return=e,e.child=n,ra=e,oa=null,!0);default:return!1}}function ca(e){return 0!==(1&e.mode)&&0===(128&e.flags)}function ua(e){if(aa){var t=oa;if(t){var n=t;if(!sa(e,t)){if(ca(e))throw Error(a(418));t=co(n.nextSibling);var r=ra;t&&sa(e,t)?la(r,n):(e.flags=-4097&e.flags|2,aa=!1,ra=e)}}else{if(ca(e))throw Error(a(418));e.flags=-4097&e.flags|2,aa=!1,ra=e}}}function da(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;ra=e}function pa(e){if(e!==ra)return!1;if(!aa)return da(e),aa=!0,!1;var t;if((t=3!==e.tag)&&!(t=5!==e.tag)&&(t="head"!==(t=e.type)&&"body"!==t&&!no(e.type,e.memoizedProps)),t&&(t=oa)){if(ca(e))throw fa(),Error(a(418));for(;t;)la(e,t),t=co(t.nextSibling)}if(da(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(a(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var n=e.data;if("/$"===n){if(0===t){oa=co(e.nextSibling);break e}t--}else"$"!==n&&"$!"!==n&&"$?"!==n||t++}e=e.nextSibling}oa=null}}else oa=ra?co(e.stateNode.nextSibling):null;return!0}function fa(){for(var e=oa;e;)e=co(e.nextSibling)}function ma(){oa=ra=null,aa=!1}function ha(e){null===ia?ia=[e]:ia.push(e)}var ga=x.ReactCurrentBatchConfig;function va(e,t,n){if(null!==(e=n.ref)&&"function"!==typeof e&&"object"!==typeof e){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(a(309));var r=n.stateNode}if(!r)throw Error(a(147,e));var o=r,i=""+e;return null!==t&&null!==t.ref&&"function"===typeof t.ref&&t.ref._stringRef===i?t.ref:(t=function(e){var t=o.refs;null===e?delete t[i]:t[i]=e},t._stringRef=i,t)}if("string"!==typeof e)throw Error(a(284));if(!n._owner)throw Error(a(290,e))}return e}function ya(e,t){throw e=Object.prototype.toString.call(t),Error(a(31,"[object Object]"===e?"object with keys {"+Object.keys(t).join(", ")+"}":e))}function ba(e){return(0,e._init)(e._payload)}function xa(e){function t(t,n){if(e){var r=t.deletions;null===r?(t.deletions=[n],t.flags|=16):r.push(n)}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function o(e,t){return(e=$c(e,t)).index=0,e.sibling=null,e}function i(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.flags|=2,n):r:(t.flags|=2,n):(t.flags|=1048576,n)}function l(t){return e&&null===t.alternate&&(t.flags|=2),t}function s(e,t,n,r){return null===t||6!==t.tag?((t=Lc(n,e.mode,r)).return=e,t):((t=o(t,n)).return=e,t)}function c(e,t,n,r){var a=n.type;return a===S?d(e,t,n.props.children,r,n.key):null!==t&&(t.elementType===a||"object"===typeof a&&null!==a&&a.$$typeof===T&&ba(a)===t.type)?((r=o(t,n.props)).ref=va(e,t,n),r.return=e,r):((r=Oc(n.type,n.key,n.props,null,e.mode,r)).ref=va(e,t,n),r.return=e,r)}function u(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=zc(n,e.mode,r)).return=e,t):((t=o(t,n.children||[])).return=e,t)}function d(e,t,n,r,a){return null===t||7!==t.tag?((t=Nc(n,e.mode,r,a)).return=e,t):((t=o(t,n)).return=e,t)}function p(e,t,n){if("string"===typeof t&&""!==t||"number"===typeof t)return(t=Lc(""+t,e.mode,n)).return=e,t;if("object"===typeof t&&null!==t){switch(t.$$typeof){case A:return(n=Oc(t.type,t.key,t.props,null,e.mode,n)).ref=va(e,null,t),n.return=e,n;case w:return(t=zc(t,e.mode,n)).return=e,t;case T:return p(e,(0,t._init)(t._payload),n)}if(te(t)||N(t))return(t=Nc(t,e.mode,n,null)).return=e,t;ya(e,t)}return null}function f(e,t,n,r){var o=null!==t?t.key:null;if("string"===typeof n&&""!==n||"number"===typeof n)return null!==o?null:s(e,t,""+n,r);if("object"===typeof n&&null!==n){switch(n.$$typeof){case A:return n.key===o?c(e,t,n,r):null;case w:return n.key===o?u(e,t,n,r):null;case T:return f(e,t,(o=n._init)(n._payload),r)}if(te(n)||N(n))return null!==o?null:d(e,t,n,r,null);ya(e,n)}return null}function m(e,t,n,r,o){if("string"===typeof r&&""!==r||"number"===typeof r)return s(t,e=e.get(n)||null,""+r,o);if("object"===typeof r&&null!==r){switch(r.$$typeof){case A:return c(t,e=e.get(null===r.key?n:r.key)||null,r,o);case w:return u(t,e=e.get(null===r.key?n:r.key)||null,r,o);case T:return m(e,t,n,(0,r._init)(r._payload),o)}if(te(r)||N(r))return d(t,e=e.get(n)||null,r,o,null);ya(t,r)}return null}function h(o,a,l,s){for(var c=null,u=null,d=a,h=a=0,g=null;null!==d&&h<l.length;h++){d.index>h?(g=d,d=null):g=d.sibling;var v=f(o,d,l[h],s);if(null===v){null===d&&(d=g);break}e&&d&&null===v.alternate&&t(o,d),a=i(v,a,h),null===u?c=v:u.sibling=v,u=v,d=g}if(h===l.length)return n(o,d),aa&&Zo(o,h),c;if(null===d){for(;h<l.length;h++)null!==(d=p(o,l[h],s))&&(a=i(d,a,h),null===u?c=d:u.sibling=d,u=d);return aa&&Zo(o,h),c}for(d=r(o,d);h<l.length;h++)null!==(g=m(d,o,h,l[h],s))&&(e&&null!==g.alternate&&d.delete(null===g.key?h:g.key),a=i(g,a,h),null===u?c=g:u.sibling=g,u=g);return e&&d.forEach((function(e){return t(o,e)})),aa&&Zo(o,h),c}function g(o,l,s,c){var u=N(s);if("function"!==typeof u)throw Error(a(150));if(null==(s=u.call(s)))throw Error(a(151));for(var d=u=null,h=l,g=l=0,v=null,y=s.next();null!==h&&!y.done;g++,y=s.next()){h.index>g?(v=h,h=null):v=h.sibling;var b=f(o,h,y.value,c);if(null===b){null===h&&(h=v);break}e&&h&&null===b.alternate&&t(o,h),l=i(b,l,g),null===d?u=b:d.sibling=b,d=b,h=v}if(y.done)return n(o,h),aa&&Zo(o,g),u;if(null===h){for(;!y.done;g++,y=s.next())null!==(y=p(o,y.value,c))&&(l=i(y,l,g),null===d?u=y:d.sibling=y,d=y);return aa&&Zo(o,g),u}for(h=r(o,h);!y.done;g++,y=s.next())null!==(y=m(h,o,g,y.value,c))&&(e&&null!==y.alternate&&h.delete(null===y.key?g:y.key),l=i(y,l,g),null===d?u=y:d.sibling=y,d=y);return e&&h.forEach((function(e){return t(o,e)})),aa&&Zo(o,g),u}return function e(r,a,i,s){if("object"===typeof i&&null!==i&&i.type===S&&null===i.key&&(i=i.props.children),"object"===typeof i&&null!==i){switch(i.$$typeof){case A:e:{for(var c=i.key,u=a;null!==u;){if(u.key===c){if((c=i.type)===S){if(7===u.tag){n(r,u.sibling),(a=o(u,i.props.children)).return=r,r=a;break e}}else if(u.elementType===c||"object"===typeof c&&null!==c&&c.$$typeof===T&&ba(c)===u.type){n(r,u.sibling),(a=o(u,i.props)).ref=va(r,u,i),a.return=r,r=a;break e}n(r,u);break}t(r,u),u=u.sibling}i.type===S?((a=Nc(i.props.children,r.mode,s,i.key)).return=r,r=a):((s=Oc(i.type,i.key,i.props,null,r.mode,s)).ref=va(r,a,i),s.return=r,r=s)}return l(r);case w:e:{for(u=i.key;null!==a;){if(a.key===u){if(4===a.tag&&a.stateNode.containerInfo===i.containerInfo&&a.stateNode.implementation===i.implementation){n(r,a.sibling),(a=o(a,i.children||[])).return=r,r=a;break e}n(r,a);break}t(r,a),a=a.sibling}(a=zc(i,r.mode,s)).return=r,r=a}return l(r);case T:return e(r,a,(u=i._init)(i._payload),s)}if(te(i))return h(r,a,i,s);if(N(i))return g(r,a,i,s);ya(r,i)}return"string"===typeof i&&""!==i||"number"===typeof i?(i=""+i,null!==a&&6===a.tag?(n(r,a.sibling),(a=o(a,i)).return=r,r=a):(n(r,a),(a=Lc(i,r.mode,s)).return=r,r=a),l(r)):n(r,a)}}var Aa=xa(!0),wa=xa(!1),Sa=Co(null),ka=null,Ca=null,Ea=null;function ja(){Ea=Ca=ka=null}function _a(e){var t=Sa.current;Eo(Sa),e._currentValue=t}function Pa(e,t,n){for(;null!==e;){var r=e.alternate;if((e.childLanes&t)!==t?(e.childLanes|=t,null!==r&&(r.childLanes|=t)):null!==r&&(r.childLanes&t)!==t&&(r.childLanes|=t),e===n)break;e=e.return}}function Ra(e,t){ka=e,Ea=Ca=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(0!==(e.lanes&t)&&(bl=!0),e.firstContext=null)}function Ia(e){var t=e._currentValue;if(Ea!==e)if(e={context:e,memoizedValue:t,next:null},null===Ca){if(null===ka)throw Error(a(308));Ca=e,ka.dependencies={lanes:0,firstContext:e}}else Ca=Ca.next=e;return t}var Ta=null;function $a(e){null===Ta?Ta=[e]:Ta.push(e)}function Oa(e,t,n,r){var o=t.interleaved;return null===o?(n.next=n,$a(t)):(n.next=o.next,o.next=n),t.interleaved=n,Na(e,r)}function Na(e,t){e.lanes|=t;var n=e.alternate;for(null!==n&&(n.lanes|=t),n=e,e=e.return;null!==e;)e.childLanes|=t,null!==(n=e.alternate)&&(n.childLanes|=t),n=e,e=e.return;return 3===n.tag?n.stateNode:null}var Ma=!1;function La(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function za(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function Da(e,t){return{eventTime:e,lane:t,tag:0,payload:null,callback:null,next:null}}function Fa(e,t,n){var r=e.updateQueue;if(null===r)return null;if(r=r.shared,0!==(2&_s)){var o=r.pending;return null===o?t.next=t:(t.next=o.next,o.next=t),r.pending=t,Na(e,n)}return null===(o=r.interleaved)?(t.next=t,$a(r)):(t.next=o.next,o.next=t),r.interleaved=t,Na(e,n)}function Ba(e,t,n){if(null!==(t=t.updateQueue)&&(t=t.shared,0!==(4194240&n))){var r=t.lanes;n|=r&=e.pendingLanes,t.lanes=n,yt(e,n)}}function Wa(e,t){var n=e.updateQueue,r=e.alternate;if(null!==r&&n===(r=r.updateQueue)){var o=null,a=null;if(null!==(n=n.firstBaseUpdate)){do{var i={eventTime:n.eventTime,lane:n.lane,tag:n.tag,payload:n.payload,callback:n.callback,next:null};null===a?o=a=i:a=a.next=i,n=n.next}while(null!==n);null===a?o=a=t:a=a.next=t}else o=a=t;return n={baseState:r.baseState,firstBaseUpdate:o,lastBaseUpdate:a,shared:r.shared,effects:r.effects},void(e.updateQueue=n)}null===(e=n.lastBaseUpdate)?n.firstBaseUpdate=t:e.next=t,n.lastBaseUpdate=t}function Ua(e,t,n,r){var o=e.updateQueue;Ma=!1;var a=o.firstBaseUpdate,i=o.lastBaseUpdate,l=o.shared.pending;if(null!==l){o.shared.pending=null;var s=l,c=s.next;s.next=null,null===i?a=c:i.next=c,i=s;var u=e.alternate;null!==u&&((l=(u=u.updateQueue).lastBaseUpdate)!==i&&(null===l?u.firstBaseUpdate=c:l.next=c,u.lastBaseUpdate=s))}if(null!==a){var d=o.baseState;for(i=0,u=c=s=null,l=a;;){var p=l.lane,f=l.eventTime;if((r&p)===p){null!==u&&(u=u.next={eventTime:f,lane:0,tag:l.tag,payload:l.payload,callback:l.callback,next:null});e:{var m=e,h=l;switch(p=t,f=n,h.tag){case 1:if("function"===typeof(m=h.payload)){d=m.call(f,d,p);break e}d=m;break e;case 3:m.flags=-65537&m.flags|128;case 0:if(null===(p="function"===typeof(m=h.payload)?m.call(f,d,p):m)||void 0===p)break e;d=L({},d,p);break e;case 2:Ma=!0}}null!==l.callback&&0!==l.lane&&(e.flags|=64,null===(p=o.effects)?o.effects=[l]:p.push(l))}else f={eventTime:f,lane:p,tag:l.tag,payload:l.payload,callback:l.callback,next:null},null===u?(c=u=f,s=d):u=u.next=f,i|=p;if(null===(l=l.next)){if(null===(l=o.shared.pending))break;l=(p=l).next,p.next=null,o.lastBaseUpdate=p,o.shared.pending=null}}if(null===u&&(s=d),o.baseState=s,o.firstBaseUpdate=c,o.lastBaseUpdate=u,null!==(t=o.shared.interleaved)){o=t;do{i|=o.lane,o=o.next}while(o!==t)}else null===a&&(o.shared.lanes=0);Ms|=i,e.lanes=i,e.memoizedState=d}}function Va(e,t,n){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var r=e[t],o=r.callback;if(null!==o){if(r.callback=null,r=n,"function"!==typeof o)throw Error(a(191,o));o.call(r)}}}var Ha={},Ka=Co(Ha),qa=Co(Ha),Ga=Co(Ha);function Xa(e){if(e===Ha)throw Error(a(174));return e}function Qa(e,t){switch(jo(Ga,t),jo(qa,e),jo(Ka,Ha),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:se(null,"");break;default:t=se(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}Eo(Ka),jo(Ka,t)}function Ya(){Eo(Ka),Eo(qa),Eo(Ga)}function Ja(e){Xa(Ga.current);var t=Xa(Ka.current),n=se(t,e.type);t!==n&&(jo(qa,e),jo(Ka,n))}function Za(e){qa.current===e&&(Eo(Ka),Eo(qa))}var ei=Co(0);function ti(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||"$?"===n.data||"$!"===n.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!==(128&t.flags))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}var ni=[];function ri(){for(var e=0;e<ni.length;e++)ni[e]._workInProgressVersionPrimary=null;ni.length=0}var oi=x.ReactCurrentDispatcher,ai=x.ReactCurrentBatchConfig,ii=0,li=null,si=null,ci=null,ui=!1,di=!1,pi=0,fi=0;function mi(){throw Error(a(321))}function hi(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!lr(e[n],t[n]))return!1;return!0}function gi(e,t,n,r,o,i){if(ii=i,li=t,t.memoizedState=null,t.updateQueue=null,t.lanes=0,oi.current=null===e||null===e.memoizedState?Zi:el,e=n(r,o),di){i=0;do{if(di=!1,pi=0,25<=i)throw Error(a(301));i+=1,ci=si=null,t.updateQueue=null,oi.current=tl,e=n(r,o)}while(di)}if(oi.current=Ji,t=null!==si&&null!==si.next,ii=0,ci=si=li=null,ui=!1,t)throw Error(a(300));return e}function vi(){var e=0!==pi;return pi=0,e}function yi(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===ci?li.memoizedState=ci=e:ci=ci.next=e,ci}function bi(){if(null===si){var e=li.alternate;e=null!==e?e.memoizedState:null}else e=si.next;var t=null===ci?li.memoizedState:ci.next;if(null!==t)ci=t,si=e;else{if(null===e)throw Error(a(310));e={memoizedState:(si=e).memoizedState,baseState:si.baseState,baseQueue:si.baseQueue,queue:si.queue,next:null},null===ci?li.memoizedState=ci=e:ci=ci.next=e}return ci}function xi(e,t){return"function"===typeof t?t(e):t}function Ai(e){var t=bi(),n=t.queue;if(null===n)throw Error(a(311));n.lastRenderedReducer=e;var r=si,o=r.baseQueue,i=n.pending;if(null!==i){if(null!==o){var l=o.next;o.next=i.next,i.next=l}r.baseQueue=o=i,n.pending=null}if(null!==o){i=o.next,r=r.baseState;var s=l=null,c=null,u=i;do{var d=u.lane;if((ii&d)===d)null!==c&&(c=c.next={lane:0,action:u.action,hasEagerState:u.hasEagerState,eagerState:u.eagerState,next:null}),r=u.hasEagerState?u.eagerState:e(r,u.action);else{var p={lane:d,action:u.action,hasEagerState:u.hasEagerState,eagerState:u.eagerState,next:null};null===c?(s=c=p,l=r):c=c.next=p,li.lanes|=d,Ms|=d}u=u.next}while(null!==u&&u!==i);null===c?l=r:c.next=s,lr(r,t.memoizedState)||(bl=!0),t.memoizedState=r,t.baseState=l,t.baseQueue=c,n.lastRenderedState=r}if(null!==(e=n.interleaved)){o=e;do{i=o.lane,li.lanes|=i,Ms|=i,o=o.next}while(o!==e)}else null===o&&(n.lanes=0);return[t.memoizedState,n.dispatch]}function wi(e){var t=bi(),n=t.queue;if(null===n)throw Error(a(311));n.lastRenderedReducer=e;var r=n.dispatch,o=n.pending,i=t.memoizedState;if(null!==o){n.pending=null;var l=o=o.next;do{i=e(i,l.action),l=l.next}while(l!==o);lr(i,t.memoizedState)||(bl=!0),t.memoizedState=i,null===t.baseQueue&&(t.baseState=i),n.lastRenderedState=i}return[i,r]}function Si(){}function ki(e,t){var n=li,r=bi(),o=t(),i=!lr(r.memoizedState,o);if(i&&(r.memoizedState=o,bl=!0),r=r.queue,Mi(ji.bind(null,n,r,e),[e]),r.getSnapshot!==t||i||null!==ci&&1&ci.memoizedState.tag){if(n.flags|=2048,Ii(9,Ei.bind(null,n,r,o,t),void 0,null),null===Ps)throw Error(a(349));0!==(30&ii)||Ci(n,t,o)}return o}function Ci(e,t,n){e.flags|=16384,e={getSnapshot:t,value:n},null===(t=li.updateQueue)?(t={lastEffect:null,stores:null},li.updateQueue=t,t.stores=[e]):null===(n=t.stores)?t.stores=[e]:n.push(e)}function Ei(e,t,n,r){t.value=n,t.getSnapshot=r,_i(t)&&Pi(e)}function ji(e,t,n){return n((function(){_i(t)&&Pi(e)}))}function _i(e){var t=e.getSnapshot;e=e.value;try{var n=t();return!lr(e,n)}catch(r){return!0}}function Pi(e){var t=Na(e,1);null!==t&&nc(t,e,1,-1)}function Ri(e){var t=yi();return"function"===typeof e&&(e=e()),t.memoizedState=t.baseState=e,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:xi,lastRenderedState:e},t.queue=e,e=e.dispatch=Gi.bind(null,li,e),[t.memoizedState,e]}function Ii(e,t,n,r){return e={tag:e,create:t,destroy:n,deps:r,next:null},null===(t=li.updateQueue)?(t={lastEffect:null,stores:null},li.updateQueue=t,t.lastEffect=e.next=e):null===(n=t.lastEffect)?t.lastEffect=e.next=e:(r=n.next,n.next=e,e.next=r,t.lastEffect=e),e}function Ti(){return bi().memoizedState}function $i(e,t,n,r){var o=yi();li.flags|=e,o.memoizedState=Ii(1|t,n,void 0,void 0===r?null:r)}function Oi(e,t,n,r){var o=bi();r=void 0===r?null:r;var a=void 0;if(null!==si){var i=si.memoizedState;if(a=i.destroy,null!==r&&hi(r,i.deps))return void(o.memoizedState=Ii(t,n,a,r))}li.flags|=e,o.memoizedState=Ii(1|t,n,a,r)}function Ni(e,t){return $i(8390656,8,e,t)}function Mi(e,t){return Oi(2048,8,e,t)}function Li(e,t){return Oi(4,2,e,t)}function zi(e,t){return Oi(4,4,e,t)}function Di(e,t){return"function"===typeof t?(e=e(),t(e),function(){t(null)}):null!==t&&void 0!==t?(e=e(),t.current=e,function(){t.current=null}):void 0}function Fi(e,t,n){return n=null!==n&&void 0!==n?n.concat([e]):null,Oi(4,4,Di.bind(null,t,e),n)}function Bi(){}function Wi(e,t){var n=bi();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&hi(t,r[1])?r[0]:(n.memoizedState=[e,t],e)}function Ui(e,t){var n=bi();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&hi(t,r[1])?r[0]:(e=e(),n.memoizedState=[e,t],e)}function Vi(e,t,n){return 0===(21&ii)?(e.baseState&&(e.baseState=!1,bl=!0),e.memoizedState=n):(lr(n,t)||(n=ht(),li.lanes|=n,Ms|=n,e.baseState=!0),t)}function Hi(e,t){var n=bt;bt=0!==n&&4>n?n:4,e(!0);var r=ai.transition;ai.transition={};try{e(!1),t()}finally{bt=n,ai.transition=r}}function Ki(){return bi().memoizedState}function qi(e,t,n){var r=tc(e);if(n={lane:r,action:n,hasEagerState:!1,eagerState:null,next:null},Xi(e))Qi(t,n);else if(null!==(n=Oa(e,t,n,r))){nc(n,e,r,ec()),Yi(n,t,r)}}function Gi(e,t,n){var r=tc(e),o={lane:r,action:n,hasEagerState:!1,eagerState:null,next:null};if(Xi(e))Qi(t,o);else{var a=e.alternate;if(0===e.lanes&&(null===a||0===a.lanes)&&null!==(a=t.lastRenderedReducer))try{var i=t.lastRenderedState,l=a(i,n);if(o.hasEagerState=!0,o.eagerState=l,lr(l,i)){var s=t.interleaved;return null===s?(o.next=o,$a(t)):(o.next=s.next,s.next=o),void(t.interleaved=o)}}catch(c){}null!==(n=Oa(e,t,o,r))&&(nc(n,e,r,o=ec()),Yi(n,t,r))}}function Xi(e){var t=e.alternate;return e===li||null!==t&&t===li}function Qi(e,t){di=ui=!0;var n=e.pending;null===n?t.next=t:(t.next=n.next,n.next=t),e.pending=t}function Yi(e,t,n){if(0!==(4194240&n)){var r=t.lanes;n|=r&=e.pendingLanes,t.lanes=n,yt(e,n)}}var Ji={readContext:Ia,useCallback:mi,useContext:mi,useEffect:mi,useImperativeHandle:mi,useInsertionEffect:mi,useLayoutEffect:mi,useMemo:mi,useReducer:mi,useRef:mi,useState:mi,useDebugValue:mi,useDeferredValue:mi,useTransition:mi,useMutableSource:mi,useSyncExternalStore:mi,useId:mi,unstable_isNewReconciler:!1},Zi={readContext:Ia,useCallback:function(e,t){return yi().memoizedState=[e,void 0===t?null:t],e},useContext:Ia,useEffect:Ni,useImperativeHandle:function(e,t,n){return n=null!==n&&void 0!==n?n.concat([e]):null,$i(4194308,4,Di.bind(null,t,e),n)},useLayoutEffect:function(e,t){return $i(4194308,4,e,t)},useInsertionEffect:function(e,t){return $i(4,2,e,t)},useMemo:function(e,t){var n=yi();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var r=yi();return t=void 0!==n?n(t):t,r.memoizedState=r.baseState=t,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:e,lastRenderedState:t},r.queue=e,e=e.dispatch=qi.bind(null,li,e),[r.memoizedState,e]},useRef:function(e){return e={current:e},yi().memoizedState=e},useState:Ri,useDebugValue:Bi,useDeferredValue:function(e){return yi().memoizedState=e},useTransition:function(){var e=Ri(!1),t=e[0];return e=Hi.bind(null,e[1]),yi().memoizedState=e,[t,e]},useMutableSource:function(){},useSyncExternalStore:function(e,t,n){var r=li,o=yi();if(aa){if(void 0===n)throw Error(a(407));n=n()}else{if(n=t(),null===Ps)throw Error(a(349));0!==(30&ii)||Ci(r,t,n)}o.memoizedState=n;var i={value:n,getSnapshot:t};return o.queue=i,Ni(ji.bind(null,r,i,e),[e]),r.flags|=2048,Ii(9,Ei.bind(null,r,i,n,t),void 0,null),n},useId:function(){var e=yi(),t=Ps.identifierPrefix;if(aa){var n=Jo;t=":"+t+"R"+(n=(Yo&~(1<<32-it(Yo)-1)).toString(32)+n),0<(n=pi++)&&(t+="H"+n.toString(32)),t+=":"}else t=":"+t+"r"+(n=fi++).toString(32)+":";return e.memoizedState=t},unstable_isNewReconciler:!1},el={readContext:Ia,useCallback:Wi,useContext:Ia,useEffect:Mi,useImperativeHandle:Fi,useInsertionEffect:Li,useLayoutEffect:zi,useMemo:Ui,useReducer:Ai,useRef:Ti,useState:function(){return Ai(xi)},useDebugValue:Bi,useDeferredValue:function(e){return Vi(bi(),si.memoizedState,e)},useTransition:function(){return[Ai(xi)[0],bi().memoizedState]},useMutableSource:Si,useSyncExternalStore:ki,useId:Ki,unstable_isNewReconciler:!1},tl={readContext:Ia,useCallback:Wi,useContext:Ia,useEffect:Mi,useImperativeHandle:Fi,useInsertionEffect:Li,useLayoutEffect:zi,useMemo:Ui,useReducer:wi,useRef:Ti,useState:function(){return wi(xi)},useDebugValue:Bi,useDeferredValue:function(e){var t=bi();return null===si?t.memoizedState=e:Vi(t,si.memoizedState,e)},useTransition:function(){return[wi(xi)[0],bi().memoizedState]},useMutableSource:Si,useSyncExternalStore:ki,useId:Ki,unstable_isNewReconciler:!1};function nl(e,t){if(e&&e.defaultProps){for(var n in t=L({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}return t}function rl(e,t,n,r){n=null===(n=n(r,t=e.memoizedState))||void 0===n?t:L({},t,n),e.memoizedState=n,0===e.lanes&&(e.updateQueue.baseState=n)}var ol={isMounted:function(e){return!!(e=e._reactInternals)&&We(e)===e},enqueueSetState:function(e,t,n){e=e._reactInternals;var r=ec(),o=tc(e),a=Da(r,o);a.payload=t,void 0!==n&&null!==n&&(a.callback=n),null!==(t=Fa(e,a,o))&&(nc(t,e,o,r),Ba(t,e,o))},enqueueReplaceState:function(e,t,n){e=e._reactInternals;var r=ec(),o=tc(e),a=Da(r,o);a.tag=1,a.payload=t,void 0!==n&&null!==n&&(a.callback=n),null!==(t=Fa(e,a,o))&&(nc(t,e,o,r),Ba(t,e,o))},enqueueForceUpdate:function(e,t){e=e._reactInternals;var n=ec(),r=tc(e),o=Da(n,r);o.tag=2,void 0!==t&&null!==t&&(o.callback=t),null!==(t=Fa(e,o,r))&&(nc(t,e,r,n),Ba(t,e,r))}};function al(e,t,n,r,o,a,i){return"function"===typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,a,i):!t.prototype||!t.prototype.isPureReactComponent||(!sr(n,r)||!sr(o,a))}function il(e,t,n){var r=!1,o=_o,a=t.contextType;return"object"===typeof a&&null!==a?a=Ia(a):(o=$o(t)?Io:Po.current,a=(r=null!==(r=t.contextTypes)&&void 0!==r)?To(e,o):_o),t=new t(n,a),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=ol,e.stateNode=t,t._reactInternals=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=o,e.__reactInternalMemoizedMaskedChildContext=a),t}function ll(e,t,n,r){e=t.state,"function"===typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"===typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&ol.enqueueReplaceState(t,t.state,null)}function sl(e,t,n,r){var o=e.stateNode;o.props=n,o.state=e.memoizedState,o.refs={},La(e);var a=t.contextType;"object"===typeof a&&null!==a?o.context=Ia(a):(a=$o(t)?Io:Po.current,o.context=To(e,a)),o.state=e.memoizedState,"function"===typeof(a=t.getDerivedStateFromProps)&&(rl(e,t,a,n),o.state=e.memoizedState),"function"===typeof t.getDerivedStateFromProps||"function"===typeof o.getSnapshotBeforeUpdate||"function"!==typeof o.UNSAFE_componentWillMount&&"function"!==typeof o.componentWillMount||(t=o.state,"function"===typeof o.componentWillMount&&o.componentWillMount(),"function"===typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount(),t!==o.state&&ol.enqueueReplaceState(o,o.state,null),Ua(e,n,o,r),o.state=e.memoizedState),"function"===typeof o.componentDidMount&&(e.flags|=4194308)}function cl(e,t){try{var n="",r=t;do{n+=B(r),r=r.return}while(r);var o=n}catch(a){o="\nError generating stack: "+a.message+"\n"+a.stack}return{value:e,source:t,stack:o,digest:null}}function ul(e,t,n){return{value:e,source:null,stack:null!=n?n:null,digest:null!=t?t:null}}function dl(e,t){try{console.error(t.value)}catch(n){setTimeout((function(){throw n}))}}var pl="function"===typeof WeakMap?WeakMap:Map;function fl(e,t,n){(n=Da(-1,n)).tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){Vs||(Vs=!0,Hs=r),dl(0,t)},n}function ml(e,t,n){(n=Da(-1,n)).tag=3;var r=e.type.getDerivedStateFromError;if("function"===typeof r){var o=t.value;n.payload=function(){return r(o)},n.callback=function(){dl(0,t)}}var a=e.stateNode;return null!==a&&"function"===typeof a.componentDidCatch&&(n.callback=function(){dl(0,t),"function"!==typeof r&&(null===Ks?Ks=new Set([this]):Ks.add(this));var e=t.stack;this.componentDidCatch(t.value,{componentStack:null!==e?e:""})}),n}function hl(e,t,n){var r=e.pingCache;if(null===r){r=e.pingCache=new pl;var o=new Set;r.set(t,o)}else void 0===(o=r.get(t))&&(o=new Set,r.set(t,o));o.has(n)||(o.add(n),e=Cc.bind(null,e,t,n),t.then(e,e))}function gl(e){do{var t;if((t=13===e.tag)&&(t=null===(t=e.memoizedState)||null!==t.dehydrated),t)return e;e=e.return}while(null!==e);return null}function vl(e,t,n,r,o){return 0===(1&e.mode)?(e===t?e.flags|=65536:(e.flags|=128,n.flags|=131072,n.flags&=-52805,1===n.tag&&(null===n.alternate?n.tag=17:((t=Da(-1,1)).tag=2,Fa(n,t,1))),n.lanes|=1),e):(e.flags|=65536,e.lanes=o,e)}var yl=x.ReactCurrentOwner,bl=!1;function xl(e,t,n,r){t.child=null===e?wa(t,null,n,r):Aa(t,e.child,n,r)}function Al(e,t,n,r,o){n=n.render;var a=t.ref;return Ra(t,o),r=gi(e,t,n,r,a,o),n=vi(),null===e||bl?(aa&&n&&ta(t),t.flags|=1,xl(e,t,r,o),t.child):(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~o,Vl(e,t,o))}function wl(e,t,n,r,o){if(null===e){var a=n.type;return"function"!==typeof a||Tc(a)||void 0!==a.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=Oc(n.type,null,r,t,t.mode,o)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=a,Sl(e,t,a,r,o))}if(a=e.child,0===(e.lanes&o)){var i=a.memoizedProps;if((n=null!==(n=n.compare)?n:sr)(i,r)&&e.ref===t.ref)return Vl(e,t,o)}return t.flags|=1,(e=$c(a,r)).ref=t.ref,e.return=t,t.child=e}function Sl(e,t,n,r,o){if(null!==e){var a=e.memoizedProps;if(sr(a,r)&&e.ref===t.ref){if(bl=!1,t.pendingProps=r=a,0===(e.lanes&o))return t.lanes=e.lanes,Vl(e,t,o);0!==(131072&e.flags)&&(bl=!0)}}return El(e,t,n,r,o)}function kl(e,t,n){var r=t.pendingProps,o=r.children,a=null!==e?e.memoizedState:null;if("hidden"===r.mode)if(0===(1&t.mode))t.memoizedState={baseLanes:0,cachePool:null,transitions:null},jo($s,Ts),Ts|=n;else{if(0===(1073741824&n))return e=null!==a?a.baseLanes|n:n,t.lanes=t.childLanes=1073741824,t.memoizedState={baseLanes:e,cachePool:null,transitions:null},t.updateQueue=null,jo($s,Ts),Ts|=e,null;t.memoizedState={baseLanes:0,cachePool:null,transitions:null},r=null!==a?a.baseLanes:n,jo($s,Ts),Ts|=r}else null!==a?(r=a.baseLanes|n,t.memoizedState=null):r=n,jo($s,Ts),Ts|=r;return xl(e,t,o,n),t.child}function Cl(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.flags|=512,t.flags|=2097152)}function El(e,t,n,r,o){var a=$o(n)?Io:Po.current;return a=To(t,a),Ra(t,o),n=gi(e,t,n,r,a,o),r=vi(),null===e||bl?(aa&&r&&ta(t),t.flags|=1,xl(e,t,n,o),t.child):(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~o,Vl(e,t,o))}function jl(e,t,n,r,o){if($o(n)){var a=!0;Lo(t)}else a=!1;if(Ra(t,o),null===t.stateNode)Ul(e,t),il(t,n,r),sl(t,n,r,o),r=!0;else if(null===e){var i=t.stateNode,l=t.memoizedProps;i.props=l;var s=i.context,c=n.contextType;"object"===typeof c&&null!==c?c=Ia(c):c=To(t,c=$o(n)?Io:Po.current);var u=n.getDerivedStateFromProps,d="function"===typeof u||"function"===typeof i.getSnapshotBeforeUpdate;d||"function"!==typeof i.UNSAFE_componentWillReceiveProps&&"function"!==typeof i.componentWillReceiveProps||(l!==r||s!==c)&&ll(t,i,r,c),Ma=!1;var p=t.memoizedState;i.state=p,Ua(t,r,i,o),s=t.memoizedState,l!==r||p!==s||Ro.current||Ma?("function"===typeof u&&(rl(t,n,u,r),s=t.memoizedState),(l=Ma||al(t,n,l,r,p,s,c))?(d||"function"!==typeof i.UNSAFE_componentWillMount&&"function"!==typeof i.componentWillMount||("function"===typeof i.componentWillMount&&i.componentWillMount(),"function"===typeof i.UNSAFE_componentWillMount&&i.UNSAFE_componentWillMount()),"function"===typeof i.componentDidMount&&(t.flags|=4194308)):("function"===typeof i.componentDidMount&&(t.flags|=4194308),t.memoizedProps=r,t.memoizedState=s),i.props=r,i.state=s,i.context=c,r=l):("function"===typeof i.componentDidMount&&(t.flags|=4194308),r=!1)}else{i=t.stateNode,za(e,t),l=t.memoizedProps,c=t.type===t.elementType?l:nl(t.type,l),i.props=c,d=t.pendingProps,p=i.context,"object"===typeof(s=n.contextType)&&null!==s?s=Ia(s):s=To(t,s=$o(n)?Io:Po.current);var f=n.getDerivedStateFromProps;(u="function"===typeof f||"function"===typeof i.getSnapshotBeforeUpdate)||"function"!==typeof i.UNSAFE_componentWillReceiveProps&&"function"!==typeof i.componentWillReceiveProps||(l!==d||p!==s)&&ll(t,i,r,s),Ma=!1,p=t.memoizedState,i.state=p,Ua(t,r,i,o);var m=t.memoizedState;l!==d||p!==m||Ro.current||Ma?("function"===typeof f&&(rl(t,n,f,r),m=t.memoizedState),(c=Ma||al(t,n,c,r,p,m,s)||!1)?(u||"function"!==typeof i.UNSAFE_componentWillUpdate&&"function"!==typeof i.componentWillUpdate||("function"===typeof i.componentWillUpdate&&i.componentWillUpdate(r,m,s),"function"===typeof i.UNSAFE_componentWillUpdate&&i.UNSAFE_componentWillUpdate(r,m,s)),"function"===typeof i.componentDidUpdate&&(t.flags|=4),"function"===typeof i.getSnapshotBeforeUpdate&&(t.flags|=1024)):("function"!==typeof i.componentDidUpdate||l===e.memoizedProps&&p===e.memoizedState||(t.flags|=4),"function"!==typeof i.getSnapshotBeforeUpdate||l===e.memoizedProps&&p===e.memoizedState||(t.flags|=1024),t.memoizedProps=r,t.memoizedState=m),i.props=r,i.state=m,i.context=s,r=c):("function"!==typeof i.componentDidUpdate||l===e.memoizedProps&&p===e.memoizedState||(t.flags|=4),"function"!==typeof i.getSnapshotBeforeUpdate||l===e.memoizedProps&&p===e.memoizedState||(t.flags|=1024),r=!1)}return _l(e,t,n,r,a,o)}function _l(e,t,n,r,o,a){Cl(e,t);var i=0!==(128&t.flags);if(!r&&!i)return o&&zo(t,n,!1),Vl(e,t,a);r=t.stateNode,yl.current=t;var l=i&&"function"!==typeof n.getDerivedStateFromError?null:r.render();return t.flags|=1,null!==e&&i?(t.child=Aa(t,e.child,null,a),t.child=Aa(t,null,l,a)):xl(e,t,l,a),t.memoizedState=r.state,o&&zo(t,n,!0),t.child}function Pl(e){var t=e.stateNode;t.pendingContext?No(0,t.pendingContext,t.pendingContext!==t.context):t.context&&No(0,t.context,!1),Qa(e,t.containerInfo)}function Rl(e,t,n,r,o){return ma(),ha(o),t.flags|=256,xl(e,t,n,r),t.child}var Il,Tl,$l,Ol,Nl={dehydrated:null,treeContext:null,retryLane:0};function Ml(e){return{baseLanes:e,cachePool:null,transitions:null}}function Ll(e,t,n){var r,o=t.pendingProps,i=ei.current,l=!1,s=0!==(128&t.flags);if((r=s)||(r=(null===e||null!==e.memoizedState)&&0!==(2&i)),r?(l=!0,t.flags&=-129):null!==e&&null===e.memoizedState||(i|=1),jo(ei,1&i),null===e)return ua(t),null!==(e=t.memoizedState)&&null!==(e=e.dehydrated)?(0===(1&t.mode)?t.lanes=1:"$!"===e.data?t.lanes=8:t.lanes=1073741824,null):(s=o.children,e=o.fallback,l?(o=t.mode,l=t.child,s={mode:"hidden",children:s},0===(1&o)&&null!==l?(l.childLanes=0,l.pendingProps=s):l=Mc(s,o,0,null),e=Nc(e,o,n,null),l.return=t,e.return=t,l.sibling=e,t.child=l,t.child.memoizedState=Ml(n),t.memoizedState=Nl,e):zl(t,s));if(null!==(i=e.memoizedState)&&null!==(r=i.dehydrated))return function(e,t,n,r,o,i,l){if(n)return 256&t.flags?(t.flags&=-257,Dl(e,t,l,r=ul(Error(a(422))))):null!==t.memoizedState?(t.child=e.child,t.flags|=128,null):(i=r.fallback,o=t.mode,r=Mc({mode:"visible",children:r.children},o,0,null),(i=Nc(i,o,l,null)).flags|=2,r.return=t,i.return=t,r.sibling=i,t.child=r,0!==(1&t.mode)&&Aa(t,e.child,null,l),t.child.memoizedState=Ml(l),t.memoizedState=Nl,i);if(0===(1&t.mode))return Dl(e,t,l,null);if("$!"===o.data){if(r=o.nextSibling&&o.nextSibling.dataset)var s=r.dgst;return r=s,Dl(e,t,l,r=ul(i=Error(a(419)),r,void 0))}if(s=0!==(l&e.childLanes),bl||s){if(null!==(r=Ps)){switch(l&-l){case 4:o=2;break;case 16:o=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:o=32;break;case 536870912:o=268435456;break;default:o=0}0!==(o=0!==(o&(r.suspendedLanes|l))?0:o)&&o!==i.retryLane&&(i.retryLane=o,Na(e,o),nc(r,e,o,-1))}return hc(),Dl(e,t,l,r=ul(Error(a(421))))}return"$?"===o.data?(t.flags|=128,t.child=e.child,t=jc.bind(null,e),o._reactRetry=t,null):(e=i.treeContext,oa=co(o.nextSibling),ra=t,aa=!0,ia=null,null!==e&&(Go[Xo++]=Yo,Go[Xo++]=Jo,Go[Xo++]=Qo,Yo=e.id,Jo=e.overflow,Qo=t),t=zl(t,r.children),t.flags|=4096,t)}(e,t,s,o,r,i,n);if(l){l=o.fallback,s=t.mode,r=(i=e.child).sibling;var c={mode:"hidden",children:o.children};return 0===(1&s)&&t.child!==i?((o=t.child).childLanes=0,o.pendingProps=c,t.deletions=null):(o=$c(i,c)).subtreeFlags=14680064&i.subtreeFlags,null!==r?l=$c(r,l):(l=Nc(l,s,n,null)).flags|=2,l.return=t,o.return=t,o.sibling=l,t.child=o,o=l,l=t.child,s=null===(s=e.child.memoizedState)?Ml(n):{baseLanes:s.baseLanes|n,cachePool:null,transitions:s.transitions},l.memoizedState=s,l.childLanes=e.childLanes&~n,t.memoizedState=Nl,o}return e=(l=e.child).sibling,o=$c(l,{mode:"visible",children:o.children}),0===(1&t.mode)&&(o.lanes=n),o.return=t,o.sibling=null,null!==e&&(null===(n=t.deletions)?(t.deletions=[e],t.flags|=16):n.push(e)),t.child=o,t.memoizedState=null,o}function zl(e,t){return(t=Mc({mode:"visible",children:t},e.mode,0,null)).return=e,e.child=t}function Dl(e,t,n,r){return null!==r&&ha(r),Aa(t,e.child,null,n),(e=zl(t,t.pendingProps.children)).flags|=2,t.memoizedState=null,e}function Fl(e,t,n){e.lanes|=t;var r=e.alternate;null!==r&&(r.lanes|=t),Pa(e.return,t,n)}function Bl(e,t,n,r,o){var a=e.memoizedState;null===a?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:r,tail:n,tailMode:o}:(a.isBackwards=t,a.rendering=null,a.renderingStartTime=0,a.last=r,a.tail=n,a.tailMode=o)}function Wl(e,t,n){var r=t.pendingProps,o=r.revealOrder,a=r.tail;if(xl(e,t,r.children,n),0!==(2&(r=ei.current)))r=1&r|2,t.flags|=128;else{if(null!==e&&0!==(128&e.flags))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Fl(e,n,t);else if(19===e.tag)Fl(e,n,t);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(jo(ei,r),0===(1&t.mode))t.memoizedState=null;else switch(o){case"forwards":for(n=t.child,o=null;null!==n;)null!==(e=n.alternate)&&null===ti(e)&&(o=n),n=n.sibling;null===(n=o)?(o=t.child,t.child=null):(o=n.sibling,n.sibling=null),Bl(t,!1,o,n,a);break;case"backwards":for(n=null,o=t.child,t.child=null;null!==o;){if(null!==(e=o.alternate)&&null===ti(e)){t.child=o;break}e=o.sibling,o.sibling=n,n=o,o=e}Bl(t,!0,n,null,a);break;case"together":Bl(t,!1,null,null,void 0);break;default:t.memoizedState=null}return t.child}function Ul(e,t){0===(1&t.mode)&&null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2)}function Vl(e,t,n){if(null!==e&&(t.dependencies=e.dependencies),Ms|=t.lanes,0===(n&t.childLanes))return null;if(null!==e&&t.child!==e.child)throw Error(a(153));if(null!==t.child){for(n=$c(e=t.child,e.pendingProps),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=$c(e,e.pendingProps)).return=t;n.sibling=null}return t.child}function Hl(e,t){if(!aa)switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var r=null;null!==n;)null!==n.alternate&&(r=n),n=n.sibling;null===r?t||null===e.tail?e.tail=null:e.tail.sibling=null:r.sibling=null}}function Kl(e){var t=null!==e.alternate&&e.alternate.child===e.child,n=0,r=0;if(t)for(var o=e.child;null!==o;)n|=o.lanes|o.childLanes,r|=14680064&o.subtreeFlags,r|=14680064&o.flags,o.return=e,o=o.sibling;else for(o=e.child;null!==o;)n|=o.lanes|o.childLanes,r|=o.subtreeFlags,r|=o.flags,o.return=e,o=o.sibling;return e.subtreeFlags|=r,e.childLanes=n,t}function ql(e,t,n){var r=t.pendingProps;switch(na(t),t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return Kl(t),null;case 1:case 17:return $o(t.type)&&Oo(),Kl(t),null;case 3:return r=t.stateNode,Ya(),Eo(Ro),Eo(Po),ri(),r.pendingContext&&(r.context=r.pendingContext,r.pendingContext=null),null!==e&&null!==e.child||(pa(t)?t.flags|=4:null===e||e.memoizedState.isDehydrated&&0===(256&t.flags)||(t.flags|=1024,null!==ia&&(ic(ia),ia=null))),Tl(e,t),Kl(t),null;case 5:Za(t);var o=Xa(Ga.current);if(n=t.type,null!==e&&null!=t.stateNode)$l(e,t,n,r,o),e.ref!==t.ref&&(t.flags|=512,t.flags|=2097152);else{if(!r){if(null===t.stateNode)throw Error(a(166));return Kl(t),null}if(e=Xa(Ka.current),pa(t)){r=t.stateNode,n=t.type;var i=t.memoizedProps;switch(r[fo]=t,r[mo]=i,e=0!==(1&t.mode),n){case"dialog":Dr("cancel",r),Dr("close",r);break;case"iframe":case"object":case"embed":Dr("load",r);break;case"video":case"audio":for(o=0;o<Nr.length;o++)Dr(Nr[o],r);break;case"source":Dr("error",r);break;case"img":case"image":case"link":Dr("error",r),Dr("load",r);break;case"details":Dr("toggle",r);break;case"input":Q(r,i),Dr("invalid",r);break;case"select":r._wrapperState={wasMultiple:!!i.multiple},Dr("invalid",r);break;case"textarea":oe(r,i),Dr("invalid",r)}for(var s in ye(n,i),o=null,i)if(i.hasOwnProperty(s)){var c=i[s];"children"===s?"string"===typeof c?r.textContent!==c&&(!0!==i.suppressHydrationWarning&&Jr(r.textContent,c,e),o=["children",c]):"number"===typeof c&&r.textContent!==""+c&&(!0!==i.suppressHydrationWarning&&Jr(r.textContent,c,e),o=["children",""+c]):l.hasOwnProperty(s)&&null!=c&&"onScroll"===s&&Dr("scroll",r)}switch(n){case"input":K(r),Z(r,i,!0);break;case"textarea":K(r),ie(r);break;case"select":case"option":break;default:"function"===typeof i.onClick&&(r.onclick=Zr)}r=o,t.updateQueue=r,null!==r&&(t.flags|=4)}else{s=9===o.nodeType?o:o.ownerDocument,"http://www.w3.org/1999/xhtml"===e&&(e=le(n)),"http://www.w3.org/1999/xhtml"===e?"script"===n?((e=s.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"===typeof r.is?e=s.createElement(n,{is:r.is}):(e=s.createElement(n),"select"===n&&(s=e,r.multiple?s.multiple=!0:r.size&&(s.size=r.size))):e=s.createElementNS(e,n),e[fo]=t,e[mo]=r,Il(e,t,!1,!1),t.stateNode=e;e:{switch(s=be(n,r),n){case"dialog":Dr("cancel",e),Dr("close",e),o=r;break;case"iframe":case"object":case"embed":Dr("load",e),o=r;break;case"video":case"audio":for(o=0;o<Nr.length;o++)Dr(Nr[o],e);o=r;break;case"source":Dr("error",e),o=r;break;case"img":case"image":case"link":Dr("error",e),Dr("load",e),o=r;break;case"details":Dr("toggle",e),o=r;break;case"input":Q(e,r),o=X(e,r),Dr("invalid",e);break;case"option":default:o=r;break;case"select":e._wrapperState={wasMultiple:!!r.multiple},o=L({},r,{value:void 0}),Dr("invalid",e);break;case"textarea":oe(e,r),o=re(e,r),Dr("invalid",e)}for(i in ye(n,o),c=o)if(c.hasOwnProperty(i)){var u=c[i];"style"===i?ge(e,u):"dangerouslySetInnerHTML"===i?null!=(u=u?u.__html:void 0)&&de(e,u):"children"===i?"string"===typeof u?("textarea"!==n||""!==u)&&pe(e,u):"number"===typeof u&&pe(e,""+u):"suppressContentEditableWarning"!==i&&"suppressHydrationWarning"!==i&&"autoFocus"!==i&&(l.hasOwnProperty(i)?null!=u&&"onScroll"===i&&Dr("scroll",e):null!=u&&b(e,i,u,s))}switch(n){case"input":K(e),Z(e,r,!1);break;case"textarea":K(e),ie(e);break;case"option":null!=r.value&&e.setAttribute("value",""+V(r.value));break;case"select":e.multiple=!!r.multiple,null!=(i=r.value)?ne(e,!!r.multiple,i,!1):null!=r.defaultValue&&ne(e,!!r.multiple,r.defaultValue,!0);break;default:"function"===typeof o.onClick&&(e.onclick=Zr)}switch(n){case"button":case"input":case"select":case"textarea":r=!!r.autoFocus;break e;case"img":r=!0;break e;default:r=!1}}r&&(t.flags|=4)}null!==t.ref&&(t.flags|=512,t.flags|=2097152)}return Kl(t),null;case 6:if(e&&null!=t.stateNode)Ol(e,t,e.memoizedProps,r);else{if("string"!==typeof r&&null===t.stateNode)throw Error(a(166));if(n=Xa(Ga.current),Xa(Ka.current),pa(t)){if(r=t.stateNode,n=t.memoizedProps,r[fo]=t,(i=r.nodeValue!==n)&&null!==(e=ra))switch(e.tag){case 3:Jr(r.nodeValue,n,0!==(1&e.mode));break;case 5:!0!==e.memoizedProps.suppressHydrationWarning&&Jr(r.nodeValue,n,0!==(1&e.mode))}i&&(t.flags|=4)}else(r=(9===n.nodeType?n:n.ownerDocument).createTextNode(r))[fo]=t,t.stateNode=r}return Kl(t),null;case 13:if(Eo(ei),r=t.memoizedState,null===e||null!==e.memoizedState&&null!==e.memoizedState.dehydrated){if(aa&&null!==oa&&0!==(1&t.mode)&&0===(128&t.flags))fa(),ma(),t.flags|=98560,i=!1;else if(i=pa(t),null!==r&&null!==r.dehydrated){if(null===e){if(!i)throw Error(a(318));if(!(i=null!==(i=t.memoizedState)?i.dehydrated:null))throw Error(a(317));i[fo]=t}else ma(),0===(128&t.flags)&&(t.memoizedState=null),t.flags|=4;Kl(t),i=!1}else null!==ia&&(ic(ia),ia=null),i=!0;if(!i)return 65536&t.flags?t:null}return 0!==(128&t.flags)?(t.lanes=n,t):((r=null!==r)!==(null!==e&&null!==e.memoizedState)&&r&&(t.child.flags|=8192,0!==(1&t.mode)&&(null===e||0!==(1&ei.current)?0===Os&&(Os=3):hc())),null!==t.updateQueue&&(t.flags|=4),Kl(t),null);case 4:return Ya(),Tl(e,t),null===e&&Wr(t.stateNode.containerInfo),Kl(t),null;case 10:return _a(t.type._context),Kl(t),null;case 19:if(Eo(ei),null===(i=t.memoizedState))return Kl(t),null;if(r=0!==(128&t.flags),null===(s=i.rendering))if(r)Hl(i,!1);else{if(0!==Os||null!==e&&0!==(128&e.flags))for(e=t.child;null!==e;){if(null!==(s=ti(e))){for(t.flags|=128,Hl(i,!1),null!==(r=s.updateQueue)&&(t.updateQueue=r,t.flags|=4),t.subtreeFlags=0,r=n,n=t.child;null!==n;)e=r,(i=n).flags&=14680066,null===(s=i.alternate)?(i.childLanes=0,i.lanes=e,i.child=null,i.subtreeFlags=0,i.memoizedProps=null,i.memoizedState=null,i.updateQueue=null,i.dependencies=null,i.stateNode=null):(i.childLanes=s.childLanes,i.lanes=s.lanes,i.child=s.child,i.subtreeFlags=0,i.deletions=null,i.memoizedProps=s.memoizedProps,i.memoizedState=s.memoizedState,i.updateQueue=s.updateQueue,i.type=s.type,e=s.dependencies,i.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext}),n=n.sibling;return jo(ei,1&ei.current|2),t.child}e=e.sibling}null!==i.tail&&Ye()>Ws&&(t.flags|=128,r=!0,Hl(i,!1),t.lanes=4194304)}else{if(!r)if(null!==(e=ti(s))){if(t.flags|=128,r=!0,null!==(n=e.updateQueue)&&(t.updateQueue=n,t.flags|=4),Hl(i,!0),null===i.tail&&"hidden"===i.tailMode&&!s.alternate&&!aa)return Kl(t),null}else 2*Ye()-i.renderingStartTime>Ws&&1073741824!==n&&(t.flags|=128,r=!0,Hl(i,!1),t.lanes=4194304);i.isBackwards?(s.sibling=t.child,t.child=s):(null!==(n=i.last)?n.sibling=s:t.child=s,i.last=s)}return null!==i.tail?(t=i.tail,i.rendering=t,i.tail=t.sibling,i.renderingStartTime=Ye(),t.sibling=null,n=ei.current,jo(ei,r?1&n|2:1&n),t):(Kl(t),null);case 22:case 23:return dc(),r=null!==t.memoizedState,null!==e&&null!==e.memoizedState!==r&&(t.flags|=8192),r&&0!==(1&t.mode)?0!==(1073741824&Ts)&&(Kl(t),6&t.subtreeFlags&&(t.flags|=8192)):Kl(t),null;case 24:case 25:return null}throw Error(a(156,t.tag))}function Gl(e,t){switch(na(t),t.tag){case 1:return $o(t.type)&&Oo(),65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 3:return Ya(),Eo(Ro),Eo(Po),ri(),0!==(65536&(e=t.flags))&&0===(128&e)?(t.flags=-65537&e|128,t):null;case 5:return Za(t),null;case 13:if(Eo(ei),null!==(e=t.memoizedState)&&null!==e.dehydrated){if(null===t.alternate)throw Error(a(340));ma()}return 65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 19:return Eo(ei),null;case 4:return Ya(),null;case 10:return _a(t.type._context),null;case 22:case 23:return dc(),null;default:return null}}Il=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},Tl=function(){},$l=function(e,t,n,r){var o=e.memoizedProps;if(o!==r){e=t.stateNode,Xa(Ka.current);var a,i=null;switch(n){case"input":o=X(e,o),r=X(e,r),i=[];break;case"select":o=L({},o,{value:void 0}),r=L({},r,{value:void 0}),i=[];break;case"textarea":o=re(e,o),r=re(e,r),i=[];break;default:"function"!==typeof o.onClick&&"function"===typeof r.onClick&&(e.onclick=Zr)}for(u in ye(n,r),n=null,o)if(!r.hasOwnProperty(u)&&o.hasOwnProperty(u)&&null!=o[u])if("style"===u){var s=o[u];for(a in s)s.hasOwnProperty(a)&&(n||(n={}),n[a]="")}else"dangerouslySetInnerHTML"!==u&&"children"!==u&&"suppressContentEditableWarning"!==u&&"suppressHydrationWarning"!==u&&"autoFocus"!==u&&(l.hasOwnProperty(u)?i||(i=[]):(i=i||[]).push(u,null));for(u in r){var c=r[u];if(s=null!=o?o[u]:void 0,r.hasOwnProperty(u)&&c!==s&&(null!=c||null!=s))if("style"===u)if(s){for(a in s)!s.hasOwnProperty(a)||c&&c.hasOwnProperty(a)||(n||(n={}),n[a]="");for(a in c)c.hasOwnProperty(a)&&s[a]!==c[a]&&(n||(n={}),n[a]=c[a])}else n||(i||(i=[]),i.push(u,n)),n=c;else"dangerouslySetInnerHTML"===u?(c=c?c.__html:void 0,s=s?s.__html:void 0,null!=c&&s!==c&&(i=i||[]).push(u,c)):"children"===u?"string"!==typeof c&&"number"!==typeof c||(i=i||[]).push(u,""+c):"suppressContentEditableWarning"!==u&&"suppressHydrationWarning"!==u&&(l.hasOwnProperty(u)?(null!=c&&"onScroll"===u&&Dr("scroll",e),i||s===c||(i=[])):(i=i||[]).push(u,c))}n&&(i=i||[]).push("style",n);var u=i;(t.updateQueue=u)&&(t.flags|=4)}},Ol=function(e,t,n,r){n!==r&&(t.flags|=4)};var Xl=!1,Ql=!1,Yl="function"===typeof WeakSet?WeakSet:Set,Jl=null;function Zl(e,t){var n=e.ref;if(null!==n)if("function"===typeof n)try{n(null)}catch(r){kc(e,t,r)}else n.current=null}function es(e,t,n){try{n()}catch(r){kc(e,t,r)}}var ts=!1;function ns(e,t,n){var r=t.updateQueue;if(null!==(r=null!==r?r.lastEffect:null)){var o=r=r.next;do{if((o.tag&e)===e){var a=o.destroy;o.destroy=void 0,void 0!==a&&es(t,n,a)}o=o.next}while(o!==r)}}function rs(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var n=t=t.next;do{if((n.tag&e)===e){var r=n.create;n.destroy=r()}n=n.next}while(n!==t)}}function os(e){var t=e.ref;if(null!==t){var n=e.stateNode;e.tag,e=n,"function"===typeof t?t(e):t.current=e}}function as(e){var t=e.alternate;null!==t&&(e.alternate=null,as(t)),e.child=null,e.deletions=null,e.sibling=null,5===e.tag&&(null!==(t=e.stateNode)&&(delete t[fo],delete t[mo],delete t[go],delete t[vo],delete t[yo])),e.stateNode=null,e.return=null,e.dependencies=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.stateNode=null,e.updateQueue=null}function is(e){return 5===e.tag||3===e.tag||4===e.tag}function ls(e){e:for(;;){for(;null===e.sibling;){if(null===e.return||is(e.return))return null;e=e.return}for(e.sibling.return=e.return,e=e.sibling;5!==e.tag&&6!==e.tag&&18!==e.tag;){if(2&e.flags)continue e;if(null===e.child||4===e.tag)continue e;e.child.return=e,e=e.child}if(!(2&e.flags))return e.stateNode}}function ss(e,t,n){var r=e.tag;if(5===r||6===r)e=e.stateNode,t?8===n.nodeType?n.parentNode.insertBefore(e,t):n.insertBefore(e,t):(8===n.nodeType?(t=n.parentNode).insertBefore(e,n):(t=n).appendChild(e),null!==(n=n._reactRootContainer)&&void 0!==n||null!==t.onclick||(t.onclick=Zr));else if(4!==r&&null!==(e=e.child))for(ss(e,t,n),e=e.sibling;null!==e;)ss(e,t,n),e=e.sibling}function cs(e,t,n){var r=e.tag;if(5===r||6===r)e=e.stateNode,t?n.insertBefore(e,t):n.appendChild(e);else if(4!==r&&null!==(e=e.child))for(cs(e,t,n),e=e.sibling;null!==e;)cs(e,t,n),e=e.sibling}var us=null,ds=!1;function ps(e,t,n){for(n=n.child;null!==n;)fs(e,t,n),n=n.sibling}function fs(e,t,n){if(at&&"function"===typeof at.onCommitFiberUnmount)try{at.onCommitFiberUnmount(ot,n)}catch(l){}switch(n.tag){case 5:Ql||Zl(n,t);case 6:var r=us,o=ds;us=null,ps(e,t,n),ds=o,null!==(us=r)&&(ds?(e=us,n=n.stateNode,8===e.nodeType?e.parentNode.removeChild(n):e.removeChild(n)):us.removeChild(n.stateNode));break;case 18:null!==us&&(ds?(e=us,n=n.stateNode,8===e.nodeType?so(e.parentNode,n):1===e.nodeType&&so(e,n),Wt(e)):so(us,n.stateNode));break;case 4:r=us,o=ds,us=n.stateNode.containerInfo,ds=!0,ps(e,t,n),us=r,ds=o;break;case 0:case 11:case 14:case 15:if(!Ql&&(null!==(r=n.updateQueue)&&null!==(r=r.lastEffect))){o=r=r.next;do{var a=o,i=a.destroy;a=a.tag,void 0!==i&&(0!==(2&a)||0!==(4&a))&&es(n,t,i),o=o.next}while(o!==r)}ps(e,t,n);break;case 1:if(!Ql&&(Zl(n,t),"function"===typeof(r=n.stateNode).componentWillUnmount))try{r.props=n.memoizedProps,r.state=n.memoizedState,r.componentWillUnmount()}catch(l){kc(n,t,l)}ps(e,t,n);break;case 21:ps(e,t,n);break;case 22:1&n.mode?(Ql=(r=Ql)||null!==n.memoizedState,ps(e,t,n),Ql=r):ps(e,t,n);break;default:ps(e,t,n)}}function ms(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new Yl),t.forEach((function(t){var r=_c.bind(null,e,t);n.has(t)||(n.add(t),t.then(r,r))}))}}function hs(e,t){var n=t.deletions;if(null!==n)for(var r=0;r<n.length;r++){var o=n[r];try{var i=e,l=t,s=l;e:for(;null!==s;){switch(s.tag){case 5:us=s.stateNode,ds=!1;break e;case 3:case 4:us=s.stateNode.containerInfo,ds=!0;break e}s=s.return}if(null===us)throw Error(a(160));fs(i,l,o),us=null,ds=!1;var c=o.alternate;null!==c&&(c.return=null),o.return=null}catch(u){kc(o,t,u)}}if(12854&t.subtreeFlags)for(t=t.child;null!==t;)gs(t,e),t=t.sibling}function gs(e,t){var n=e.alternate,r=e.flags;switch(e.tag){case 0:case 11:case 14:case 15:if(hs(t,e),vs(e),4&r){try{ns(3,e,e.return),rs(3,e)}catch(g){kc(e,e.return,g)}try{ns(5,e,e.return)}catch(g){kc(e,e.return,g)}}break;case 1:hs(t,e),vs(e),512&r&&null!==n&&Zl(n,n.return);break;case 5:if(hs(t,e),vs(e),512&r&&null!==n&&Zl(n,n.return),32&e.flags){var o=e.stateNode;try{pe(o,"")}catch(g){kc(e,e.return,g)}}if(4&r&&null!=(o=e.stateNode)){var i=e.memoizedProps,l=null!==n?n.memoizedProps:i,s=e.type,c=e.updateQueue;if(e.updateQueue=null,null!==c)try{"input"===s&&"radio"===i.type&&null!=i.name&&Y(o,i),be(s,l);var u=be(s,i);for(l=0;l<c.length;l+=2){var d=c[l],p=c[l+1];"style"===d?ge(o,p):"dangerouslySetInnerHTML"===d?de(o,p):"children"===d?pe(o,p):b(o,d,p,u)}switch(s){case"input":J(o,i);break;case"textarea":ae(o,i);break;case"select":var f=o._wrapperState.wasMultiple;o._wrapperState.wasMultiple=!!i.multiple;var m=i.value;null!=m?ne(o,!!i.multiple,m,!1):f!==!!i.multiple&&(null!=i.defaultValue?ne(o,!!i.multiple,i.defaultValue,!0):ne(o,!!i.multiple,i.multiple?[]:"",!1))}o[mo]=i}catch(g){kc(e,e.return,g)}}break;case 6:if(hs(t,e),vs(e),4&r){if(null===e.stateNode)throw Error(a(162));o=e.stateNode,i=e.memoizedProps;try{o.nodeValue=i}catch(g){kc(e,e.return,g)}}break;case 3:if(hs(t,e),vs(e),4&r&&null!==n&&n.memoizedState.isDehydrated)try{Wt(t.containerInfo)}catch(g){kc(e,e.return,g)}break;case 4:default:hs(t,e),vs(e);break;case 13:hs(t,e),vs(e),8192&(o=e.child).flags&&(i=null!==o.memoizedState,o.stateNode.isHidden=i,!i||null!==o.alternate&&null!==o.alternate.memoizedState||(Bs=Ye())),4&r&&ms(e);break;case 22:if(d=null!==n&&null!==n.memoizedState,1&e.mode?(Ql=(u=Ql)||d,hs(t,e),Ql=u):hs(t,e),vs(e),8192&r){if(u=null!==e.memoizedState,(e.stateNode.isHidden=u)&&!d&&0!==(1&e.mode))for(Jl=e,d=e.child;null!==d;){for(p=Jl=d;null!==Jl;){switch(m=(f=Jl).child,f.tag){case 0:case 11:case 14:case 15:ns(4,f,f.return);break;case 1:Zl(f,f.return);var h=f.stateNode;if("function"===typeof h.componentWillUnmount){r=f,n=f.return;try{t=r,h.props=t.memoizedProps,h.state=t.memoizedState,h.componentWillUnmount()}catch(g){kc(r,n,g)}}break;case 5:Zl(f,f.return);break;case 22:if(null!==f.memoizedState){As(p);continue}}null!==m?(m.return=f,Jl=m):As(p)}d=d.sibling}e:for(d=null,p=e;;){if(5===p.tag){if(null===d){d=p;try{o=p.stateNode,u?"function"===typeof(i=o.style).setProperty?i.setProperty("display","none","important"):i.display="none":(s=p.stateNode,l=void 0!==(c=p.memoizedProps.style)&&null!==c&&c.hasOwnProperty("display")?c.display:null,s.style.display=he("display",l))}catch(g){kc(e,e.return,g)}}}else if(6===p.tag){if(null===d)try{p.stateNode.nodeValue=u?"":p.memoizedProps}catch(g){kc(e,e.return,g)}}else if((22!==p.tag&&23!==p.tag||null===p.memoizedState||p===e)&&null!==p.child){p.child.return=p,p=p.child;continue}if(p===e)break e;for(;null===p.sibling;){if(null===p.return||p.return===e)break e;d===p&&(d=null),p=p.return}d===p&&(d=null),p.sibling.return=p.return,p=p.sibling}}break;case 19:hs(t,e),vs(e),4&r&&ms(e);case 21:}}function vs(e){var t=e.flags;if(2&t){try{e:{for(var n=e.return;null!==n;){if(is(n)){var r=n;break e}n=n.return}throw Error(a(160))}switch(r.tag){case 5:var o=r.stateNode;32&r.flags&&(pe(o,""),r.flags&=-33),cs(e,ls(e),o);break;case 3:case 4:var i=r.stateNode.containerInfo;ss(e,ls(e),i);break;default:throw Error(a(161))}}catch(l){kc(e,e.return,l)}e.flags&=-3}4096&t&&(e.flags&=-4097)}function ys(e,t,n){Jl=e,bs(e,t,n)}function bs(e,t,n){for(var r=0!==(1&e.mode);null!==Jl;){var o=Jl,a=o.child;if(22===o.tag&&r){var i=null!==o.memoizedState||Xl;if(!i){var l=o.alternate,s=null!==l&&null!==l.memoizedState||Ql;l=Xl;var c=Ql;if(Xl=i,(Ql=s)&&!c)for(Jl=o;null!==Jl;)s=(i=Jl).child,22===i.tag&&null!==i.memoizedState?ws(o):null!==s?(s.return=i,Jl=s):ws(o);for(;null!==a;)Jl=a,bs(a,t,n),a=a.sibling;Jl=o,Xl=l,Ql=c}xs(e)}else 0!==(8772&o.subtreeFlags)&&null!==a?(a.return=o,Jl=a):xs(e)}}function xs(e){for(;null!==Jl;){var t=Jl;if(0!==(8772&t.flags)){var n=t.alternate;try{if(0!==(8772&t.flags))switch(t.tag){case 0:case 11:case 15:Ql||rs(5,t);break;case 1:var r=t.stateNode;if(4&t.flags&&!Ql)if(null===n)r.componentDidMount();else{var o=t.elementType===t.type?n.memoizedProps:nl(t.type,n.memoizedProps);r.componentDidUpdate(o,n.memoizedState,r.__reactInternalSnapshotBeforeUpdate)}var i=t.updateQueue;null!==i&&Va(t,i,r);break;case 3:var l=t.updateQueue;if(null!==l){if(n=null,null!==t.child)switch(t.child.tag){case 5:case 1:n=t.child.stateNode}Va(t,l,n)}break;case 5:var s=t.stateNode;if(null===n&&4&t.flags){n=s;var c=t.memoizedProps;switch(t.type){case"button":case"input":case"select":case"textarea":c.autoFocus&&n.focus();break;case"img":c.src&&(n.src=c.src)}}break;case 6:case 4:case 12:case 19:case 17:case 21:case 22:case 23:case 25:break;case 13:if(null===t.memoizedState){var u=t.alternate;if(null!==u){var d=u.memoizedState;if(null!==d){var p=d.dehydrated;null!==p&&Wt(p)}}}break;default:throw Error(a(163))}Ql||512&t.flags&&os(t)}catch(f){kc(t,t.return,f)}}if(t===e){Jl=null;break}if(null!==(n=t.sibling)){n.return=t.return,Jl=n;break}Jl=t.return}}function As(e){for(;null!==Jl;){var t=Jl;if(t===e){Jl=null;break}var n=t.sibling;if(null!==n){n.return=t.return,Jl=n;break}Jl=t.return}}function ws(e){for(;null!==Jl;){var t=Jl;try{switch(t.tag){case 0:case 11:case 15:var n=t.return;try{rs(4,t)}catch(s){kc(t,n,s)}break;case 1:var r=t.stateNode;if("function"===typeof r.componentDidMount){var o=t.return;try{r.componentDidMount()}catch(s){kc(t,o,s)}}var a=t.return;try{os(t)}catch(s){kc(t,a,s)}break;case 5:var i=t.return;try{os(t)}catch(s){kc(t,i,s)}}}catch(s){kc(t,t.return,s)}if(t===e){Jl=null;break}var l=t.sibling;if(null!==l){l.return=t.return,Jl=l;break}Jl=t.return}}var Ss,ks=Math.ceil,Cs=x.ReactCurrentDispatcher,Es=x.ReactCurrentOwner,js=x.ReactCurrentBatchConfig,_s=0,Ps=null,Rs=null,Is=0,Ts=0,$s=Co(0),Os=0,Ns=null,Ms=0,Ls=0,zs=0,Ds=null,Fs=null,Bs=0,Ws=1/0,Us=null,Vs=!1,Hs=null,Ks=null,qs=!1,Gs=null,Xs=0,Qs=0,Ys=null,Js=-1,Zs=0;function ec(){return 0!==(6&_s)?Ye():-1!==Js?Js:Js=Ye()}function tc(e){return 0===(1&e.mode)?1:0!==(2&_s)&&0!==Is?Is&-Is:null!==ga.transition?(0===Zs&&(Zs=ht()),Zs):0!==(e=bt)?e:e=void 0===(e=window.event)?16:Qt(e.type)}function nc(e,t,n,r){if(50<Qs)throw Qs=0,Ys=null,Error(a(185));vt(e,n,r),0!==(2&_s)&&e===Ps||(e===Ps&&(0===(2&_s)&&(Ls|=n),4===Os&&lc(e,Is)),rc(e,r),1===n&&0===_s&&0===(1&t.mode)&&(Ws=Ye()+500,Fo&&Uo()))}function rc(e,t){var n=e.callbackNode;!function(e,t){for(var n=e.suspendedLanes,r=e.pingedLanes,o=e.expirationTimes,a=e.pendingLanes;0<a;){var i=31-it(a),l=1<<i,s=o[i];-1===s?0!==(l&n)&&0===(l&r)||(o[i]=ft(l,t)):s<=t&&(e.expiredLanes|=l),a&=~l}}(e,t);var r=pt(e,e===Ps?Is:0);if(0===r)null!==n&&Ge(n),e.callbackNode=null,e.callbackPriority=0;else if(t=r&-r,e.callbackPriority!==t){if(null!=n&&Ge(n),1===t)0===e.tag?function(e){Fo=!0,Wo(e)}(sc.bind(null,e)):Wo(sc.bind(null,e)),io((function(){0===(6&_s)&&Uo()})),n=null;else{switch(xt(r)){case 1:n=Ze;break;case 4:n=et;break;case 16:default:n=tt;break;case 536870912:n=rt}n=Pc(n,oc.bind(null,e))}e.callbackPriority=t,e.callbackNode=n}}function oc(e,t){if(Js=-1,Zs=0,0!==(6&_s))throw Error(a(327));var n=e.callbackNode;if(wc()&&e.callbackNode!==n)return null;var r=pt(e,e===Ps?Is:0);if(0===r)return null;if(0!==(30&r)||0!==(r&e.expiredLanes)||t)t=gc(e,r);else{t=r;var o=_s;_s|=2;var i=mc();for(Ps===e&&Is===t||(Us=null,Ws=Ye()+500,pc(e,t));;)try{yc();break}catch(s){fc(e,s)}ja(),Cs.current=i,_s=o,null!==Rs?t=0:(Ps=null,Is=0,t=Os)}if(0!==t){if(2===t&&(0!==(o=mt(e))&&(r=o,t=ac(e,o))),1===t)throw n=Ns,pc(e,0),lc(e,r),rc(e,Ye()),n;if(6===t)lc(e,r);else{if(o=e.current.alternate,0===(30&r)&&!function(e){for(var t=e;;){if(16384&t.flags){var n=t.updateQueue;if(null!==n&&null!==(n=n.stores))for(var r=0;r<n.length;r++){var o=n[r],a=o.getSnapshot;o=o.value;try{if(!lr(a(),o))return!1}catch(l){return!1}}}if(n=t.child,16384&t.subtreeFlags&&null!==n)n.return=t,t=n;else{if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return!0;t=t.return}t.sibling.return=t.return,t=t.sibling}}return!0}(o)&&(2===(t=gc(e,r))&&(0!==(i=mt(e))&&(r=i,t=ac(e,i))),1===t))throw n=Ns,pc(e,0),lc(e,r),rc(e,Ye()),n;switch(e.finishedWork=o,e.finishedLanes=r,t){case 0:case 1:throw Error(a(345));case 2:case 5:Ac(e,Fs,Us);break;case 3:if(lc(e,r),(130023424&r)===r&&10<(t=Bs+500-Ye())){if(0!==pt(e,0))break;if(((o=e.suspendedLanes)&r)!==r){ec(),e.pingedLanes|=e.suspendedLanes&o;break}e.timeoutHandle=ro(Ac.bind(null,e,Fs,Us),t);break}Ac(e,Fs,Us);break;case 4:if(lc(e,r),(4194240&r)===r)break;for(t=e.eventTimes,o=-1;0<r;){var l=31-it(r);i=1<<l,(l=t[l])>o&&(o=l),r&=~i}if(r=o,10<(r=(120>(r=Ye()-r)?120:480>r?480:1080>r?1080:1920>r?1920:3e3>r?3e3:4320>r?4320:1960*ks(r/1960))-r)){e.timeoutHandle=ro(Ac.bind(null,e,Fs,Us),r);break}Ac(e,Fs,Us);break;default:throw Error(a(329))}}}return rc(e,Ye()),e.callbackNode===n?oc.bind(null,e):null}function ac(e,t){var n=Ds;return e.current.memoizedState.isDehydrated&&(pc(e,t).flags|=256),2!==(e=gc(e,t))&&(t=Fs,Fs=n,null!==t&&ic(t)),e}function ic(e){null===Fs?Fs=e:Fs.push.apply(Fs,e)}function lc(e,t){for(t&=~zs,t&=~Ls,e.suspendedLanes|=t,e.pingedLanes&=~t,e=e.expirationTimes;0<t;){var n=31-it(t),r=1<<n;e[n]=-1,t&=~r}}function sc(e){if(0!==(6&_s))throw Error(a(327));wc();var t=pt(e,0);if(0===(1&t))return rc(e,Ye()),null;var n=gc(e,t);if(0!==e.tag&&2===n){var r=mt(e);0!==r&&(t=r,n=ac(e,r))}if(1===n)throw n=Ns,pc(e,0),lc(e,t),rc(e,Ye()),n;if(6===n)throw Error(a(345));return e.finishedWork=e.current.alternate,e.finishedLanes=t,Ac(e,Fs,Us),rc(e,Ye()),null}function cc(e,t){var n=_s;_s|=1;try{return e(t)}finally{0===(_s=n)&&(Ws=Ye()+500,Fo&&Uo())}}function uc(e){null!==Gs&&0===Gs.tag&&0===(6&_s)&&wc();var t=_s;_s|=1;var n=js.transition,r=bt;try{if(js.transition=null,bt=1,e)return e()}finally{bt=r,js.transition=n,0===(6&(_s=t))&&Uo()}}function dc(){Ts=$s.current,Eo($s)}function pc(e,t){e.finishedWork=null,e.finishedLanes=0;var n=e.timeoutHandle;if(-1!==n&&(e.timeoutHandle=-1,oo(n)),null!==Rs)for(n=Rs.return;null!==n;){var r=n;switch(na(r),r.tag){case 1:null!==(r=r.type.childContextTypes)&&void 0!==r&&Oo();break;case 3:Ya(),Eo(Ro),Eo(Po),ri();break;case 5:Za(r);break;case 4:Ya();break;case 13:case 19:Eo(ei);break;case 10:_a(r.type._context);break;case 22:case 23:dc()}n=n.return}if(Ps=e,Rs=e=$c(e.current,null),Is=Ts=t,Os=0,Ns=null,zs=Ls=Ms=0,Fs=Ds=null,null!==Ta){for(t=0;t<Ta.length;t++)if(null!==(r=(n=Ta[t]).interleaved)){n.interleaved=null;var o=r.next,a=n.pending;if(null!==a){var i=a.next;a.next=o,r.next=i}n.pending=r}Ta=null}return e}function fc(e,t){for(;;){var n=Rs;try{if(ja(),oi.current=Ji,ui){for(var r=li.memoizedState;null!==r;){var o=r.queue;null!==o&&(o.pending=null),r=r.next}ui=!1}if(ii=0,ci=si=li=null,di=!1,pi=0,Es.current=null,null===n||null===n.return){Os=1,Ns=t,Rs=null;break}e:{var i=e,l=n.return,s=n,c=t;if(t=Is,s.flags|=32768,null!==c&&"object"===typeof c&&"function"===typeof c.then){var u=c,d=s,p=d.tag;if(0===(1&d.mode)&&(0===p||11===p||15===p)){var f=d.alternate;f?(d.updateQueue=f.updateQueue,d.memoizedState=f.memoizedState,d.lanes=f.lanes):(d.updateQueue=null,d.memoizedState=null)}var m=gl(l);if(null!==m){m.flags&=-257,vl(m,l,s,0,t),1&m.mode&&hl(i,u,t),c=u;var h=(t=m).updateQueue;if(null===h){var g=new Set;g.add(c),t.updateQueue=g}else h.add(c);break e}if(0===(1&t)){hl(i,u,t),hc();break e}c=Error(a(426))}else if(aa&&1&s.mode){var v=gl(l);if(null!==v){0===(65536&v.flags)&&(v.flags|=256),vl(v,l,s,0,t),ha(cl(c,s));break e}}i=c=cl(c,s),4!==Os&&(Os=2),null===Ds?Ds=[i]:Ds.push(i),i=l;do{switch(i.tag){case 3:i.flags|=65536,t&=-t,i.lanes|=t,Wa(i,fl(0,c,t));break e;case 1:s=c;var y=i.type,b=i.stateNode;if(0===(128&i.flags)&&("function"===typeof y.getDerivedStateFromError||null!==b&&"function"===typeof b.componentDidCatch&&(null===Ks||!Ks.has(b)))){i.flags|=65536,t&=-t,i.lanes|=t,Wa(i,ml(i,s,t));break e}}i=i.return}while(null!==i)}xc(n)}catch(x){t=x,Rs===n&&null!==n&&(Rs=n=n.return);continue}break}}function mc(){var e=Cs.current;return Cs.current=Ji,null===e?Ji:e}function hc(){0!==Os&&3!==Os&&2!==Os||(Os=4),null===Ps||0===(268435455&Ms)&&0===(268435455&Ls)||lc(Ps,Is)}function gc(e,t){var n=_s;_s|=2;var r=mc();for(Ps===e&&Is===t||(Us=null,pc(e,t));;)try{vc();break}catch(o){fc(e,o)}if(ja(),_s=n,Cs.current=r,null!==Rs)throw Error(a(261));return Ps=null,Is=0,Os}function vc(){for(;null!==Rs;)bc(Rs)}function yc(){for(;null!==Rs&&!Xe();)bc(Rs)}function bc(e){var t=Ss(e.alternate,e,Ts);e.memoizedProps=e.pendingProps,null===t?xc(e):Rs=t,Es.current=null}function xc(e){var t=e;do{var n=t.alternate;if(e=t.return,0===(32768&t.flags)){if(null!==(n=ql(n,t,Ts)))return void(Rs=n)}else{if(null!==(n=Gl(n,t)))return n.flags&=32767,void(Rs=n);if(null===e)return Os=6,void(Rs=null);e.flags|=32768,e.subtreeFlags=0,e.deletions=null}if(null!==(t=t.sibling))return void(Rs=t);Rs=t=e}while(null!==t);0===Os&&(Os=5)}function Ac(e,t,n){var r=bt,o=js.transition;try{js.transition=null,bt=1,function(e,t,n,r){do{wc()}while(null!==Gs);if(0!==(6&_s))throw Error(a(327));n=e.finishedWork;var o=e.finishedLanes;if(null===n)return null;if(e.finishedWork=null,e.finishedLanes=0,n===e.current)throw Error(a(177));e.callbackNode=null,e.callbackPriority=0;var i=n.lanes|n.childLanes;if(function(e,t){var n=e.pendingLanes&~t;e.pendingLanes=t,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=t,e.mutableReadLanes&=t,e.entangledLanes&=t,t=e.entanglements;var r=e.eventTimes;for(e=e.expirationTimes;0<n;){var o=31-it(n),a=1<<o;t[o]=0,r[o]=-1,e[o]=-1,n&=~a}}(e,i),e===Ps&&(Rs=Ps=null,Is=0),0===(2064&n.subtreeFlags)&&0===(2064&n.flags)||qs||(qs=!0,Pc(tt,(function(){return wc(),null}))),i=0!==(15990&n.flags),0!==(15990&n.subtreeFlags)||i){i=js.transition,js.transition=null;var l=bt;bt=1;var s=_s;_s|=4,Es.current=null,function(e,t){if(eo=Vt,fr(e=pr())){if("selectionStart"in e)var n={start:e.selectionStart,end:e.selectionEnd};else e:{var r=(n=(n=e.ownerDocument)&&n.defaultView||window).getSelection&&n.getSelection();if(r&&0!==r.rangeCount){n=r.anchorNode;var o=r.anchorOffset,i=r.focusNode;r=r.focusOffset;try{n.nodeType,i.nodeType}catch(A){n=null;break e}var l=0,s=-1,c=-1,u=0,d=0,p=e,f=null;t:for(;;){for(var m;p!==n||0!==o&&3!==p.nodeType||(s=l+o),p!==i||0!==r&&3!==p.nodeType||(c=l+r),3===p.nodeType&&(l+=p.nodeValue.length),null!==(m=p.firstChild);)f=p,p=m;for(;;){if(p===e)break t;if(f===n&&++u===o&&(s=l),f===i&&++d===r&&(c=l),null!==(m=p.nextSibling))break;f=(p=f).parentNode}p=m}n=-1===s||-1===c?null:{start:s,end:c}}else n=null}n=n||{start:0,end:0}}else n=null;for(to={focusedElem:e,selectionRange:n},Vt=!1,Jl=t;null!==Jl;)if(e=(t=Jl).child,0!==(1028&t.subtreeFlags)&&null!==e)e.return=t,Jl=e;else for(;null!==Jl;){t=Jl;try{var h=t.alternate;if(0!==(1024&t.flags))switch(t.tag){case 0:case 11:case 15:case 5:case 6:case 4:case 17:break;case 1:if(null!==h){var g=h.memoizedProps,v=h.memoizedState,y=t.stateNode,b=y.getSnapshotBeforeUpdate(t.elementType===t.type?g:nl(t.type,g),v);y.__reactInternalSnapshotBeforeUpdate=b}break;case 3:var x=t.stateNode.containerInfo;1===x.nodeType?x.textContent="":9===x.nodeType&&x.documentElement&&x.removeChild(x.documentElement);break;default:throw Error(a(163))}}catch(A){kc(t,t.return,A)}if(null!==(e=t.sibling)){e.return=t.return,Jl=e;break}Jl=t.return}h=ts,ts=!1}(e,n),gs(n,e),mr(to),Vt=!!eo,to=eo=null,e.current=n,ys(n,e,o),Qe(),_s=s,bt=l,js.transition=i}else e.current=n;if(qs&&(qs=!1,Gs=e,Xs=o),i=e.pendingLanes,0===i&&(Ks=null),function(e){if(at&&"function"===typeof at.onCommitFiberRoot)try{at.onCommitFiberRoot(ot,e,void 0,128===(128&e.current.flags))}catch(t){}}(n.stateNode),rc(e,Ye()),null!==t)for(r=e.onRecoverableError,n=0;n<t.length;n++)o=t[n],r(o.value,{componentStack:o.stack,digest:o.digest});if(Vs)throw Vs=!1,e=Hs,Hs=null,e;0!==(1&Xs)&&0!==e.tag&&wc(),i=e.pendingLanes,0!==(1&i)?e===Ys?Qs++:(Qs=0,Ys=e):Qs=0,Uo()}(e,t,n,r)}finally{js.transition=o,bt=r}return null}function wc(){if(null!==Gs){var e=xt(Xs),t=js.transition,n=bt;try{if(js.transition=null,bt=16>e?16:e,null===Gs)var r=!1;else{if(e=Gs,Gs=null,Xs=0,0!==(6&_s))throw Error(a(331));var o=_s;for(_s|=4,Jl=e.current;null!==Jl;){var i=Jl,l=i.child;if(0!==(16&Jl.flags)){var s=i.deletions;if(null!==s){for(var c=0;c<s.length;c++){var u=s[c];for(Jl=u;null!==Jl;){var d=Jl;switch(d.tag){case 0:case 11:case 15:ns(8,d,i)}var p=d.child;if(null!==p)p.return=d,Jl=p;else for(;null!==Jl;){var f=(d=Jl).sibling,m=d.return;if(as(d),d===u){Jl=null;break}if(null!==f){f.return=m,Jl=f;break}Jl=m}}}var h=i.alternate;if(null!==h){var g=h.child;if(null!==g){h.child=null;do{var v=g.sibling;g.sibling=null,g=v}while(null!==g)}}Jl=i}}if(0!==(2064&i.subtreeFlags)&&null!==l)l.return=i,Jl=l;else e:for(;null!==Jl;){if(0!==(2048&(i=Jl).flags))switch(i.tag){case 0:case 11:case 15:ns(9,i,i.return)}var y=i.sibling;if(null!==y){y.return=i.return,Jl=y;break e}Jl=i.return}}var b=e.current;for(Jl=b;null!==Jl;){var x=(l=Jl).child;if(0!==(2064&l.subtreeFlags)&&null!==x)x.return=l,Jl=x;else e:for(l=b;null!==Jl;){if(0!==(2048&(s=Jl).flags))try{switch(s.tag){case 0:case 11:case 15:rs(9,s)}}catch(w){kc(s,s.return,w)}if(s===l){Jl=null;break e}var A=s.sibling;if(null!==A){A.return=s.return,Jl=A;break e}Jl=s.return}}if(_s=o,Uo(),at&&"function"===typeof at.onPostCommitFiberRoot)try{at.onPostCommitFiberRoot(ot,e)}catch(w){}r=!0}return r}finally{bt=n,js.transition=t}}return!1}function Sc(e,t,n){e=Fa(e,t=fl(0,t=cl(n,t),1),1),t=ec(),null!==e&&(vt(e,1,t),rc(e,t))}function kc(e,t,n){if(3===e.tag)Sc(e,e,n);else for(;null!==t;){if(3===t.tag){Sc(t,e,n);break}if(1===t.tag){var r=t.stateNode;if("function"===typeof t.type.getDerivedStateFromError||"function"===typeof r.componentDidCatch&&(null===Ks||!Ks.has(r))){t=Fa(t,e=ml(t,e=cl(n,e),1),1),e=ec(),null!==t&&(vt(t,1,e),rc(t,e));break}}t=t.return}}function Cc(e,t,n){var r=e.pingCache;null!==r&&r.delete(t),t=ec(),e.pingedLanes|=e.suspendedLanes&n,Ps===e&&(Is&n)===n&&(4===Os||3===Os&&(130023424&Is)===Is&&500>Ye()-Bs?pc(e,0):zs|=n),rc(e,t)}function Ec(e,t){0===t&&(0===(1&e.mode)?t=1:(t=ut,0===(130023424&(ut<<=1))&&(ut=4194304)));var n=ec();null!==(e=Na(e,t))&&(vt(e,t,n),rc(e,n))}function jc(e){var t=e.memoizedState,n=0;null!==t&&(n=t.retryLane),Ec(e,n)}function _c(e,t){var n=0;switch(e.tag){case 13:var r=e.stateNode,o=e.memoizedState;null!==o&&(n=o.retryLane);break;case 19:r=e.stateNode;break;default:throw Error(a(314))}null!==r&&r.delete(t),Ec(e,n)}function Pc(e,t){return qe(e,t)}function Rc(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function Ic(e,t,n,r){return new Rc(e,t,n,r)}function Tc(e){return!(!(e=e.prototype)||!e.isReactComponent)}function $c(e,t){var n=e.alternate;return null===n?((n=Ic(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.type=e.type,n.flags=0,n.subtreeFlags=0,n.deletions=null),n.flags=14680064&e.flags,n.childLanes=e.childLanes,n.lanes=e.lanes,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{lanes:t.lanes,firstContext:t.firstContext},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function Oc(e,t,n,r,o,i){var l=2;if(r=e,"function"===typeof e)Tc(e)&&(l=1);else if("string"===typeof e)l=5;else e:switch(e){case S:return Nc(n.children,o,i,t);case k:l=8,o|=8;break;case C:return(e=Ic(12,n,t,2|o)).elementType=C,e.lanes=i,e;case P:return(e=Ic(13,n,t,o)).elementType=P,e.lanes=i,e;case R:return(e=Ic(19,n,t,o)).elementType=R,e.lanes=i,e;case $:return Mc(n,o,i,t);default:if("object"===typeof e&&null!==e)switch(e.$$typeof){case E:l=10;break e;case j:l=9;break e;case _:l=11;break e;case I:l=14;break e;case T:l=16,r=null;break e}throw Error(a(130,null==e?e:typeof e,""))}return(t=Ic(l,n,t,o)).elementType=e,t.type=r,t.lanes=i,t}function Nc(e,t,n,r){return(e=Ic(7,e,r,t)).lanes=n,e}function Mc(e,t,n,r){return(e=Ic(22,e,r,t)).elementType=$,e.lanes=n,e.stateNode={isHidden:!1},e}function Lc(e,t,n){return(e=Ic(6,e,null,t)).lanes=n,e}function zc(e,t,n){return(t=Ic(4,null!==e.children?e.children:[],e.key,t)).lanes=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Dc(e,t,n,r,o){this.tag=t,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=gt(0),this.expirationTimes=gt(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=gt(0),this.identifierPrefix=r,this.onRecoverableError=o,this.mutableSourceEagerHydrationData=null}function Fc(e,t,n,r,o,a,i,l,s){return e=new Dc(e,t,n,l,s),1===t?(t=1,!0===a&&(t|=8)):t=0,a=Ic(3,null,null,t),e.current=a,a.stateNode=e,a.memoizedState={element:r,isDehydrated:n,cache:null,transitions:null,pendingSuspenseBoundaries:null},La(a),e}function Bc(e){if(!e)return _o;e:{if(We(e=e._reactInternals)!==e||1!==e.tag)throw Error(a(170));var t=e;do{switch(t.tag){case 3:t=t.stateNode.context;break e;case 1:if($o(t.type)){t=t.stateNode.__reactInternalMemoizedMergedChildContext;break e}}t=t.return}while(null!==t);throw Error(a(171))}if(1===e.tag){var n=e.type;if($o(n))return Mo(e,n,t)}return t}function Wc(e,t,n,r,o,a,i,l,s){return(e=Fc(n,r,!0,e,0,a,0,l,s)).context=Bc(null),n=e.current,(a=Da(r=ec(),o=tc(n))).callback=void 0!==t&&null!==t?t:null,Fa(n,a,o),e.current.lanes=o,vt(e,o,r),rc(e,r),e}function Uc(e,t,n,r){var o=t.current,a=ec(),i=tc(o);return n=Bc(n),null===t.context?t.context=n:t.pendingContext=n,(t=Da(a,i)).payload={element:e},null!==(r=void 0===r?null:r)&&(t.callback=r),null!==(e=Fa(o,t,i))&&(nc(e,o,i,a),Ba(e,o,i)),i}function Vc(e){return(e=e.current).child?(e.child.tag,e.child.stateNode):null}function Hc(e,t){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var n=e.retryLane;e.retryLane=0!==n&&n<t?n:t}}function Kc(e,t){Hc(e,t),(e=e.alternate)&&Hc(e,t)}Ss=function(e,t,n){if(null!==e)if(e.memoizedProps!==t.pendingProps||Ro.current)bl=!0;else{if(0===(e.lanes&n)&&0===(128&t.flags))return bl=!1,function(e,t,n){switch(t.tag){case 3:Pl(t),ma();break;case 5:Ja(t);break;case 1:$o(t.type)&&Lo(t);break;case 4:Qa(t,t.stateNode.containerInfo);break;case 10:var r=t.type._context,o=t.memoizedProps.value;jo(Sa,r._currentValue),r._currentValue=o;break;case 13:if(null!==(r=t.memoizedState))return null!==r.dehydrated?(jo(ei,1&ei.current),t.flags|=128,null):0!==(n&t.child.childLanes)?Ll(e,t,n):(jo(ei,1&ei.current),null!==(e=Vl(e,t,n))?e.sibling:null);jo(ei,1&ei.current);break;case 19:if(r=0!==(n&t.childLanes),0!==(128&e.flags)){if(r)return Wl(e,t,n);t.flags|=128}if(null!==(o=t.memoizedState)&&(o.rendering=null,o.tail=null,o.lastEffect=null),jo(ei,ei.current),r)break;return null;case 22:case 23:return t.lanes=0,kl(e,t,n)}return Vl(e,t,n)}(e,t,n);bl=0!==(131072&e.flags)}else bl=!1,aa&&0!==(1048576&t.flags)&&ea(t,qo,t.index);switch(t.lanes=0,t.tag){case 2:var r=t.type;Ul(e,t),e=t.pendingProps;var o=To(t,Po.current);Ra(t,n),o=gi(null,t,r,e,o,n);var i=vi();return t.flags|=1,"object"===typeof o&&null!==o&&"function"===typeof o.render&&void 0===o.$$typeof?(t.tag=1,t.memoizedState=null,t.updateQueue=null,$o(r)?(i=!0,Lo(t)):i=!1,t.memoizedState=null!==o.state&&void 0!==o.state?o.state:null,La(t),o.updater=ol,t.stateNode=o,o._reactInternals=t,sl(t,r,e,n),t=_l(null,t,r,!0,i,n)):(t.tag=0,aa&&i&&ta(t),xl(null,t,o,n),t=t.child),t;case 16:r=t.elementType;e:{switch(Ul(e,t),e=t.pendingProps,r=(o=r._init)(r._payload),t.type=r,o=t.tag=function(e){if("function"===typeof e)return Tc(e)?1:0;if(void 0!==e&&null!==e){if((e=e.$$typeof)===_)return 11;if(e===I)return 14}return 2}(r),e=nl(r,e),o){case 0:t=El(null,t,r,e,n);break e;case 1:t=jl(null,t,r,e,n);break e;case 11:t=Al(null,t,r,e,n);break e;case 14:t=wl(null,t,r,nl(r.type,e),n);break e}throw Error(a(306,r,""))}return t;case 0:return r=t.type,o=t.pendingProps,El(e,t,r,o=t.elementType===r?o:nl(r,o),n);case 1:return r=t.type,o=t.pendingProps,jl(e,t,r,o=t.elementType===r?o:nl(r,o),n);case 3:e:{if(Pl(t),null===e)throw Error(a(387));r=t.pendingProps,o=(i=t.memoizedState).element,za(e,t),Ua(t,r,null,n);var l=t.memoizedState;if(r=l.element,i.isDehydrated){if(i={element:r,isDehydrated:!1,cache:l.cache,pendingSuspenseBoundaries:l.pendingSuspenseBoundaries,transitions:l.transitions},t.updateQueue.baseState=i,t.memoizedState=i,256&t.flags){t=Rl(e,t,r,n,o=cl(Error(a(423)),t));break e}if(r!==o){t=Rl(e,t,r,n,o=cl(Error(a(424)),t));break e}for(oa=co(t.stateNode.containerInfo.firstChild),ra=t,aa=!0,ia=null,n=wa(t,null,r,n),t.child=n;n;)n.flags=-3&n.flags|4096,n=n.sibling}else{if(ma(),r===o){t=Vl(e,t,n);break e}xl(e,t,r,n)}t=t.child}return t;case 5:return Ja(t),null===e&&ua(t),r=t.type,o=t.pendingProps,i=null!==e?e.memoizedProps:null,l=o.children,no(r,o)?l=null:null!==i&&no(r,i)&&(t.flags|=32),Cl(e,t),xl(e,t,l,n),t.child;case 6:return null===e&&ua(t),null;case 13:return Ll(e,t,n);case 4:return Qa(t,t.stateNode.containerInfo),r=t.pendingProps,null===e?t.child=Aa(t,null,r,n):xl(e,t,r,n),t.child;case 11:return r=t.type,o=t.pendingProps,Al(e,t,r,o=t.elementType===r?o:nl(r,o),n);case 7:return xl(e,t,t.pendingProps,n),t.child;case 8:case 12:return xl(e,t,t.pendingProps.children,n),t.child;case 10:e:{if(r=t.type._context,o=t.pendingProps,i=t.memoizedProps,l=o.value,jo(Sa,r._currentValue),r._currentValue=l,null!==i)if(lr(i.value,l)){if(i.children===o.children&&!Ro.current){t=Vl(e,t,n);break e}}else for(null!==(i=t.child)&&(i.return=t);null!==i;){var s=i.dependencies;if(null!==s){l=i.child;for(var c=s.firstContext;null!==c;){if(c.context===r){if(1===i.tag){(c=Da(-1,n&-n)).tag=2;var u=i.updateQueue;if(null!==u){var d=(u=u.shared).pending;null===d?c.next=c:(c.next=d.next,d.next=c),u.pending=c}}i.lanes|=n,null!==(c=i.alternate)&&(c.lanes|=n),Pa(i.return,n,t),s.lanes|=n;break}c=c.next}}else if(10===i.tag)l=i.type===t.type?null:i.child;else if(18===i.tag){if(null===(l=i.return))throw Error(a(341));l.lanes|=n,null!==(s=l.alternate)&&(s.lanes|=n),Pa(l,n,t),l=i.sibling}else l=i.child;if(null!==l)l.return=i;else for(l=i;null!==l;){if(l===t){l=null;break}if(null!==(i=l.sibling)){i.return=l.return,l=i;break}l=l.return}i=l}xl(e,t,o.children,n),t=t.child}return t;case 9:return o=t.type,r=t.pendingProps.children,Ra(t,n),r=r(o=Ia(o)),t.flags|=1,xl(e,t,r,n),t.child;case 14:return o=nl(r=t.type,t.pendingProps),wl(e,t,r,o=nl(r.type,o),n);case 15:return Sl(e,t,t.type,t.pendingProps,n);case 17:return r=t.type,o=t.pendingProps,o=t.elementType===r?o:nl(r,o),Ul(e,t),t.tag=1,$o(r)?(e=!0,Lo(t)):e=!1,Ra(t,n),il(t,r,o),sl(t,r,o,n),_l(null,t,r,!0,e,n);case 19:return Wl(e,t,n);case 22:return kl(e,t,n)}throw Error(a(156,t.tag))};var qc="function"===typeof reportError?reportError:function(e){console.error(e)};function Gc(e){this._internalRoot=e}function Xc(e){this._internalRoot=e}function Qc(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType)}function Yc(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function Jc(){}function Zc(e,t,n,r,o){var a=n._reactRootContainer;if(a){var i=a;if("function"===typeof o){var l=o;o=function(){var e=Vc(i);l.call(e)}}Uc(t,i,e,o)}else i=function(e,t,n,r,o){if(o){if("function"===typeof r){var a=r;r=function(){var e=Vc(i);a.call(e)}}var i=Wc(t,r,e,0,null,!1,0,"",Jc);return e._reactRootContainer=i,e[ho]=i.current,Wr(8===e.nodeType?e.parentNode:e),uc(),i}for(;o=e.lastChild;)e.removeChild(o);if("function"===typeof r){var l=r;r=function(){var e=Vc(s);l.call(e)}}var s=Fc(e,0,!1,null,0,!1,0,"",Jc);return e._reactRootContainer=s,e[ho]=s.current,Wr(8===e.nodeType?e.parentNode:e),uc((function(){Uc(t,s,n,r)})),s}(n,t,e,o,r);return Vc(i)}Xc.prototype.render=Gc.prototype.render=function(e){var t=this._internalRoot;if(null===t)throw Error(a(409));Uc(e,t,null,null)},Xc.prototype.unmount=Gc.prototype.unmount=function(){var e=this._internalRoot;if(null!==e){this._internalRoot=null;var t=e.containerInfo;uc((function(){Uc(null,e,null,null)})),t[ho]=null}},Xc.prototype.unstable_scheduleHydration=function(e){if(e){var t=kt();e={blockedOn:null,target:e,priority:t};for(var n=0;n<$t.length&&0!==t&&t<$t[n].priority;n++);$t.splice(n,0,e),0===n&&Lt(e)}},At=function(e){switch(e.tag){case 3:var t=e.stateNode;if(t.current.memoizedState.isDehydrated){var n=dt(t.pendingLanes);0!==n&&(yt(t,1|n),rc(t,Ye()),0===(6&_s)&&(Ws=Ye()+500,Uo()))}break;case 13:uc((function(){var t=Na(e,1);if(null!==t){var n=ec();nc(t,e,1,n)}})),Kc(e,1)}},wt=function(e){if(13===e.tag){var t=Na(e,134217728);if(null!==t)nc(t,e,134217728,ec());Kc(e,134217728)}},St=function(e){if(13===e.tag){var t=tc(e),n=Na(e,t);if(null!==n)nc(n,e,t,ec());Kc(e,t)}},kt=function(){return bt},Ct=function(e,t){var n=bt;try{return bt=e,t()}finally{bt=n}},we=function(e,t,n){switch(t){case"input":if(J(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var o=wo(r);if(!o)throw Error(a(90));q(r),J(r,o)}}}break;case"textarea":ae(e,n);break;case"select":null!=(t=n.value)&&ne(e,!!n.multiple,t,!1)}},_e=cc,Pe=uc;var eu={usingClientEntryPoint:!1,Events:[xo,Ao,wo,Ee,je,cc]},tu={findFiberByHostInstance:bo,bundleType:0,version:"18.3.1",rendererPackageName:"react-dom"},nu={bundleType:tu.bundleType,version:tu.version,rendererPackageName:tu.rendererPackageName,rendererConfig:tu.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:x.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=He(e))?null:e.stateNode},findFiberByHostInstance:tu.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.3.1-next-f1338f8080-20240426"};if("undefined"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var ru=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!ru.isDisabled&&ru.supportsFiber)try{ot=ru.inject(nu),at=ru}catch(ue){}}t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=eu,t.createPortal=function(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!Qc(t))throw Error(a(200));return function(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:w,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}(e,t,null,n)},t.createRoot=function(e,t){if(!Qc(e))throw Error(a(299));var n=!1,r="",o=qc;return null!==t&&void 0!==t&&(!0===t.unstable_strictMode&&(n=!0),void 0!==t.identifierPrefix&&(r=t.identifierPrefix),void 0!==t.onRecoverableError&&(o=t.onRecoverableError)),t=Fc(e,1,!1,null,0,n,0,r,o),e[ho]=t.current,Wr(8===e.nodeType?e.parentNode:e),new Gc(t)},t.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternals;if(void 0===t){if("function"===typeof e.render)throw Error(a(188));throw e=Object.keys(e).join(","),Error(a(268,e))}return e=null===(e=He(t))?null:e.stateNode},t.flushSync=function(e){return uc(e)},t.hydrate=function(e,t,n){if(!Yc(t))throw Error(a(200));return Zc(null,e,t,!0,n)},t.hydrateRoot=function(e,t,n){if(!Qc(e))throw Error(a(405));var r=null!=n&&n.hydratedSources||null,o=!1,i="",l=qc;if(null!==n&&void 0!==n&&(!0===n.unstable_strictMode&&(o=!0),void 0!==n.identifierPrefix&&(i=n.identifierPrefix),void 0!==n.onRecoverableError&&(l=n.onRecoverableError)),t=Wc(t,null,e,1,null!=n?n:null,o,0,i,l),e[ho]=t.current,Wr(e),r)for(e=0;e<r.length;e++)o=(o=(n=r[e])._getVersion)(n._source),null==t.mutableSourceEagerHydrationData?t.mutableSourceEagerHydrationData=[n,o]:t.mutableSourceEagerHydrationData.push(n,o);return new Xc(t)},t.render=function(e,t,n){if(!Yc(t))throw Error(a(200));return Zc(null,e,t,!1,n)},t.unmountComponentAtNode=function(e){if(!Yc(e))throw Error(a(40));return!!e._reactRootContainer&&(uc((function(){Zc(null,null,e,!1,(function(){e._reactRootContainer=null,e[ho]=null}))})),!0)},t.unstable_batchedUpdates=cc,t.unstable_renderSubtreeIntoContainer=function(e,t,n,r){if(!Yc(n))throw Error(a(200));if(null==e||void 0===e._reactInternals)throw Error(a(38));return Zc(e,t,n,!1,r)},t.version="18.3.1-next-f1338f8080-20240426"},2876:(e,t,n)=>{"use strict";n.d(t,{A:()=>i});var r=n(2919),o=n(5170),a=n(3375);function i(e){let{props:t,name:n}=e;return(0,r.A)({props:t,name:n,defaultTheme:o.A,themeId:a.A})}},2919:(e,t,n)=>{"use strict";n.d(t,{A:()=>a});var r=n(3030);var o=n(5527);function a(e){let{props:t,name:n,defaultTheme:a,themeId:i}=e,l=(0,o.A)(a);i&&(l=l[i]||l);const s=function(e){const{theme:t,name:n,props:o}=e;return t&&t.components&&t.components[n]&&t.components[n].defaultProps?(0,r.A)(t.components[n].defaultProps,o):o}({theme:l,name:n,props:t});return s}},3030:(e,t,n)=>{"use strict";n.d(t,{A:()=>o});var r=n(8168);function o(e,t){const n=(0,r.A)({},t);return Object.keys(e).forEach((a=>{if(a.toString().match(/^(components|slots)$/))n[a]=(0,r.A)({},e[a],n[a]);else if(a.toString().match(/^(componentsProps|slotProps)$/)){const i=e[a]||{},l=t[a];n[a]={},l&&Object.keys(l)?i&&Object.keys(i)?(n[a]=(0,r.A)({},l),Object.keys(i).forEach((e=>{n[a][e]=o(i[e],l[e])}))):n[a]=l:n[a]=i}else void 0===n[a]&&(n[a]=e[a])})),n}},3174:(e,t,n)=>{"use strict";n.r(t),n.d(t,{GlobalStyles:()=>w.A,StyledEngineProvider:()=>A,ThemeContext:()=>o.T,css:()=>v.AH,default:()=>S,internal_processStyles:()=>k,keyframes:()=>v.i7});var r=n(8168),o=n(9369),a=n(6598),i=n(9436),l=n(1722),s=n(5043),c=n(918),u=/^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|abbr|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|disableRemotePlayback|download|draggable|encType|enterKeyHint|fetchpriority|fetchPriority|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|translate|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|incremental|fallback|inert|itemProp|itemScope|itemType|itemID|itemRef|on|option|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/,d=(0,c.A)((function(e){return u.test(e)||111===e.charCodeAt(0)&&110===e.charCodeAt(1)&&e.charCodeAt(2)<91})),p=function(e){return"theme"!==e},f=function(e){return"string"===typeof e&&e.charCodeAt(0)>96?d:p},m=function(e,t,n){var r;if(t){var o=t.shouldForwardProp;r=e.__emotion_forwardProp&&o?function(t){return e.__emotion_forwardProp(t)&&o(t)}:o}return"function"!==typeof r&&n&&(r=e.__emotion_forwardProp),r},h=function(e){var t=e.cache,n=e.serialized,r=e.isStringTag;return(0,l.SF)(t,n,r),(0,i.s)((function(){return(0,l.sk)(t,n,r)})),null},g=function e(t,n){var i,c,u=t.__emotion_real===t,d=u&&t.__emotion_base||t;void 0!==n&&(i=n.label,c=n.target);var p=m(t,n,u),g=p||f(d),v=!g("as");return function(){var y=arguments,b=u&&void 0!==t.__emotion_styles?t.__emotion_styles.slice(0):[];if(void 0!==i&&b.push("label:"+i+";"),null==y[0]||void 0===y[0].raw)b.push.apply(b,y);else{var x=y[0];b.push(x[0]);for(var A=y.length,w=1;w<A;w++)b.push(y[w],x[w])}var S=(0,o.w)((function(e,t,n){var r=v&&e.as||d,i="",u=[],m=e;if(null==e.theme){for(var y in m={},e)m[y]=e[y];m.theme=s.useContext(o.T)}"string"===typeof e.className?i=(0,l.Rk)(t.registered,u,e.className):null!=e.className&&(i=e.className+" ");var x=(0,a.J)(b.concat(u),t.registered,m);i+=t.key+"-"+x.name,void 0!==c&&(i+=" "+c);var A=v&&void 0===p?f(r):g,w={};for(var S in e)v&&"as"===S||A(S)&&(w[S]=e[S]);return w.className=i,n&&(w.ref=n),s.createElement(s.Fragment,null,s.createElement(h,{cache:t,serialized:x,isStringTag:"string"===typeof r}),s.createElement(r,w))}));return S.displayName=void 0!==i?i:"Styled("+("string"===typeof d?d:d.displayName||d.name||"Component")+")",S.defaultProps=t.defaultProps,S.__emotion_real=S,S.__emotion_base=d,S.__emotion_styles=b,S.__emotion_forwardProp=p,Object.defineProperty(S,"toString",{value:function(){return"."+c}}),S.withComponent=function(t,o){return e(t,(0,r.A)({},n,o,{shouldForwardProp:m(S,o,!0)})).apply(void 0,b)},S}}.bind(null);["a","abbr","address","area","article","aside","audio","b","base","bdi","bdo","big","blockquote","body","br","button","canvas","caption","cite","code","col","colgroup","data","datalist","dd","del","details","dfn","dialog","div","dl","dt","em","embed","fieldset","figcaption","figure","footer","form","h1","h2","h3","h4","h5","h6","head","header","hgroup","hr","html","i","iframe","img","input","ins","kbd","keygen","label","legend","li","link","main","map","mark","marquee","menu","menuitem","meta","meter","nav","noscript","object","ol","optgroup","option","output","p","param","picture","pre","progress","q","rp","rt","ruby","s","samp","script","section","select","small","source","span","strong","style","sub","summary","sup","table","tbody","td","textarea","tfoot","th","thead","time","title","tr","track","u","ul","var","video","wbr","circle","clipPath","defs","ellipse","foreignObject","g","image","line","linearGradient","mask","path","pattern","polygon","polyline","radialGradient","rect","stop","svg","text","tspan"].forEach((function(e){g[e]=g(e)}));var v=n(3290),y=n(3803),b=n(579);let x;function A(e){const{injectFirst:t,children:n}=e;return t&&x?(0,b.jsx)(o.C,{value:x,children:n}):n}"object"===typeof document&&(x=(0,y.A)({key:"css",prepend:!0}));var w=n(869);function S(e,t){return g(e,t)}const k=(e,t)=>{Array.isArray(e.__emotion_styles)&&(e.__emotion_styles=t(e.__emotion_styles))}},3234:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>r.A,extendSxProp:()=>o.A,unstable_createStyleFunctionSx:()=>r.k,unstable_defaultSxConfig:()=>a.A});var r=n(8812),o=n(8698),a=n(7758)},3290:(e,t,n)=>{"use strict";n.d(t,{AH:()=>u,i7:()=>d,mL:()=>c});var r=n(9369),o=n(5043),a=n(1722),i=n(9436),l=n(6598),s=(n(3803),n(219),function(e,t){var n=arguments;if(null==t||!r.h.call(t,"css"))return o.createElement.apply(void 0,n);var a=n.length,i=new Array(a);i[0]=r.E,i[1]=(0,r.c)(e,t);for(var l=2;l<a;l++)i[l]=n[l];return o.createElement.apply(null,i)});!function(e){var t;t||(t=e.JSX||(e.JSX={}))}(s||(s={}));var c=(0,r.w)((function(e,t){var n=e.styles,s=(0,l.J)([n],void 0,o.useContext(r.T)),c=o.useRef();return(0,i.i)((function(){var e=t.key+"-global",n=new t.sheet.constructor({key:e,nonce:t.sheet.nonce,container:t.sheet.container,speedy:t.sheet.isSpeedy}),r=!1,o=document.querySelector('style[data-emotion="'+e+" "+s.name+'"]');return t.sheet.tags.length&&(n.before=t.sheet.tags[0]),null!==o&&(r=!0,o.setAttribute("data-emotion",e),n.hydrate([o])),c.current=[n,r],function(){n.flush()}}),[t]),(0,i.i)((function(){var e=c.current,n=e[0];if(e[1])e[1]=!1;else{if(void 0!==s.next&&(0,a.sk)(t,s.next,!0),n.tags.length){var r=n.tags[n.tags.length-1].nextElementSibling;n.before=r,n.flush()}t.insert("",s,n,!1)}}),[t,s.name]),null}));function u(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return(0,l.J)(t)}function d(){var e=u.apply(void 0,arguments),t="animation-"+e.name;return{name:t,styles:"@keyframes "+t+"{"+e.styles+"}",anim:1,toString:function(){return"_EMO_"+this.name+"_"+this.styles+"_EMO_"}}}},3319:(e,t,n)=>{"use strict";n.d(t,{A:()=>r});const r=n(1782).A},3375:(e,t,n)=>{"use strict";n.d(t,{A:()=>r});const r="$$material"},3382:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>s,getFunctionName:()=>a});var r=n(191);const o=/^\s*function(?:\s|\s*\/\*.*\*\/\s*)+([^(\s/]*)\s*/;function a(e){const t=`${e}`.match(o);return t&&t[1]||""}function i(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";return e.displayName||e.name||a(e)||t}function l(e,t,n){const r=i(t);return e.displayName||(""!==r?`${n}(${r})`:n)}function s(e){if(null!=e){if("string"===typeof e)return e;if("function"===typeof e)return i(e,"Component");if("object"===typeof e)switch(e.$$typeof){case r.vM:return l(e,e.render,"ForwardRef");case r.lD:return l(e,e.type,"memo");default:return}}}},3462:(e,t,n)=>{"use strict";n.d(t,{A:()=>a});var r=n(5043),o=n(6564);function a(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return r.useMemo((()=>t.every((e=>null==e))?null:e=>{t.forEach((t=>{(0,o.A)(t,e)}))}),t)}},3468:(e,t,n)=>{"use strict";function r(e){let t,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:166;function r(){for(var r=arguments.length,o=new Array(r),a=0;a<r;a++)o[a]=arguments[a];clearTimeout(t),t=setTimeout((()=>{e.apply(this,o)}),n)}return r.clear=()=>{clearTimeout(t)},r}n.d(t,{A:()=>r})},3471:(e,t,n)=>{"use strict";var r=n(4994);t.A=void 0;var o=r(n(39)),a=n(579);t.A=(0,o.default)((0,a.jsx)("path",{d:"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6zM19 4h-3.5l-1-1h-5l-1 1H5v2h14z"}),"Delete")},3574:(e,t,n)=>{"use strict";n.d(t,{A:()=>f});var r=n(5043),o=n(9303);let a=!0,i=!1;const l=new o.E,s={text:!0,search:!0,url:!0,tel:!0,email:!0,password:!0,number:!0,date:!0,month:!0,week:!0,time:!0,datetime:!0,"datetime-local":!0};function c(e){e.metaKey||e.altKey||e.ctrlKey||(a=!0)}function u(){a=!1}function d(){"hidden"===this.visibilityState&&i&&(a=!0)}function p(e){const{target:t}=e;try{return t.matches(":focus-visible")}catch(n){}return a||function(e){const{type:t,tagName:n}=e;return!("INPUT"!==n||!s[t]||e.readOnly)||"TEXTAREA"===n&&!e.readOnly||!!e.isContentEditable}(t)}const f=function(){const e=r.useCallback((e=>{var t;null!=e&&((t=e.ownerDocument).addEventListener("keydown",c,!0),t.addEventListener("mousedown",u,!0),t.addEventListener("pointerdown",u,!0),t.addEventListener("touchstart",u,!0),t.addEventListener("visibilitychange",d,!0))}),[]),t=r.useRef(!1);return{isFocusVisibleRef:t,onFocus:function(e){return!!p(e)&&(t.current=!0,!0)},onBlur:function(){return!!t.current&&(i=!0,l.start(100,(()=>{i=!1})),t.current=!1,!0)},ref:e}}},3608:(e,t,n)=>{"use strict";var r=n(4994);t.A=void 0;var o=r(n(39)),a=n(579);t.A=(0,o.default)((0,a.jsx)("path",{d:"m4 12 1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8z"}),"ArrowUpward")},3763:(e,t,n)=>{"use strict";e.exports=n(4983)},3803:(e,t,n)=>{"use strict";n.d(t,{A:()=>oe});var r=function(){function e(e){var t=this;this._insertTag=function(e){var n;n=0===t.tags.length?t.insertionPoint?t.insertionPoint.nextSibling:t.prepend?t.container.firstChild:t.before:t.tags[t.tags.length-1].nextSibling,t.container.insertBefore(e,n),t.tags.push(e)},this.isSpeedy=void 0===e.speedy||e.speedy,this.tags=[],this.ctr=0,this.nonce=e.nonce,this.key=e.key,this.container=e.container,this.prepend=e.prepend,this.insertionPoint=e.insertionPoint,this.before=null}var t=e.prototype;return t.hydrate=function(e){e.forEach(this._insertTag)},t.insert=function(e){this.ctr%(this.isSpeedy?65e3:1)===0&&this._insertTag(function(e){var t=document.createElement("style");return t.setAttribute("data-emotion",e.key),void 0!==e.nonce&&t.setAttribute("nonce",e.nonce),t.appendChild(document.createTextNode("")),t.setAttribute("data-s",""),t}(this));var t=this.tags[this.tags.length-1];if(this.isSpeedy){var n=function(e){if(e.sheet)return e.sheet;for(var t=0;t<document.styleSheets.length;t++)if(document.styleSheets[t].ownerNode===e)return document.styleSheets[t]}(t);try{n.insertRule(e,n.cssRules.length)}catch(r){}}else t.appendChild(document.createTextNode(e));this.ctr++},t.flush=function(){this.tags.forEach((function(e){var t;return null==(t=e.parentNode)?void 0:t.removeChild(e)})),this.tags=[],this.ctr=0},e}(),o=Math.abs,a=String.fromCharCode,i=Object.assign;function l(e){return e.trim()}function s(e,t,n){return e.replace(t,n)}function c(e,t){return e.indexOf(t)}function u(e,t){return 0|e.charCodeAt(t)}function d(e,t,n){return e.slice(t,n)}function p(e){return e.length}function f(e){return e.length}function m(e,t){return t.push(e),e}var h=1,g=1,v=0,y=0,b=0,x="";function A(e,t,n,r,o,a,i){return{value:e,root:t,parent:n,type:r,props:o,children:a,line:h,column:g,length:i,return:""}}function w(e,t){return i(A("",null,null,"",null,null,0),e,{length:-e.length},t)}function S(){return b=y>0?u(x,--y):0,g--,10===b&&(g=1,h--),b}function k(){return b=y<v?u(x,y++):0,g++,10===b&&(g=1,h++),b}function C(){return u(x,y)}function E(){return y}function j(e,t){return d(x,e,t)}function _(e){switch(e){case 0:case 9:case 10:case 13:case 32:return 5;case 33:case 43:case 44:case 47:case 62:case 64:case 126:case 59:case 123:case 125:return 4;case 58:return 3;case 34:case 39:case 40:case 91:return 2;case 41:case 93:return 1}return 0}function P(e){return h=g=1,v=p(x=e),y=0,[]}function R(e){return x="",e}function I(e){return l(j(y-1,O(91===e?e+2:40===e?e+1:e)))}function T(e){for(;(b=C())&&b<33;)k();return _(e)>2||_(b)>3?"":" "}function $(e,t){for(;--t&&k()&&!(b<48||b>102||b>57&&b<65||b>70&&b<97););return j(e,E()+(t<6&&32==C()&&32==k()))}function O(e){for(;k();)switch(b){case e:return y;case 34:case 39:34!==e&&39!==e&&O(b);break;case 40:41===e&&O(e);break;case 92:k()}return y}function N(e,t){for(;k()&&e+b!==57&&(e+b!==84||47!==C()););return"/*"+j(t,y-1)+"*"+a(47===e?e:k())}function M(e){for(;!_(C());)k();return j(e,y)}var L="-ms-",z="-moz-",D="-webkit-",F="comm",B="rule",W="decl",U="@keyframes";function V(e,t){for(var n="",r=f(e),o=0;o<r;o++)n+=t(e[o],o,e,t)||"";return n}function H(e,t,n,r){switch(e.type){case"@layer":if(e.children.length)break;case"@import":case W:return e.return=e.return||e.value;case F:return"";case U:return e.return=e.value+"{"+V(e.children,r)+"}";case B:e.value=e.props.join(",")}return p(n=V(e.children,r))?e.return=e.value+"{"+n+"}":""}function K(e){return R(q("",null,null,null,[""],e=P(e),0,[0],e))}function q(e,t,n,r,o,i,l,d,f){for(var h=0,g=0,v=l,y=0,b=0,x=0,A=1,w=1,j=1,_=0,P="",R=o,O=i,L=r,z=P;w;)switch(x=_,_=k()){case 40:if(108!=x&&58==u(z,v-1)){-1!=c(z+=s(I(_),"&","&\f"),"&\f")&&(j=-1);break}case 34:case 39:case 91:z+=I(_);break;case 9:case 10:case 13:case 32:z+=T(x);break;case 92:z+=$(E()-1,7);continue;case 47:switch(C()){case 42:case 47:m(X(N(k(),E()),t,n),f);break;default:z+="/"}break;case 123*A:d[h++]=p(z)*j;case 125*A:case 59:case 0:switch(_){case 0:case 125:w=0;case 59+g:-1==j&&(z=s(z,/\f/g,"")),b>0&&p(z)-v&&m(b>32?Q(z+";",r,n,v-1):Q(s(z," ","")+";",r,n,v-2),f);break;case 59:z+=";";default:if(m(L=G(z,t,n,h,g,o,d,P,R=[],O=[],v),i),123===_)if(0===g)q(z,t,L,L,R,i,v,d,O);else switch(99===y&&110===u(z,3)?100:y){case 100:case 108:case 109:case 115:q(e,L,L,r&&m(G(e,L,L,0,0,o,d,P,o,R=[],v),O),o,O,v,d,r?R:O);break;default:q(z,L,L,L,[""],O,0,d,O)}}h=g=b=0,A=j=1,P=z="",v=l;break;case 58:v=1+p(z),b=x;default:if(A<1)if(123==_)--A;else if(125==_&&0==A++&&125==S())continue;switch(z+=a(_),_*A){case 38:j=g>0?1:(z+="\f",-1);break;case 44:d[h++]=(p(z)-1)*j,j=1;break;case 64:45===C()&&(z+=I(k())),y=C(),g=v=p(P=z+=M(E())),_++;break;case 45:45===x&&2==p(z)&&(A=0)}}return i}function G(e,t,n,r,a,i,c,u,p,m,h){for(var g=a-1,v=0===a?i:[""],y=f(v),b=0,x=0,w=0;b<r;++b)for(var S=0,k=d(e,g+1,g=o(x=c[b])),C=e;S<y;++S)(C=l(x>0?v[S]+" "+k:s(k,/&\f/g,v[S])))&&(p[w++]=C);return A(e,t,n,0===a?B:u,p,m,h)}function X(e,t,n){return A(e,t,n,F,a(b),d(e,2,-2),0)}function Q(e,t,n,r){return A(e,t,n,W,d(e,0,r),d(e,r+1,-1),r)}var Y=function(e,t,n){for(var r=0,o=0;r=o,o=C(),38===r&&12===o&&(t[n]=1),!_(o);)k();return j(e,y)},J=function(e,t){return R(function(e,t){var n=-1,r=44;do{switch(_(r)){case 0:38===r&&12===C()&&(t[n]=1),e[n]+=Y(y-1,t,n);break;case 2:e[n]+=I(r);break;case 4:if(44===r){e[++n]=58===C()?"&\f":"",t[n]=e[n].length;break}default:e[n]+=a(r)}}while(r=k());return e}(P(e),t))},Z=new WeakMap,ee=function(e){if("rule"===e.type&&e.parent&&!(e.length<1)){for(var t=e.value,n=e.parent,r=e.column===n.column&&e.line===n.line;"rule"!==n.type;)if(!(n=n.parent))return;if((1!==e.props.length||58===t.charCodeAt(0)||Z.get(n))&&!r){Z.set(e,!0);for(var o=[],a=J(t,o),i=n.props,l=0,s=0;l<a.length;l++)for(var c=0;c<i.length;c++,s++)e.props[s]=o[l]?a[l].replace(/&\f/g,i[c]):i[c]+" "+a[l]}}},te=function(e){if("decl"===e.type){var t=e.value;108===t.charCodeAt(0)&&98===t.charCodeAt(2)&&(e.return="",e.value="")}};function ne(e,t){switch(function(e,t){return 45^u(e,0)?(((t<<2^u(e,0))<<2^u(e,1))<<2^u(e,2))<<2^u(e,3):0}(e,t)){case 5103:return D+"print-"+e+e;case 5737:case 4201:case 3177:case 3433:case 1641:case 4457:case 2921:case 5572:case 6356:case 5844:case 3191:case 6645:case 3005:case 6391:case 5879:case 5623:case 6135:case 4599:case 4855:case 4215:case 6389:case 5109:case 5365:case 5621:case 3829:return D+e+e;case 5349:case 4246:case 4810:case 6968:case 2756:return D+e+z+e+L+e+e;case 6828:case 4268:return D+e+L+e+e;case 6165:return D+e+L+"flex-"+e+e;case 5187:return D+e+s(e,/(\w+).+(:[^]+)/,D+"box-$1$2"+L+"flex-$1$2")+e;case 5443:return D+e+L+"flex-item-"+s(e,/flex-|-self/,"")+e;case 4675:return D+e+L+"flex-line-pack"+s(e,/align-content|flex-|-self/,"")+e;case 5548:return D+e+L+s(e,"shrink","negative")+e;case 5292:return D+e+L+s(e,"basis","preferred-size")+e;case 6060:return D+"box-"+s(e,"-grow","")+D+e+L+s(e,"grow","positive")+e;case 4554:return D+s(e,/([^-])(transform)/g,"$1"+D+"$2")+e;case 6187:return s(s(s(e,/(zoom-|grab)/,D+"$1"),/(image-set)/,D+"$1"),e,"")+e;case 5495:case 3959:return s(e,/(image-set\([^]*)/,D+"$1$`$1");case 4968:return s(s(e,/(.+:)(flex-)?(.*)/,D+"box-pack:$3"+L+"flex-pack:$3"),/s.+-b[^;]+/,"justify")+D+e+e;case 4095:case 3583:case 4068:case 2532:return s(e,/(.+)-inline(.+)/,D+"$1$2")+e;case 8116:case 7059:case 5753:case 5535:case 5445:case 5701:case 4933:case 4677:case 5533:case 5789:case 5021:case 4765:if(p(e)-1-t>6)switch(u(e,t+1)){case 109:if(45!==u(e,t+4))break;case 102:return s(e,/(.+:)(.+)-([^]+)/,"$1"+D+"$2-$3$1"+z+(108==u(e,t+3)?"$3":"$2-$3"))+e;case 115:return~c(e,"stretch")?ne(s(e,"stretch","fill-available"),t)+e:e}break;case 4949:if(115!==u(e,t+1))break;case 6444:switch(u(e,p(e)-3-(~c(e,"!important")&&10))){case 107:return s(e,":",":"+D)+e;case 101:return s(e,/(.+:)([^;!]+)(;|!.+)?/,"$1"+D+(45===u(e,14)?"inline-":"")+"box$3$1"+D+"$2$3$1"+L+"$2box$3")+e}break;case 5936:switch(u(e,t+11)){case 114:return D+e+L+s(e,/[svh]\w+-[tblr]{2}/,"tb")+e;case 108:return D+e+L+s(e,/[svh]\w+-[tblr]{2}/,"tb-rl")+e;case 45:return D+e+L+s(e,/[svh]\w+-[tblr]{2}/,"lr")+e}return D+e+L+e+e}return e}var re=[function(e,t,n,r){if(e.length>-1&&!e.return)switch(e.type){case W:e.return=ne(e.value,e.length);break;case U:return V([w(e,{value:s(e.value,"@","@"+D)})],r);case B:if(e.length)return function(e,t){return e.map(t).join("")}(e.props,(function(t){switch(function(e,t){return(e=t.exec(e))?e[0]:e}(t,/(::plac\w+|:read-\w+)/)){case":read-only":case":read-write":return V([w(e,{props:[s(t,/:(read-\w+)/,":-moz-$1")]})],r);case"::placeholder":return V([w(e,{props:[s(t,/:(plac\w+)/,":"+D+"input-$1")]}),w(e,{props:[s(t,/:(plac\w+)/,":-moz-$1")]}),w(e,{props:[s(t,/:(plac\w+)/,L+"input-$1")]})],r)}return""}))}}],oe=function(e){var t=e.key;if("css"===t){var n=document.querySelectorAll("style[data-emotion]:not([data-s])");Array.prototype.forEach.call(n,(function(e){-1!==e.getAttribute("data-emotion").indexOf(" ")&&(document.head.appendChild(e),e.setAttribute("data-s",""))}))}var o,a,i=e.stylisPlugins||re,l={},s=[];o=e.container||document.head,Array.prototype.forEach.call(document.querySelectorAll('style[data-emotion^="'+t+' "]'),(function(e){for(var t=e.getAttribute("data-emotion").split(" "),n=1;n<t.length;n++)l[t[n]]=!0;s.push(e)}));var c,u,d=[H,(u=function(e){c.insert(e)},function(e){e.root||(e=e.return)&&u(e)})],p=function(e){var t=f(e);return function(n,r,o,a){for(var i="",l=0;l<t;l++)i+=e[l](n,r,o,a)||"";return i}}([ee,te].concat(i,d));a=function(e,t,n,r){c=n,V(K(e?e+"{"+t.styles+"}":t.styles),p),r&&(m.inserted[t.name]=!0)};var m={key:t,sheet:new r({key:t,container:o,nonce:e.nonce,speedy:e.speedy,prepend:e.prepend,insertionPoint:e.insertionPoint}),nonce:e.nonce,inserted:l,registered:{},insert:a};return m.sheet.hydrate(s),m}},3815:(e,t,n)=>{"use strict";n.d(t,{A:()=>o});var r=n(9172);const o=function(e,t){return t?(0,r.A)(e,t,{clone:!1}):e}},3940:(e,t,n)=>{"use strict";n.d(t,{A:()=>o});var r=n(1668);function o(e){return(0,r.A)(e).defaultView||window}},4202:(e,t)=>{"use strict";var n=Symbol.for("react.element"),r=Symbol.for("react.portal"),o=Symbol.for("react.fragment"),a=Symbol.for("react.strict_mode"),i=Symbol.for("react.profiler"),l=Symbol.for("react.provider"),s=Symbol.for("react.context"),c=Symbol.for("react.forward_ref"),u=Symbol.for("react.suspense"),d=Symbol.for("react.memo"),p=Symbol.for("react.lazy"),f=Symbol.iterator;var m={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},h=Object.assign,g={};function v(e,t,n){this.props=e,this.context=t,this.refs=g,this.updater=n||m}function y(){}function b(e,t,n){this.props=e,this.context=t,this.refs=g,this.updater=n||m}v.prototype.isReactComponent={},v.prototype.setState=function(e,t){if("object"!==typeof e&&"function"!==typeof e&&null!=e)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,e,t,"setState")},v.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},y.prototype=v.prototype;var x=b.prototype=new y;x.constructor=b,h(x,v.prototype),x.isPureReactComponent=!0;var A=Array.isArray,w=Object.prototype.hasOwnProperty,S={current:null},k={key:!0,ref:!0,__self:!0,__source:!0};function C(e,t,r){var o,a={},i=null,l=null;if(null!=t)for(o in void 0!==t.ref&&(l=t.ref),void 0!==t.key&&(i=""+t.key),t)w.call(t,o)&&!k.hasOwnProperty(o)&&(a[o]=t[o]);var s=arguments.length-2;if(1===s)a.children=r;else if(1<s){for(var c=Array(s),u=0;u<s;u++)c[u]=arguments[u+2];a.children=c}if(e&&e.defaultProps)for(o in s=e.defaultProps)void 0===a[o]&&(a[o]=s[o]);return{$$typeof:n,type:e,key:i,ref:l,props:a,_owner:S.current}}function E(e){return"object"===typeof e&&null!==e&&e.$$typeof===n}var j=/\/+/g;function _(e,t){return"object"===typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return t[e]}))}(""+e.key):t.toString(36)}function P(e,t,o,a,i){var l=typeof e;"undefined"!==l&&"boolean"!==l||(e=null);var s=!1;if(null===e)s=!0;else switch(l){case"string":case"number":s=!0;break;case"object":switch(e.$$typeof){case n:case r:s=!0}}if(s)return i=i(s=e),e=""===a?"."+_(s,0):a,A(i)?(o="",null!=e&&(o=e.replace(j,"$&/")+"/"),P(i,t,o,"",(function(e){return e}))):null!=i&&(E(i)&&(i=function(e,t){return{$$typeof:n,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(i,o+(!i.key||s&&s.key===i.key?"":(""+i.key).replace(j,"$&/")+"/")+e)),t.push(i)),1;if(s=0,a=""===a?".":a+":",A(e))for(var c=0;c<e.length;c++){var u=a+_(l=e[c],c);s+=P(l,t,o,u,i)}else if(u=function(e){return null===e||"object"!==typeof e?null:"function"===typeof(e=f&&e[f]||e["@@iterator"])?e:null}(e),"function"===typeof u)for(e=u.call(e),c=0;!(l=e.next()).done;)s+=P(l=l.value,t,o,u=a+_(l,c++),i);else if("object"===l)throw t=String(e),Error("Objects are not valid as a React child (found: "+("[object Object]"===t?"object with keys {"+Object.keys(e).join(", ")+"}":t)+"). If you meant to render a collection of children, use an array instead.");return s}function R(e,t,n){if(null==e)return e;var r=[],o=0;return P(e,r,"","",(function(e){return t.call(n,e,o++)})),r}function I(e){if(-1===e._status){var t=e._result;(t=t()).then((function(t){0!==e._status&&-1!==e._status||(e._status=1,e._result=t)}),(function(t){0!==e._status&&-1!==e._status||(e._status=2,e._result=t)})),-1===e._status&&(e._status=0,e._result=t)}if(1===e._status)return e._result.default;throw e._result}var T={current:null},$={transition:null},O={ReactCurrentDispatcher:T,ReactCurrentBatchConfig:$,ReactCurrentOwner:S};function N(){throw Error("act(...) is not supported in production builds of React.")}t.Children={map:R,forEach:function(e,t,n){R(e,(function(){t.apply(this,arguments)}),n)},count:function(e){var t=0;return R(e,(function(){t++})),t},toArray:function(e){return R(e,(function(e){return e}))||[]},only:function(e){if(!E(e))throw Error("React.Children.only expected to receive a single React element child.");return e}},t.Component=v,t.Fragment=o,t.Profiler=i,t.PureComponent=b,t.StrictMode=a,t.Suspense=u,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=O,t.act=N,t.cloneElement=function(e,t,r){if(null===e||void 0===e)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+e+".");var o=h({},e.props),a=e.key,i=e.ref,l=e._owner;if(null!=t){if(void 0!==t.ref&&(i=t.ref,l=S.current),void 0!==t.key&&(a=""+t.key),e.type&&e.type.defaultProps)var s=e.type.defaultProps;for(c in t)w.call(t,c)&&!k.hasOwnProperty(c)&&(o[c]=void 0===t[c]&&void 0!==s?s[c]:t[c])}var c=arguments.length-2;if(1===c)o.children=r;else if(1<c){s=Array(c);for(var u=0;u<c;u++)s[u]=arguments[u+2];o.children=s}return{$$typeof:n,type:e.type,key:a,ref:i,props:o,_owner:l}},t.createContext=function(e){return(e={$$typeof:s,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null}).Provider={$$typeof:l,_context:e},e.Consumer=e},t.createElement=C,t.createFactory=function(e){var t=C.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:c,render:e}},t.isValidElement=E,t.lazy=function(e){return{$$typeof:p,_payload:{_status:-1,_result:e},_init:I}},t.memo=function(e,t){return{$$typeof:d,type:e,compare:void 0===t?null:t}},t.startTransition=function(e){var t=$.transition;$.transition={};try{e()}finally{$.transition=t}},t.unstable_act=N,t.useCallback=function(e,t){return T.current.useCallback(e,t)},t.useContext=function(e){return T.current.useContext(e)},t.useDebugValue=function(){},t.useDeferredValue=function(e){return T.current.useDeferredValue(e)},t.useEffect=function(e,t){return T.current.useEffect(e,t)},t.useId=function(){return T.current.useId()},t.useImperativeHandle=function(e,t,n){return T.current.useImperativeHandle(e,t,n)},t.useInsertionEffect=function(e,t){return T.current.useInsertionEffect(e,t)},t.useLayoutEffect=function(e,t){return T.current.useLayoutEffect(e,t)},t.useMemo=function(e,t){return T.current.useMemo(e,t)},t.useReducer=function(e,t,n){return T.current.useReducer(e,t,n)},t.useRef=function(e){return T.current.useRef(e)},t.useState=function(e){return T.current.useState(e)},t.useSyncExternalStore=function(e,t,n){return T.current.useSyncExternalStore(e,t,n)},t.useTransition=function(){return T.current.useTransition()},t.version="18.3.1"},4329:(e,t,n)=>{"use strict";var r=n(4994);t.A=void 0;var o=r(n(39)),a=n(579);t.A=(0,o.default)((0,a.jsx)("path",{d:"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3m3-10H5V5h10z"}),"Save")},4391:(e,t,n)=>{"use strict";var r=n(7950);t.createRoot=r.createRoot,t.hydrateRoot=r.hydrateRoot},4421:(e,t,n)=>{"use strict";n.r(t),n.d(t,{capitalize:()=>o.A,createChainedFunction:()=>a,createSvgIcon:()=>i.A,debounce:()=>l.A,deprecatedPropType:()=>s,isMuiElement:()=>c.A,ownerDocument:()=>u.A,ownerWindow:()=>d.A,requirePropFactory:()=>p,setRef:()=>f,unstable_ClassNameGenerator:()=>A,unstable_useEnhancedEffect:()=>m.A,unstable_useId:()=>h.A,unsupportedProp:()=>g,useControlled:()=>v.A,useEventCallback:()=>y.A,useForkRef:()=>b.A,useIsFocusVisible:()=>x.A});var r=n(9386),o=n(6803);const a=n(2456).A;var i=n(9662),l=n(950);const s=function(e,t){return()=>null};var c=n(7328),u=n(2427),d=n(6078);n(8168);const p=function(e,t){return()=>null};const f=n(6564).A;var m=n(5013),h=n(5879);const g=function(e,t,n,r,o){return null};var v=n(5420),y=n(3319),b=n(5849),x=n(3574);const A={configure:e=>{r.A.configure(e)}}},4440:(e,t,n)=>{"use strict";n.d(t,{A:()=>o});var r=n(5043);const o="undefined"!==typeof window?r.useLayoutEffect:r.useEffect},4535:(e,t,n)=>{"use strict";n.d(t,{Ay:()=>s,_n:()=>l,ep:()=>i});var r=n(8052),o=n(5170),a=n(3375);const i=e=>(0,r.MC)(e)&&"classes"!==e,l=r.MC,s=(0,r.Ay)({themeId:a.A,defaultTheme:o.A,rootShouldForwardProp:i})},4634:e=>{function t(){return e.exports=t=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)({}).hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},e.exports.__esModule=!0,e.exports.default=e.exports,t.apply(null,arguments)}e.exports=t,e.exports.__esModule=!0,e.exports.default=e.exports},4783:(e,t,n)=>{"use strict";var r=n(4994);t.A=void 0;var o=r(n(39)),a=n(579);t.A=(0,o.default)((0,a.jsx)("path",{d:"M13 7h-2v4H7v2h4v4h2v-4h4v-2h-4zm-1-5C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2m0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8"}),"AddCircleOutline")},4853:(e,t,n)=>{"use strict";n.d(t,{A:()=>l});var r=n(8587),o=n(8168);const a=["values","unit","step"],i=e=>{const t=Object.keys(e).map((t=>({key:t,val:e[t]})))||[];return t.sort(((e,t)=>e.val-t.val)),t.reduce(((e,t)=>(0,o.A)({},e,{[t.key]:t.val})),{})};function l(e){const{values:t={xs:0,sm:600,md:900,lg:1200,xl:1536},unit:n="px",step:l=5}=e,s=(0,r.A)(e,a),c=i(t),u=Object.keys(c);function d(e){return`@media (min-width:${"number"===typeof t[e]?t[e]:e}${n})`}function p(e){return`@media (max-width:${("number"===typeof t[e]?t[e]:e)-l/100}${n})`}function f(e,r){const o=u.indexOf(r);return`@media (min-width:${"number"===typeof t[e]?t[e]:e}${n}) and (max-width:${(-1!==o&&"number"===typeof t[u[o]]?t[u[o]]:r)-l/100}${n})`}return(0,o.A)({keys:u,values:c,up:d,down:p,between:f,only:function(e){return u.indexOf(e)+1<u.length?f(e,u[u.indexOf(e)+1]):d(e)},not:function(e){const t=u.indexOf(e);return 0===t?d(u[1]):t===u.length-1?p(u[t]):f(e,u[u.indexOf(e)+1]).replace("@media","@media not all and")},unit:n},s)}},4893:e=>{e.exports=function(e,t){if(null==e)return{};var n={};for(var r in e)if({}.hasOwnProperty.call(e,r)){if(-1!==t.indexOf(r))continue;n[r]=e[r]}return n},e.exports.__esModule=!0,e.exports.default=e.exports},4914:(e,t,n)=>{"use strict";var r=n(4994);t.A=void 0;var o=r(n(39)),a=n(579);t.A=(0,o.default)((0,a.jsx)("path",{d:"M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12zm3 4H8c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h11c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2m0 16H8V7h11z"}),"ContentCopy")},4983:(e,t)=>{"use strict";var n="function"===typeof Symbol&&Symbol.for,r=n?Symbol.for("react.element"):60103,o=n?Symbol.for("react.portal"):60106,a=n?Symbol.for("react.fragment"):60107,i=n?Symbol.for("react.strict_mode"):60108,l=n?Symbol.for("react.profiler"):60114,s=n?Symbol.for("react.provider"):60109,c=n?Symbol.for("react.context"):60110,u=n?Symbol.for("react.async_mode"):60111,d=n?Symbol.for("react.concurrent_mode"):60111,p=n?Symbol.for("react.forward_ref"):60112,f=n?Symbol.for("react.suspense"):60113,m=n?Symbol.for("react.suspense_list"):60120,h=n?Symbol.for("react.memo"):60115,g=n?Symbol.for("react.lazy"):60116,v=n?Symbol.for("react.block"):60121,y=n?Symbol.for("react.fundamental"):60117,b=n?Symbol.for("react.responder"):60118,x=n?Symbol.for("react.scope"):60119;function A(e){if("object"===typeof e&&null!==e){var t=e.$$typeof;switch(t){case r:switch(e=e.type){case u:case d:case a:case l:case i:case f:return e;default:switch(e=e&&e.$$typeof){case c:case p:case g:case h:case s:return e;default:return t}}case o:return t}}}function w(e){return A(e)===d}t.AsyncMode=u,t.ConcurrentMode=d,t.ContextConsumer=c,t.ContextProvider=s,t.Element=r,t.ForwardRef=p,t.Fragment=a,t.Lazy=g,t.Memo=h,t.Portal=o,t.Profiler=l,t.StrictMode=i,t.Suspense=f,t.isAsyncMode=function(e){return w(e)||A(e)===u},t.isConcurrentMode=w,t.isContextConsumer=function(e){return A(e)===c},t.isContextProvider=function(e){return A(e)===s},t.isElement=function(e){return"object"===typeof e&&null!==e&&e.$$typeof===r},t.isForwardRef=function(e){return A(e)===p},t.isFragment=function(e){return A(e)===a},t.isLazy=function(e){return A(e)===g},t.isMemo=function(e){return A(e)===h},t.isPortal=function(e){return A(e)===o},t.isProfiler=function(e){return A(e)===l},t.isStrictMode=function(e){return A(e)===i},t.isSuspense=function(e){return A(e)===f},t.isValidElementType=function(e){return"string"===typeof e||"function"===typeof e||e===a||e===d||e===l||e===i||e===f||e===m||"object"===typeof e&&null!==e&&(e.$$typeof===g||e.$$typeof===h||e.$$typeof===s||e.$$typeof===c||e.$$typeof===p||e.$$typeof===y||e.$$typeof===b||e.$$typeof===x||e.$$typeof===v)},t.typeOf=A},4989:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>r.A,private_createBreakpoints:()=>o.A,unstable_applyStyles:()=>a.A});var r=n(8280),o=n(4853),a=n(9703)},4994:e=>{e.exports=function(e){return e&&e.__esModule?e:{default:e}},e.exports.__esModule=!0,e.exports.default=e.exports},5013:(e,t,n)=>{"use strict";n.d(t,{A:()=>r});const r=n(4440).A},5043:(e,t,n)=>{"use strict";e.exports=n(4202)},5170:(e,t,n)=>{"use strict";n.d(t,{A:()=>r});const r=(0,n(8279).A)()},5420:(e,t,n)=>{"use strict";n.d(t,{A:()=>o});var r=n(5043);const o=function(e){let{controlled:t,default:n,name:o,state:a="value"}=e;const{current:i}=r.useRef(void 0!==t),[l,s]=r.useState(n);return[i?t:l,r.useCallback((e=>{i||s(e)}),[])]}},5465:(e,t,n)=>{"use strict";var r=n(4994);t.A=void 0;var o=r(n(39)),a=n(579);t.A=(0,o.default)((0,a.jsx)("path",{d:"M11 18h2v-2h-2zm1-16C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2m0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8m0-14c-2.21 0-4 1.79-4 4h2c0-1.1.9-2 2-2s2 .9 2 2c0 2-3 1.75-3 5h2c0-2.25 3-2.5 3-5 0-2.21-1.79-4-4-4"}),"HelpOutline")},5527:(e,t,n)=>{"use strict";n.d(t,{A:()=>i});var r=n(8280),o=n(7082);const a=(0,r.A)();const i=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:a;return(0,o.A)(e)}},5540:(e,t,n)=>{"use strict";var r=n(4994);t.A=void 0;var o=r(n(39)),a=n(579);t.A=(0,o.default)((0,a.jsx)("path",{d:"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75z"}),"Edit")},5844:(e,t,n)=>{"use strict";var r;n.d(t,{A:()=>l});var o=n(5043);let a=0;const i=(r||(r=n.t(o,2)))["useId".toString()];function l(e){if(void 0!==i){const t=i();return null!=e?e:t}return function(e){const[t,n]=o.useState(e),r=e||t;return o.useEffect((()=>{null==t&&(a+=1,n(`mui-${a}`))}),[t]),r}(e)}},5849:(e,t,n)=>{"use strict";n.d(t,{A:()=>r});const r=n(3462).A},5879:(e,t,n)=>{"use strict";n.d(t,{A:()=>r});const r=n(5844).A},5881:(e,t)=>{"use strict";var n,r=Symbol.for("react.element"),o=Symbol.for("react.portal"),a=Symbol.for("react.fragment"),i=Symbol.for("react.strict_mode"),l=Symbol.for("react.profiler"),s=Symbol.for("react.provider"),c=Symbol.for("react.context"),u=Symbol.for("react.server_context"),d=Symbol.for("react.forward_ref"),p=Symbol.for("react.suspense"),f=Symbol.for("react.suspense_list"),m=Symbol.for("react.memo"),h=Symbol.for("react.lazy"),g=Symbol.for("react.offscreen");function v(e){if("object"===typeof e&&null!==e){var t=e.$$typeof;switch(t){case r:switch(e=e.type){case a:case l:case i:case p:case f:return e;default:switch(e=e&&e.$$typeof){case u:case c:case d:case h:case m:case s:return e;default:return t}}case o:return t}}}n=Symbol.for("react.module.reference")},6078:(e,t,n)=>{"use strict";n.d(t,{A:()=>r});const r=n(3940).A},6531:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>r.A});var r=n(1188)},6564:(e,t,n)=>{"use strict";function r(e,t){"function"===typeof e?e(t):e&&(e.current=t)}n.d(t,{A:()=>r})},6598:(e,t,n)=>{"use strict";n.d(t,{J:()=>g});var r={animationIterationCount:1,aspectRatio:1,borderImageOutset:1,borderImageSlice:1,borderImageWidth:1,boxFlex:1,boxFlexGroup:1,boxOrdinalGroup:1,columnCount:1,columns:1,flex:1,flexGrow:1,flexPositive:1,flexShrink:1,flexNegative:1,flexOrder:1,gridRow:1,gridRowEnd:1,gridRowSpan:1,gridRowStart:1,gridColumn:1,gridColumnEnd:1,gridColumnSpan:1,gridColumnStart:1,msGridRow:1,msGridRowSpan:1,msGridColumn:1,msGridColumnSpan:1,fontWeight:1,lineHeight:1,opacity:1,order:1,orphans:1,scale:1,tabSize:1,widows:1,zIndex:1,zoom:1,WebkitLineClamp:1,fillOpacity:1,floodOpacity:1,stopOpacity:1,strokeDasharray:1,strokeDashoffset:1,strokeMiterlimit:1,strokeOpacity:1,strokeWidth:1},o=n(918),a=!1,i=/[A-Z]|^ms/g,l=/_EMO_([^_]+?)_([^]*?)_EMO_/g,s=function(e){return 45===e.charCodeAt(1)},c=function(e){return null!=e&&"boolean"!==typeof e},u=(0,o.A)((function(e){return s(e)?e:e.replace(i,"-$&").toLowerCase()})),d=function(e,t){switch(e){case"animation":case"animationName":if("string"===typeof t)return t.replace(l,(function(e,t,n){return m={name:t,styles:n,next:m},t}))}return 1===r[e]||s(e)||"number"!==typeof t||0===t?t:t+"px"},p="Component selectors can only be used in conjunction with @emotion/babel-plugin, the swc Emotion plugin, or another Emotion-aware compiler transform.";function f(e,t,n){if(null==n)return"";var r=n;if(void 0!==r.__emotion_styles)return r;switch(typeof n){case"boolean":return"";case"object":var o=n;if(1===o.anim)return m={name:o.name,styles:o.styles,next:m},o.name;var i=n;if(void 0!==i.styles){var l=i.next;if(void 0!==l)for(;void 0!==l;)m={name:l.name,styles:l.styles,next:m},l=l.next;return i.styles+";"}return function(e,t,n){var r="";if(Array.isArray(n))for(var o=0;o<n.length;o++)r+=f(e,t,n[o])+";";else for(var i in n){var l=n[i];if("object"!==typeof l){var s=l;null!=t&&void 0!==t[s]?r+=i+"{"+t[s]+"}":c(s)&&(r+=u(i)+":"+d(i,s)+";")}else{if("NO_COMPONENT_SELECTOR"===i&&a)throw new Error(p);if(!Array.isArray(l)||"string"!==typeof l[0]||null!=t&&void 0!==t[l[0]]){var m=f(e,t,l);switch(i){case"animation":case"animationName":r+=u(i)+":"+m+";";break;default:r+=i+"{"+m+"}"}}else for(var h=0;h<l.length;h++)c(l[h])&&(r+=u(i)+":"+d(i,l[h])+";")}}return r}(e,t,n);case"function":if(void 0!==e){var s=m,h=n(e);return m=s,f(e,t,h)}}var g=n;if(null==t)return g;var v=t[g];return void 0!==v?v:g}var m,h=/label:\s*([^\s;{]+)\s*(;|$)/g;function g(e,t,n){if(1===e.length&&"object"===typeof e[0]&&null!==e[0]&&void 0!==e[0].styles)return e[0];var r=!0,o="";m=void 0;var a=e[0];null==a||void 0===a.raw?(r=!1,o+=f(n,t,a)):o+=a[0];for(var i=1;i<e.length;i++){if(o+=f(n,t,e[i]),r)o+=a[i]}h.lastIndex=0;for(var l,s="";null!==(l=h.exec(o));)s+="-"+l[1];var c=function(e){for(var t,n=0,r=0,o=e.length;o>=4;++r,o-=4)t=1540483477*(65535&(t=255&e.charCodeAt(r)|(255&e.charCodeAt(++r))<<8|(255&e.charCodeAt(++r))<<16|(255&e.charCodeAt(++r))<<24))+(59797*(t>>>16)<<16),n=1540483477*(65535&(t^=t>>>24))+(59797*(t>>>16)<<16)^1540483477*(65535&n)+(59797*(n>>>16)<<16);switch(o){case 3:n^=(255&e.charCodeAt(r+2))<<16;case 2:n^=(255&e.charCodeAt(r+1))<<8;case 1:n=1540483477*(65535&(n^=255&e.charCodeAt(r)))+(59797*(n>>>16)<<16)}return(((n=1540483477*(65535&(n^=n>>>13))+(59797*(n>>>16)<<16))^n>>>15)>>>0).toString(36)}(o)+s;return{name:c,styles:o,next:m}}},6803:(e,t,n)=>{"use strict";n.d(t,{A:()=>r});const r=n(7598).A},7082:(e,t,n)=>{"use strict";n.d(t,{A:()=>a});var r=n(5043),o=n(9369);const a=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;const t=r.useContext(o.T);return t&&(n=t,0!==Object.keys(n).length)?t:e;var n}},7162:(e,t,n)=>{"use strict";n.d(t,{Ay:()=>l,BO:()=>i,Yn:()=>a});var r=n(7598),o=n(9751);function a(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];if(!t||"string"!==typeof t)return null;if(e&&e.vars&&n){const n=`vars.${t}`.split(".").reduce(((e,t)=>e&&e[t]?e[t]:null),e);if(null!=n)return n}return t.split(".").reduce(((e,t)=>e&&null!=e[t]?e[t]:null),e)}function i(e,t,n){let r,o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:n;return r="function"===typeof e?e(n):Array.isArray(e)?e[n]||o:a(e,n)||o,t&&(r=t(r,o,e)),r}const l=function(e){const{prop:t,cssProperty:n=e.prop,themeKey:l,transform:s}=e,c=e=>{if(null==e[t])return null;const c=e[t],u=a(e.theme,l)||{};return(0,o.NI)(e,c,(e=>{let o=i(u,s,e);return e===o&&"string"===typeof e&&(o=i(u,s,`${t}${"default"===e?"":(0,r.A)(e)}`,e)),!1===n?o:{[n]:o}}))};return c.propTypes={},c.filterProps=[t],c}},7234:(e,t)=>{"use strict";function n(e,t){var n=e.length;e.push(t);e:for(;0<n;){var r=n-1>>>1,o=e[r];if(!(0<a(o,t)))break e;e[r]=t,e[n]=o,n=r}}function r(e){return 0===e.length?null:e[0]}function o(e){if(0===e.length)return null;var t=e[0],n=e.pop();if(n!==t){e[0]=n;e:for(var r=0,o=e.length,i=o>>>1;r<i;){var l=2*(r+1)-1,s=e[l],c=l+1,u=e[c];if(0>a(s,n))c<o&&0>a(u,s)?(e[r]=u,e[c]=n,r=c):(e[r]=s,e[l]=n,r=l);else{if(!(c<o&&0>a(u,n)))break e;e[r]=u,e[c]=n,r=c}}}return t}function a(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}if("object"===typeof performance&&"function"===typeof performance.now){var i=performance;t.unstable_now=function(){return i.now()}}else{var l=Date,s=l.now();t.unstable_now=function(){return l.now()-s}}var c=[],u=[],d=1,p=null,f=3,m=!1,h=!1,g=!1,v="function"===typeof setTimeout?setTimeout:null,y="function"===typeof clearTimeout?clearTimeout:null,b="undefined"!==typeof setImmediate?setImmediate:null;function x(e){for(var t=r(u);null!==t;){if(null===t.callback)o(u);else{if(!(t.startTime<=e))break;o(u),t.sortIndex=t.expirationTime,n(c,t)}t=r(u)}}function A(e){if(g=!1,x(e),!h)if(null!==r(c))h=!0,$(w);else{var t=r(u);null!==t&&O(A,t.startTime-e)}}function w(e,n){h=!1,g&&(g=!1,y(E),E=-1),m=!0;var a=f;try{for(x(n),p=r(c);null!==p&&(!(p.expirationTime>n)||e&&!P());){var i=p.callback;if("function"===typeof i){p.callback=null,f=p.priorityLevel;var l=i(p.expirationTime<=n);n=t.unstable_now(),"function"===typeof l?p.callback=l:p===r(c)&&o(c),x(n)}else o(c);p=r(c)}if(null!==p)var s=!0;else{var d=r(u);null!==d&&O(A,d.startTime-n),s=!1}return s}finally{p=null,f=a,m=!1}}"undefined"!==typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);var S,k=!1,C=null,E=-1,j=5,_=-1;function P(){return!(t.unstable_now()-_<j)}function R(){if(null!==C){var e=t.unstable_now();_=e;var n=!0;try{n=C(!0,e)}finally{n?S():(k=!1,C=null)}}else k=!1}if("function"===typeof b)S=function(){b(R)};else if("undefined"!==typeof MessageChannel){var I=new MessageChannel,T=I.port2;I.port1.onmessage=R,S=function(){T.postMessage(null)}}else S=function(){v(R,0)};function $(e){C=e,k||(k=!0,S())}function O(e,n){E=v((function(){e(t.unstable_now())}),n)}t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){h||m||(h=!0,$(w))},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):j=0<e?Math.floor(1e3/e):5},t.unstable_getCurrentPriorityLevel=function(){return f},t.unstable_getFirstCallbackNode=function(){return r(c)},t.unstable_next=function(e){switch(f){case 1:case 2:case 3:var t=3;break;default:t=f}var n=f;f=t;try{return e()}finally{f=n}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=function(){},t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=f;f=e;try{return t()}finally{f=n}},t.unstable_scheduleCallback=function(e,o,a){var i=t.unstable_now();switch("object"===typeof a&&null!==a?a="number"===typeof(a=a.delay)&&0<a?i+a:i:a=i,e){case 1:var l=-1;break;case 2:l=250;break;case 5:l=1073741823;break;case 4:l=1e4;break;default:l=5e3}return e={id:d++,callback:o,priorityLevel:e,startTime:a,expirationTime:l=a+l,sortIndex:-1},a>i?(e.sortIndex=a,n(u,e),null===r(c)&&e===r(u)&&(g?(y(E),E=-1):g=!0,O(A,a-i))):(e.sortIndex=l,n(c,e),h||m||(h=!0,$(w))),e},t.unstable_shouldYield=P,t.unstable_wrapCallback=function(e){var t=f;return function(){var n=f;f=t;try{return e.apply(this,arguments)}finally{f=n}}}},7260:(e,t,n)=>{"use strict";var r=n(4994);t.A=void 0;var o=r(n(39)),a=n(579);t.A=(0,o.default)((0,a.jsx)("path",{d:"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5M12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5m0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3"}),"Visibility")},7266:(e,t,n)=>{"use strict";var r=n(4994);t.X4=f,t.e$=m,t.tL=g,t.eM=function(e,t){const n=p(e),r=p(t);return(Math.max(n,r)+.05)/(Math.min(n,r)+.05)},t.a=h;var o=r(n(457)),a=r(n(6531));function i(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;return(0,a.default)(e,t,n)}function l(e){e=e.slice(1);const t=new RegExp(`.{1,${e.length>=6?2:1}}`,"g");let n=e.match(t);return n&&1===n[0].length&&(n=n.map((e=>e+e))),n?`rgb${4===n.length?"a":""}(${n.map(((e,t)=>t<3?parseInt(e,16):Math.round(parseInt(e,16)/255*1e3)/1e3)).join(", ")})`:""}function s(e){if(e.type)return e;if("#"===e.charAt(0))return s(l(e));const t=e.indexOf("("),n=e.substring(0,t);if(-1===["rgb","rgba","hsl","hsla","color"].indexOf(n))throw new Error((0,o.default)(9,e));let r,a=e.substring(t+1,e.length-1);if("color"===n){if(a=a.split(" "),r=a.shift(),4===a.length&&"/"===a[3].charAt(0)&&(a[3]=a[3].slice(1)),-1===["srgb","display-p3","a98-rgb","prophoto-rgb","rec-2020"].indexOf(r))throw new Error((0,o.default)(10,r))}else a=a.split(",");return a=a.map((e=>parseFloat(e))),{type:n,values:a,colorSpace:r}}const c=e=>{const t=s(e);return t.values.slice(0,3).map(((e,n)=>-1!==t.type.indexOf("hsl")&&0!==n?`${e}%`:e)).join(" ")};function u(e){const{type:t,colorSpace:n}=e;let{values:r}=e;return-1!==t.indexOf("rgb")?r=r.map(((e,t)=>t<3?parseInt(e,10):e)):-1!==t.indexOf("hsl")&&(r[1]=`${r[1]}%`,r[2]=`${r[2]}%`),r=-1!==t.indexOf("color")?`${n} ${r.join(" ")}`:`${r.join(", ")}`,`${t}(${r})`}function d(e){e=s(e);const{values:t}=e,n=t[0],r=t[1]/100,o=t[2]/100,a=r*Math.min(o,1-o),i=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:(e+n/30)%12;return o-a*Math.max(Math.min(t-3,9-t,1),-1)};let l="rgb";const c=[Math.round(255*i(0)),Math.round(255*i(8)),Math.round(255*i(4))];return"hsla"===e.type&&(l+="a",c.push(t[3])),u({type:l,values:c})}function p(e){let t="hsl"===(e=s(e)).type||"hsla"===e.type?s(d(e)).values:e.values;return t=t.map((t=>("color"!==e.type&&(t/=255),t<=.03928?t/12.92:((t+.055)/1.055)**2.4))),Number((.2126*t[0]+.7152*t[1]+.0722*t[2]).toFixed(3))}function f(e,t){return e=s(e),t=i(t),"rgb"!==e.type&&"hsl"!==e.type||(e.type+="a"),"color"===e.type?e.values[3]=`/${t}`:e.values[3]=t,u(e)}function m(e,t){if(e=s(e),t=i(t),-1!==e.type.indexOf("hsl"))e.values[2]*=1-t;else if(-1!==e.type.indexOf("rgb")||-1!==e.type.indexOf("color"))for(let n=0;n<3;n+=1)e.values[n]*=1-t;return u(e)}function h(e,t){if(e=s(e),t=i(t),-1!==e.type.indexOf("hsl"))e.values[2]+=(100-e.values[2])*t;else if(-1!==e.type.indexOf("rgb"))for(let n=0;n<3;n+=1)e.values[n]+=(255-e.values[n])*t;else if(-1!==e.type.indexOf("color"))for(let n=0;n<3;n+=1)e.values[n]+=(1-e.values[n])*t;return u(e)}function g(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.15;return p(e)>.5?m(e,t):h(e,t)}},7328:(e,t,n)=>{"use strict";n.d(t,{A:()=>o});var r=n(5043);const o=function(e,t){var n,o;return r.isValidElement(e)&&-1!==t.indexOf(null!=(n=e.type.muiName)?n:null==(o=e.type)||null==(o=o._payload)||null==(o=o.value)?void 0:o.muiName)}},7412:(e,t,n)=>{"use strict";var r=n(4994);t.A=void 0;var o=r(n(39)),a=n(579);t.A=(0,o.default)((0,a.jsx)("path",{d:"M12 17.27 18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z"}),"Star")},7598:(e,t,n)=>{"use strict";n.d(t,{A:()=>o});var r=n(7868);function o(e){if("string"!==typeof e)throw new Error((0,r.A)(7));return e.charAt(0).toUpperCase()+e.slice(1)}},7758:(e,t,n)=>{"use strict";n.d(t,{A:()=>O});var r=n(8604),o=n(7162),a=n(3815);const i=function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];const r=t.reduce(((e,t)=>(t.filterProps.forEach((n=>{e[n]=t})),e)),{}),o=e=>Object.keys(e).reduce(((t,n)=>r[n]?(0,a.A)(t,r[n](e)):t),{});return o.propTypes={},o.filterProps=t.reduce(((e,t)=>e.concat(t.filterProps)),[]),o};var l=n(9751);function s(e){return"number"!==typeof e?e:`${e}px solid`}function c(e,t){return(0,o.Ay)({prop:e,themeKey:"borders",transform:t})}const u=c("border",s),d=c("borderTop",s),p=c("borderRight",s),f=c("borderBottom",s),m=c("borderLeft",s),h=c("borderColor"),g=c("borderTopColor"),v=c("borderRightColor"),y=c("borderBottomColor"),b=c("borderLeftColor"),x=c("outline",s),A=c("outlineColor"),w=e=>{if(void 0!==e.borderRadius&&null!==e.borderRadius){const t=(0,r.MA)(e.theme,"shape.borderRadius",4,"borderRadius"),n=e=>({borderRadius:(0,r._W)(t,e)});return(0,l.NI)(e,e.borderRadius,n)}return null};w.propTypes={},w.filterProps=["borderRadius"];i(u,d,p,f,m,h,g,v,y,b,w,x,A);const S=e=>{if(void 0!==e.gap&&null!==e.gap){const t=(0,r.MA)(e.theme,"spacing",8,"gap"),n=e=>({gap:(0,r._W)(t,e)});return(0,l.NI)(e,e.gap,n)}return null};S.propTypes={},S.filterProps=["gap"];const k=e=>{if(void 0!==e.columnGap&&null!==e.columnGap){const t=(0,r.MA)(e.theme,"spacing",8,"columnGap"),n=e=>({columnGap:(0,r._W)(t,e)});return(0,l.NI)(e,e.columnGap,n)}return null};k.propTypes={},k.filterProps=["columnGap"];const C=e=>{if(void 0!==e.rowGap&&null!==e.rowGap){const t=(0,r.MA)(e.theme,"spacing",8,"rowGap"),n=e=>({rowGap:(0,r._W)(t,e)});return(0,l.NI)(e,e.rowGap,n)}return null};C.propTypes={},C.filterProps=["rowGap"];i(S,k,C,(0,o.Ay)({prop:"gridColumn"}),(0,o.Ay)({prop:"gridRow"}),(0,o.Ay)({prop:"gridAutoFlow"}),(0,o.Ay)({prop:"gridAutoColumns"}),(0,o.Ay)({prop:"gridAutoRows"}),(0,o.Ay)({prop:"gridTemplateColumns"}),(0,o.Ay)({prop:"gridTemplateRows"}),(0,o.Ay)({prop:"gridTemplateAreas"}),(0,o.Ay)({prop:"gridArea"}));function E(e,t){return"grey"===t?t:e}i((0,o.Ay)({prop:"color",themeKey:"palette",transform:E}),(0,o.Ay)({prop:"bgcolor",cssProperty:"backgroundColor",themeKey:"palette",transform:E}),(0,o.Ay)({prop:"backgroundColor",themeKey:"palette",transform:E}));function j(e){return e<=1&&0!==e?100*e+"%":e}const _=(0,o.Ay)({prop:"width",transform:j}),P=e=>{if(void 0!==e.maxWidth&&null!==e.maxWidth){const t=t=>{var n,r;const o=(null==(n=e.theme)||null==(n=n.breakpoints)||null==(n=n.values)?void 0:n[t])||l.zu[t];return o?"px"!==(null==(r=e.theme)||null==(r=r.breakpoints)?void 0:r.unit)?{maxWidth:`${o}${e.theme.breakpoints.unit}`}:{maxWidth:o}:{maxWidth:j(t)}};return(0,l.NI)(e,e.maxWidth,t)}return null};P.filterProps=["maxWidth"];const R=(0,o.Ay)({prop:"minWidth",transform:j}),I=(0,o.Ay)({prop:"height",transform:j}),T=(0,o.Ay)({prop:"maxHeight",transform:j}),$=(0,o.Ay)({prop:"minHeight",transform:j}),O=((0,o.Ay)({prop:"size",cssProperty:"width",transform:j}),(0,o.Ay)({prop:"size",cssProperty:"height",transform:j}),i(_,P,R,I,T,$,(0,o.Ay)({prop:"boxSizing"})),{border:{themeKey:"borders",transform:s},borderTop:{themeKey:"borders",transform:s},borderRight:{themeKey:"borders",transform:s},borderBottom:{themeKey:"borders",transform:s},borderLeft:{themeKey:"borders",transform:s},borderColor:{themeKey:"palette"},borderTopColor:{themeKey:"palette"},borderRightColor:{themeKey:"palette"},borderBottomColor:{themeKey:"palette"},borderLeftColor:{themeKey:"palette"},outline:{themeKey:"borders",transform:s},outlineColor:{themeKey:"palette"},borderRadius:{themeKey:"shape.borderRadius",style:w},color:{themeKey:"palette",transform:E},bgcolor:{themeKey:"palette",cssProperty:"backgroundColor",transform:E},backgroundColor:{themeKey:"palette",transform:E},p:{style:r.Ms},pt:{style:r.Ms},pr:{style:r.Ms},pb:{style:r.Ms},pl:{style:r.Ms},px:{style:r.Ms},py:{style:r.Ms},padding:{style:r.Ms},paddingTop:{style:r.Ms},paddingRight:{style:r.Ms},paddingBottom:{style:r.Ms},paddingLeft:{style:r.Ms},paddingX:{style:r.Ms},paddingY:{style:r.Ms},paddingInline:{style:r.Ms},paddingInlineStart:{style:r.Ms},paddingInlineEnd:{style:r.Ms},paddingBlock:{style:r.Ms},paddingBlockStart:{style:r.Ms},paddingBlockEnd:{style:r.Ms},m:{style:r.Lc},mt:{style:r.Lc},mr:{style:r.Lc},mb:{style:r.Lc},ml:{style:r.Lc},mx:{style:r.Lc},my:{style:r.Lc},margin:{style:r.Lc},marginTop:{style:r.Lc},marginRight:{style:r.Lc},marginBottom:{style:r.Lc},marginLeft:{style:r.Lc},marginX:{style:r.Lc},marginY:{style:r.Lc},marginInline:{style:r.Lc},marginInlineStart:{style:r.Lc},marginInlineEnd:{style:r.Lc},marginBlock:{style:r.Lc},marginBlockStart:{style:r.Lc},marginBlockEnd:{style:r.Lc},displayPrint:{cssProperty:!1,transform:e=>({"@media print":{display:e}})},display:{},overflow:{},textOverflow:{},visibility:{},whiteSpace:{},flexBasis:{},flexDirection:{},flexWrap:{},justifyContent:{},alignItems:{},alignContent:{},order:{},flex:{},flexGrow:{},flexShrink:{},alignSelf:{},justifyItems:{},justifySelf:{},gap:{style:S},rowGap:{style:C},columnGap:{style:k},gridColumn:{},gridRow:{},gridAutoFlow:{},gridAutoColumns:{},gridAutoRows:{},gridTemplateColumns:{},gridTemplateRows:{},gridTemplateAreas:{},gridArea:{},position:{},zIndex:{themeKey:"zIndex"},top:{},right:{},bottom:{},left:{},boxShadow:{themeKey:"shadows"},width:{transform:j},maxWidth:{style:P},minWidth:{transform:j},height:{transform:j},maxHeight:{transform:j},minHeight:{transform:j},boxSizing:{},fontFamily:{themeKey:"typography"},fontSize:{themeKey:"typography"},fontStyle:{themeKey:"typography"},fontWeight:{themeKey:"typography"},letterSpacing:{},textTransform:{},lineHeight:{},textAlign:{},typography:{cssProperty:!1,themeKey:"typography"}})},7868:(e,t,n)=>{"use strict";function r(e){let t="https://mui.com/production-error/?code="+e;for(let n=1;n<arguments.length;n+=1)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified MUI error #"+e+"; visit "+t+" for the full message."}n.d(t,{A:()=>r})},7918:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>r.A});var r=n(7598)},7950:(e,t,n)=>{"use strict";!function e(){if("undefined"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(t){console.error(t)}}(),e.exports=n(2730)},8052:(e,t,n)=>{"use strict";var r=n(4994);t.Ay=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const{themeId:t,defaultTheme:n=h,rootShouldForwardProp:r=m,slotShouldForwardProp:s=m}=e,u=e=>(0,c.default)((0,o.default)({},e,{theme:v((0,o.default)({},e,{defaultTheme:n,themeId:t}))}));return u.__mui_systemSx=!0,function(e){let c=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};(0,i.internal_processStyles)(e,(e=>e.filter((e=>!(null!=e&&e.__mui_systemSx)))));const{name:d,slot:f,skipVariantsResolver:h,skipSx:x,overridesResolver:A=y(g(f))}=c,w=(0,a.default)(c,p),S=void 0!==h?h:f&&"Root"!==f&&"root"!==f||!1,k=x||!1;let C=m;"Root"===f||"root"===f?C=r:f?C=s:function(e){return"string"===typeof e&&e.charCodeAt(0)>96}(e)&&(C=void 0);const E=(0,i.default)(e,(0,o.default)({shouldForwardProp:C,label:undefined},w)),j=e=>"function"===typeof e&&e.__emotion_real!==e||(0,l.isPlainObject)(e)?r=>b(e,(0,o.default)({},r,{theme:v({theme:r.theme,defaultTheme:n,themeId:t})})):e,_=function(r){let a=j(r);for(var i=arguments.length,l=new Array(i>1?i-1:0),s=1;s<i;s++)l[s-1]=arguments[s];const c=l?l.map(j):[];d&&A&&c.push((e=>{const r=v((0,o.default)({},e,{defaultTheme:n,themeId:t}));if(!r.components||!r.components[d]||!r.components[d].styleOverrides)return null;const a=r.components[d].styleOverrides,i={};return Object.entries(a).forEach((t=>{let[n,a]=t;i[n]=b(a,(0,o.default)({},e,{theme:r}))})),A(e,i)})),d&&!S&&c.push((e=>{var r;const a=v((0,o.default)({},e,{defaultTheme:n,themeId:t}));return b({variants:null==a||null==(r=a.components)||null==(r=r[d])?void 0:r.variants},(0,o.default)({},e,{theme:a}))})),k||c.push(u);const p=c.length-l.length;if(Array.isArray(r)&&p>0){const e=new Array(p).fill("");a=[...r,...e],a.raw=[...r.raw,...e]}const f=E(a,...c);return e.muiName&&(f.muiName=e.muiName),f};return E.withConfig&&(_.withConfig=E.withConfig),_}},t.MC=m;var o=r(n(4634)),a=r(n(4893)),i=function(e,t){if(!t&&e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var n=f(t);if(n&&n.has(e))return n.get(e);var r={__proto__:null},o=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var a in e)if("default"!==a&&Object.prototype.hasOwnProperty.call(e,a)){var i=o?Object.getOwnPropertyDescriptor(e,a):null;i&&(i.get||i.set)?Object.defineProperty(r,a,i):r[a]=e[a]}return r.default=e,n&&n.set(e,r),r}(n(3174)),l=n(9482),s=(r(n(7918)),r(n(3382)),r(n(4989))),c=r(n(3234));const u=["ownerState"],d=["variants"],p=["name","slot","skipVariantsResolver","skipSx","overridesResolver"];function f(e){if("function"!=typeof WeakMap)return null;var t=new WeakMap,n=new WeakMap;return(f=function(e){return e?n:t})(e)}function m(e){return"ownerState"!==e&&"theme"!==e&&"sx"!==e&&"as"!==e}const h=(0,s.default)(),g=e=>e?e.charAt(0).toLowerCase()+e.slice(1):e;function v(e){let{defaultTheme:t,theme:n,themeId:r}=e;return o=n,0===Object.keys(o).length?t:n[r]||n;var o}function y(e){return e?(t,n)=>n[e]:null}function b(e,t){let{ownerState:n}=t,r=(0,a.default)(t,u);const i="function"===typeof e?e((0,o.default)({ownerState:n},r)):e;if(Array.isArray(i))return i.flatMap((e=>b(e,(0,o.default)({ownerState:n},r))));if(i&&"object"===typeof i&&Array.isArray(i.variants)){const{variants:e=[]}=i;let t=(0,a.default)(i,d);return e.forEach((e=>{let a=!0;"function"===typeof e.props?a=e.props((0,o.default)({ownerState:n},r,n)):Object.keys(e.props).forEach((t=>{(null==n?void 0:n[t])!==e.props[t]&&r[t]!==e.props[t]&&(a=!1)})),a&&(Array.isArray(t)||(t=[t]),t.push("function"===typeof e.style?e.style((0,o.default)({ownerState:n},r,n)):e.style))})),t}return i}},8168:(e,t,n)=>{"use strict";function r(){return r=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)({}).hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},r.apply(null,arguments)}n.d(t,{A:()=>r})},8279:(e,t,n)=>{"use strict";n.d(t,{A:()=>D});var r=n(8168),o=n(8587),a=n(7868),i=n(9172),l=n(7758),s=n(8812),c=n(8280);var u=n(7266);const d={black:"#000",white:"#fff"},p={50:"#fafafa",100:"#f5f5f5",200:"#eeeeee",300:"#e0e0e0",400:"#bdbdbd",500:"#9e9e9e",600:"#757575",700:"#616161",800:"#424242",900:"#212121",A100:"#f5f5f5",A200:"#eeeeee",A400:"#bdbdbd",A700:"#616161"},f={50:"#f3e5f5",100:"#e1bee7",200:"#ce93d8",300:"#ba68c8",400:"#ab47bc",500:"#9c27b0",600:"#8e24aa",700:"#7b1fa2",800:"#6a1b9a",900:"#4a148c",A100:"#ea80fc",A200:"#e040fb",A400:"#d500f9",A700:"#aa00ff"},m={50:"#ffebee",100:"#ffcdd2",200:"#ef9a9a",300:"#e57373",400:"#ef5350",500:"#f44336",600:"#e53935",700:"#d32f2f",800:"#c62828",900:"#b71c1c",A100:"#ff8a80",A200:"#ff5252",A400:"#ff1744",A700:"#d50000"},h={50:"#fff3e0",100:"#ffe0b2",200:"#ffcc80",300:"#ffb74d",400:"#ffa726",500:"#ff9800",600:"#fb8c00",700:"#f57c00",800:"#ef6c00",900:"#e65100",A100:"#ffd180",A200:"#ffab40",A400:"#ff9100",A700:"#ff6d00"},g={50:"#e3f2fd",100:"#bbdefb",200:"#90caf9",300:"#64b5f6",400:"#42a5f5",500:"#2196f3",600:"#1e88e5",700:"#1976d2",800:"#1565c0",900:"#0d47a1",A100:"#82b1ff",A200:"#448aff",A400:"#2979ff",A700:"#2962ff"},v={50:"#e1f5fe",100:"#b3e5fc",200:"#81d4fa",300:"#4fc3f7",400:"#29b6f6",500:"#03a9f4",600:"#039be5",700:"#0288d1",800:"#0277bd",900:"#01579b",A100:"#80d8ff",A200:"#40c4ff",A400:"#00b0ff",A700:"#0091ea"},y={50:"#e8f5e9",100:"#c8e6c9",200:"#a5d6a7",300:"#81c784",400:"#66bb6a",500:"#4caf50",600:"#43a047",700:"#388e3c",800:"#2e7d32",900:"#1b5e20",A100:"#b9f6ca",A200:"#69f0ae",A400:"#00e676",A700:"#00c853"},b=["mode","contrastThreshold","tonalOffset"],x={text:{primary:"rgba(0, 0, 0, 0.87)",secondary:"rgba(0, 0, 0, 0.6)",disabled:"rgba(0, 0, 0, 0.38)"},divider:"rgba(0, 0, 0, 0.12)",background:{paper:d.white,default:d.white},action:{active:"rgba(0, 0, 0, 0.54)",hover:"rgba(0, 0, 0, 0.04)",hoverOpacity:.04,selected:"rgba(0, 0, 0, 0.08)",selectedOpacity:.08,disabled:"rgba(0, 0, 0, 0.26)",disabledBackground:"rgba(0, 0, 0, 0.12)",disabledOpacity:.38,focus:"rgba(0, 0, 0, 0.12)",focusOpacity:.12,activatedOpacity:.12}},A={text:{primary:d.white,secondary:"rgba(255, 255, 255, 0.7)",disabled:"rgba(255, 255, 255, 0.5)",icon:"rgba(255, 255, 255, 0.5)"},divider:"rgba(255, 255, 255, 0.12)",background:{paper:"#121212",default:"#121212"},action:{active:d.white,hover:"rgba(255, 255, 255, 0.08)",hoverOpacity:.08,selected:"rgba(255, 255, 255, 0.16)",selectedOpacity:.16,disabled:"rgba(255, 255, 255, 0.3)",disabledBackground:"rgba(255, 255, 255, 0.12)",disabledOpacity:.38,focus:"rgba(255, 255, 255, 0.12)",focusOpacity:.12,activatedOpacity:.24}};function w(e,t,n,r){const o=r.light||r,a=r.dark||1.5*r;e[t]||(e.hasOwnProperty(n)?e[t]=e[n]:"light"===t?e.light=(0,u.a)(e.main,o):"dark"===t&&(e.dark=(0,u.e$)(e.main,a)))}function S(e){const{mode:t="light",contrastThreshold:n=3,tonalOffset:l=.2}=e,s=(0,o.A)(e,b),c=e.primary||function(){return"dark"===(arguments.length>0&&void 0!==arguments[0]?arguments[0]:"light")?{main:g[200],light:g[50],dark:g[400]}:{main:g[700],light:g[400],dark:g[800]}}(t),S=e.secondary||function(){return"dark"===(arguments.length>0&&void 0!==arguments[0]?arguments[0]:"light")?{main:f[200],light:f[50],dark:f[400]}:{main:f[500],light:f[300],dark:f[700]}}(t),k=e.error||function(){return"dark"===(arguments.length>0&&void 0!==arguments[0]?arguments[0]:"light")?{main:m[500],light:m[300],dark:m[700]}:{main:m[700],light:m[400],dark:m[800]}}(t),C=e.info||function(){return"dark"===(arguments.length>0&&void 0!==arguments[0]?arguments[0]:"light")?{main:v[400],light:v[300],dark:v[700]}:{main:v[700],light:v[500],dark:v[900]}}(t),E=e.success||function(){return"dark"===(arguments.length>0&&void 0!==arguments[0]?arguments[0]:"light")?{main:y[400],light:y[300],dark:y[700]}:{main:y[800],light:y[500],dark:y[900]}}(t),j=e.warning||function(){return"dark"===(arguments.length>0&&void 0!==arguments[0]?arguments[0]:"light")?{main:h[400],light:h[300],dark:h[700]}:{main:"#ed6c02",light:h[500],dark:h[900]}}(t);function _(e){return(0,u.eM)(e,A.text.primary)>=n?A.text.primary:x.text.primary}const P=e=>{let{color:t,name:n,mainShade:o=500,lightShade:i=300,darkShade:s=700}=e;if(t=(0,r.A)({},t),!t.main&&t[o]&&(t.main=t[o]),!t.hasOwnProperty("main"))throw new Error((0,a.A)(11,n?` (${n})`:"",o));if("string"!==typeof t.main)throw new Error((0,a.A)(12,n?` (${n})`:"",JSON.stringify(t.main)));return w(t,"light",i,l),w(t,"dark",s,l),t.contrastText||(t.contrastText=_(t.main)),t},R={dark:A,light:x};return(0,i.A)((0,r.A)({common:(0,r.A)({},d),mode:t,primary:P({color:c,name:"primary"}),secondary:P({color:S,name:"secondary",mainShade:"A400",lightShade:"A200",darkShade:"A700"}),error:P({color:k,name:"error"}),warning:P({color:j,name:"warning"}),info:P({color:C,name:"info"}),success:P({color:E,name:"success"}),grey:p,contrastThreshold:n,getContrastText:_,augmentColor:P,tonalOffset:l},R[t]),s)}const k=["fontFamily","fontSize","fontWeightLight","fontWeightRegular","fontWeightMedium","fontWeightBold","htmlFontSize","allVariants","pxToRem"];const C={textTransform:"uppercase"},E='"Roboto", "Helvetica", "Arial", sans-serif';function j(e,t){const n="function"===typeof t?t(e):t,{fontFamily:a=E,fontSize:l=14,fontWeightLight:s=300,fontWeightRegular:c=400,fontWeightMedium:u=500,fontWeightBold:d=700,htmlFontSize:p=16,allVariants:f,pxToRem:m}=n,h=(0,o.A)(n,k);const g=l/14,v=m||(e=>e/p*g+"rem"),y=(e,t,n,o,i)=>{return(0,r.A)({fontFamily:a,fontWeight:e,fontSize:v(t),lineHeight:n},a===E?{letterSpacing:(l=o/t,Math.round(1e5*l)/1e5)+"em"}:{},i,f);var l},b={h1:y(s,96,1.167,-1.5),h2:y(s,60,1.2,-.5),h3:y(c,48,1.167,0),h4:y(c,34,1.235,.25),h5:y(c,24,1.334,0),h6:y(u,20,1.6,.15),subtitle1:y(c,16,1.75,.15),subtitle2:y(u,14,1.57,.1),body1:y(c,16,1.5,.15),body2:y(c,14,1.43,.15),button:y(u,14,1.75,.4,C),caption:y(c,12,1.66,.4),overline:y(c,12,2.66,1,C),inherit:{fontFamily:"inherit",fontWeight:"inherit",fontSize:"inherit",lineHeight:"inherit",letterSpacing:"inherit"}};return(0,i.A)((0,r.A)({htmlFontSize:p,pxToRem:v,fontFamily:a,fontSize:l,fontWeightLight:s,fontWeightRegular:c,fontWeightMedium:u,fontWeightBold:d},b),h,{clone:!1})}function _(){return[`${arguments.length<=0?void 0:arguments[0]}px ${arguments.length<=1?void 0:arguments[1]}px ${arguments.length<=2?void 0:arguments[2]}px ${arguments.length<=3?void 0:arguments[3]}px rgba(0,0,0,0.2)`,`${arguments.length<=4?void 0:arguments[4]}px ${arguments.length<=5?void 0:arguments[5]}px ${arguments.length<=6?void 0:arguments[6]}px ${arguments.length<=7?void 0:arguments[7]}px rgba(0,0,0,0.14)`,`${arguments.length<=8?void 0:arguments[8]}px ${arguments.length<=9?void 0:arguments[9]}px ${arguments.length<=10?void 0:arguments[10]}px ${arguments.length<=11?void 0:arguments[11]}px rgba(0,0,0,0.12)`].join(",")}const P=["none",_(0,2,1,-1,0,1,1,0,0,1,3,0),_(0,3,1,-2,0,2,2,0,0,1,5,0),_(0,3,3,-2,0,3,4,0,0,1,8,0),_(0,2,4,-1,0,4,5,0,0,1,10,0),_(0,3,5,-1,0,5,8,0,0,1,14,0),_(0,3,5,-1,0,6,10,0,0,1,18,0),_(0,4,5,-2,0,7,10,1,0,2,16,1),_(0,5,5,-3,0,8,10,1,0,3,14,2),_(0,5,6,-3,0,9,12,1,0,3,16,2),_(0,6,6,-3,0,10,14,1,0,4,18,3),_(0,6,7,-4,0,11,15,1,0,4,20,3),_(0,7,8,-4,0,12,17,2,0,5,22,4),_(0,7,8,-4,0,13,19,2,0,5,24,4),_(0,7,9,-4,0,14,21,2,0,5,26,4),_(0,8,9,-5,0,15,22,2,0,6,28,5),_(0,8,10,-5,0,16,24,2,0,6,30,5),_(0,8,11,-5,0,17,26,2,0,6,32,5),_(0,9,11,-5,0,18,28,2,0,7,34,6),_(0,9,12,-6,0,19,29,2,0,7,36,6),_(0,10,13,-6,0,20,31,3,0,8,38,7),_(0,10,13,-6,0,21,33,3,0,8,40,7),_(0,10,14,-6,0,22,35,3,0,8,42,7),_(0,11,14,-7,0,23,36,3,0,9,44,8),_(0,11,15,-7,0,24,38,3,0,9,46,8)],R=["duration","easing","delay"],I={easeInOut:"cubic-bezier(0.4, 0, 0.2, 1)",easeOut:"cubic-bezier(0.0, 0, 0.2, 1)",easeIn:"cubic-bezier(0.4, 0, 1, 1)",sharp:"cubic-bezier(0.4, 0, 0.6, 1)"},T={shortest:150,shorter:200,short:250,standard:300,complex:375,enteringScreen:225,leavingScreen:195};function $(e){return`${Math.round(e)}ms`}function O(e){if(!e)return 0;const t=e/36;return Math.round(10*(4+15*t**.25+t/5))}function N(e){const t=(0,r.A)({},I,e.easing),n=(0,r.A)({},T,e.duration);return(0,r.A)({getAutoHeightDuration:O,create:function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:["all"],r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const{duration:a=n.standard,easing:i=t.easeInOut,delay:l=0}=r;(0,o.A)(r,R);return(Array.isArray(e)?e:[e]).map((e=>`${e} ${"string"===typeof a?a:$(a)} ${i} ${"string"===typeof l?l:$(l)}`)).join(",")}},e,{easing:t,duration:n})}const M={mobileStepper:1e3,fab:1050,speedDial:1050,appBar:1100,drawer:1200,modal:1300,snackbar:1400,tooltip:1500},L=["breakpoints","mixins","spacing","palette","transitions","typography","shape"];function z(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const{mixins:t={},palette:n={},transitions:u={},typography:d={}}=e,p=(0,o.A)(e,L);if(e.vars)throw new Error((0,a.A)(18));const f=S(n),m=(0,c.A)(e);let h=(0,i.A)(m,{mixins:(g=m.breakpoints,v=t,(0,r.A)({toolbar:{minHeight:56,[g.up("xs")]:{"@media (orientation: landscape)":{minHeight:48}},[g.up("sm")]:{minHeight:64}}},v)),palette:f,shadows:P.slice(),typography:j(f,d),transitions:N(u),zIndex:(0,r.A)({},M)});var g,v;h=(0,i.A)(h,p);for(var y=arguments.length,b=new Array(y>1?y-1:0),x=1;x<y;x++)b[x-1]=arguments[x];return h=b.reduce(((e,t)=>(0,i.A)(e,t)),h),h.unstable_sxConfig=(0,r.A)({},l.A,null==p?void 0:p.unstable_sxConfig),h.unstable_sx=function(e){return(0,s.A)({sx:e,theme:this})},h}const D=z},8280:(e,t,n)=>{"use strict";n.d(t,{A:()=>f});var r=n(8168),o=n(8587),a=n(9172),i=n(4853);const l={borderRadius:4};var s=n(8604);var c=n(8812),u=n(7758),d=n(9703);const p=["breakpoints","palette","spacing","shape"];const f=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const{breakpoints:t={},palette:n={},spacing:f,shape:m={}}=e,h=(0,o.A)(e,p),g=(0,i.A)(t),v=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:8;if(e.mui)return e;const t=(0,s.LX)({spacing:e}),n=function(){for(var e=arguments.length,n=new Array(e),r=0;r<e;r++)n[r]=arguments[r];return(0===n.length?[1]:n).map((e=>{const n=t(e);return"number"===typeof n?`${n}px`:n})).join(" ")};return n.mui=!0,n}(f);let y=(0,a.A)({breakpoints:g,direction:"ltr",components:{},palette:(0,r.A)({mode:"light"},n),spacing:v,shape:(0,r.A)({},l,m)},h);y.applyStyles=d.A;for(var b=arguments.length,x=new Array(b>1?b-1:0),A=1;A<b;A++)x[A-1]=arguments[A];return y=x.reduce(((e,t)=>(0,a.A)(e,t)),y),y.unstable_sxConfig=(0,r.A)({},u.A,null==h?void 0:h.unstable_sxConfig),y.unstable_sx=function(e){return(0,c.A)({sx:e,theme:this})},y}},8387:(e,t,n)=>{"use strict";function r(e){var t,n,o="";if("string"==typeof e||"number"==typeof e)o+=e;else if("object"==typeof e)if(Array.isArray(e)){var a=e.length;for(t=0;t<a;t++)e[t]&&(n=r(e[t]))&&(o&&(o+=" "),o+=n)}else for(n in e)e[n]&&(o&&(o+=" "),o+=n);return o}n.d(t,{A:()=>o});const o=function(){for(var e,t,n=0,o="",a=arguments.length;n<a;n++)(e=arguments[n])&&(t=r(e))&&(o&&(o+=" "),o+=t);return o}},8587:(e,t,n)=>{"use strict";function r(e,t){if(null==e)return{};var n={};for(var r in e)if({}.hasOwnProperty.call(e,r)){if(-1!==t.indexOf(r))continue;n[r]=e[r]}return n}n.d(t,{A:()=>r})},8604:(e,t,n)=>{"use strict";n.d(t,{LX:()=>m,MA:()=>f,_W:()=>h,Lc:()=>y,Ms:()=>b});var r=n(9751),o=n(7162),a=n(3815);const i={m:"margin",p:"padding"},l={t:"Top",r:"Right",b:"Bottom",l:"Left",x:["Left","Right"],y:["Top","Bottom"]},s={marginX:"mx",marginY:"my",paddingX:"px",paddingY:"py"},c=function(e){const t={};return n=>(void 0===t[n]&&(t[n]=e(n)),t[n])}((e=>{if(e.length>2){if(!s[e])return[e];e=s[e]}const[t,n]=e.split(""),r=i[t],o=l[n]||"";return Array.isArray(o)?o.map((e=>r+e)):[r+o]})),u=["m","mt","mr","mb","ml","mx","my","margin","marginTop","marginRight","marginBottom","marginLeft","marginX","marginY","marginInline","marginInlineStart","marginInlineEnd","marginBlock","marginBlockStart","marginBlockEnd"],d=["p","pt","pr","pb","pl","px","py","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","paddingX","paddingY","paddingInline","paddingInlineStart","paddingInlineEnd","paddingBlock","paddingBlockStart","paddingBlockEnd"],p=[...u,...d];function f(e,t,n,r){var a;const i=null!=(a=(0,o.Yn)(e,t,!1))?a:n;return"number"===typeof i?e=>"string"===typeof e?e:i*e:Array.isArray(i)?e=>"string"===typeof e?e:i[e]:"function"===typeof i?i:()=>{}}function m(e){return f(e,"spacing",8)}function h(e,t){if("string"===typeof t||null==t)return t;const n=e(Math.abs(t));return t>=0?n:"number"===typeof n?-n:`-${n}`}function g(e,t,n,o){if(-1===t.indexOf(n))return null;const a=function(e,t){return n=>e.reduce(((e,r)=>(e[r]=h(t,n),e)),{})}(c(n),o),i=e[n];return(0,r.NI)(e,i,a)}function v(e,t){const n=m(e.theme);return Object.keys(e).map((r=>g(e,t,r,n))).reduce(a.A,{})}function y(e){return v(e,u)}function b(e){return v(e,d)}function x(e){return v(e,p)}y.propTypes={},y.filterProps=u,b.propTypes={},b.filterProps=d,x.propTypes={},x.filterProps=p},8610:(e,t,n)=>{"use strict";function r(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:void 0;const r={};return Object.keys(e).forEach((o=>{r[o]=e[o].reduce(((e,r)=>{if(r){const o=t(r);""!==o&&e.push(o),n&&n[r]&&e.push(n[r])}return e}),[]).join(" ")})),r}n.d(t,{A:()=>r})},8625:(e,t,n)=>{"use strict";var r=n(4994);t.A=void 0;var o=r(n(39)),a=n(579);t.A=(0,o.default)((0,a.jsx)("path",{d:"M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4z"}),"Refresh")},8698:(e,t,n)=>{"use strict";n.d(t,{A:()=>c});var r=n(8168),o=n(8587),a=n(9172),i=n(7758);const l=["sx"],s=e=>{var t,n;const r={systemProps:{},otherProps:{}},o=null!=(t=null==e||null==(n=e.theme)?void 0:n.unstable_sxConfig)?t:i.A;return Object.keys(e).forEach((t=>{o[t]?r.systemProps[t]=e[t]:r.otherProps[t]=e[t]})),r};function c(e){const{sx:t}=e,n=(0,o.A)(e,l),{systemProps:i,otherProps:c}=s(n);let u;return u=Array.isArray(t)?[i,...t]:"function"===typeof t?function(){const e=t(...arguments);return(0,a.Q)(e)?(0,r.A)({},i,e):i}:(0,r.A)({},i,t),(0,r.A)({},c,{sx:u})}},8812:(e,t,n)=>{"use strict";n.d(t,{A:()=>u,k:()=>s});var r=n(7598),o=n(3815),a=n(7162),i=n(9751),l=n(7758);function s(){function e(e,t,n,o){const l={[e]:t,theme:n},s=o[e];if(!s)return{[e]:t};const{cssProperty:c=e,themeKey:u,transform:d,style:p}=s;if(null==t)return null;if("typography"===u&&"inherit"===t)return{[e]:t};const f=(0,a.Yn)(n,u)||{};if(p)return p(l);return(0,i.NI)(l,t,(t=>{let n=(0,a.BO)(f,d,t);return t===n&&"string"===typeof t&&(n=(0,a.BO)(f,d,`${e}${"default"===t?"":(0,r.A)(t)}`,t)),!1===c?n:{[c]:n}}))}return function t(n){var r;const{sx:a,theme:s={}}=n||{};if(!a)return null;const c=null!=(r=s.unstable_sxConfig)?r:l.A;function u(n){let r=n;if("function"===typeof n)r=n(s);else if("object"!==typeof n)return n;if(!r)return null;const a=(0,i.EU)(s.breakpoints),l=Object.keys(a);let u=a;return Object.keys(r).forEach((n=>{const a=(l=r[n],d=s,"function"===typeof l?l(d):l);var l,d;if(null!==a&&void 0!==a)if("object"===typeof a)if(c[n])u=(0,o.A)(u,e(n,a,s,c));else{const e=(0,i.NI)({theme:s},a,(e=>({[n]:e})));!function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];const r=t.reduce(((e,t)=>e.concat(Object.keys(t))),[]),o=new Set(r);return t.every((e=>o.size===Object.keys(e).length))}(e,a)?u=(0,o.A)(u,e):u[n]=t({sx:a,theme:s})}else u=(0,o.A)(u,e(n,a,s,c))})),(0,i.vf)(l,u)}return Array.isArray(a)?a.map(u):u(a)}}const c=s();c.filterProps=["sx"];const u=c},8853:(e,t,n)=>{"use strict";e.exports=n(7234)},9120:(e,t,n)=>{"use strict";var r=n(4994);t.A=void 0;var o=r(n(39)),a=n(579);t.A=(0,o.default)((0,a.jsx)("path",{d:"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20z"}),"ArrowBack")},9172:(e,t,n)=>{"use strict";n.d(t,{A:()=>l,Q:()=>a});var r=n(8168),o=n(5043);function a(e){if("object"!==typeof e||null===e)return!1;const t=Object.getPrototypeOf(e);return(null===t||t===Object.prototype||null===Object.getPrototypeOf(t))&&!(Symbol.toStringTag in e)&&!(Symbol.iterator in e)}function i(e){if(o.isValidElement(e)||!a(e))return e;const t={};return Object.keys(e).forEach((n=>{t[n]=i(e[n])})),t}function l(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{clone:!0};const s=n.clone?(0,r.A)({},e):e;return a(e)&&a(t)&&Object.keys(t).forEach((r=>{o.isValidElement(t[r])?s[r]=t[r]:a(t[r])&&Object.prototype.hasOwnProperty.call(e,r)&&a(e[r])?s[r]=l(e[r],t[r],n):n.clone?s[r]=a(t[r])?i(t[r]):t[r]:s[r]=t[r]})),s}},9303:(e,t,n)=>{"use strict";n.d(t,{E:()=>i,A:()=>l});var r=n(5043);const o={};const a=[];class i{constructor(){this.currentId=null,this.clear=()=>{null!==this.currentId&&(clearTimeout(this.currentId),this.currentId=null)},this.disposeEffect=()=>this.clear}static create(){return new i}start(e,t){this.clear(),this.currentId=setTimeout((()=>{this.currentId=null,t()}),e)}}function l(){const e=function(e,t){const n=r.useRef(o);return n.current===o&&(n.current=e(t)),n}(i.create).current;var t;return t=e.disposeEffect,r.useEffect(t,a),e}},9369:(e,t,n)=>{"use strict";n.d(t,{C:()=>c,E:()=>g,T:()=>d,c:()=>m,h:()=>p,w:()=>u});var r=n(5043),o=n(3803),a=n(1722),i=n(6598),l=n(9436),s=r.createContext("undefined"!==typeof HTMLElement?(0,o.A)({key:"css"}):null),c=s.Provider,u=function(e){return(0,r.forwardRef)((function(t,n){var o=(0,r.useContext)(s);return e(t,o,n)}))},d=r.createContext({});var p={}.hasOwnProperty,f="__EMOTION_TYPE_PLEASE_DO_NOT_USE__",m=function(e,t){var n={};for(var r in t)p.call(t,r)&&(n[r]=t[r]);return n[f]=e,n},h=function(e){var t=e.cache,n=e.serialized,r=e.isStringTag;return(0,a.SF)(t,n,r),(0,l.s)((function(){return(0,a.sk)(t,n,r)})),null},g=u((function(e,t,n){var o=e.css;"string"===typeof o&&void 0!==t.registered[o]&&(o=t.registered[o]);var l=e[f],s=[o],c="";"string"===typeof e.className?c=(0,a.Rk)(t.registered,s,e.className):null!=e.className&&(c=e.className+" ");var u=(0,i.J)(s,void 0,r.useContext(d));c+=t.key+"-"+u.name;var m={};for(var g in e)p.call(e,g)&&"css"!==g&&g!==f&&(m[g]=e[g]);return m.className=c,n&&(m.ref=n),r.createElement(r.Fragment,null,r.createElement(h,{cache:t,serialized:u,isStringTag:"string"===typeof l}),r.createElement(l,m))}))},9380:(e,t,n)=>{"use strict";var r=n(4994);t.A=void 0;var o=r(n(39)),a=n(579);t.A=(0,o.default)((0,a.jsx)("path",{d:"M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8zm2 16H8v-2h8zm0-4H8v-2h8zm-3-5V3.5L18.5 9z"}),"Description")},9386:(e,t,n)=>{"use strict";n.d(t,{A:()=>o});const r=e=>e,o=(()=>{let e=r;return{configure(t){e=t},generate:t=>e(t),reset(){e=r}}})()},9436:(e,t,n)=>{"use strict";var r;n.d(t,{i:()=>l,s:()=>i});var o=n(5043),a=!!(r||(r=n.t(o,2))).useInsertionEffect&&(r||(r=n.t(o,2))).useInsertionEffect,i=a||function(e){return e()},l=a||o.useLayoutEffect},9482:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>r.A,isPlainObject:()=>r.Q});var r=n(9172)},9662:(e,t,n)=>{"use strict";n.d(t,{A:()=>b});var r=n(8168),o=n(5043),a=n(8587),i=n(8387),l=n(8610),s=n(6803),c=n(2876),u=n(4535),d=n(2532),p=n(2372);function f(e){return(0,p.Ay)("MuiSvgIcon",e)}(0,d.A)("MuiSvgIcon",["root","colorPrimary","colorSecondary","colorAction","colorError","colorDisabled","fontSizeInherit","fontSizeSmall","fontSizeMedium","fontSizeLarge"]);var m=n(579);const h=["children","className","color","component","fontSize","htmlColor","inheritViewBox","titleAccess","viewBox"],g=(0,u.Ay)("svg",{name:"MuiSvgIcon",slot:"Root",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[t.root,"inherit"!==n.color&&t[`color${(0,s.A)(n.color)}`],t[`fontSize${(0,s.A)(n.fontSize)}`]]}})((e=>{let{theme:t,ownerState:n}=e;var r,o,a,i,l,s,c,u,d,p,f,m,h;return{userSelect:"none",width:"1em",height:"1em",display:"inline-block",fill:n.hasSvgAsChild?void 0:"currentColor",flexShrink:0,transition:null==(r=t.transitions)||null==(o=r.create)?void 0:o.call(r,"fill",{duration:null==(a=t.transitions)||null==(a=a.duration)?void 0:a.shorter}),fontSize:{inherit:"inherit",small:(null==(i=t.typography)||null==(l=i.pxToRem)?void 0:l.call(i,20))||"1.25rem",medium:(null==(s=t.typography)||null==(c=s.pxToRem)?void 0:c.call(s,24))||"1.5rem",large:(null==(u=t.typography)||null==(d=u.pxToRem)?void 0:d.call(u,35))||"2.1875rem"}[n.fontSize],color:null!=(p=null==(f=(t.vars||t).palette)||null==(f=f[n.color])?void 0:f.main)?p:{action:null==(m=(t.vars||t).palette)||null==(m=m.action)?void 0:m.active,disabled:null==(h=(t.vars||t).palette)||null==(h=h.action)?void 0:h.disabled,inherit:void 0}[n.color]}})),v=o.forwardRef((function(e,t){const n=(0,c.A)({props:e,name:"MuiSvgIcon"}),{children:u,className:d,color:p="inherit",component:v="svg",fontSize:y="medium",htmlColor:b,inheritViewBox:x=!1,titleAccess:A,viewBox:w="0 0 24 24"}=n,S=(0,a.A)(n,h),k=o.isValidElement(u)&&"svg"===u.type,C=(0,r.A)({},n,{color:p,component:v,fontSize:y,instanceFontSize:e.fontSize,inheritViewBox:x,viewBox:w,hasSvgAsChild:k}),E={};x||(E.viewBox=w);const j=(e=>{const{color:t,fontSize:n,classes:r}=e,o={root:["root","inherit"!==t&&`color${(0,s.A)(t)}`,`fontSize${(0,s.A)(n)}`]};return(0,l.A)(o,f,r)})(C);return(0,m.jsxs)(g,(0,r.A)({as:v,className:(0,i.A)(j.root,d),focusable:"false",color:b,"aria-hidden":!A||void 0,role:A?"img":void 0,ref:t},E,S,k&&u.props,{ownerState:C,children:[k?u.props.children:u,A?(0,m.jsx)("title",{children:A}):null]}))}));v.muiName="SvgIcon";const y=v;function b(e,t){function n(n,o){return(0,m.jsx)(y,(0,r.A)({"data-testid":`${t}Icon`,ref:o},n,{children:e}))}return n.muiName=y.muiName,o.memo(o.forwardRef(n))}},9703:(e,t,n)=>{"use strict";function r(e,t){const n=this;if(n.vars&&"function"===typeof n.getColorSchemeSelector){const r=n.getColorSchemeSelector(e).replace(/(\[[^\]]+\])/,"*:where($1)");return{[r]:t}}return n.palette.mode===e?t:{}}n.d(t,{A:()=>r})},9751:(e,t,n)=>{"use strict";n.d(t,{EU:()=>i,NI:()=>a,kW:()=>s,vf:()=>l,zu:()=>r});const r={xs:0,sm:600,md:900,lg:1200,xl:1536},o={keys:["xs","sm","md","lg","xl"],up:e=>`@media (min-width:${r[e]}px)`};function a(e,t,n){const a=e.theme||{};if(Array.isArray(t)){const e=a.breakpoints||o;return t.reduce(((r,o,a)=>(r[e.up(e.keys[a])]=n(t[a]),r)),{})}if("object"===typeof t){const e=a.breakpoints||o;return Object.keys(t).reduce(((o,a)=>{if(-1!==Object.keys(e.values||r).indexOf(a)){o[e.up(a)]=n(t[a],a)}else{const e=a;o[e]=t[e]}return o}),{})}return n(t)}function i(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};var t;return(null==(t=e.keys)?void 0:t.reduce(((t,n)=>(t[e.up(n)]={},t)),{}))||{}}function l(e,t){return e.reduce(((e,t)=>{const n=e[t];return(!n||0===Object.keys(n).length)&&delete e[t],e}),t)}function s(e){let{values:t,breakpoints:n,base:r}=e;const o=r||function(e,t){if("object"!==typeof e)return{};const n={},r=Object.keys(t);return Array.isArray(e)?r.forEach(((t,r)=>{r<e.length&&(n[t]=!0)})):r.forEach((t=>{null!=e[t]&&(n[t]=!0)})),n}(t,n),a=Object.keys(o);if(0===a.length)return t;let i;return a.reduce(((e,n,r)=>(Array.isArray(t)?(e[n]=null!=t[r]?t[r]:t[i],i=r):"object"===typeof t?(e[n]=null!=t[n]?t[n]:t[i],i=n):e[n]=t,e)),{})}}},t={};function n(r){var o=t[r];if(void 0!==o)return o.exports;var a=t[r]={exports:{}};return e[r](a,a.exports,n),a.exports}n.m=e,n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},(()=>{var e,t=Object.getPrototypeOf?e=>Object.getPrototypeOf(e):e=>e.__proto__;n.t=function(r,o){if(1&o&&(r=this(r)),8&o)return r;if("object"===typeof r&&r){if(4&o&&r.__esModule)return r;if(16&o&&"function"===typeof r.then)return r}var a=Object.create(null);n.r(a);var i={};e=e||[null,t({}),t([]),t(t)];for(var l=2&o&&r;"object"==typeof l&&!~e.indexOf(l);l=t(l))Object.getOwnPropertyNames(l).forEach((e=>i[e]=()=>r[e]));return i.default=()=>r,n.d(a,i),a}})(),n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.f={},n.e=e=>Promise.all(Object.keys(n.f).reduce(((t,r)=>(n.f[r](e,t),t)),[])),n.u=e=>"static/js/"+e+".d6cecd2f.chunk.js",n.miniCssF=e=>{},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e={},t="icmp-ui:";n.l=(r,o,a,i)=>{if(e[r])e[r].push(o);else{var l,s;if(void 0!==a)for(var c=document.getElementsByTagName("script"),u=0;u<c.length;u++){var d=c[u];if(d.getAttribute("src")==r||d.getAttribute("data-webpack")==t+a){l=d;break}}l||(s=!0,(l=document.createElement("script")).charset="utf-8",l.timeout=120,n.nc&&l.setAttribute("nonce",n.nc),l.setAttribute("data-webpack",t+a),l.src=r),e[r]=[o];var p=(t,n)=>{l.onerror=l.onload=null,clearTimeout(f);var o=e[r];if(delete e[r],l.parentNode&&l.parentNode.removeChild(l),o&&o.forEach((e=>e(n))),t)return t(n)},f=setTimeout(p.bind(null,void 0,{type:"timeout",target:l}),12e4);l.onerror=p.bind(null,l.onerror),l.onload=p.bind(null,l.onload),s&&document.head.appendChild(l)}}})(),n.r=e=>{"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.p="/",(()=>{var e={792:0};n.f.j=(t,r)=>{var o=n.o(e,t)?e[t]:void 0;if(0!==o)if(o)r.push(o[2]);else{var a=new Promise(((n,r)=>o=e[t]=[n,r]));r.push(o[2]=a);var i=n.p+n.u(t),l=new Error;n.l(i,(r=>{if(n.o(e,t)&&(0!==(o=e[t])&&(e[t]=void 0),o)){var a=r&&("load"===r.type?"missing":r.type),i=r&&r.target&&r.target.src;l.message="Loading chunk "+t+" failed.\n("+a+": "+i+")",l.name="ChunkLoadError",l.type=a,l.request=i,o[1](l)}}),"chunk-"+t,t)}};var t=(t,r)=>{var o,a,i=r[0],l=r[1],s=r[2],c=0;if(i.some((t=>0!==e[t]))){for(o in l)n.o(l,o)&&(n.m[o]=l[o]);if(s)s(n)}for(t&&t(r);c<i.length;c++)a=i[c],n.o(e,a)&&e[a]&&e[a][0](),e[a]=0},r=self.webpackChunkicmp_ui=self.webpackChunkicmp_ui||[];r.forEach(t.bind(null,0)),r.push=t.bind(null,r.push.bind(r))})(),(()=>{"use strict";var e,t,r=n(5043),o=n.t(r,2),a=n(4391);function i(){return i=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},i.apply(this,arguments)}(t=e||(e={})).Pop="POP",t.Push="PUSH",t.Replace="REPLACE";const l="popstate";function s(e,t){if(!1===e||null===e||"undefined"===typeof e)throw new Error(t)}function c(e,t){if(!e){"undefined"!==typeof console&&console.warn(t);try{throw new Error(t)}catch(n){}}}function u(e,t){return{usr:e.state,key:e.key,idx:t}}function d(e,t,n,r){return void 0===n&&(n=null),i({pathname:"string"===typeof e?e:e.pathname,search:"",hash:""},"string"===typeof t?f(t):t,{state:n,key:t&&t.key||r||Math.random().toString(36).substr(2,8)})}function p(e){let{pathname:t="/",search:n="",hash:r=""}=e;return n&&"?"!==n&&(t+="?"===n.charAt(0)?n:"?"+n),r&&"#"!==r&&(t+="#"===r.charAt(0)?r:"#"+r),t}function f(e){let t={};if(e){let n=e.indexOf("#");n>=0&&(t.hash=e.substr(n),e=e.substr(0,n));let r=e.indexOf("?");r>=0&&(t.search=e.substr(r),e=e.substr(0,r)),e&&(t.pathname=e)}return t}function m(t,n,r,o){void 0===o&&(o={});let{window:a=document.defaultView,v5Compat:c=!1}=o,f=a.history,m=e.Pop,h=null,g=v();function v(){return(f.state||{idx:null}).idx}function y(){m=e.Pop;let t=v(),n=null==t?null:t-g;g=t,h&&h({action:m,location:x.location,delta:n})}function b(e){let t="null"!==a.location.origin?a.location.origin:a.location.href,n="string"===typeof e?e:p(e);return n=n.replace(/ $/,"%20"),s(t,"No window.location.(origin|href) available to create URL for href: "+n),new URL(n,t)}null==g&&(g=0,f.replaceState(i({},f.state,{idx:g}),""));let x={get action(){return m},get location(){return t(a,f)},listen(e){if(h)throw new Error("A history only accepts one active listener");return a.addEventListener(l,y),h=e,()=>{a.removeEventListener(l,y),h=null}},createHref:e=>n(a,e),createURL:b,encodeLocation(e){let t=b(e);return{pathname:t.pathname,search:t.search,hash:t.hash}},push:function(t,n){m=e.Push;let o=d(x.location,t,n);r&&r(o,t),g=v()+1;let i=u(o,g),l=x.createHref(o);try{f.pushState(i,"",l)}catch(s){if(s instanceof DOMException&&"DataCloneError"===s.name)throw s;a.location.assign(l)}c&&h&&h({action:m,location:x.location,delta:1})},replace:function(t,n){m=e.Replace;let o=d(x.location,t,n);r&&r(o,t),g=v();let a=u(o,g),i=x.createHref(o);f.replaceState(a,"",i),c&&h&&h({action:m,location:x.location,delta:0})},go:e=>f.go(e)};return x}var h,g;(g=h||(h={})).data="data",g.deferred="deferred",g.redirect="redirect",g.error="error";new Set(["lazy","caseSensitive","path","id","index","children"]);function v(e,t,n){return void 0===n&&(n="/"),y(e,t,n,!1)}function y(e,t,n,r){let o=T(("string"===typeof t?f(t):t).pathname||"/",n);if(null==o)return null;let a=b(e);!function(e){e.sort(((e,t)=>e.score!==t.score?t.score-e.score:function(e,t){let n=e.length===t.length&&e.slice(0,-1).every(((e,n)=>e===t[n]));return n?e[e.length-1]-t[t.length-1]:0}(e.routesMeta.map((e=>e.childrenIndex)),t.routesMeta.map((e=>e.childrenIndex)))))}(a);let i=null;for(let l=0;null==i&&l<a.length;++l){let e=I(o);i=P(a[l],e,r)}return i}function b(e,t,n,r){void 0===t&&(t=[]),void 0===n&&(n=[]),void 0===r&&(r="");let o=(e,o,a)=>{let i={relativePath:void 0===a?e.path||"":a,caseSensitive:!0===e.caseSensitive,childrenIndex:o,route:e};i.relativePath.startsWith("/")&&(s(i.relativePath.startsWith(r),'Absolute route path "'+i.relativePath+'" nested under path "'+r+'" is not valid. An absolute child route path must start with the combined path of all its parent routes.'),i.relativePath=i.relativePath.slice(r.length));let l=L([r,i.relativePath]),c=n.concat(i);e.children&&e.children.length>0&&(s(!0!==e.index,'Index routes must not have child routes. Please remove all child routes from route path "'+l+'".'),b(e.children,t,c,l)),(null!=e.path||e.index)&&t.push({path:l,score:_(l,e.index),routesMeta:c})};return e.forEach(((e,t)=>{var n;if(""!==e.path&&null!=(n=e.path)&&n.includes("?"))for(let r of x(e.path))o(e,t,r);else o(e,t)})),t}function x(e){let t=e.split("/");if(0===t.length)return[];let[n,...r]=t,o=n.endsWith("?"),a=n.replace(/\?$/,"");if(0===r.length)return o?[a,""]:[a];let i=x(r.join("/")),l=[];return l.push(...i.map((e=>""===e?a:[a,e].join("/")))),o&&l.push(...i),l.map((t=>e.startsWith("/")&&""===t?"/":t))}const A=/^:[\w-]+$/,w=3,S=2,k=1,C=10,E=-2,j=e=>"*"===e;function _(e,t){let n=e.split("/"),r=n.length;return n.some(j)&&(r+=E),t&&(r+=S),n.filter((e=>!j(e))).reduce(((e,t)=>e+(A.test(t)?w:""===t?k:C)),r)}function P(e,t,n){void 0===n&&(n=!1);let{routesMeta:r}=e,o={},a="/",i=[];for(let l=0;l<r.length;++l){let e=r[l],s=l===r.length-1,c="/"===a?t:t.slice(a.length)||"/",u=R({path:e.relativePath,caseSensitive:e.caseSensitive,end:s},c),d=e.route;if(!u&&s&&n&&!r[r.length-1].route.index&&(u=R({path:e.relativePath,caseSensitive:e.caseSensitive,end:!1},c)),!u)return null;Object.assign(o,u.params),i.push({params:o,pathname:L([a,u.pathname]),pathnameBase:z(L([a,u.pathnameBase])),route:d}),"/"!==u.pathnameBase&&(a=L([a,u.pathnameBase]))}return i}function R(e,t){"string"===typeof e&&(e={path:e,caseSensitive:!1,end:!0});let[n,r]=function(e,t,n){void 0===t&&(t=!1);void 0===n&&(n=!0);c("*"===e||!e.endsWith("*")||e.endsWith("/*"),'Route path "'+e+'" will be treated as if it were "'+e.replace(/\*$/,"/*")+'" because the `*` character must always follow a `/` in the pattern. To get rid of this warning, please change the route path to "'+e.replace(/\*$/,"/*")+'".');let r=[],o="^"+e.replace(/\/*\*?$/,"").replace(/^\/*/,"/").replace(/[\\.*+^${}|()[\]]/g,"\\$&").replace(/\/:([\w-]+)(\?)?/g,((e,t,n)=>(r.push({paramName:t,isOptional:null!=n}),n?"/?([^\\/]+)?":"/([^\\/]+)")));e.endsWith("*")?(r.push({paramName:"*"}),o+="*"===e||"/*"===e?"(.*)$":"(?:\\/(.+)|\\/*)$"):n?o+="\\/*$":""!==e&&"/"!==e&&(o+="(?:(?=\\/|$))");let a=new RegExp(o,t?void 0:"i");return[a,r]}(e.path,e.caseSensitive,e.end),o=t.match(n);if(!o)return null;let a=o[0],i=a.replace(/(.)\/+$/,"$1"),l=o.slice(1);return{params:r.reduce(((e,t,n)=>{let{paramName:r,isOptional:o}=t;if("*"===r){let e=l[n]||"";i=a.slice(0,a.length-e.length).replace(/(.)\/+$/,"$1")}const s=l[n];return e[r]=o&&!s?void 0:(s||"").replace(/%2F/g,"/"),e}),{}),pathname:a,pathnameBase:i,pattern:e}}function I(e){try{return e.split("/").map((e=>decodeURIComponent(e).replace(/\//g,"%2F"))).join("/")}catch(t){return c(!1,'The URL path "'+e+'" could not be decoded because it is is a malformed URL segment. This is probably due to a bad percent encoding ('+t+")."),e}}function T(e,t){if("/"===t)return e;if(!e.toLowerCase().startsWith(t.toLowerCase()))return null;let n=t.endsWith("/")?t.length-1:t.length,r=e.charAt(n);return r&&"/"!==r?null:e.slice(n)||"/"}function $(e,t,n,r){return"Cannot include a '"+e+"' character in a manually specified `to."+t+"` field ["+JSON.stringify(r)+"].  Please separate it out to the `to."+n+'` field. Alternatively you may provide the full path as a string in <Link to="..."> and the router will parse it for you.'}function O(e){return e.filter(((e,t)=>0===t||e.route.path&&e.route.path.length>0))}function N(e,t){let n=O(e);return t?n.map(((e,t)=>t===n.length-1?e.pathname:e.pathnameBase)):n.map((e=>e.pathnameBase))}function M(e,t,n,r){let o;void 0===r&&(r=!1),"string"===typeof e?o=f(e):(o=i({},e),s(!o.pathname||!o.pathname.includes("?"),$("?","pathname","search",o)),s(!o.pathname||!o.pathname.includes("#"),$("#","pathname","hash",o)),s(!o.search||!o.search.includes("#"),$("#","search","hash",o)));let a,l=""===e||""===o.pathname,c=l?"/":o.pathname;if(null==c)a=n;else{let e=t.length-1;if(!r&&c.startsWith("..")){let t=c.split("/");for(;".."===t[0];)t.shift(),e-=1;o.pathname=t.join("/")}a=e>=0?t[e]:"/"}let u=function(e,t){void 0===t&&(t="/");let{pathname:n,search:r="",hash:o=""}="string"===typeof e?f(e):e,a=n?n.startsWith("/")?n:function(e,t){let n=t.replace(/\/+$/,"").split("/");return e.split("/").forEach((e=>{".."===e?n.length>1&&n.pop():"."!==e&&n.push(e)})),n.length>1?n.join("/"):"/"}(n,t):t;return{pathname:a,search:D(r),hash:F(o)}}(o,a),d=c&&"/"!==c&&c.endsWith("/"),p=(l||"."===c)&&n.endsWith("/");return u.pathname.endsWith("/")||!d&&!p||(u.pathname+="/"),u}const L=e=>e.join("/").replace(/\/\/+/g,"/"),z=e=>e.replace(/\/+$/,"").replace(/^\/*/,"/"),D=e=>e&&"?"!==e?e.startsWith("?")?e:"?"+e:"",F=e=>e&&"#"!==e?e.startsWith("#")?e:"#"+e:"";Error;function B(e){return null!=e&&"number"===typeof e.status&&"string"===typeof e.statusText&&"boolean"===typeof e.internal&&"data"in e}const W=["post","put","patch","delete"],U=(new Set(W),["get",...W]);new Set(U),new Set([301,302,303,307,308]),new Set([307,308]);Symbol("deferred");function V(){return V=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},V.apply(this,arguments)}const H=r.createContext(null);const K=r.createContext(null);const q=r.createContext(null);const G=r.createContext(null);const X=r.createContext({outlet:null,matches:[],isDataRoute:!1});const Q=r.createContext(null);function Y(){return null!=r.useContext(G)}function J(){return Y()||s(!1),r.useContext(G).location}function Z(e){r.useContext(q).static||r.useLayoutEffect(e)}function ee(){let{isDataRoute:e}=r.useContext(X);return e?function(){let{router:e}=de(ce.UseNavigateStable),t=fe(ue.UseNavigateStable),n=r.useRef(!1);return Z((()=>{n.current=!0})),r.useCallback((function(r,o){void 0===o&&(o={}),n.current&&("number"===typeof r?e.navigate(r):e.navigate(r,V({fromRouteId:t},o)))}),[e,t])}():function(){Y()||s(!1);let e=r.useContext(H),{basename:t,future:n,navigator:o}=r.useContext(q),{matches:a}=r.useContext(X),{pathname:i}=J(),l=JSON.stringify(N(a,n.v7_relativeSplatPath)),c=r.useRef(!1);return Z((()=>{c.current=!0})),r.useCallback((function(n,r){if(void 0===r&&(r={}),!c.current)return;if("number"===typeof n)return void o.go(n);let a=M(n,JSON.parse(l),i,"path"===r.relative);null==e&&"/"!==t&&(a.pathname="/"===a.pathname?t:L([t,a.pathname])),(r.replace?o.replace:o.push)(a,r.state,r)}),[t,o,l,i,e])}()}function te(){let{matches:e}=r.useContext(X),t=e[e.length-1];return t?t.params:{}}function ne(e,t){let{relative:n}=void 0===t?{}:t,{future:o}=r.useContext(q),{matches:a}=r.useContext(X),{pathname:i}=J(),l=JSON.stringify(N(a,o.v7_relativeSplatPath));return r.useMemo((()=>M(e,JSON.parse(l),i,"path"===n)),[e,l,i,n])}function re(t,n,o,a){Y()||s(!1);let{navigator:i,static:l}=r.useContext(q),{matches:c}=r.useContext(X),u=c[c.length-1],d=u?u.params:{},p=(u&&u.pathname,u?u.pathnameBase:"/");u&&u.route;let m,h=J();if(n){var g;let e="string"===typeof n?f(n):n;"/"===p||(null==(g=e.pathname)?void 0:g.startsWith(p))||s(!1),m=e}else m=h;let y=m.pathname||"/",b=y;if("/"!==p){let e=p.replace(/^\//,"").split("/");b="/"+y.replace(/^\//,"").split("/").slice(e.length).join("/")}let x=!l&&o&&o.matches&&o.matches.length>0?o.matches:v(t,{pathname:b});let A=se(x&&x.map((e=>Object.assign({},e,{params:Object.assign({},d,e.params),pathname:L([p,i.encodeLocation?i.encodeLocation(e.pathname).pathname:e.pathname]),pathnameBase:"/"===e.pathnameBase?p:L([p,i.encodeLocation?i.encodeLocation(e.pathnameBase).pathname:e.pathnameBase])}))),c,o,a);return n&&A?r.createElement(G.Provider,{value:{location:V({pathname:"/",search:"",hash:"",state:null,key:"default"},m),navigationType:e.Pop}},A):A}function oe(){let e=function(){var e;let t=r.useContext(Q),n=pe(ue.UseRouteError),o=fe(ue.UseRouteError);if(void 0!==t)return t;return null==(e=n.errors)?void 0:e[o]}(),t=B(e)?e.status+" "+e.statusText:e instanceof Error?e.message:JSON.stringify(e),n=e instanceof Error?e.stack:null,o="rgba(200,200,200, 0.5)",a={padding:"0.5rem",backgroundColor:o};return r.createElement(r.Fragment,null,r.createElement("h2",null,"Unexpected Application Error!"),r.createElement("h3",{style:{fontStyle:"italic"}},t),n?r.createElement("pre",{style:a},n):null,null)}const ae=r.createElement(oe,null);class ie extends r.Component{constructor(e){super(e),this.state={location:e.location,revalidation:e.revalidation,error:e.error}}static getDerivedStateFromError(e){return{error:e}}static getDerivedStateFromProps(e,t){return t.location!==e.location||"idle"!==t.revalidation&&"idle"===e.revalidation?{error:e.error,location:e.location,revalidation:e.revalidation}:{error:void 0!==e.error?e.error:t.error,location:t.location,revalidation:e.revalidation||t.revalidation}}componentDidCatch(e,t){console.error("React Router caught the following error during render",e,t)}render(){return void 0!==this.state.error?r.createElement(X.Provider,{value:this.props.routeContext},r.createElement(Q.Provider,{value:this.state.error,children:this.props.component})):this.props.children}}function le(e){let{routeContext:t,match:n,children:o}=e,a=r.useContext(H);return a&&a.static&&a.staticContext&&(n.route.errorElement||n.route.ErrorBoundary)&&(a.staticContext._deepestRenderedBoundaryId=n.route.id),r.createElement(X.Provider,{value:t},o)}function se(e,t,n,o){var a;if(void 0===t&&(t=[]),void 0===n&&(n=null),void 0===o&&(o=null),null==e){var i;if(!n)return null;if(n.errors)e=n.matches;else{if(!(null!=(i=o)&&i.v7_partialHydration&&0===t.length&&!n.initialized&&n.matches.length>0))return null;e=n.matches}}let l=e,c=null==(a=n)?void 0:a.errors;if(null!=c){let e=l.findIndex((e=>e.route.id&&void 0!==(null==c?void 0:c[e.route.id])));e>=0||s(!1),l=l.slice(0,Math.min(l.length,e+1))}let u=!1,d=-1;if(n&&o&&o.v7_partialHydration)for(let r=0;r<l.length;r++){let e=l[r];if((e.route.HydrateFallback||e.route.hydrateFallbackElement)&&(d=r),e.route.id){let{loaderData:t,errors:r}=n,o=e.route.loader&&void 0===t[e.route.id]&&(!r||void 0===r[e.route.id]);if(e.route.lazy||o){u=!0,l=d>=0?l.slice(0,d+1):[l[0]];break}}}return l.reduceRight(((e,o,a)=>{let i,s=!1,p=null,f=null;var m;n&&(i=c&&o.route.id?c[o.route.id]:void 0,p=o.route.errorElement||ae,u&&(d<0&&0===a?(m="route-fallback",!1||me[m]||(me[m]=!0),s=!0,f=null):d===a&&(s=!0,f=o.route.hydrateFallbackElement||null)));let h=t.concat(l.slice(0,a+1)),g=()=>{let t;return t=i?p:s?f:o.route.Component?r.createElement(o.route.Component,null):o.route.element?o.route.element:e,r.createElement(le,{match:o,routeContext:{outlet:e,matches:h,isDataRoute:null!=n},children:t})};return n&&(o.route.ErrorBoundary||o.route.errorElement||0===a)?r.createElement(ie,{location:n.location,revalidation:n.revalidation,component:p,error:i,children:g(),routeContext:{outlet:null,matches:h,isDataRoute:!0}}):g()}),null)}var ce=function(e){return e.UseBlocker="useBlocker",e.UseRevalidator="useRevalidator",e.UseNavigateStable="useNavigate",e}(ce||{}),ue=function(e){return e.UseBlocker="useBlocker",e.UseLoaderData="useLoaderData",e.UseActionData="useActionData",e.UseRouteError="useRouteError",e.UseNavigation="useNavigation",e.UseRouteLoaderData="useRouteLoaderData",e.UseMatches="useMatches",e.UseRevalidator="useRevalidator",e.UseNavigateStable="useNavigate",e.UseRouteId="useRouteId",e}(ue||{});function de(e){let t=r.useContext(H);return t||s(!1),t}function pe(e){let t=r.useContext(K);return t||s(!1),t}function fe(e){let t=function(){let e=r.useContext(X);return e||s(!1),e}(),n=t.matches[t.matches.length-1];return n.route.id||s(!1),n.route.id}const me={};function he(e,t){null==e||e.v7_startTransition,void 0===(null==e?void 0:e.v7_relativeSplatPath)&&(!t||t.v7_relativeSplatPath),t&&(t.v7_fetcherPersist,t.v7_normalizeFormMethod,t.v7_partialHydration,t.v7_skipActionErrorRevalidation)}o.startTransition;function ge(e){let{to:t,replace:n,state:o,relative:a}=e;Y()||s(!1);let{future:i,static:l}=r.useContext(q),{matches:c}=r.useContext(X),{pathname:u}=J(),d=ee(),p=M(t,N(c,i.v7_relativeSplatPath),u,"path"===a),f=JSON.stringify(p);return r.useEffect((()=>d(JSON.parse(f),{replace:n,state:o,relative:a})),[d,f,a,n,o]),null}function ve(e){s(!1)}function ye(t){let{basename:n="/",children:o=null,location:a,navigationType:i=e.Pop,navigator:l,static:c=!1,future:u}=t;Y()&&s(!1);let d=n.replace(/^\/*/,"/"),p=r.useMemo((()=>({basename:d,navigator:l,static:c,future:V({v7_relativeSplatPath:!1},u)})),[d,u,l,c]);"string"===typeof a&&(a=f(a));let{pathname:m="/",search:h="",hash:g="",state:v=null,key:y="default"}=a,b=r.useMemo((()=>{let e=T(m,d);return null==e?null:{location:{pathname:e,search:h,hash:g,state:v,key:y},navigationType:i}}),[d,m,h,g,v,y,i]);return null==b?null:r.createElement(q.Provider,{value:p},r.createElement(G.Provider,{children:o,value:b}))}function be(e){let{children:t,location:n}=e;return re(xe(t),n)}new Promise((()=>{}));r.Component;function xe(e,t){void 0===t&&(t=[]);let n=[];return r.Children.forEach(e,((e,o)=>{if(!r.isValidElement(e))return;let a=[...t,o];if(e.type===r.Fragment)return void n.push.apply(n,xe(e.props.children,a));e.type!==ve&&s(!1),e.props.index&&e.props.children&&s(!1);let i={id:e.props.id||a.join("-"),caseSensitive:e.props.caseSensitive,element:e.props.element,Component:e.props.Component,index:e.props.index,path:e.props.path,loader:e.props.loader,action:e.props.action,errorElement:e.props.errorElement,ErrorBoundary:e.props.ErrorBoundary,hasErrorBoundary:null!=e.props.ErrorBoundary||null!=e.props.errorElement,shouldRevalidate:e.props.shouldRevalidate,handle:e.props.handle,lazy:e.props.lazy};e.props.children&&(i.children=xe(e.props.children,a)),n.push(i)})),n}var Ae=n(7950),we=n.t(Ae,2);function Se(){return Se=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},Se.apply(this,arguments)}function ke(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}new Set(["application/x-www-form-urlencoded","multipart/form-data","text/plain"]);const Ce=["onClick","relative","reloadDocument","replace","state","target","to","preventScrollReset","viewTransition"];try{window.__reactRouterVersion="6"}catch(bp){}new Map;const Ee=o.startTransition;we.flushSync,o.useId;function je(e){let{basename:t,children:n,future:o,window:a}=e,i=r.useRef();var l;null==i.current&&(i.current=(void 0===(l={window:a,v5Compat:!0})&&(l={}),m((function(e,t){let{pathname:n,search:r,hash:o}=e.location;return d("",{pathname:n,search:r,hash:o},t.state&&t.state.usr||null,t.state&&t.state.key||"default")}),(function(e,t){return"string"===typeof t?t:p(t)}),null,l)));let s=i.current,[c,u]=r.useState({action:s.action,location:s.location}),{v7_startTransition:f}=o||{},h=r.useCallback((e=>{f&&Ee?Ee((()=>u(e))):u(e)}),[u,f]);return r.useLayoutEffect((()=>s.listen(h)),[s,h]),r.useEffect((()=>he(o)),[o]),r.createElement(ye,{basename:t,children:n,location:c.location,navigationType:c.action,navigator:s,future:o})}const _e="undefined"!==typeof window&&"undefined"!==typeof window.document&&"undefined"!==typeof window.document.createElement,Pe=/^(?:[a-z][a-z0-9+.-]*:|\/\/)/i,Re=r.forwardRef((function(e,t){let n,{onClick:o,relative:a,reloadDocument:i,replace:l,state:c,target:u,to:d,preventScrollReset:f,viewTransition:m}=e,h=ke(e,Ce),{basename:g}=r.useContext(q),v=!1;if("string"===typeof d&&Pe.test(d)&&(n=d,_e))try{let e=new URL(window.location.href),t=d.startsWith("//")?new URL(e.protocol+d):new URL(d),n=T(t.pathname,g);t.origin===e.origin&&null!=n?d=n+t.search+t.hash:v=!0}catch(bp){}let y=function(e,t){let{relative:n}=void 0===t?{}:t;Y()||s(!1);let{basename:o,navigator:a}=r.useContext(q),{hash:i,pathname:l,search:c}=ne(e,{relative:n}),u=l;return"/"!==o&&(u="/"===l?o:L([o,l])),a.createHref({pathname:u,search:c,hash:i})}(d,{relative:a}),b=function(e,t){let{target:n,replace:o,state:a,preventScrollReset:i,relative:l,viewTransition:s}=void 0===t?{}:t,c=ee(),u=J(),d=ne(e,{relative:l});return r.useCallback((t=>{if(function(e,t){return 0===e.button&&(!t||"_self"===t)&&!function(e){return!!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)}(e)}(t,n)){t.preventDefault();let n=void 0!==o?o:p(u)===p(d);c(e,{replace:n,state:a,preventScrollReset:i,relative:l,viewTransition:s})}}),[u,c,d,o,a,n,e,i,l,s])}(d,{replace:l,state:c,target:u,preventScrollReset:f,relative:a,viewTransition:m});return r.createElement("a",Se({},h,{href:n||y,onClick:v||i?o:function(e){o&&o(e),e.defaultPrevented||b(e)},ref:t,target:u}))}));var Ie,Te,$e,Oe;(Te=Ie||(Ie={})).UseScrollRestoration="useScrollRestoration",Te.UseSubmit="useSubmit",Te.UseSubmitFetcher="useSubmitFetcher",Te.UseFetcher="useFetcher",Te.useViewTransitionState="useViewTransitionState",(Oe=$e||($e={})).UseFetcher="useFetcher",Oe.UseFetchers="useFetchers",Oe.UseScrollRestoration="useScrollRestoration";var Ne=n(8279),Me=n(8168),Le=n(8587),ze=n(8387),De=n(3174),Fe=n(8812),Be=n(8698),We=n(5527),Ue=n(579);const Ve=["className","component"];var He=n(9386),Ke=n(3375),qe=n(2532);const Ge=(0,qe.A)("MuiBox",["root"]),Xe=(0,Ne.A)(),Qe=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const{themeId:t,defaultTheme:n,defaultClassName:o="MuiBox-root",generateClassName:a}=e,i=(0,De.default)("div",{shouldForwardProp:e=>"theme"!==e&&"sx"!==e&&"as"!==e})(Fe.A);return r.forwardRef((function(e,r){const l=(0,We.A)(n),s=(0,Be.A)(e),{className:c,component:u="div"}=s,d=(0,Le.A)(s,Ve);return(0,Ue.jsx)(i,(0,Me.A)({as:u,ref:r,className:(0,ze.A)(c,a?a(o):o),theme:t&&l[t]||l},d))}))}({themeId:Ke.A,defaultTheme:Xe,defaultClassName:Ge.root,generateClassName:He.A.generate});var Ye=n(2372),Je=n(8610),Ze=n(7598),et=n(2919),tt=n(9172),nt=n(8280);const rt=["ownerState"],ot=["variants"],at=["name","slot","skipVariantsResolver","skipSx","overridesResolver"];function it(e){return"ownerState"!==e&&"theme"!==e&&"sx"!==e&&"as"!==e}const lt=(0,nt.A)(),st=e=>e?e.charAt(0).toLowerCase()+e.slice(1):e;function ct(e){let{defaultTheme:t,theme:n,themeId:r}=e;return o=n,0===Object.keys(o).length?t:n[r]||n;var o}function ut(e){return e?(t,n)=>n[e]:null}function dt(e,t){let{ownerState:n}=t,r=(0,Le.A)(t,rt);const o="function"===typeof e?e((0,Me.A)({ownerState:n},r)):e;if(Array.isArray(o))return o.flatMap((e=>dt(e,(0,Me.A)({ownerState:n},r))));if(o&&"object"===typeof o&&Array.isArray(o.variants)){const{variants:e=[]}=o;let t=(0,Le.A)(o,ot);return e.forEach((e=>{let o=!0;"function"===typeof e.props?o=e.props((0,Me.A)({ownerState:n},r,n)):Object.keys(e.props).forEach((t=>{(null==n?void 0:n[t])!==e.props[t]&&r[t]!==e.props[t]&&(o=!1)})),o&&(Array.isArray(t)||(t=[t]),t.push("function"===typeof e.style?e.style((0,Me.A)({ownerState:n},r,n)):e.style))})),t}return o}const pt=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const{themeId:t,defaultTheme:n=lt,rootShouldForwardProp:r=it,slotShouldForwardProp:o=it}=e,a=e=>(0,Fe.A)((0,Me.A)({},e,{theme:ct((0,Me.A)({},e,{defaultTheme:n,themeId:t}))}));return a.__mui_systemSx=!0,function(e){let i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};(0,De.internal_processStyles)(e,(e=>e.filter((e=>!(null!=e&&e.__mui_systemSx)))));const{name:l,slot:s,skipVariantsResolver:c,skipSx:u,overridesResolver:d=ut(st(s))}=i,p=(0,Le.A)(i,at),f=void 0!==c?c:s&&"Root"!==s&&"root"!==s||!1,m=u||!1;let h=it;"Root"===s||"root"===s?h=r:s?h=o:function(e){return"string"===typeof e&&e.charCodeAt(0)>96}(e)&&(h=void 0);const g=(0,De.default)(e,(0,Me.A)({shouldForwardProp:h,label:undefined},p)),v=e=>"function"===typeof e&&e.__emotion_real!==e||(0,tt.Q)(e)?r=>dt(e,(0,Me.A)({},r,{theme:ct({theme:r.theme,defaultTheme:n,themeId:t})})):e,y=function(r){let o=v(r);for(var i=arguments.length,s=new Array(i>1?i-1:0),c=1;c<i;c++)s[c-1]=arguments[c];const u=s?s.map(v):[];l&&d&&u.push((e=>{const r=ct((0,Me.A)({},e,{defaultTheme:n,themeId:t}));if(!r.components||!r.components[l]||!r.components[l].styleOverrides)return null;const o=r.components[l].styleOverrides,a={};return Object.entries(o).forEach((t=>{let[n,o]=t;a[n]=dt(o,(0,Me.A)({},e,{theme:r}))})),d(e,a)})),l&&!f&&u.push((e=>{var r;const o=ct((0,Me.A)({},e,{defaultTheme:n,themeId:t}));return dt({variants:null==o||null==(r=o.components)||null==(r=r[l])?void 0:r.variants},(0,Me.A)({},e,{theme:o}))})),m||u.push(a);const p=u.length-s.length;if(Array.isArray(r)&&p>0){const e=new Array(p).fill("");o=[...r,...e],o.raw=[...r.raw,...e]}const h=g(o,...u);return e.muiName&&(h.muiName=e.muiName),h};return g.withConfig&&(y.withConfig=g.withConfig),y}}(),ft=["className","component","disableGutters","fixed","maxWidth","classes"],mt=(0,nt.A)(),ht=pt("div",{name:"MuiContainer",slot:"Root",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[t.root,t[`maxWidth${(0,Ze.A)(String(n.maxWidth))}`],n.fixed&&t.fixed,n.disableGutters&&t.disableGutters]}}),gt=e=>(0,et.A)({props:e,name:"MuiContainer",defaultTheme:mt});var vt=n(6803),yt=n(4535),bt=n(2876);const xt=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const{createStyledComponent:t=ht,useThemeProps:n=gt,componentName:o="MuiContainer"}=e,a=t((e=>{let{theme:t,ownerState:n}=e;return(0,Me.A)({width:"100%",marginLeft:"auto",boxSizing:"border-box",marginRight:"auto",display:"block"},!n.disableGutters&&{paddingLeft:t.spacing(2),paddingRight:t.spacing(2),[t.breakpoints.up("sm")]:{paddingLeft:t.spacing(3),paddingRight:t.spacing(3)}})}),(e=>{let{theme:t,ownerState:n}=e;return n.fixed&&Object.keys(t.breakpoints.values).reduce(((e,n)=>{const r=n,o=t.breakpoints.values[r];return 0!==o&&(e[t.breakpoints.up(r)]={maxWidth:`${o}${t.breakpoints.unit}`}),e}),{})}),(e=>{let{theme:t,ownerState:n}=e;return(0,Me.A)({},"xs"===n.maxWidth&&{[t.breakpoints.up("xs")]:{maxWidth:Math.max(t.breakpoints.values.xs,444)}},n.maxWidth&&"xs"!==n.maxWidth&&{[t.breakpoints.up(n.maxWidth)]:{maxWidth:`${t.breakpoints.values[n.maxWidth]}${t.breakpoints.unit}`}})}));return r.forwardRef((function(e,t){const r=n(e),{className:i,component:l="div",disableGutters:s=!1,fixed:c=!1,maxWidth:u="lg"}=r,d=(0,Le.A)(r,ft),p=(0,Me.A)({},r,{component:l,disableGutters:s,fixed:c,maxWidth:u}),f=((e,t)=>{const{classes:n,fixed:r,disableGutters:o,maxWidth:a}=e,i={root:["root",a&&`maxWidth${(0,Ze.A)(String(a))}`,r&&"fixed",o&&"disableGutters"]};return(0,Je.A)(i,(e=>(0,Ye.Ay)(t,e)),n)})(p,o);return(0,Ue.jsx)(a,(0,Me.A)({as:l,ownerState:p,className:(0,ze.A)(f.root,i),ref:t},d))}))}({createStyledComponent:(0,yt.Ay)("div",{name:"MuiContainer",slot:"Root",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[t.root,t[`maxWidth${(0,vt.A)(String(n.maxWidth))}`],n.fixed&&t.fixed,n.disableGutters&&t.disableGutters]}}),useThemeProps:e=>(0,bt.A)({props:e,name:"MuiContainer"})});const At=r.createContext(null);function wt(){return r.useContext(At)}const St="function"===typeof Symbol&&Symbol.for?Symbol.for("mui.nested"):"__THEME_NESTED__";const kt=function(e){const{children:t,theme:n}=e,o=wt(),a=r.useMemo((()=>{const e=null===o?n:function(e,t){if("function"===typeof t)return t(e);return(0,Me.A)({},e,t)}(o,n);return null!=e&&(e[St]=null!==o),e}),[n,o]);return(0,Ue.jsx)(At.Provider,{value:a,children:t})};var Ct=n(9369),Et=n(7082);const jt=["value"],_t=r.createContext();const Pt=function(e){let{value:t}=e,n=(0,Le.A)(e,jt);return(0,Ue.jsx)(_t.Provider,(0,Me.A)({value:null==t||t},n))},Rt=r.createContext(void 0);const It=function(e){let{value:t,children:n}=e;return(0,Ue.jsx)(Rt.Provider,{value:t,children:n})},Tt={};function $t(e,t,n){let o=arguments.length>3&&void 0!==arguments[3]&&arguments[3];return r.useMemo((()=>{const r=e&&t[e]||t;if("function"===typeof n){const a=n(r),i=e?(0,Me.A)({},t,{[e]:a}):a;return o?()=>i:i}return e?(0,Me.A)({},t,{[e]:n}):(0,Me.A)({},t,n)}),[e,t,n,o])}const Ot=function(e){const{children:t,theme:n,themeId:r}=e,o=(0,Et.A)(Tt),a=wt()||Tt,i=$t(r,o,n),l=$t(r,a,n,!0),s="rtl"===i.direction;return(0,Ue.jsx)(kt,{theme:l,children:(0,Ue.jsx)(Ct.T.Provider,{value:i,children:(0,Ue.jsx)(Pt,{value:s,children:(0,Ue.jsx)(It,{value:null==i?void 0:i.components,children:t})})})})},Nt=["theme"];function Mt(e){let{theme:t}=e,n=(0,Le.A)(e,Nt);const r=t[Ke.A];return(0,Ue.jsx)(Ot,(0,Me.A)({},n,{themeId:r?Ke.A:void 0,theme:r||t}))}var Lt=n(869);const zt=function(e){let{styles:t,themeId:n,defaultTheme:r={}}=e;const o=(0,We.A)(r),a="function"===typeof t?t(n&&o[n]||o):t;return(0,Ue.jsx)(Lt.A,{styles:a})};var Dt=n(5170);const Ft=function(e){return(0,Ue.jsx)(zt,(0,Me.A)({},e,{defaultTheme:Dt.A,themeId:Ke.A}))},Bt=(e,t)=>(0,Me.A)({WebkitFontSmoothing:"antialiased",MozOsxFontSmoothing:"grayscale",boxSizing:"border-box",WebkitTextSizeAdjust:"100%"},t&&!e.vars&&{colorScheme:e.palette.mode}),Wt=e=>(0,Me.A)({color:(e.vars||e).palette.text.primary},e.typography.body1,{backgroundColor:(e.vars||e).palette.background.default,"@media print":{backgroundColor:(e.vars||e).palette.common.white}});const Ut=function(e){const t=(0,bt.A)({props:e,name:"MuiCssBaseline"}),{children:n,enableColorScheme:o=!1}=t;return(0,Ue.jsxs)(r.Fragment,{children:[(0,Ue.jsx)(Ft,{styles:e=>function(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];var n;const r={};t&&e.colorSchemes&&Object.entries(e.colorSchemes).forEach((t=>{let[n,o]=t;var a;r[e.getColorSchemeSelector(n).replace(/\s*&/,"")]={colorScheme:null==(a=o.palette)?void 0:a.mode}}));let o=(0,Me.A)({html:Bt(e,t),"*, *::before, *::after":{boxSizing:"inherit"},"strong, b":{fontWeight:e.typography.fontWeightBold},body:(0,Me.A)({margin:0},Wt(e),{"&::backdrop":{backgroundColor:(e.vars||e).palette.background.default}})},r);const a=null==(n=e.components)||null==(n=n.MuiCssBaseline)?void 0:n.styleOverrides;return a&&(o=[o,a]),o}(e,o)}),n]})};var Vt=n(7266);const Ht=e=>{let t;return t=e<1?5.11916*e**2:4.5*Math.log(e+1)+2,(t/100).toFixed(2)};function Kt(e){return(0,Ye.Ay)("MuiPaper",e)}(0,qe.A)("MuiPaper",["root","rounded","outlined","elevation","elevation0","elevation1","elevation2","elevation3","elevation4","elevation5","elevation6","elevation7","elevation8","elevation9","elevation10","elevation11","elevation12","elevation13","elevation14","elevation15","elevation16","elevation17","elevation18","elevation19","elevation20","elevation21","elevation22","elevation23","elevation24"]);const qt=["className","component","elevation","square","variant"],Gt=(0,yt.Ay)("div",{name:"MuiPaper",slot:"Root",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[t.root,t[n.variant],!n.square&&t.rounded,"elevation"===n.variant&&t[`elevation${n.elevation}`]]}})((e=>{let{theme:t,ownerState:n}=e;var r;return(0,Me.A)({backgroundColor:(t.vars||t).palette.background.paper,color:(t.vars||t).palette.text.primary,transition:t.transitions.create("box-shadow")},!n.square&&{borderRadius:t.shape.borderRadius},"outlined"===n.variant&&{border:`1px solid ${(t.vars||t).palette.divider}`},"elevation"===n.variant&&(0,Me.A)({boxShadow:(t.vars||t).shadows[n.elevation]},!t.vars&&"dark"===t.palette.mode&&{backgroundImage:`linear-gradient(${(0,Vt.X4)("#fff",Ht(n.elevation))}, ${(0,Vt.X4)("#fff",Ht(n.elevation))})`},t.vars&&{backgroundImage:null==(r=t.vars.overlays)?void 0:r[n.elevation]}))})),Xt=r.forwardRef((function(e,t){const n=(0,bt.A)({props:e,name:"MuiPaper"}),{className:r,component:o="div",elevation:a=1,square:i=!1,variant:l="elevation"}=n,s=(0,Le.A)(n,qt),c=(0,Me.A)({},n,{component:o,elevation:a,square:i,variant:l}),u=(e=>{const{square:t,elevation:n,variant:r,classes:o}=e,a={root:["root",r,!t&&"rounded","elevation"===r&&`elevation${n}`]};return(0,Je.A)(a,Kt,o)})(c);return(0,Ue.jsx)(Gt,(0,Me.A)({as:o,ownerState:c,className:(0,ze.A)(u.root,r),ref:t},s))}));function Qt(e){return(0,Ye.Ay)("MuiCard",e)}(0,qe.A)("MuiCard",["root"]);const Yt=["className","raised"],Jt=(0,yt.Ay)(Xt,{name:"MuiCard",slot:"Root",overridesResolver:(e,t)=>t.root})((()=>({overflow:"hidden"}))),Zt=r.forwardRef((function(e,t){const n=(0,bt.A)({props:e,name:"MuiCard"}),{className:r,raised:o=!1}=n,a=(0,Le.A)(n,Yt),i=(0,Me.A)({},n,{raised:o}),l=(e=>{const{classes:t}=e;return(0,Je.A)({root:["root"]},Qt,t)})(i);return(0,Ue.jsx)(Jt,(0,Me.A)({className:(0,ze.A)(l.root,r),elevation:o?8:void 0,ref:t,ownerState:i},a))}));function en(e){return(0,Ye.Ay)("MuiCardContent",e)}(0,qe.A)("MuiCardContent",["root"]);const tn=["className","component"],nn=(0,yt.Ay)("div",{name:"MuiCardContent",slot:"Root",overridesResolver:(e,t)=>t.root})((()=>({padding:16,"&:last-child":{paddingBottom:24}}))),rn=r.forwardRef((function(e,t){const n=(0,bt.A)({props:e,name:"MuiCardContent"}),{className:r,component:o="div"}=n,a=(0,Le.A)(n,tn),i=(0,Me.A)({},n,{component:o}),l=(e=>{const{classes:t}=e;return(0,Je.A)({root:["root"]},en,t)})(i);return(0,Ue.jsx)(nn,(0,Me.A)({as:o,className:(0,ze.A)(l.root,r),ownerState:i,ref:t},a))}));function on(e){return(0,Ye.Ay)("MuiTypography",e)}(0,qe.A)("MuiTypography",["root","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","inherit","button","caption","overline","alignLeft","alignRight","alignCenter","alignJustify","noWrap","gutterBottom","paragraph"]);const an=["align","className","component","gutterBottom","noWrap","paragraph","variant","variantMapping"],ln=(0,yt.Ay)("span",{name:"MuiTypography",slot:"Root",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[t.root,n.variant&&t[n.variant],"inherit"!==n.align&&t[`align${(0,vt.A)(n.align)}`],n.noWrap&&t.noWrap,n.gutterBottom&&t.gutterBottom,n.paragraph&&t.paragraph]}})((e=>{let{theme:t,ownerState:n}=e;return(0,Me.A)({margin:0},"inherit"===n.variant&&{font:"inherit"},"inherit"!==n.variant&&t.typography[n.variant],"inherit"!==n.align&&{textAlign:n.align},n.noWrap&&{overflow:"hidden",textOverflow:"ellipsis",whiteSpace:"nowrap"},n.gutterBottom&&{marginBottom:"0.35em"},n.paragraph&&{marginBottom:16})})),sn={h1:"h1",h2:"h2",h3:"h3",h4:"h4",h5:"h5",h6:"h6",subtitle1:"h6",subtitle2:"h6",body1:"p",body2:"p",inherit:"p"},cn={primary:"primary.main",textPrimary:"text.primary",secondary:"secondary.main",textSecondary:"text.secondary",error:"error.main"},un=r.forwardRef((function(e,t){const n=(0,bt.A)({props:e,name:"MuiTypography"}),r=(e=>cn[e]||e)(n.color),o=(0,Be.A)((0,Me.A)({},n,{color:r})),{align:a="inherit",className:i,component:l,gutterBottom:s=!1,noWrap:c=!1,paragraph:u=!1,variant:d="body1",variantMapping:p=sn}=o,f=(0,Le.A)(o,an),m=(0,Me.A)({},o,{align:a,color:r,className:i,component:l,gutterBottom:s,noWrap:c,paragraph:u,variant:d,variantMapping:p}),h=l||(u?"p":p[d]||sn[d])||"span",g=(e=>{const{align:t,gutterBottom:n,noWrap:r,paragraph:o,variant:a,classes:i}=e,l={root:["root",a,"inherit"!==e.align&&`align${(0,vt.A)(t)}`,n&&"gutterBottom",r&&"noWrap",o&&"paragraph"]};return(0,Je.A)(l,on,i)})(m);return(0,Ue.jsx)(ln,(0,Me.A)({as:h,ref:t,ownerState:m,className:(0,ze.A)(g.root,i)},f))}));var dn=n(5844),pn=n(7868),fn=n(3462),mn=n(3940),hn=n(4440),gn=n(3468);const vn=["onChange","maxRows","minRows","style","value"];function yn(e){return parseInt(e,10)||0}const bn={visibility:"hidden",position:"absolute",overflow:"hidden",height:0,top:0,left:0,transform:"translateZ(0)"};const xn=r.forwardRef((function(e,t){const{onChange:n,maxRows:o,minRows:a=1,style:i,value:l}=e,s=(0,Le.A)(e,vn),{current:c}=r.useRef(null!=l),u=r.useRef(null),d=(0,fn.A)(t,u),p=r.useRef(null),f=r.useCallback((()=>{const t=u.current,n=(0,mn.A)(t).getComputedStyle(t);if("0px"===n.width)return{outerHeightStyle:0,overflowing:!1};const r=p.current;r.style.width=n.width,r.value=t.value||e.placeholder||"x","\n"===r.value.slice(-1)&&(r.value+=" ");const i=n.boxSizing,l=yn(n.paddingBottom)+yn(n.paddingTop),s=yn(n.borderBottomWidth)+yn(n.borderTopWidth),c=r.scrollHeight;r.value="x";const d=r.scrollHeight;let f=c;a&&(f=Math.max(Number(a)*d,f)),o&&(f=Math.min(Number(o)*d,f)),f=Math.max(f,d);return{outerHeightStyle:f+("border-box"===i?l+s:0),overflowing:Math.abs(f-c)<=1}}),[o,a,e.placeholder]),m=r.useCallback((()=>{const e=f();if(void 0===(t=e)||null===t||0===Object.keys(t).length||0===t.outerHeightStyle&&!t.overflowing)return;var t;const n=u.current;n.style.height=`${e.outerHeightStyle}px`,n.style.overflow=e.overflowing?"hidden":""}),[f]);(0,hn.A)((()=>{const e=()=>{m()};let t;const n=(0,gn.A)(e),r=u.current,o=(0,mn.A)(r);let a;return o.addEventListener("resize",n),"undefined"!==typeof ResizeObserver&&(a=new ResizeObserver(e),a.observe(r)),()=>{n.clear(),cancelAnimationFrame(t),o.removeEventListener("resize",n),a&&a.disconnect()}}),[f,m]),(0,hn.A)((()=>{m()}));return(0,Ue.jsxs)(r.Fragment,{children:[(0,Ue.jsx)("textarea",(0,Me.A)({value:l,onChange:e=>{c||m(),n&&n(e)},ref:d,rows:a},s)),(0,Ue.jsx)("textarea",{"aria-hidden":!0,className:e.className,readOnly:!0,ref:p,tabIndex:-1,style:(0,Me.A)({},bn,i,{paddingTop:0,paddingBottom:0})})]})}));function An(e){return"string"===typeof e}function wn(e){let{props:t,states:n,muiFormControl:r}=e;return n.reduce(((e,n)=>(e[n]=t[n],r&&"undefined"===typeof t[n]&&(e[n]=r[n]),e)),{})}const Sn=r.createContext(void 0);function kn(){return r.useContext(Sn)}var Cn=n(5849),En=n(5013);function jn(e){return null!=e&&!(Array.isArray(e)&&0===e.length)}function _n(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return e&&(jn(e.value)&&""!==e.value||t&&jn(e.defaultValue)&&""!==e.defaultValue)}function Pn(e){return(0,Ye.Ay)("MuiInputBase",e)}const Rn=(0,qe.A)("MuiInputBase",["root","formControl","focused","disabled","adornedStart","adornedEnd","error","sizeSmall","multiline","colorSecondary","fullWidth","hiddenLabel","readOnly","input","inputSizeSmall","inputMultiline","inputTypeSearch","inputAdornedStart","inputAdornedEnd","inputHiddenLabel"]),In=["aria-describedby","autoComplete","autoFocus","className","color","components","componentsProps","defaultValue","disabled","disableInjectingGlobalStyles","endAdornment","error","fullWidth","id","inputComponent","inputProps","inputRef","margin","maxRows","minRows","multiline","name","onBlur","onChange","onClick","onFocus","onKeyDown","onKeyUp","placeholder","readOnly","renderSuffix","rows","size","slotProps","slots","startAdornment","type","value"],Tn=(e,t)=>{const{ownerState:n}=e;return[t.root,n.formControl&&t.formControl,n.startAdornment&&t.adornedStart,n.endAdornment&&t.adornedEnd,n.error&&t.error,"small"===n.size&&t.sizeSmall,n.multiline&&t.multiline,n.color&&t[`color${(0,vt.A)(n.color)}`],n.fullWidth&&t.fullWidth,n.hiddenLabel&&t.hiddenLabel]},$n=(e,t)=>{const{ownerState:n}=e;return[t.input,"small"===n.size&&t.inputSizeSmall,n.multiline&&t.inputMultiline,"search"===n.type&&t.inputTypeSearch,n.startAdornment&&t.inputAdornedStart,n.endAdornment&&t.inputAdornedEnd,n.hiddenLabel&&t.inputHiddenLabel]},On=(0,yt.Ay)("div",{name:"MuiInputBase",slot:"Root",overridesResolver:Tn})((e=>{let{theme:t,ownerState:n}=e;return(0,Me.A)({},t.typography.body1,{color:(t.vars||t).palette.text.primary,lineHeight:"1.4375em",boxSizing:"border-box",position:"relative",cursor:"text",display:"inline-flex",alignItems:"center",[`&.${Rn.disabled}`]:{color:(t.vars||t).palette.text.disabled,cursor:"default"}},n.multiline&&(0,Me.A)({padding:"4px 0 5px"},"small"===n.size&&{paddingTop:1}),n.fullWidth&&{width:"100%"})})),Nn=(0,yt.Ay)("input",{name:"MuiInputBase",slot:"Input",overridesResolver:$n})((e=>{let{theme:t,ownerState:n}=e;const r="light"===t.palette.mode,o=(0,Me.A)({color:"currentColor"},t.vars?{opacity:t.vars.opacity.inputPlaceholder}:{opacity:r?.42:.5},{transition:t.transitions.create("opacity",{duration:t.transitions.duration.shorter})}),a={opacity:"0 !important"},i=t.vars?{opacity:t.vars.opacity.inputPlaceholder}:{opacity:r?.42:.5};return(0,Me.A)({font:"inherit",letterSpacing:"inherit",color:"currentColor",padding:"4px 0 5px",border:0,boxSizing:"content-box",background:"none",height:"1.4375em",margin:0,WebkitTapHighlightColor:"transparent",display:"block",minWidth:0,width:"100%",animationName:"mui-auto-fill-cancel",animationDuration:"10ms","&::-webkit-input-placeholder":o,"&::-moz-placeholder":o,"&:-ms-input-placeholder":o,"&::-ms-input-placeholder":o,"&:focus":{outline:0},"&:invalid":{boxShadow:"none"},"&::-webkit-search-decoration":{WebkitAppearance:"none"},[`label[data-shrink=false] + .${Rn.formControl} &`]:{"&::-webkit-input-placeholder":a,"&::-moz-placeholder":a,"&:-ms-input-placeholder":a,"&::-ms-input-placeholder":a,"&:focus::-webkit-input-placeholder":i,"&:focus::-moz-placeholder":i,"&:focus:-ms-input-placeholder":i,"&:focus::-ms-input-placeholder":i},[`&.${Rn.disabled}`]:{opacity:1,WebkitTextFillColor:(t.vars||t).palette.text.disabled},"&:-webkit-autofill":{animationDuration:"5000s",animationName:"mui-auto-fill"}},"small"===n.size&&{paddingTop:1},n.multiline&&{height:"auto",resize:"none",padding:0,paddingTop:0},"search"===n.type&&{MozAppearance:"textfield"})})),Mn=(0,Ue.jsx)(Ft,{styles:{"@keyframes mui-auto-fill":{from:{display:"block"}},"@keyframes mui-auto-fill-cancel":{from:{display:"block"}}}}),Ln=r.forwardRef((function(e,t){var n;const o=(0,bt.A)({props:e,name:"MuiInputBase"}),{"aria-describedby":a,autoComplete:i,autoFocus:l,className:s,components:c={},componentsProps:u={},defaultValue:d,disabled:p,disableInjectingGlobalStyles:f,endAdornment:m,fullWidth:h=!1,id:g,inputComponent:v="input",inputProps:y={},inputRef:b,maxRows:x,minRows:A,multiline:w=!1,name:S,onBlur:k,onChange:C,onClick:E,onFocus:j,onKeyDown:_,onKeyUp:P,placeholder:R,readOnly:I,renderSuffix:T,rows:$,slotProps:O={},slots:N={},startAdornment:M,type:L="text",value:z}=o,D=(0,Le.A)(o,In),F=null!=y.value?y.value:z,{current:B}=r.useRef(null!=F),W=r.useRef(),U=r.useCallback((e=>{0}),[]),V=(0,Cn.A)(W,b,y.ref,U),[H,K]=r.useState(!1),q=kn();const G=wn({props:o,muiFormControl:q,states:["color","disabled","error","hiddenLabel","size","required","filled"]});G.focused=q?q.focused:H,r.useEffect((()=>{!q&&p&&H&&(K(!1),k&&k())}),[q,p,H,k]);const X=q&&q.onFilled,Q=q&&q.onEmpty,Y=r.useCallback((e=>{_n(e)?X&&X():Q&&Q()}),[X,Q]);(0,En.A)((()=>{B&&Y({value:F})}),[F,Y,B]);r.useEffect((()=>{Y(W.current)}),[]);let J=v,Z=y;w&&"input"===J&&(Z=$?(0,Me.A)({type:void 0,minRows:$,maxRows:$},Z):(0,Me.A)({type:void 0,maxRows:x,minRows:A},Z),J=xn);r.useEffect((()=>{q&&q.setAdornedStart(Boolean(M))}),[q,M]);const ee=(0,Me.A)({},o,{color:G.color||"primary",disabled:G.disabled,endAdornment:m,error:G.error,focused:G.focused,formControl:q,fullWidth:h,hiddenLabel:G.hiddenLabel,multiline:w,size:G.size,startAdornment:M,type:L}),te=(e=>{const{classes:t,color:n,disabled:r,error:o,endAdornment:a,focused:i,formControl:l,fullWidth:s,hiddenLabel:c,multiline:u,readOnly:d,size:p,startAdornment:f,type:m}=e,h={root:["root",`color${(0,vt.A)(n)}`,r&&"disabled",o&&"error",s&&"fullWidth",i&&"focused",l&&"formControl",p&&"medium"!==p&&`size${(0,vt.A)(p)}`,u&&"multiline",f&&"adornedStart",a&&"adornedEnd",c&&"hiddenLabel",d&&"readOnly"],input:["input",r&&"disabled","search"===m&&"inputTypeSearch",u&&"inputMultiline","small"===p&&"inputSizeSmall",c&&"inputHiddenLabel",f&&"inputAdornedStart",a&&"inputAdornedEnd",d&&"readOnly"]};return(0,Je.A)(h,Pn,t)})(ee),ne=N.root||c.Root||On,re=O.root||u.root||{},oe=N.input||c.Input||Nn;return Z=(0,Me.A)({},Z,null!=(n=O.input)?n:u.input),(0,Ue.jsxs)(r.Fragment,{children:[!f&&Mn,(0,Ue.jsxs)(ne,(0,Me.A)({},re,!An(ne)&&{ownerState:(0,Me.A)({},ee,re.ownerState)},{ref:t,onClick:e=>{W.current&&e.currentTarget===e.target&&W.current.focus(),E&&E(e)}},D,{className:(0,ze.A)(te.root,re.className,s,I&&"MuiInputBase-readOnly"),children:[M,(0,Ue.jsx)(Sn.Provider,{value:null,children:(0,Ue.jsx)(oe,(0,Me.A)({ownerState:ee,"aria-invalid":G.error,"aria-describedby":a,autoComplete:i,autoFocus:l,defaultValue:d,disabled:G.disabled,id:g,onAnimationStart:e=>{Y("mui-auto-fill-cancel"===e.animationName?W.current:{value:"x"})},name:S,placeholder:R,readOnly:I,required:G.required,rows:$,value:F,onKeyDown:_,onKeyUp:P,type:L},Z,!An(oe)&&{as:J,ownerState:(0,Me.A)({},ee,Z.ownerState)},{ref:V,className:(0,ze.A)(te.input,Z.className,I&&"MuiInputBase-readOnly"),onBlur:e=>{k&&k(e),y.onBlur&&y.onBlur(e),q&&q.onBlur?q.onBlur(e):K(!1)},onChange:function(e){if(!B){const t=e.target||W.current;if(null==t)throw new Error((0,pn.A)(1));Y({value:t.value})}for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];y.onChange&&y.onChange(e,...n),C&&C(e,...n)},onFocus:e=>{G.disabled?e.stopPropagation():(j&&j(e),y.onFocus&&y.onFocus(e),q&&q.onFocus?q.onFocus(e):K(!0))}}))}),m,T?T((0,Me.A)({},G,{startAdornment:M})):null]}))]})}));function zn(e){return(0,Ye.Ay)("MuiInput",e)}const Dn=(0,Me.A)({},Rn,(0,qe.A)("MuiInput",["root","underline","input"])),Fn=["disableUnderline","components","componentsProps","fullWidth","inputComponent","multiline","slotProps","slots","type"],Bn=(0,yt.Ay)(On,{shouldForwardProp:e=>(0,yt.ep)(e)||"classes"===e,name:"MuiInput",slot:"Root",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[...Tn(e,t),!n.disableUnderline&&t.underline]}})((e=>{let{theme:t,ownerState:n}=e;let r="light"===t.palette.mode?"rgba(0, 0, 0, 0.42)":"rgba(255, 255, 255, 0.7)";return t.vars&&(r=`rgba(${t.vars.palette.common.onBackgroundChannel} / ${t.vars.opacity.inputUnderline})`),(0,Me.A)({position:"relative"},n.formControl&&{"label + &":{marginTop:16}},!n.disableUnderline&&{"&::after":{borderBottom:`2px solid ${(t.vars||t).palette[n.color].main}`,left:0,bottom:0,content:'""',position:"absolute",right:0,transform:"scaleX(0)",transition:t.transitions.create("transform",{duration:t.transitions.duration.shorter,easing:t.transitions.easing.easeOut}),pointerEvents:"none"},[`&.${Dn.focused}:after`]:{transform:"scaleX(1) translateX(0)"},[`&.${Dn.error}`]:{"&::before, &::after":{borderBottomColor:(t.vars||t).palette.error.main}},"&::before":{borderBottom:`1px solid ${r}`,left:0,bottom:0,content:'"\\00a0"',position:"absolute",right:0,transition:t.transitions.create("border-bottom-color",{duration:t.transitions.duration.shorter}),pointerEvents:"none"},[`&:hover:not(.${Dn.disabled}, .${Dn.error}):before`]:{borderBottom:`2px solid ${(t.vars||t).palette.text.primary}`,"@media (hover: none)":{borderBottom:`1px solid ${r}`}},[`&.${Dn.disabled}:before`]:{borderBottomStyle:"dotted"}})})),Wn=(0,yt.Ay)(Nn,{name:"MuiInput",slot:"Input",overridesResolver:$n})({}),Un=r.forwardRef((function(e,t){var n,r,o,a;const i=(0,bt.A)({props:e,name:"MuiInput"}),{disableUnderline:l,components:s={},componentsProps:c,fullWidth:u=!1,inputComponent:d="input",multiline:p=!1,slotProps:f,slots:m={},type:h="text"}=i,g=(0,Le.A)(i,Fn),v=(e=>{const{classes:t,disableUnderline:n}=e,r={root:["root",!n&&"underline"],input:["input"]},o=(0,Je.A)(r,zn,t);return(0,Me.A)({},t,o)})(i),y={root:{ownerState:{disableUnderline:l}}},b=(null!=f?f:c)?(0,tt.A)(null!=f?f:c,y):y,x=null!=(n=null!=(r=m.root)?r:s.Root)?n:Bn,A=null!=(o=null!=(a=m.input)?a:s.Input)?o:Wn;return(0,Ue.jsx)(Ln,(0,Me.A)({slots:{root:x,input:A},slotProps:b,fullWidth:u,inputComponent:d,multiline:p,ref:t,type:h},g,{classes:v}))}));Un.muiName="Input";const Vn=Un;function Hn(e){return(0,Ye.Ay)("MuiFilledInput",e)}const Kn=(0,Me.A)({},Rn,(0,qe.A)("MuiFilledInput",["root","underline","input"])),qn=["disableUnderline","components","componentsProps","fullWidth","hiddenLabel","inputComponent","multiline","slotProps","slots","type"],Gn=(0,yt.Ay)(On,{shouldForwardProp:e=>(0,yt.ep)(e)||"classes"===e,name:"MuiFilledInput",slot:"Root",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[...Tn(e,t),!n.disableUnderline&&t.underline]}})((e=>{let{theme:t,ownerState:n}=e;var r;const o="light"===t.palette.mode,a=o?"rgba(0, 0, 0, 0.42)":"rgba(255, 255, 255, 0.7)",i=o?"rgba(0, 0, 0, 0.06)":"rgba(255, 255, 255, 0.09)",l=o?"rgba(0, 0, 0, 0.09)":"rgba(255, 255, 255, 0.13)",s=o?"rgba(0, 0, 0, 0.12)":"rgba(255, 255, 255, 0.12)";return(0,Me.A)({position:"relative",backgroundColor:t.vars?t.vars.palette.FilledInput.bg:i,borderTopLeftRadius:(t.vars||t).shape.borderRadius,borderTopRightRadius:(t.vars||t).shape.borderRadius,transition:t.transitions.create("background-color",{duration:t.transitions.duration.shorter,easing:t.transitions.easing.easeOut}),"&:hover":{backgroundColor:t.vars?t.vars.palette.FilledInput.hoverBg:l,"@media (hover: none)":{backgroundColor:t.vars?t.vars.palette.FilledInput.bg:i}},[`&.${Kn.focused}`]:{backgroundColor:t.vars?t.vars.palette.FilledInput.bg:i},[`&.${Kn.disabled}`]:{backgroundColor:t.vars?t.vars.palette.FilledInput.disabledBg:s}},!n.disableUnderline&&{"&::after":{borderBottom:`2px solid ${null==(r=(t.vars||t).palette[n.color||"primary"])?void 0:r.main}`,left:0,bottom:0,content:'""',position:"absolute",right:0,transform:"scaleX(0)",transition:t.transitions.create("transform",{duration:t.transitions.duration.shorter,easing:t.transitions.easing.easeOut}),pointerEvents:"none"},[`&.${Kn.focused}:after`]:{transform:"scaleX(1) translateX(0)"},[`&.${Kn.error}`]:{"&::before, &::after":{borderBottomColor:(t.vars||t).palette.error.main}},"&::before":{borderBottom:`1px solid ${t.vars?`rgba(${t.vars.palette.common.onBackgroundChannel} / ${t.vars.opacity.inputUnderline})`:a}`,left:0,bottom:0,content:'"\\00a0"',position:"absolute",right:0,transition:t.transitions.create("border-bottom-color",{duration:t.transitions.duration.shorter}),pointerEvents:"none"},[`&:hover:not(.${Kn.disabled}, .${Kn.error}):before`]:{borderBottom:`1px solid ${(t.vars||t).palette.text.primary}`},[`&.${Kn.disabled}:before`]:{borderBottomStyle:"dotted"}},n.startAdornment&&{paddingLeft:12},n.endAdornment&&{paddingRight:12},n.multiline&&(0,Me.A)({padding:"25px 12px 8px"},"small"===n.size&&{paddingTop:21,paddingBottom:4},n.hiddenLabel&&{paddingTop:16,paddingBottom:17},n.hiddenLabel&&"small"===n.size&&{paddingTop:8,paddingBottom:9}))})),Xn=(0,yt.Ay)(Nn,{name:"MuiFilledInput",slot:"Input",overridesResolver:$n})((e=>{let{theme:t,ownerState:n}=e;return(0,Me.A)({paddingTop:25,paddingRight:12,paddingBottom:8,paddingLeft:12},!t.vars&&{"&:-webkit-autofill":{WebkitBoxShadow:"light"===t.palette.mode?null:"0 0 0 100px #266798 inset",WebkitTextFillColor:"light"===t.palette.mode?null:"#fff",caretColor:"light"===t.palette.mode?null:"#fff",borderTopLeftRadius:"inherit",borderTopRightRadius:"inherit"}},t.vars&&{"&:-webkit-autofill":{borderTopLeftRadius:"inherit",borderTopRightRadius:"inherit"},[t.getColorSchemeSelector("dark")]:{"&:-webkit-autofill":{WebkitBoxShadow:"0 0 0 100px #266798 inset",WebkitTextFillColor:"#fff",caretColor:"#fff"}}},"small"===n.size&&{paddingTop:21,paddingBottom:4},n.hiddenLabel&&{paddingTop:16,paddingBottom:17},n.startAdornment&&{paddingLeft:0},n.endAdornment&&{paddingRight:0},n.hiddenLabel&&"small"===n.size&&{paddingTop:8,paddingBottom:9},n.multiline&&{paddingTop:0,paddingBottom:0,paddingLeft:0,paddingRight:0})})),Qn=r.forwardRef((function(e,t){var n,r,o,a;const i=(0,bt.A)({props:e,name:"MuiFilledInput"}),{components:l={},componentsProps:s,fullWidth:c=!1,inputComponent:u="input",multiline:d=!1,slotProps:p,slots:f={},type:m="text"}=i,h=(0,Le.A)(i,qn),g=(0,Me.A)({},i,{fullWidth:c,inputComponent:u,multiline:d,type:m}),v=(e=>{const{classes:t,disableUnderline:n}=e,r={root:["root",!n&&"underline"],input:["input"]},o=(0,Je.A)(r,Hn,t);return(0,Me.A)({},t,o)})(i),y={root:{ownerState:g},input:{ownerState:g}},b=(null!=p?p:s)?(0,tt.A)(y,null!=p?p:s):y,x=null!=(n=null!=(r=f.root)?r:l.Root)?n:Gn,A=null!=(o=null!=(a=f.input)?a:l.Input)?o:Xn;return(0,Ue.jsx)(Ln,(0,Me.A)({slots:{root:x,input:A},componentsProps:b,fullWidth:c,inputComponent:u,multiline:d,ref:t,type:m},h,{classes:v}))}));Qn.muiName="Input";const Yn=Qn;var Jn;const Zn=["children","classes","className","label","notched"],er=(0,yt.Ay)("fieldset",{shouldForwardProp:yt.ep})({textAlign:"left",position:"absolute",bottom:0,right:0,top:-5,left:0,margin:0,padding:"0 8px",pointerEvents:"none",borderRadius:"inherit",borderStyle:"solid",borderWidth:1,overflow:"hidden",minWidth:"0%"}),tr=(0,yt.Ay)("legend",{shouldForwardProp:yt.ep})((e=>{let{ownerState:t,theme:n}=e;return(0,Me.A)({float:"unset",width:"auto",overflow:"hidden"},!t.withLabel&&{padding:0,lineHeight:"11px",transition:n.transitions.create("width",{duration:150,easing:n.transitions.easing.easeOut})},t.withLabel&&(0,Me.A)({display:"block",padding:0,height:11,fontSize:"0.75em",visibility:"hidden",maxWidth:.01,transition:n.transitions.create("max-width",{duration:50,easing:n.transitions.easing.easeOut}),whiteSpace:"nowrap","& > span":{paddingLeft:5,paddingRight:5,display:"inline-block",opacity:0,visibility:"visible"}},t.notched&&{maxWidth:"100%",transition:n.transitions.create("max-width",{duration:100,easing:n.transitions.easing.easeOut,delay:50})}))}));function nr(e){return(0,Ye.Ay)("MuiOutlinedInput",e)}const rr=(0,Me.A)({},Rn,(0,qe.A)("MuiOutlinedInput",["root","notchedOutline","input"])),or=["components","fullWidth","inputComponent","label","multiline","notched","slots","type"],ar=(0,yt.Ay)(On,{shouldForwardProp:e=>(0,yt.ep)(e)||"classes"===e,name:"MuiOutlinedInput",slot:"Root",overridesResolver:Tn})((e=>{let{theme:t,ownerState:n}=e;const r="light"===t.palette.mode?"rgba(0, 0, 0, 0.23)":"rgba(255, 255, 255, 0.23)";return(0,Me.A)({position:"relative",borderRadius:(t.vars||t).shape.borderRadius,[`&:hover .${rr.notchedOutline}`]:{borderColor:(t.vars||t).palette.text.primary},"@media (hover: none)":{[`&:hover .${rr.notchedOutline}`]:{borderColor:t.vars?`rgba(${t.vars.palette.common.onBackgroundChannel} / 0.23)`:r}},[`&.${rr.focused} .${rr.notchedOutline}`]:{borderColor:(t.vars||t).palette[n.color].main,borderWidth:2},[`&.${rr.error} .${rr.notchedOutline}`]:{borderColor:(t.vars||t).palette.error.main},[`&.${rr.disabled} .${rr.notchedOutline}`]:{borderColor:(t.vars||t).palette.action.disabled}},n.startAdornment&&{paddingLeft:14},n.endAdornment&&{paddingRight:14},n.multiline&&(0,Me.A)({padding:"16.5px 14px"},"small"===n.size&&{padding:"8.5px 14px"}))})),ir=(0,yt.Ay)((function(e){const{className:t,label:n,notched:r}=e,o=(0,Le.A)(e,Zn),a=null!=n&&""!==n,i=(0,Me.A)({},e,{notched:r,withLabel:a});return(0,Ue.jsx)(er,(0,Me.A)({"aria-hidden":!0,className:t,ownerState:i},o,{children:(0,Ue.jsx)(tr,{ownerState:i,children:a?(0,Ue.jsx)("span",{children:n}):Jn||(Jn=(0,Ue.jsx)("span",{className:"notranslate",children:"\u200b"}))})}))}),{name:"MuiOutlinedInput",slot:"NotchedOutline",overridesResolver:(e,t)=>t.notchedOutline})((e=>{let{theme:t}=e;const n="light"===t.palette.mode?"rgba(0, 0, 0, 0.23)":"rgba(255, 255, 255, 0.23)";return{borderColor:t.vars?`rgba(${t.vars.palette.common.onBackgroundChannel} / 0.23)`:n}})),lr=(0,yt.Ay)(Nn,{name:"MuiOutlinedInput",slot:"Input",overridesResolver:$n})((e=>{let{theme:t,ownerState:n}=e;return(0,Me.A)({padding:"16.5px 14px"},!t.vars&&{"&:-webkit-autofill":{WebkitBoxShadow:"light"===t.palette.mode?null:"0 0 0 100px #266798 inset",WebkitTextFillColor:"light"===t.palette.mode?null:"#fff",caretColor:"light"===t.palette.mode?null:"#fff",borderRadius:"inherit"}},t.vars&&{"&:-webkit-autofill":{borderRadius:"inherit"},[t.getColorSchemeSelector("dark")]:{"&:-webkit-autofill":{WebkitBoxShadow:"0 0 0 100px #266798 inset",WebkitTextFillColor:"#fff",caretColor:"#fff"}}},"small"===n.size&&{padding:"8.5px 14px"},n.multiline&&{padding:0},n.startAdornment&&{paddingLeft:0},n.endAdornment&&{paddingRight:0})})),sr=r.forwardRef((function(e,t){var n,o,a,i,l;const s=(0,bt.A)({props:e,name:"MuiOutlinedInput"}),{components:c={},fullWidth:u=!1,inputComponent:d="input",label:p,multiline:f=!1,notched:m,slots:h={},type:g="text"}=s,v=(0,Le.A)(s,or),y=(e=>{const{classes:t}=e,n=(0,Je.A)({root:["root"],notchedOutline:["notchedOutline"],input:["input"]},nr,t);return(0,Me.A)({},t,n)})(s),b=kn(),x=wn({props:s,muiFormControl:b,states:["color","disabled","error","focused","hiddenLabel","size","required"]}),A=(0,Me.A)({},s,{color:x.color||"primary",disabled:x.disabled,error:x.error,focused:x.focused,formControl:b,fullWidth:u,hiddenLabel:x.hiddenLabel,multiline:f,size:x.size,type:g}),w=null!=(n=null!=(o=h.root)?o:c.Root)?n:ar,S=null!=(a=null!=(i=h.input)?i:c.Input)?a:lr;return(0,Ue.jsx)(Ln,(0,Me.A)({slots:{root:w,input:S},renderSuffix:e=>(0,Ue.jsx)(ir,{ownerState:A,className:y.notchedOutline,label:null!=p&&""!==p&&x.required?l||(l=(0,Ue.jsxs)(r.Fragment,{children:[p,"\u2009","*"]})):p,notched:"undefined"!==typeof m?m:Boolean(e.startAdornment||e.filled||e.focused)}),fullWidth:u,inputComponent:d,multiline:f,ref:t,type:g},v,{classes:(0,Me.A)({},y,{notchedOutline:null})}))}));sr.muiName="Input";const cr=sr;function ur(e){return(0,Ye.Ay)("MuiFormLabel",e)}const dr=(0,qe.A)("MuiFormLabel",["root","colorSecondary","focused","disabled","error","filled","required","asterisk"]),pr=["children","className","color","component","disabled","error","filled","focused","required"],fr=(0,yt.Ay)("label",{name:"MuiFormLabel",slot:"Root",overridesResolver:(e,t)=>{let{ownerState:n}=e;return(0,Me.A)({},t.root,"secondary"===n.color&&t.colorSecondary,n.filled&&t.filled)}})((e=>{let{theme:t,ownerState:n}=e;return(0,Me.A)({color:(t.vars||t).palette.text.secondary},t.typography.body1,{lineHeight:"1.4375em",padding:0,position:"relative",[`&.${dr.focused}`]:{color:(t.vars||t).palette[n.color].main},[`&.${dr.disabled}`]:{color:(t.vars||t).palette.text.disabled},[`&.${dr.error}`]:{color:(t.vars||t).palette.error.main}})})),mr=(0,yt.Ay)("span",{name:"MuiFormLabel",slot:"Asterisk",overridesResolver:(e,t)=>t.asterisk})((e=>{let{theme:t}=e;return{[`&.${dr.error}`]:{color:(t.vars||t).palette.error.main}}})),hr=r.forwardRef((function(e,t){const n=(0,bt.A)({props:e,name:"MuiFormLabel"}),{children:r,className:o,component:a="label"}=n,i=(0,Le.A)(n,pr),l=wn({props:n,muiFormControl:kn(),states:["color","required","focused","disabled","error","filled"]}),s=(0,Me.A)({},n,{color:l.color||"primary",component:a,disabled:l.disabled,error:l.error,filled:l.filled,focused:l.focused,required:l.required}),c=(e=>{const{classes:t,color:n,focused:r,disabled:o,error:a,filled:i,required:l}=e,s={root:["root",`color${(0,vt.A)(n)}`,o&&"disabled",a&&"error",i&&"filled",r&&"focused",l&&"required"],asterisk:["asterisk",a&&"error"]};return(0,Je.A)(s,ur,t)})(s);return(0,Ue.jsxs)(fr,(0,Me.A)({as:a,ownerState:s,className:(0,ze.A)(c.root,o),ref:t},i,{children:[r,l.required&&(0,Ue.jsxs)(mr,{ownerState:s,"aria-hidden":!0,className:c.asterisk,children:["\u2009","*"]})]}))}));function gr(e){return(0,Ye.Ay)("MuiInputLabel",e)}(0,qe.A)("MuiInputLabel",["root","focused","disabled","error","required","asterisk","formControl","sizeSmall","shrink","animated","standard","filled","outlined"]);const vr=["disableAnimation","margin","shrink","variant","className"],yr=(0,yt.Ay)(hr,{shouldForwardProp:e=>(0,yt.ep)(e)||"classes"===e,name:"MuiInputLabel",slot:"Root",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[{[`& .${dr.asterisk}`]:t.asterisk},t.root,n.formControl&&t.formControl,"small"===n.size&&t.sizeSmall,n.shrink&&t.shrink,!n.disableAnimation&&t.animated,n.focused&&t.focused,t[n.variant]]}})((e=>{let{theme:t,ownerState:n}=e;return(0,Me.A)({display:"block",transformOrigin:"top left",whiteSpace:"nowrap",overflow:"hidden",textOverflow:"ellipsis",maxWidth:"100%"},n.formControl&&{position:"absolute",left:0,top:0,transform:"translate(0, 20px) scale(1)"},"small"===n.size&&{transform:"translate(0, 17px) scale(1)"},n.shrink&&{transform:"translate(0, -1.5px) scale(0.75)",transformOrigin:"top left",maxWidth:"133%"},!n.disableAnimation&&{transition:t.transitions.create(["color","transform","max-width"],{duration:t.transitions.duration.shorter,easing:t.transitions.easing.easeOut})},"filled"===n.variant&&(0,Me.A)({zIndex:1,pointerEvents:"none",transform:"translate(12px, 16px) scale(1)",maxWidth:"calc(100% - 24px)"},"small"===n.size&&{transform:"translate(12px, 13px) scale(1)"},n.shrink&&(0,Me.A)({userSelect:"none",pointerEvents:"auto",transform:"translate(12px, 7px) scale(0.75)",maxWidth:"calc(133% - 24px)"},"small"===n.size&&{transform:"translate(12px, 4px) scale(0.75)"})),"outlined"===n.variant&&(0,Me.A)({zIndex:1,pointerEvents:"none",transform:"translate(14px, 16px) scale(1)",maxWidth:"calc(100% - 24px)"},"small"===n.size&&{transform:"translate(14px, 9px) scale(1)"},n.shrink&&{userSelect:"none",pointerEvents:"auto",maxWidth:"calc(133% - 32px)",transform:"translate(14px, -9px) scale(0.75)"}))})),br=r.forwardRef((function(e,t){const n=(0,bt.A)({name:"MuiInputLabel",props:e}),{disableAnimation:r=!1,shrink:o,className:a}=n,i=(0,Le.A)(n,vr),l=kn();let s=o;"undefined"===typeof s&&l&&(s=l.filled||l.focused||l.adornedStart);const c=wn({props:n,muiFormControl:l,states:["size","variant","required","focused"]}),u=(0,Me.A)({},n,{disableAnimation:r,formControl:l,shrink:s,size:c.size,variant:c.variant,required:c.required,focused:c.focused}),d=(e=>{const{classes:t,formControl:n,size:r,shrink:o,disableAnimation:a,variant:i,required:l}=e,s={root:["root",n&&"formControl",!a&&"animated",o&&"shrink",r&&"normal"!==r&&`size${(0,vt.A)(r)}`,i],asterisk:[l&&"asterisk"]},c=(0,Je.A)(s,gr,t);return(0,Me.A)({},t,c)})(u);return(0,Ue.jsx)(yr,(0,Me.A)({"data-shrink":s,ownerState:u,ref:t,className:(0,ze.A)(d.root,a)},i,{classes:d}))}));var xr=n(7328);function Ar(e){return(0,Ye.Ay)("MuiFormControl",e)}(0,qe.A)("MuiFormControl",["root","marginNone","marginNormal","marginDense","fullWidth","disabled"]);const wr=["children","className","color","component","disabled","error","focused","fullWidth","hiddenLabel","margin","required","size","variant"],Sr=(0,yt.Ay)("div",{name:"MuiFormControl",slot:"Root",overridesResolver:(e,t)=>{let{ownerState:n}=e;return(0,Me.A)({},t.root,t[`margin${(0,vt.A)(n.margin)}`],n.fullWidth&&t.fullWidth)}})((e=>{let{ownerState:t}=e;return(0,Me.A)({display:"inline-flex",flexDirection:"column",position:"relative",minWidth:0,padding:0,margin:0,border:0,verticalAlign:"top"},"normal"===t.margin&&{marginTop:16,marginBottom:8},"dense"===t.margin&&{marginTop:8,marginBottom:4},t.fullWidth&&{width:"100%"})})),kr=r.forwardRef((function(e,t){const n=(0,bt.A)({props:e,name:"MuiFormControl"}),{children:o,className:a,color:i="primary",component:l="div",disabled:s=!1,error:c=!1,focused:u,fullWidth:d=!1,hiddenLabel:p=!1,margin:f="none",required:m=!1,size:h="medium",variant:g="outlined"}=n,v=(0,Le.A)(n,wr),y=(0,Me.A)({},n,{color:i,component:l,disabled:s,error:c,fullWidth:d,hiddenLabel:p,margin:f,required:m,size:h,variant:g}),b=(e=>{const{classes:t,margin:n,fullWidth:r}=e,o={root:["root","none"!==n&&`margin${(0,vt.A)(n)}`,r&&"fullWidth"]};return(0,Je.A)(o,Ar,t)})(y),[x,A]=r.useState((()=>{let e=!1;return o&&r.Children.forEach(o,(t=>{if(!(0,xr.A)(t,["Input","Select"]))return;const n=(0,xr.A)(t,["Select"])?t.props.input:t;n&&n.props.startAdornment&&(e=!0)})),e})),[w,S]=r.useState((()=>{let e=!1;return o&&r.Children.forEach(o,(t=>{(0,xr.A)(t,["Input","Select"])&&(_n(t.props,!0)||_n(t.props.inputProps,!0))&&(e=!0)})),e})),[k,C]=r.useState(!1);s&&k&&C(!1);const E=void 0===u||s?k:u;let j;const _=r.useMemo((()=>({adornedStart:x,setAdornedStart:A,color:i,disabled:s,error:c,filled:w,focused:E,fullWidth:d,hiddenLabel:p,size:h,onBlur:()=>{C(!1)},onEmpty:()=>{S(!1)},onFilled:()=>{S(!0)},onFocus:()=>{C(!0)},registerEffect:j,required:m,variant:g})),[x,i,s,c,w,E,d,p,j,m,h,g]);return(0,Ue.jsx)(Sn.Provider,{value:_,children:(0,Ue.jsx)(Sr,(0,Me.A)({as:l,ownerState:y,className:(0,ze.A)(b.root,a),ref:t},v,{children:o}))})}));function Cr(e){return(0,Ye.Ay)("MuiFormHelperText",e)}const Er=(0,qe.A)("MuiFormHelperText",["root","error","disabled","sizeSmall","sizeMedium","contained","focused","filled","required"]);var jr;const _r=["children","className","component","disabled","error","filled","focused","margin","required","variant"],Pr=(0,yt.Ay)("p",{name:"MuiFormHelperText",slot:"Root",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[t.root,n.size&&t[`size${(0,vt.A)(n.size)}`],n.contained&&t.contained,n.filled&&t.filled]}})((e=>{let{theme:t,ownerState:n}=e;return(0,Me.A)({color:(t.vars||t).palette.text.secondary},t.typography.caption,{textAlign:"left",marginTop:3,marginRight:0,marginBottom:0,marginLeft:0,[`&.${Er.disabled}`]:{color:(t.vars||t).palette.text.disabled},[`&.${Er.error}`]:{color:(t.vars||t).palette.error.main}},"small"===n.size&&{marginTop:4},n.contained&&{marginLeft:14,marginRight:14})})),Rr=r.forwardRef((function(e,t){const n=(0,bt.A)({props:e,name:"MuiFormHelperText"}),{children:r,className:o,component:a="p"}=n,i=(0,Le.A)(n,_r),l=wn({props:n,muiFormControl:kn(),states:["variant","size","disabled","error","filled","focused","required"]}),s=(0,Me.A)({},n,{component:a,contained:"filled"===l.variant||"outlined"===l.variant,variant:l.variant,size:l.size,disabled:l.disabled,error:l.error,filled:l.filled,focused:l.focused,required:l.required}),c=(e=>{const{classes:t,contained:n,size:r,disabled:o,error:a,filled:i,focused:l,required:s}=e,c={root:["root",o&&"disabled",a&&"error",r&&`size${(0,vt.A)(r)}`,n&&"contained",l&&"focused",i&&"filled",s&&"required"]};return(0,Je.A)(c,Cr,t)})(s);return(0,Ue.jsx)(Pr,(0,Me.A)({as:a,ownerState:s,className:(0,ze.A)(c.root,o),ref:t},i,{children:" "===r?jr||(jr=(0,Ue.jsx)("span",{className:"notranslate",children:"\u200b"})):r}))}));n(805);var Ir=n(2427);function Tr(e,t,n){return void 0===e||An(e)?t:(0,Me.A)({},t,{ownerState:(0,Me.A)({},t.ownerState,n)})}function $r(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[];if(void 0===e)return{};const n={};return Object.keys(e).filter((n=>n.match(/^on[A-Z]/)&&"function"===typeof e[n]&&!t.includes(n))).forEach((t=>{n[t]=e[t]})),n}function Or(e){if(void 0===e)return{};const t={};return Object.keys(e).filter((t=>!(t.match(/^on[A-Z]/)&&"function"===typeof e[t]))).forEach((n=>{t[n]=e[n]})),t}function Nr(e){const{getSlotProps:t,additionalProps:n,externalSlotProps:r,externalForwardedProps:o,className:a}=e;if(!t){const e=(0,ze.A)(null==n?void 0:n.className,a,null==o?void 0:o.className,null==r?void 0:r.className),t=(0,Me.A)({},null==n?void 0:n.style,null==o?void 0:o.style,null==r?void 0:r.style),i=(0,Me.A)({},n,o,r);return e.length>0&&(i.className=e),Object.keys(t).length>0&&(i.style=t),{props:i,internalRef:void 0}}const i=$r((0,Me.A)({},o,r)),l=Or(r),s=Or(o),c=t(i),u=(0,ze.A)(null==c?void 0:c.className,null==n?void 0:n.className,a,null==o?void 0:o.className,null==r?void 0:r.className),d=(0,Me.A)({},null==c?void 0:c.style,null==n?void 0:n.style,null==o?void 0:o.style,null==r?void 0:r.style),p=(0,Me.A)({},c,n,s,l);return u.length>0&&(p.className=u),Object.keys(d).length>0&&(p.style=d),{props:p,internalRef:c.ref}}function Mr(e,t,n){return"function"===typeof e?e(t,n):e}const Lr=["elementType","externalSlotProps","ownerState","skipResolvingSlotProps"];function zr(e){var t;const{elementType:n,externalSlotProps:r,ownerState:o,skipResolvingSlotProps:a=!1}=e,i=(0,Le.A)(e,Lr),l=a?{}:Mr(r,o),{props:s,internalRef:c}=Nr((0,Me.A)({},i,{externalSlotProps:l})),u=(0,fn.A)(c,null==l?void 0:l.ref,null==(t=e.additionalProps)?void 0:t.ref);return Tr(n,(0,Me.A)({},s,{ref:u}),o)}const Dr=r.createContext({});function Fr(e){return(0,Ye.Ay)("MuiList",e)}(0,qe.A)("MuiList",["root","padding","dense","subheader"]);const Br=["children","className","component","dense","disablePadding","subheader"],Wr=(0,yt.Ay)("ul",{name:"MuiList",slot:"Root",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[t.root,!n.disablePadding&&t.padding,n.dense&&t.dense,n.subheader&&t.subheader]}})((e=>{let{ownerState:t}=e;return(0,Me.A)({listStyle:"none",margin:0,padding:0,position:"relative"},!t.disablePadding&&{paddingTop:8,paddingBottom:8},t.subheader&&{paddingTop:0})})),Ur=r.forwardRef((function(e,t){const n=(0,bt.A)({props:e,name:"MuiList"}),{children:o,className:a,component:i="ul",dense:l=!1,disablePadding:s=!1,subheader:c}=n,u=(0,Le.A)(n,Br),d=r.useMemo((()=>({dense:l})),[l]),p=(0,Me.A)({},n,{component:i,dense:l,disablePadding:s}),f=(e=>{const{classes:t,disablePadding:n,dense:r,subheader:o}=e,a={root:["root",!n&&"padding",r&&"dense",o&&"subheader"]};return(0,Je.A)(a,Fr,t)})(p);return(0,Ue.jsx)(Dr.Provider,{value:d,children:(0,Ue.jsxs)(Wr,(0,Me.A)({as:i,className:(0,ze.A)(f.root,a),ref:t,ownerState:p},u,{children:[c,o]}))})}));function Vr(e){const t=e.documentElement.clientWidth;return Math.abs(window.innerWidth-t)}const Hr=Vr,Kr=["actions","autoFocus","autoFocusItem","children","className","disabledItemsFocusable","disableListWrap","onKeyDown","variant"];function qr(e,t,n){return e===t?e.firstChild:t&&t.nextElementSibling?t.nextElementSibling:n?null:e.firstChild}function Gr(e,t,n){return e===t?n?e.firstChild:e.lastChild:t&&t.previousElementSibling?t.previousElementSibling:n?null:e.lastChild}function Xr(e,t){if(void 0===t)return!0;let n=e.innerText;return void 0===n&&(n=e.textContent),n=n.trim().toLowerCase(),0!==n.length&&(t.repeating?n[0]===t.keys[0]:0===n.indexOf(t.keys.join("")))}function Qr(e,t,n,r,o,a){let i=!1,l=o(e,t,!!t&&n);for(;l;){if(l===e.firstChild){if(i)return!1;i=!0}const t=!r&&(l.disabled||"true"===l.getAttribute("aria-disabled"));if(l.hasAttribute("tabindex")&&Xr(l,a)&&!t)return l.focus(),!0;l=o(e,l,n)}return!1}const Yr=r.forwardRef((function(e,t){const{actions:n,autoFocus:o=!1,autoFocusItem:a=!1,children:i,className:l,disabledItemsFocusable:s=!1,disableListWrap:c=!1,onKeyDown:u,variant:d="selectedMenu"}=e,p=(0,Le.A)(e,Kr),f=r.useRef(null),m=r.useRef({keys:[],repeating:!0,previousKeyMatched:!0,lastTime:null});(0,En.A)((()=>{o&&f.current.focus()}),[o]),r.useImperativeHandle(n,(()=>({adjustStyleForScrollbar:(e,t)=>{const n=!f.current.style.width;if(e.clientHeight<f.current.clientHeight&&n){const n=`${Hr((0,Ir.A)(e))}px`;f.current.style["rtl"===t.direction?"paddingLeft":"paddingRight"]=n,f.current.style.width=`calc(100% + ${n})`}return f.current}})),[]);const h=(0,Cn.A)(f,t);let g=-1;r.Children.forEach(i,((e,t)=>{r.isValidElement(e)?(e.props.disabled||("selectedMenu"===d&&e.props.selected||-1===g)&&(g=t),g===t&&(e.props.disabled||e.props.muiSkipListHighlight||e.type.muiSkipListHighlight)&&(g+=1,g>=i.length&&(g=-1))):g===t&&(g+=1,g>=i.length&&(g=-1))}));const v=r.Children.map(i,((e,t)=>{if(t===g){const t={};return a&&(t.autoFocus=!0),void 0===e.props.tabIndex&&"selectedMenu"===d&&(t.tabIndex=0),r.cloneElement(e,t)}return e}));return(0,Ue.jsx)(Ur,(0,Me.A)({role:"menu",ref:h,className:l,onKeyDown:e=>{const t=f.current,n=e.key,r=(0,Ir.A)(t).activeElement;if("ArrowDown"===n)e.preventDefault(),Qr(t,r,c,s,qr);else if("ArrowUp"===n)e.preventDefault(),Qr(t,r,c,s,Gr);else if("Home"===n)e.preventDefault(),Qr(t,null,c,s,qr);else if("End"===n)e.preventDefault(),Qr(t,null,c,s,Gr);else if(1===n.length){const o=m.current,a=n.toLowerCase(),i=performance.now();o.keys.length>0&&(i-o.lastTime>500?(o.keys=[],o.repeating=!0,o.previousKeyMatched=!0):o.repeating&&a!==o.keys[0]&&(o.repeating=!1)),o.lastTime=i,o.keys.push(a);const l=r&&!o.repeating&&Xr(r,o);o.previousKeyMatched&&(l||Qr(t,r,!1,s,qr,o))?e.preventDefault():o.previousKeyMatched=!1}u&&u(e)},tabIndex:o?0:-1},p,{children:v}))}));var Jr=n(950),Zr=n(6078),eo=n(9303);function to(e,t){return to=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},to(e,t)}function no(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,to(e,t)}const ro=!1,oo=r.createContext(null);var ao="unmounted",io="exited",lo="entering",so="entered",co="exiting",uo=function(e){function t(t,n){var r;r=e.call(this,t,n)||this;var o,a=n&&!n.isMounting?t.enter:t.appear;return r.appearStatus=null,t.in?a?(o=io,r.appearStatus=lo):o=so:o=t.unmountOnExit||t.mountOnEnter?ao:io,r.state={status:o},r.nextCallback=null,r}no(t,e),t.getDerivedStateFromProps=function(e,t){return e.in&&t.status===ao?{status:io}:null};var n=t.prototype;return n.componentDidMount=function(){this.updateStatus(!0,this.appearStatus)},n.componentDidUpdate=function(e){var t=null;if(e!==this.props){var n=this.state.status;this.props.in?n!==lo&&n!==so&&(t=lo):n!==lo&&n!==so||(t=co)}this.updateStatus(!1,t)},n.componentWillUnmount=function(){this.cancelNextCallback()},n.getTimeouts=function(){var e,t,n,r=this.props.timeout;return e=t=n=r,null!=r&&"number"!==typeof r&&(e=r.exit,t=r.enter,n=void 0!==r.appear?r.appear:t),{exit:e,enter:t,appear:n}},n.updateStatus=function(e,t){if(void 0===e&&(e=!1),null!==t)if(this.cancelNextCallback(),t===lo){if(this.props.unmountOnExit||this.props.mountOnEnter){var n=this.props.nodeRef?this.props.nodeRef.current:Ae.findDOMNode(this);n&&function(e){e.scrollTop}(n)}this.performEnter(e)}else this.performExit();else this.props.unmountOnExit&&this.state.status===io&&this.setState({status:ao})},n.performEnter=function(e){var t=this,n=this.props.enter,r=this.context?this.context.isMounting:e,o=this.props.nodeRef?[r]:[Ae.findDOMNode(this),r],a=o[0],i=o[1],l=this.getTimeouts(),s=r?l.appear:l.enter;!e&&!n||ro?this.safeSetState({status:so},(function(){t.props.onEntered(a)})):(this.props.onEnter(a,i),this.safeSetState({status:lo},(function(){t.props.onEntering(a,i),t.onTransitionEnd(s,(function(){t.safeSetState({status:so},(function(){t.props.onEntered(a,i)}))}))})))},n.performExit=function(){var e=this,t=this.props.exit,n=this.getTimeouts(),r=this.props.nodeRef?void 0:Ae.findDOMNode(this);t&&!ro?(this.props.onExit(r),this.safeSetState({status:co},(function(){e.props.onExiting(r),e.onTransitionEnd(n.exit,(function(){e.safeSetState({status:io},(function(){e.props.onExited(r)}))}))}))):this.safeSetState({status:io},(function(){e.props.onExited(r)}))},n.cancelNextCallback=function(){null!==this.nextCallback&&(this.nextCallback.cancel(),this.nextCallback=null)},n.safeSetState=function(e,t){t=this.setNextCallback(t),this.setState(e,t)},n.setNextCallback=function(e){var t=this,n=!0;return this.nextCallback=function(r){n&&(n=!1,t.nextCallback=null,e(r))},this.nextCallback.cancel=function(){n=!1},this.nextCallback},n.onTransitionEnd=function(e,t){this.setNextCallback(t);var n=this.props.nodeRef?this.props.nodeRef.current:Ae.findDOMNode(this),r=null==e&&!this.props.addEndListener;if(n&&!r){if(this.props.addEndListener){var o=this.props.nodeRef?[this.nextCallback]:[n,this.nextCallback],a=o[0],i=o[1];this.props.addEndListener(a,i)}null!=e&&setTimeout(this.nextCallback,e)}else setTimeout(this.nextCallback,0)},n.render=function(){var e=this.state.status;if(e===ao)return null;var t=this.props,n=t.children,o=(t.in,t.mountOnEnter,t.unmountOnExit,t.appear,t.enter,t.exit,t.timeout,t.addEndListener,t.onEnter,t.onEntering,t.onEntered,t.onExit,t.onExiting,t.onExited,t.nodeRef,(0,Le.A)(t,["children","in","mountOnEnter","unmountOnExit","appear","enter","exit","timeout","addEndListener","onEnter","onEntering","onEntered","onExit","onExiting","onExited","nodeRef"]));return r.createElement(oo.Provider,{value:null},"function"===typeof n?n(e,o):r.cloneElement(r.Children.only(n),o))},t}(r.Component);function po(){}uo.contextType=oo,uo.propTypes={},uo.defaultProps={in:!1,mountOnEnter:!1,unmountOnExit:!1,appear:!1,enter:!0,exit:!0,onEnter:po,onEntering:po,onEntered:po,onExit:po,onExiting:po,onExited:po},uo.UNMOUNTED=ao,uo.EXITED=io,uo.ENTERING=lo,uo.ENTERED=so,uo.EXITING=co;const fo=uo;function mo(){const e=(0,We.A)(Dt.A);return e[Ke.A]||e}const ho=e=>e.scrollTop;function go(e,t){var n,r;const{timeout:o,easing:a,style:i={}}=e;return{duration:null!=(n=i.transitionDuration)?n:"number"===typeof o?o:o[t.mode]||0,easing:null!=(r=i.transitionTimingFunction)?r:"object"===typeof a?a[t.mode]:a,delay:i.transitionDelay}}const vo=["addEndListener","appear","children","easing","in","onEnter","onEntered","onEntering","onExit","onExited","onExiting","style","timeout","TransitionComponent"];function yo(e){return`scale(${e}, ${e**2})`}const bo={entering:{opacity:1,transform:yo(1)},entered:{opacity:1,transform:"none"}},xo="undefined"!==typeof navigator&&/^((?!chrome|android).)*(safari|mobile)/i.test(navigator.userAgent)&&/(os |version\/)15(.|_)4/i.test(navigator.userAgent),Ao=r.forwardRef((function(e,t){const{addEndListener:n,appear:o=!0,children:a,easing:i,in:l,onEnter:s,onEntered:c,onEntering:u,onExit:d,onExited:p,onExiting:f,style:m,timeout:h="auto",TransitionComponent:g=fo}=e,v=(0,Le.A)(e,vo),y=(0,eo.A)(),b=r.useRef(),x=mo(),A=r.useRef(null),w=(0,Cn.A)(A,a.ref,t),S=e=>t=>{if(e){const n=A.current;void 0===t?e(n):e(n,t)}},k=S(u),C=S(((e,t)=>{ho(e);const{duration:n,delay:r,easing:o}=go({style:m,timeout:h,easing:i},{mode:"enter"});let a;"auto"===h?(a=x.transitions.getAutoHeightDuration(e.clientHeight),b.current=a):a=n,e.style.transition=[x.transitions.create("opacity",{duration:a,delay:r}),x.transitions.create("transform",{duration:xo?a:.666*a,delay:r,easing:o})].join(","),s&&s(e,t)})),E=S(c),j=S(f),_=S((e=>{const{duration:t,delay:n,easing:r}=go({style:m,timeout:h,easing:i},{mode:"exit"});let o;"auto"===h?(o=x.transitions.getAutoHeightDuration(e.clientHeight),b.current=o):o=t,e.style.transition=[x.transitions.create("opacity",{duration:o,delay:n}),x.transitions.create("transform",{duration:xo?o:.666*o,delay:xo?n:n||.333*o,easing:r})].join(","),e.style.opacity=0,e.style.transform=yo(.75),d&&d(e)})),P=S(p);return(0,Ue.jsx)(g,(0,Me.A)({appear:o,in:l,nodeRef:A,onEnter:C,onEntered:E,onEntering:k,onExit:_,onExited:P,onExiting:j,addEndListener:e=>{"auto"===h&&y.start(b.current||0,e),n&&n(A.current,e)},timeout:"auto"===h?null:h},v,{children:(e,t)=>r.cloneElement(a,(0,Me.A)({style:(0,Me.A)({opacity:0,transform:yo(.75),visibility:"exited"!==e||l?void 0:"hidden"},bo[e],m,a.props.style),ref:w},t))}))}));Ao.muiSupportAuto=!0;const wo=Ao;var So=n(1668),ko=n(1782),Co=n(2456);function Eo(e,t){t?e.setAttribute("aria-hidden","true"):e.removeAttribute("aria-hidden")}function jo(e){return parseInt((0,mn.A)(e).getComputedStyle(e).paddingRight,10)||0}function _o(e,t,n,r,o){const a=[t,n,...r];[].forEach.call(e.children,(e=>{const t=-1===a.indexOf(e),n=!function(e){const t=-1!==["TEMPLATE","SCRIPT","STYLE","LINK","MAP","META","NOSCRIPT","PICTURE","COL","COLGROUP","PARAM","SLOT","SOURCE","TRACK"].indexOf(e.tagName),n="INPUT"===e.tagName&&"hidden"===e.getAttribute("type");return t||n}(e);t&&n&&Eo(e,o)}))}function Po(e,t){let n=-1;return e.some(((e,r)=>!!t(e)&&(n=r,!0))),n}function Ro(e,t){const n=[],r=e.container;if(!t.disableScrollLock){if(function(e){const t=(0,So.A)(e);return t.body===e?(0,mn.A)(e).innerWidth>t.documentElement.clientWidth:e.scrollHeight>e.clientHeight}(r)){const e=Vr((0,So.A)(r));n.push({value:r.style.paddingRight,property:"padding-right",el:r}),r.style.paddingRight=`${jo(r)+e}px`;const t=(0,So.A)(r).querySelectorAll(".mui-fixed");[].forEach.call(t,(t=>{n.push({value:t.style.paddingRight,property:"padding-right",el:t}),t.style.paddingRight=`${jo(t)+e}px`}))}let e;if(r.parentNode instanceof DocumentFragment)e=(0,So.A)(r).body;else{const t=r.parentElement,n=(0,mn.A)(r);e="HTML"===(null==t?void 0:t.nodeName)&&"scroll"===n.getComputedStyle(t).overflowY?t:r}n.push({value:e.style.overflow,property:"overflow",el:e},{value:e.style.overflowX,property:"overflow-x",el:e},{value:e.style.overflowY,property:"overflow-y",el:e}),e.style.overflow="hidden"}return()=>{n.forEach((e=>{let{value:t,el:n,property:r}=e;t?n.style.setProperty(r,t):n.style.removeProperty(r)}))}}const Io=new class{constructor(){this.containers=void 0,this.modals=void 0,this.modals=[],this.containers=[]}add(e,t){let n=this.modals.indexOf(e);if(-1!==n)return n;n=this.modals.length,this.modals.push(e),e.modalRef&&Eo(e.modalRef,!1);const r=function(e){const t=[];return[].forEach.call(e.children,(e=>{"true"===e.getAttribute("aria-hidden")&&t.push(e)})),t}(t);_o(t,e.mount,e.modalRef,r,!0);const o=Po(this.containers,(e=>e.container===t));return-1!==o?(this.containers[o].modals.push(e),n):(this.containers.push({modals:[e],container:t,restore:null,hiddenSiblings:r}),n)}mount(e,t){const n=Po(this.containers,(t=>-1!==t.modals.indexOf(e))),r=this.containers[n];r.restore||(r.restore=Ro(r,t))}remove(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const n=this.modals.indexOf(e);if(-1===n)return n;const r=Po(this.containers,(t=>-1!==t.modals.indexOf(e))),o=this.containers[r];if(o.modals.splice(o.modals.indexOf(e),1),this.modals.splice(n,1),0===o.modals.length)o.restore&&o.restore(),e.modalRef&&Eo(e.modalRef,t),_o(o.container,e.mount,e.modalRef,o.hiddenSiblings,!1),this.containers.splice(r,1);else{const e=o.modals[o.modals.length-1];e.modalRef&&Eo(e.modalRef,!1)}return n}isTopModal(e){return this.modals.length>0&&this.modals[this.modals.length-1]===e}};function To(e){const{container:t,disableEscapeKeyDown:n=!1,disableScrollLock:o=!1,manager:a=Io,closeAfterTransition:i=!1,onTransitionEnter:l,onTransitionExited:s,children:c,onClose:u,open:d,rootRef:p}=e,f=r.useRef({}),m=r.useRef(null),h=r.useRef(null),g=(0,fn.A)(h,p),[v,y]=r.useState(!d),b=function(e){return!!e&&e.props.hasOwnProperty("in")}(c);let x=!0;"false"!==e["aria-hidden"]&&!1!==e["aria-hidden"]||(x=!1);const A=()=>(f.current.modalRef=h.current,f.current.mount=m.current,f.current),w=()=>{a.mount(A(),{disableScrollLock:o}),h.current&&(h.current.scrollTop=0)},S=(0,ko.A)((()=>{const e=function(e){return"function"===typeof e?e():e}(t)||(0,So.A)(m.current).body;a.add(A(),e),h.current&&w()})),k=r.useCallback((()=>a.isTopModal(A())),[a]),C=(0,ko.A)((e=>{m.current=e,e&&(d&&k()?w():h.current&&Eo(h.current,x))})),E=r.useCallback((()=>{a.remove(A(),x)}),[x,a]);r.useEffect((()=>()=>{E()}),[E]),r.useEffect((()=>{d?S():b&&i||E()}),[d,E,b,i,S]);const j=e=>t=>{var r;null==(r=e.onKeyDown)||r.call(e,t),"Escape"===t.key&&229!==t.which&&k()&&(n||(t.stopPropagation(),u&&u(t,"escapeKeyDown")))},_=e=>t=>{var n;null==(n=e.onClick)||n.call(e,t),t.target===t.currentTarget&&u&&u(t,"backdropClick")};return{getRootProps:function(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const n=$r(e);delete n.onTransitionEnter,delete n.onTransitionExited;const r=(0,Me.A)({},n,t);return(0,Me.A)({role:"presentation"},r,{onKeyDown:j(r),ref:g})},getBackdropProps:function(){const e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return(0,Me.A)({"aria-hidden":!0},e,{onClick:_(e),open:d})},getTransitionProps:()=>({onEnter:(0,Co.A)((()=>{y(!1),l&&l()}),null==c?void 0:c.props.onEnter),onExited:(0,Co.A)((()=>{y(!0),s&&s(),i&&E()}),null==c?void 0:c.props.onExited)}),rootRef:g,portalRef:C,isTopModal:k,exited:v,hasTransition:b}}const $o=["input","select","textarea","a[href]","button","[tabindex]","audio[controls]","video[controls]",'[contenteditable]:not([contenteditable="false"])'].join(",");function Oo(e){const t=[],n=[];return Array.from(e.querySelectorAll($o)).forEach(((e,r)=>{const o=function(e){const t=parseInt(e.getAttribute("tabindex")||"",10);return Number.isNaN(t)?"true"===e.contentEditable||("AUDIO"===e.nodeName||"VIDEO"===e.nodeName||"DETAILS"===e.nodeName)&&null===e.getAttribute("tabindex")?0:e.tabIndex:t}(e);-1!==o&&function(e){return!(e.disabled||"INPUT"===e.tagName&&"hidden"===e.type||function(e){if("INPUT"!==e.tagName||"radio"!==e.type)return!1;if(!e.name)return!1;const t=t=>e.ownerDocument.querySelector(`input[type="radio"]${t}`);let n=t(`[name="${e.name}"]:checked`);return n||(n=t(`[name="${e.name}"]`)),n!==e}(e))}(e)&&(0===o?t.push(e):n.push({documentOrder:r,tabIndex:o,node:e}))})),n.sort(((e,t)=>e.tabIndex===t.tabIndex?e.documentOrder-t.documentOrder:e.tabIndex-t.tabIndex)).map((e=>e.node)).concat(t)}function No(){return!0}function Mo(e){const{children:t,disableAutoFocus:n=!1,disableEnforceFocus:o=!1,disableRestoreFocus:a=!1,getTabbable:i=Oo,isEnabled:l=No,open:s}=e,c=r.useRef(!1),u=r.useRef(null),d=r.useRef(null),p=r.useRef(null),f=r.useRef(null),m=r.useRef(!1),h=r.useRef(null),g=(0,fn.A)(t.ref,h),v=r.useRef(null);r.useEffect((()=>{s&&h.current&&(m.current=!n)}),[n,s]),r.useEffect((()=>{if(!s||!h.current)return;const e=(0,So.A)(h.current);return h.current.contains(e.activeElement)||(h.current.hasAttribute("tabIndex")||h.current.setAttribute("tabIndex","-1"),m.current&&h.current.focus()),()=>{a||(p.current&&p.current.focus&&(c.current=!0,p.current.focus()),p.current=null)}}),[s]),r.useEffect((()=>{if(!s||!h.current)return;const e=(0,So.A)(h.current),t=t=>{v.current=t,!o&&l()&&"Tab"===t.key&&e.activeElement===h.current&&t.shiftKey&&(c.current=!0,d.current&&d.current.focus())},n=()=>{const t=h.current;if(null===t)return;if(!e.hasFocus()||!l()||c.current)return void(c.current=!1);if(t.contains(e.activeElement))return;if(o&&e.activeElement!==u.current&&e.activeElement!==d.current)return;if(e.activeElement!==f.current)f.current=null;else if(null!==f.current)return;if(!m.current)return;let n=[];if(e.activeElement!==u.current&&e.activeElement!==d.current||(n=i(h.current)),n.length>0){var r,a;const e=Boolean((null==(r=v.current)?void 0:r.shiftKey)&&"Tab"===(null==(a=v.current)?void 0:a.key)),t=n[0],o=n[n.length-1];"string"!==typeof t&&"string"!==typeof o&&(e?o.focus():t.focus())}else t.focus()};e.addEventListener("focusin",n),e.addEventListener("keydown",t,!0);const r=setInterval((()=>{e.activeElement&&"BODY"===e.activeElement.tagName&&n()}),50);return()=>{clearInterval(r),e.removeEventListener("focusin",n),e.removeEventListener("keydown",t,!0)}}),[n,o,a,l,s,i]);const y=e=>{null===p.current&&(p.current=e.relatedTarget),m.current=!0};return(0,Ue.jsxs)(r.Fragment,{children:[(0,Ue.jsx)("div",{tabIndex:s?0:-1,onFocus:y,ref:u,"data-testid":"sentinelStart"}),r.cloneElement(t,{ref:g,onFocus:e=>{null===p.current&&(p.current=e.relatedTarget),m.current=!0,f.current=e.target;const n=t.props.onFocus;n&&n(e)}}),(0,Ue.jsx)("div",{tabIndex:s?0:-1,onFocus:y,ref:d,"data-testid":"sentinelEnd"})]})}var Lo=n(6564);const zo=r.forwardRef((function(e,t){const{children:n,container:o,disablePortal:a=!1}=e,[i,l]=r.useState(null),s=(0,fn.A)(r.isValidElement(n)?n.ref:null,t);if((0,hn.A)((()=>{a||l(function(e){return"function"===typeof e?e():e}(o)||document.body)}),[o,a]),(0,hn.A)((()=>{if(i&&!a)return(0,Lo.A)(t,i),()=>{(0,Lo.A)(t,null)}}),[t,i,a]),a){if(r.isValidElement(n)){const e={ref:s};return r.cloneElement(n,e)}return(0,Ue.jsx)(r.Fragment,{children:n})}return(0,Ue.jsx)(r.Fragment,{children:i?Ae.createPortal(n,i):i})}));const Do=["addEndListener","appear","children","easing","in","onEnter","onEntered","onEntering","onExit","onExited","onExiting","style","timeout","TransitionComponent"],Fo={entering:{opacity:1},entered:{opacity:1}},Bo=r.forwardRef((function(e,t){const n=mo(),o={enter:n.transitions.duration.enteringScreen,exit:n.transitions.duration.leavingScreen},{addEndListener:a,appear:i=!0,children:l,easing:s,in:c,onEnter:u,onEntered:d,onEntering:p,onExit:f,onExited:m,onExiting:h,style:g,timeout:v=o,TransitionComponent:y=fo}=e,b=(0,Le.A)(e,Do),x=r.useRef(null),A=(0,Cn.A)(x,l.ref,t),w=e=>t=>{if(e){const n=x.current;void 0===t?e(n):e(n,t)}},S=w(p),k=w(((e,t)=>{ho(e);const r=go({style:g,timeout:v,easing:s},{mode:"enter"});e.style.webkitTransition=n.transitions.create("opacity",r),e.style.transition=n.transitions.create("opacity",r),u&&u(e,t)})),C=w(d),E=w(h),j=w((e=>{const t=go({style:g,timeout:v,easing:s},{mode:"exit"});e.style.webkitTransition=n.transitions.create("opacity",t),e.style.transition=n.transitions.create("opacity",t),f&&f(e)})),_=w(m);return(0,Ue.jsx)(y,(0,Me.A)({appear:i,in:c,nodeRef:x,onEnter:k,onEntered:C,onEntering:S,onExit:j,onExited:_,onExiting:E,addEndListener:e=>{a&&a(x.current,e)},timeout:v},b,{children:(e,t)=>r.cloneElement(l,(0,Me.A)({style:(0,Me.A)({opacity:0,visibility:"exited"!==e||c?void 0:"hidden"},Fo[e],g,l.props.style),ref:A},t))}))}));function Wo(e){return(0,Ye.Ay)("MuiBackdrop",e)}(0,qe.A)("MuiBackdrop",["root","invisible"]);const Uo=["children","className","component","components","componentsProps","invisible","open","slotProps","slots","TransitionComponent","transitionDuration"],Vo=(0,yt.Ay)("div",{name:"MuiBackdrop",slot:"Root",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[t.root,n.invisible&&t.invisible]}})((e=>{let{ownerState:t}=e;return(0,Me.A)({position:"fixed",display:"flex",alignItems:"center",justifyContent:"center",right:0,bottom:0,top:0,left:0,backgroundColor:"rgba(0, 0, 0, 0.5)",WebkitTapHighlightColor:"transparent"},t.invisible&&{backgroundColor:"transparent"})})),Ho=r.forwardRef((function(e,t){var n,r,o;const a=(0,bt.A)({props:e,name:"MuiBackdrop"}),{children:i,className:l,component:s="div",components:c={},componentsProps:u={},invisible:d=!1,open:p,slotProps:f={},slots:m={},TransitionComponent:h=Bo,transitionDuration:g}=a,v=(0,Le.A)(a,Uo),y=(0,Me.A)({},a,{component:s,invisible:d}),b=(e=>{const{classes:t,invisible:n}=e,r={root:["root",n&&"invisible"]};return(0,Je.A)(r,Wo,t)})(y),x=null!=(n=f.root)?n:u.root;return(0,Ue.jsx)(h,(0,Me.A)({in:p,timeout:g},v,{children:(0,Ue.jsx)(Vo,(0,Me.A)({"aria-hidden":!0},x,{as:null!=(r=null!=(o=m.root)?o:c.Root)?r:s,className:(0,ze.A)(b.root,l,null==x?void 0:x.className),ownerState:(0,Me.A)({},y,null==x?void 0:x.ownerState),classes:b,ref:t,children:i}))}))}));function Ko(e){return(0,Ye.Ay)("MuiModal",e)}(0,qe.A)("MuiModal",["root","hidden","backdrop"]);const qo=["BackdropComponent","BackdropProps","classes","className","closeAfterTransition","children","container","component","components","componentsProps","disableAutoFocus","disableEnforceFocus","disableEscapeKeyDown","disablePortal","disableRestoreFocus","disableScrollLock","hideBackdrop","keepMounted","onBackdropClick","onClose","onTransitionEnter","onTransitionExited","open","slotProps","slots","theme"],Go=(0,yt.Ay)("div",{name:"MuiModal",slot:"Root",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[t.root,!n.open&&n.exited&&t.hidden]}})((e=>{let{theme:t,ownerState:n}=e;return(0,Me.A)({position:"fixed",zIndex:(t.vars||t).zIndex.modal,right:0,bottom:0,top:0,left:0},!n.open&&n.exited&&{visibility:"hidden"})})),Xo=(0,yt.Ay)(Ho,{name:"MuiModal",slot:"Backdrop",overridesResolver:(e,t)=>t.backdrop})({zIndex:-1}),Qo=r.forwardRef((function(e,t){var n,o,a,i,l,s;const c=(0,bt.A)({name:"MuiModal",props:e}),{BackdropComponent:u=Xo,BackdropProps:d,className:p,closeAfterTransition:f=!1,children:m,container:h,component:g,components:v={},componentsProps:y={},disableAutoFocus:b=!1,disableEnforceFocus:x=!1,disableEscapeKeyDown:A=!1,disablePortal:w=!1,disableRestoreFocus:S=!1,disableScrollLock:k=!1,hideBackdrop:C=!1,keepMounted:E=!1,onBackdropClick:j,open:_,slotProps:P,slots:R}=c,I=(0,Le.A)(c,qo),T=(0,Me.A)({},c,{closeAfterTransition:f,disableAutoFocus:b,disableEnforceFocus:x,disableEscapeKeyDown:A,disablePortal:w,disableRestoreFocus:S,disableScrollLock:k,hideBackdrop:C,keepMounted:E}),{getRootProps:$,getBackdropProps:O,getTransitionProps:N,portalRef:M,isTopModal:L,exited:z,hasTransition:D}=To((0,Me.A)({},T,{rootRef:t})),F=(0,Me.A)({},T,{exited:z}),B=(e=>{const{open:t,exited:n,classes:r}=e,o={root:["root",!t&&n&&"hidden"],backdrop:["backdrop"]};return(0,Je.A)(o,Ko,r)})(F),W={};if(void 0===m.props.tabIndex&&(W.tabIndex="-1"),D){const{onEnter:e,onExited:t}=N();W.onEnter=e,W.onExited=t}const U=null!=(n=null!=(o=null==R?void 0:R.root)?o:v.Root)?n:Go,V=null!=(a=null!=(i=null==R?void 0:R.backdrop)?i:v.Backdrop)?a:u,H=null!=(l=null==P?void 0:P.root)?l:y.root,K=null!=(s=null==P?void 0:P.backdrop)?s:y.backdrop,q=zr({elementType:U,externalSlotProps:H,externalForwardedProps:I,getSlotProps:$,additionalProps:{ref:t,as:g},ownerState:F,className:(0,ze.A)(p,null==H?void 0:H.className,null==B?void 0:B.root,!F.open&&F.exited&&(null==B?void 0:B.hidden))}),G=zr({elementType:V,externalSlotProps:K,additionalProps:d,getSlotProps:e=>O((0,Me.A)({},e,{onClick:t=>{j&&j(t),null!=e&&e.onClick&&e.onClick(t)}})),className:(0,ze.A)(null==K?void 0:K.className,null==d?void 0:d.className,null==B?void 0:B.backdrop),ownerState:F});return E||_||D&&!z?(0,Ue.jsx)(zo,{ref:M,container:h,disablePortal:w,children:(0,Ue.jsxs)(U,(0,Me.A)({},q,{children:[!C&&u?(0,Ue.jsx)(V,(0,Me.A)({},G)):null,(0,Ue.jsx)(Mo,{disableEnforceFocus:x,disableAutoFocus:b,disableRestoreFocus:S,isEnabled:L,open:_,children:r.cloneElement(m,W)})]}))}):null}));function Yo(e){return(0,Ye.Ay)("MuiPopover",e)}(0,qe.A)("MuiPopover",["root","paper"]);const Jo=["onEntering"],Zo=["action","anchorEl","anchorOrigin","anchorPosition","anchorReference","children","className","container","elevation","marginThreshold","open","PaperProps","slots","slotProps","transformOrigin","TransitionComponent","transitionDuration","TransitionProps","disableScrollLock"],ea=["slotProps"];function ta(e,t){let n=0;return"number"===typeof t?n=t:"center"===t?n=e.height/2:"bottom"===t&&(n=e.height),n}function na(e,t){let n=0;return"number"===typeof t?n=t:"center"===t?n=e.width/2:"right"===t&&(n=e.width),n}function ra(e){return[e.horizontal,e.vertical].map((e=>"number"===typeof e?`${e}px`:e)).join(" ")}function oa(e){return"function"===typeof e?e():e}const aa=(0,yt.Ay)(Qo,{name:"MuiPopover",slot:"Root",overridesResolver:(e,t)=>t.root})({}),ia=(0,yt.Ay)(Xt,{name:"MuiPopover",slot:"Paper",overridesResolver:(e,t)=>t.paper})({position:"absolute",overflowY:"auto",overflowX:"hidden",minWidth:16,minHeight:16,maxWidth:"calc(100% - 32px)",maxHeight:"calc(100% - 32px)",outline:0}),la=r.forwardRef((function(e,t){var n,o,a;const i=(0,bt.A)({props:e,name:"MuiPopover"}),{action:l,anchorEl:s,anchorOrigin:c={vertical:"top",horizontal:"left"},anchorPosition:u,anchorReference:d="anchorEl",children:p,className:f,container:m,elevation:h=8,marginThreshold:g=16,open:v,PaperProps:y={},slots:b,slotProps:x,transformOrigin:A={vertical:"top",horizontal:"left"},TransitionComponent:w=wo,transitionDuration:S="auto",TransitionProps:{onEntering:k}={},disableScrollLock:C=!1}=i,E=(0,Le.A)(i.TransitionProps,Jo),j=(0,Le.A)(i,Zo),_=null!=(n=null==x?void 0:x.paper)?n:y,P=r.useRef(),R=(0,Cn.A)(P,_.ref),I=(0,Me.A)({},i,{anchorOrigin:c,anchorReference:d,elevation:h,marginThreshold:g,externalPaperSlotProps:_,transformOrigin:A,TransitionComponent:w,transitionDuration:S,TransitionProps:E}),T=(e=>{const{classes:t}=e;return(0,Je.A)({root:["root"],paper:["paper"]},Yo,t)})(I),$=r.useCallback((()=>{if("anchorPosition"===d)return u;const e=oa(s),t=(e&&1===e.nodeType?e:(0,Ir.A)(P.current).body).getBoundingClientRect();return{top:t.top+ta(t,c.vertical),left:t.left+na(t,c.horizontal)}}),[s,c.horizontal,c.vertical,u,d]),O=r.useCallback((e=>({vertical:ta(e,A.vertical),horizontal:na(e,A.horizontal)})),[A.horizontal,A.vertical]),N=r.useCallback((e=>{const t={width:e.offsetWidth,height:e.offsetHeight},n=O(t);if("none"===d)return{top:null,left:null,transformOrigin:ra(n)};const r=$();let o=r.top-n.vertical,a=r.left-n.horizontal;const i=o+t.height,l=a+t.width,c=(0,Zr.A)(oa(s)),u=c.innerHeight-g,p=c.innerWidth-g;if(null!==g&&o<g){const e=o-g;o-=e,n.vertical+=e}else if(null!==g&&i>u){const e=i-u;o-=e,n.vertical+=e}if(null!==g&&a<g){const e=a-g;a-=e,n.horizontal+=e}else if(l>p){const e=l-p;a-=e,n.horizontal+=e}return{top:`${Math.round(o)}px`,left:`${Math.round(a)}px`,transformOrigin:ra(n)}}),[s,d,$,O,g]),[M,L]=r.useState(v),z=r.useCallback((()=>{const e=P.current;if(!e)return;const t=N(e);null!==t.top&&(e.style.top=t.top),null!==t.left&&(e.style.left=t.left),e.style.transformOrigin=t.transformOrigin,L(!0)}),[N]);r.useEffect((()=>(C&&window.addEventListener("scroll",z),()=>window.removeEventListener("scroll",z))),[s,C,z]);r.useEffect((()=>{v&&z()})),r.useImperativeHandle(l,(()=>v?{updatePosition:()=>{z()}}:null),[v,z]),r.useEffect((()=>{if(!v)return;const e=(0,Jr.A)((()=>{z()})),t=(0,Zr.A)(s);return t.addEventListener("resize",e),()=>{e.clear(),t.removeEventListener("resize",e)}}),[s,v,z]);let D=S;"auto"!==S||w.muiSupportAuto||(D=void 0);const F=m||(s?(0,Ir.A)(oa(s)).body:void 0),B=null!=(o=null==b?void 0:b.root)?o:aa,W=null!=(a=null==b?void 0:b.paper)?a:ia,U=zr({elementType:W,externalSlotProps:(0,Me.A)({},_,{style:M?_.style:(0,Me.A)({},_.style,{opacity:0})}),additionalProps:{elevation:h,ref:R},ownerState:I,className:(0,ze.A)(T.paper,null==_?void 0:_.className)}),V=zr({elementType:B,externalSlotProps:(null==x?void 0:x.root)||{},externalForwardedProps:j,additionalProps:{ref:t,slotProps:{backdrop:{invisible:!0}},container:F,open:v},ownerState:I,className:(0,ze.A)(T.root,f)}),{slotProps:H}=V,K=(0,Le.A)(V,ea);return(0,Ue.jsx)(B,(0,Me.A)({},K,!An(B)&&{slotProps:H,disableScrollLock:C},{children:(0,Ue.jsx)(w,(0,Me.A)({appear:!0,in:v,onEntering:(e,t)=>{k&&k(e,t),z()},onExited:()=>{L(!1)},timeout:D},E,{children:(0,Ue.jsx)(W,(0,Me.A)({},U,{children:p}))}))}))}));function sa(e){return(0,Ye.Ay)("MuiMenu",e)}(0,qe.A)("MuiMenu",["root","paper","list"]);const ca=["onEntering"],ua=["autoFocus","children","className","disableAutoFocusItem","MenuListProps","onClose","open","PaperProps","PopoverClasses","transitionDuration","TransitionProps","variant","slots","slotProps"],da={vertical:"top",horizontal:"right"},pa={vertical:"top",horizontal:"left"},fa=(0,yt.Ay)(la,{shouldForwardProp:e=>(0,yt.ep)(e)||"classes"===e,name:"MuiMenu",slot:"Root",overridesResolver:(e,t)=>t.root})({}),ma=(0,yt.Ay)(ia,{name:"MuiMenu",slot:"Paper",overridesResolver:(e,t)=>t.paper})({maxHeight:"calc(100% - 96px)",WebkitOverflowScrolling:"touch"}),ha=(0,yt.Ay)(Yr,{name:"MuiMenu",slot:"List",overridesResolver:(e,t)=>t.list})({outline:0}),ga=r.forwardRef((function(e,t){var n,o;const a=(0,bt.A)({props:e,name:"MuiMenu"}),{autoFocus:i=!0,children:l,className:s,disableAutoFocusItem:c=!1,MenuListProps:u={},onClose:d,open:p,PaperProps:f={},PopoverClasses:m,transitionDuration:h="auto",TransitionProps:{onEntering:g}={},variant:v="selectedMenu",slots:y={},slotProps:b={}}=a,x=(0,Le.A)(a.TransitionProps,ca),A=(0,Le.A)(a,ua),w=mo(),S="rtl"===w.direction,k=(0,Me.A)({},a,{autoFocus:i,disableAutoFocusItem:c,MenuListProps:u,onEntering:g,PaperProps:f,transitionDuration:h,TransitionProps:x,variant:v}),C=(e=>{const{classes:t}=e;return(0,Je.A)({root:["root"],paper:["paper"],list:["list"]},sa,t)})(k),E=i&&!c&&p,j=r.useRef(null);let _=-1;r.Children.map(l,((e,t)=>{r.isValidElement(e)&&(e.props.disabled||("selectedMenu"===v&&e.props.selected||-1===_)&&(_=t))}));const P=null!=(n=y.paper)?n:ma,R=null!=(o=b.paper)?o:f,I=zr({elementType:y.root,externalSlotProps:b.root,ownerState:k,className:[C.root,s]}),T=zr({elementType:P,externalSlotProps:R,ownerState:k,className:C.paper});return(0,Ue.jsx)(fa,(0,Me.A)({onClose:d,anchorOrigin:{vertical:"bottom",horizontal:S?"right":"left"},transformOrigin:S?da:pa,slots:{paper:P,root:y.root},slotProps:{root:I,paper:T},open:p,ref:t,transitionDuration:h,TransitionProps:(0,Me.A)({onEntering:(e,t)=>{j.current&&j.current.adjustStyleForScrollbar(e,w),g&&g(e,t)}},x),ownerState:k},A,{classes:m,children:(0,Ue.jsx)(ha,(0,Me.A)({onKeyDown:e=>{"Tab"===e.key&&(e.preventDefault(),d&&d(e,"tabKeyDown"))},actions:j,autoFocus:i&&(-1===_||c),autoFocusItem:E,variant:v},u,{className:(0,ze.A)(C.list,u.className),children:l}))}))}));function va(e){return(0,Ye.Ay)("MuiNativeSelect",e)}const ya=(0,qe.A)("MuiNativeSelect",["root","select","multiple","filled","outlined","standard","disabled","icon","iconOpen","iconFilled","iconOutlined","iconStandard","nativeInput","error"]),ba=["className","disabled","error","IconComponent","inputRef","variant"],xa=e=>{let{ownerState:t,theme:n}=e;return(0,Me.A)({MozAppearance:"none",WebkitAppearance:"none",userSelect:"none",borderRadius:0,cursor:"pointer","&:focus":(0,Me.A)({},n.vars?{backgroundColor:`rgba(${n.vars.palette.common.onBackgroundChannel} / 0.05)`}:{backgroundColor:"light"===n.palette.mode?"rgba(0, 0, 0, 0.05)":"rgba(255, 255, 255, 0.05)"},{borderRadius:0}),"&::-ms-expand":{display:"none"},[`&.${ya.disabled}`]:{cursor:"default"},"&[multiple]":{height:"auto"},"&:not([multiple]) option, &:not([multiple]) optgroup":{backgroundColor:(n.vars||n).palette.background.paper},"&&&":{paddingRight:24,minWidth:16}},"filled"===t.variant&&{"&&&":{paddingRight:32}},"outlined"===t.variant&&{borderRadius:(n.vars||n).shape.borderRadius,"&:focus":{borderRadius:(n.vars||n).shape.borderRadius},"&&&":{paddingRight:32}})},Aa=(0,yt.Ay)("select",{name:"MuiNativeSelect",slot:"Select",shouldForwardProp:yt.ep,overridesResolver:(e,t)=>{const{ownerState:n}=e;return[t.select,t[n.variant],n.error&&t.error,{[`&.${ya.multiple}`]:t.multiple}]}})(xa),wa=e=>{let{ownerState:t,theme:n}=e;return(0,Me.A)({position:"absolute",right:0,top:"calc(50% - .5em)",pointerEvents:"none",color:(n.vars||n).palette.action.active,[`&.${ya.disabled}`]:{color:(n.vars||n).palette.action.disabled}},t.open&&{transform:"rotate(180deg)"},"filled"===t.variant&&{right:7},"outlined"===t.variant&&{right:7})},Sa=(0,yt.Ay)("svg",{name:"MuiNativeSelect",slot:"Icon",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[t.icon,n.variant&&t[`icon${(0,vt.A)(n.variant)}`],n.open&&t.iconOpen]}})(wa),ka=r.forwardRef((function(e,t){const{className:n,disabled:o,error:a,IconComponent:i,inputRef:l,variant:s="standard"}=e,c=(0,Le.A)(e,ba),u=(0,Me.A)({},e,{disabled:o,variant:s,error:a}),d=(e=>{const{classes:t,variant:n,disabled:r,multiple:o,open:a,error:i}=e,l={select:["select",n,r&&"disabled",o&&"multiple",i&&"error"],icon:["icon",`icon${(0,vt.A)(n)}`,a&&"iconOpen",r&&"disabled"]};return(0,Je.A)(l,va,t)})(u);return(0,Ue.jsxs)(r.Fragment,{children:[(0,Ue.jsx)(Aa,(0,Me.A)({ownerState:u,className:(0,ze.A)(d.select,n),disabled:o,ref:l||t},c)),e.multiple?null:(0,Ue.jsx)(Sa,{as:i,ownerState:u,className:d.icon})]})}));var Ca=n(5420);function Ea(e){return(0,Ye.Ay)("MuiSelect",e)}const ja=(0,qe.A)("MuiSelect",["root","select","multiple","filled","outlined","standard","disabled","focused","icon","iconOpen","iconFilled","iconOutlined","iconStandard","nativeInput","error"]);var _a;const Pa=["aria-describedby","aria-label","autoFocus","autoWidth","children","className","defaultOpen","defaultValue","disabled","displayEmpty","error","IconComponent","inputRef","labelId","MenuProps","multiple","name","onBlur","onChange","onClose","onFocus","onOpen","open","readOnly","renderValue","SelectDisplayProps","tabIndex","type","value","variant"],Ra=(0,yt.Ay)("div",{name:"MuiSelect",slot:"Select",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[{[`&.${ja.select}`]:t.select},{[`&.${ja.select}`]:t[n.variant]},{[`&.${ja.error}`]:t.error},{[`&.${ja.multiple}`]:t.multiple}]}})(xa,{[`&.${ja.select}`]:{height:"auto",minHeight:"1.4375em",textOverflow:"ellipsis",whiteSpace:"nowrap",overflow:"hidden"}}),Ia=(0,yt.Ay)("svg",{name:"MuiSelect",slot:"Icon",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[t.icon,n.variant&&t[`icon${(0,vt.A)(n.variant)}`],n.open&&t.iconOpen]}})(wa),Ta=(0,yt.Ay)("input",{shouldForwardProp:e=>(0,yt._n)(e)&&"classes"!==e,name:"MuiSelect",slot:"NativeInput",overridesResolver:(e,t)=>t.nativeInput})({bottom:0,left:0,position:"absolute",opacity:0,pointerEvents:"none",width:"100%",boxSizing:"border-box"});function $a(e,t){return"object"===typeof t&&null!==t?e===t:String(e)===String(t)}function Oa(e){return null==e||"string"===typeof e&&!e.trim()}const Na=r.forwardRef((function(e,t){var n;const{"aria-describedby":o,"aria-label":a,autoFocus:i,autoWidth:l,children:s,className:c,defaultOpen:u,defaultValue:d,disabled:p,displayEmpty:f,error:m=!1,IconComponent:h,inputRef:g,labelId:v,MenuProps:y={},multiple:b,name:x,onBlur:A,onChange:w,onClose:S,onFocus:k,onOpen:C,open:E,readOnly:j,renderValue:_,SelectDisplayProps:P={},tabIndex:R,value:I,variant:T="standard"}=e,$=(0,Le.A)(e,Pa),[O,N]=(0,Ca.A)({controlled:I,default:d,name:"Select"}),[M,L]=(0,Ca.A)({controlled:E,default:u,name:"Select"}),z=r.useRef(null),D=r.useRef(null),[F,B]=r.useState(null),{current:W}=r.useRef(null!=E),[U,V]=r.useState(),H=(0,Cn.A)(t,g),K=r.useCallback((e=>{D.current=e,e&&B(e)}),[]),q=null==F?void 0:F.parentNode;r.useImperativeHandle(H,(()=>({focus:()=>{D.current.focus()},node:z.current,value:O})),[O]),r.useEffect((()=>{u&&M&&F&&!W&&(V(l?null:q.clientWidth),D.current.focus())}),[F,l]),r.useEffect((()=>{i&&D.current.focus()}),[i]),r.useEffect((()=>{if(!v)return;const e=(0,Ir.A)(D.current).getElementById(v);if(e){const t=()=>{getSelection().isCollapsed&&D.current.focus()};return e.addEventListener("click",t),()=>{e.removeEventListener("click",t)}}}),[v]);const G=(e,t)=>{e?C&&C(t):S&&S(t),W||(V(l?null:q.clientWidth),L(e))},X=r.Children.toArray(s),Q=e=>t=>{let n;if(t.currentTarget.hasAttribute("tabindex")){if(b){n=Array.isArray(O)?O.slice():[];const t=O.indexOf(e.props.value);-1===t?n.push(e.props.value):n.splice(t,1)}else n=e.props.value;if(e.props.onClick&&e.props.onClick(t),O!==n&&(N(n),w)){const r=t.nativeEvent||t,o=new r.constructor(r.type,r);Object.defineProperty(o,"target",{writable:!0,value:{value:n,name:x}}),w(o,e)}b||G(!1,t)}},Y=null!==F&&M;let J,Z;delete $["aria-invalid"];const ee=[];let te=!1,ne=!1;(_n({value:O})||f)&&(_?J=_(O):te=!0);const re=X.map((e=>{if(!r.isValidElement(e))return null;let t;if(b){if(!Array.isArray(O))throw new Error((0,pn.A)(2));t=O.some((t=>$a(t,e.props.value))),t&&te&&ee.push(e.props.children)}else t=$a(O,e.props.value),t&&te&&(Z=e.props.children);return t&&(ne=!0),r.cloneElement(e,{"aria-selected":t?"true":"false",onClick:Q(e),onKeyUp:t=>{" "===t.key&&t.preventDefault(),e.props.onKeyUp&&e.props.onKeyUp(t)},role:"option",selected:t,value:void 0,"data-value":e.props.value})}));te&&(J=b?0===ee.length?null:ee.reduce(((e,t,n)=>(e.push(t),n<ee.length-1&&e.push(", "),e)),[]):Z);let oe,ae=U;!l&&W&&F&&(ae=q.clientWidth),oe="undefined"!==typeof R?R:p?null:0;const ie=P.id||(x?`mui-component-select-${x}`:void 0),le=(0,Me.A)({},e,{variant:T,value:O,open:Y,error:m}),se=(e=>{const{classes:t,variant:n,disabled:r,multiple:o,open:a,error:i}=e,l={select:["select",n,r&&"disabled",o&&"multiple",i&&"error"],icon:["icon",`icon${(0,vt.A)(n)}`,a&&"iconOpen",r&&"disabled"],nativeInput:["nativeInput"]};return(0,Je.A)(l,Ea,t)})(le),ce=(0,Me.A)({},y.PaperProps,null==(n=y.slotProps)?void 0:n.paper),ue=(0,dn.A)();return(0,Ue.jsxs)(r.Fragment,{children:[(0,Ue.jsx)(Ra,(0,Me.A)({ref:K,tabIndex:oe,role:"combobox","aria-controls":ue,"aria-disabled":p?"true":void 0,"aria-expanded":Y?"true":"false","aria-haspopup":"listbox","aria-label":a,"aria-labelledby":[v,ie].filter(Boolean).join(" ")||void 0,"aria-describedby":o,onKeyDown:e=>{if(!j){-1!==[" ","ArrowUp","ArrowDown","Enter"].indexOf(e.key)&&(e.preventDefault(),G(!0,e))}},onMouseDown:p||j?null:e=>{0===e.button&&(e.preventDefault(),D.current.focus(),G(!0,e))},onBlur:e=>{!Y&&A&&(Object.defineProperty(e,"target",{writable:!0,value:{value:O,name:x}}),A(e))},onFocus:k},P,{ownerState:le,className:(0,ze.A)(P.className,se.select,c),id:ie,children:Oa(J)?_a||(_a=(0,Ue.jsx)("span",{className:"notranslate",children:"\u200b"})):J})),(0,Ue.jsx)(Ta,(0,Me.A)({"aria-invalid":m,value:Array.isArray(O)?O.join(","):O,name:x,ref:z,"aria-hidden":!0,onChange:e=>{const t=X.find((t=>t.props.value===e.target.value));void 0!==t&&(N(t.props.value),w&&w(e,t))},tabIndex:-1,disabled:p,className:se.nativeInput,autoFocus:i,ownerState:le},$)),(0,Ue.jsx)(Ia,{as:h,className:se.icon,ownerState:le}),(0,Ue.jsx)(ga,(0,Me.A)({id:`menu-${x||""}`,anchorEl:q,open:Y,onClose:e=>{G(!1,e)},anchorOrigin:{vertical:"bottom",horizontal:"center"},transformOrigin:{vertical:"top",horizontal:"center"}},y,{MenuListProps:(0,Me.A)({"aria-labelledby":v,role:"listbox","aria-multiselectable":b?"true":void 0,disableListWrap:!0,id:ue},y.MenuListProps),slotProps:(0,Me.A)({},y.slotProps,{paper:(0,Me.A)({},ce,{style:(0,Me.A)({minWidth:ae},null!=ce?ce.style:null)})}),children:re}))]})}));var Ma=n(9662);const La=(0,Ma.A)((0,Ue.jsx)("path",{d:"M7 10l5 5 5-5z"}),"ArrowDropDown"),za=["autoWidth","children","classes","className","defaultOpen","displayEmpty","IconComponent","id","input","inputProps","label","labelId","MenuProps","multiple","native","onClose","onOpen","open","renderValue","SelectDisplayProps","variant"],Da=["root"],Fa={name:"MuiSelect",overridesResolver:(e,t)=>t.root,shouldForwardProp:e=>(0,yt.ep)(e)&&"variant"!==e,slot:"Root"},Ba=(0,yt.Ay)(Vn,Fa)(""),Wa=(0,yt.Ay)(cr,Fa)(""),Ua=(0,yt.Ay)(Yn,Fa)(""),Va=r.forwardRef((function(e,t){const n=(0,bt.A)({name:"MuiSelect",props:e}),{autoWidth:o=!1,children:a,classes:i={},className:l,defaultOpen:s=!1,displayEmpty:c=!1,IconComponent:u=La,id:d,input:p,inputProps:f,label:m,labelId:h,MenuProps:g,multiple:v=!1,native:y=!1,onClose:b,onOpen:x,open:A,renderValue:w,SelectDisplayProps:S,variant:k="outlined"}=n,C=(0,Le.A)(n,za),E=y?ka:Na,j=wn({props:n,muiFormControl:kn(),states:["variant","error"]}),_=j.variant||k,P=(0,Me.A)({},n,{variant:_,classes:i}),R=(e=>{const{classes:t}=e;return t})(P),I=(0,Le.A)(R,Da),T=p||{standard:(0,Ue.jsx)(Ba,{ownerState:P}),outlined:(0,Ue.jsx)(Wa,{label:m,ownerState:P}),filled:(0,Ue.jsx)(Ua,{ownerState:P})}[_],$=(0,Cn.A)(t,T.ref);return(0,Ue.jsx)(r.Fragment,{children:r.cloneElement(T,(0,Me.A)({inputComponent:E,inputProps:(0,Me.A)({children:a,error:j.error,IconComponent:u,variant:_,type:void 0,multiple:v},y?{id:d}:{autoWidth:o,defaultOpen:s,displayEmpty:c,labelId:h,MenuProps:g,onClose:b,onOpen:x,open:A,renderValue:w,SelectDisplayProps:(0,Me.A)({id:d},S)},f,{classes:f?(0,tt.A)(I,f.classes):I},p?p.props.inputProps:{})},(v&&y||c)&&"outlined"===_?{notched:!0}:{},{ref:$,className:(0,ze.A)(T.props.className,l,R.root)},!p&&{variant:_},C))})}));Va.muiName="Select";const Ha=Va;function Ka(e){return(0,Ye.Ay)("MuiTextField",e)}(0,qe.A)("MuiTextField",["root"]);const qa=["autoComplete","autoFocus","children","className","color","defaultValue","disabled","error","FormHelperTextProps","fullWidth","helperText","id","InputLabelProps","inputProps","InputProps","inputRef","label","maxRows","minRows","multiline","name","onBlur","onChange","onFocus","placeholder","required","rows","select","SelectProps","type","value","variant"],Ga={standard:Vn,filled:Yn,outlined:cr},Xa=(0,yt.Ay)(kr,{name:"MuiTextField",slot:"Root",overridesResolver:(e,t)=>t.root})({}),Qa=r.forwardRef((function(e,t){const n=(0,bt.A)({props:e,name:"MuiTextField"}),{autoComplete:r,autoFocus:o=!1,children:a,className:i,color:l="primary",defaultValue:s,disabled:c=!1,error:u=!1,FormHelperTextProps:d,fullWidth:p=!1,helperText:f,id:m,InputLabelProps:h,inputProps:g,InputProps:v,inputRef:y,label:b,maxRows:x,minRows:A,multiline:w=!1,name:S,onBlur:k,onChange:C,onFocus:E,placeholder:j,required:_=!1,rows:P,select:R=!1,SelectProps:I,type:T,value:$,variant:O="outlined"}=n,N=(0,Le.A)(n,qa),M=(0,Me.A)({},n,{autoFocus:o,color:l,disabled:c,error:u,fullWidth:p,multiline:w,required:_,select:R,variant:O}),L=(e=>{const{classes:t}=e;return(0,Je.A)({root:["root"]},Ka,t)})(M);const z={};"outlined"===O&&(h&&"undefined"!==typeof h.shrink&&(z.notched=h.shrink),z.label=b),R&&(I&&I.native||(z.id=void 0),z["aria-describedby"]=void 0);const D=(0,dn.A)(m),F=f&&D?`${D}-helper-text`:void 0,B=b&&D?`${D}-label`:void 0,W=Ga[O],U=(0,Ue.jsx)(W,(0,Me.A)({"aria-describedby":F,autoComplete:r,autoFocus:o,defaultValue:s,fullWidth:p,multiline:w,name:S,rows:P,maxRows:x,minRows:A,type:T,value:$,id:D,inputRef:y,onBlur:k,onChange:C,onFocus:E,placeholder:j,inputProps:g},z,v));return(0,Ue.jsxs)(Xa,(0,Me.A)({className:(0,ze.A)(L.root,i),disabled:c,error:u,fullWidth:p,ref:t,required:_,color:l,variant:O,ownerState:M},N,{children:[null!=b&&""!==b&&(0,Ue.jsx)(br,(0,Me.A)({htmlFor:D,id:B},h,{children:b})),R?(0,Ue.jsx)(Ha,(0,Me.A)({"aria-describedby":F,id:D,labelId:B,value:$,input:U},I,{children:a})):U,f&&(0,Ue.jsx)(Rr,(0,Me.A)({id:F},d,{children:f}))]}))}));var Ya=n(3030),Ja=n(3319),Za=n(3574);function ei(e,t){var n=Object.create(null);return e&&r.Children.map(e,(function(e){return e})).forEach((function(e){n[e.key]=function(e){return t&&(0,r.isValidElement)(e)?t(e):e}(e)})),n}function ti(e,t,n){return null!=n[t]?n[t]:e.props[t]}function ni(e,t,n){var o=ei(e.children),a=function(e,t){function n(n){return n in t?t[n]:e[n]}e=e||{},t=t||{};var r,o=Object.create(null),a=[];for(var i in e)i in t?a.length&&(o[i]=a,a=[]):a.push(i);var l={};for(var s in t){if(o[s])for(r=0;r<o[s].length;r++){var c=o[s][r];l[o[s][r]]=n(c)}l[s]=n(s)}for(r=0;r<a.length;r++)l[a[r]]=n(a[r]);return l}(t,o);return Object.keys(a).forEach((function(i){var l=a[i];if((0,r.isValidElement)(l)){var s=i in t,c=i in o,u=t[i],d=(0,r.isValidElement)(u)&&!u.props.in;!c||s&&!d?c||!s||d?c&&s&&(0,r.isValidElement)(u)&&(a[i]=(0,r.cloneElement)(l,{onExited:n.bind(null,l),in:u.props.in,exit:ti(l,"exit",e),enter:ti(l,"enter",e)})):a[i]=(0,r.cloneElement)(l,{in:!1}):a[i]=(0,r.cloneElement)(l,{onExited:n.bind(null,l),in:!0,exit:ti(l,"exit",e),enter:ti(l,"enter",e)})}})),a}var ri=Object.values||function(e){return Object.keys(e).map((function(t){return e[t]}))},oi=function(e){function t(t,n){var r,o=(r=e.call(this,t,n)||this).handleExited.bind(function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(r));return r.state={contextValue:{isMounting:!0},handleExited:o,firstRender:!0},r}no(t,e);var n=t.prototype;return n.componentDidMount=function(){this.mounted=!0,this.setState({contextValue:{isMounting:!1}})},n.componentWillUnmount=function(){this.mounted=!1},t.getDerivedStateFromProps=function(e,t){var n,o,a=t.children,i=t.handleExited;return{children:t.firstRender?(n=e,o=i,ei(n.children,(function(e){return(0,r.cloneElement)(e,{onExited:o.bind(null,e),in:!0,appear:ti(e,"appear",n),enter:ti(e,"enter",n),exit:ti(e,"exit",n)})}))):ni(e,a,i),firstRender:!1}},n.handleExited=function(e,t){var n=ei(this.props.children);e.key in n||(e.props.onExited&&e.props.onExited(t),this.mounted&&this.setState((function(t){var n=(0,Me.A)({},t.children);return delete n[e.key],{children:n}})))},n.render=function(){var e=this.props,t=e.component,n=e.childFactory,o=(0,Le.A)(e,["component","childFactory"]),a=this.state.contextValue,i=ri(this.state.children).map(n);return delete o.appear,delete o.enter,delete o.exit,null===t?r.createElement(oo.Provider,{value:a},i):r.createElement(oo.Provider,{value:a},r.createElement(t,o,i))},t}(r.Component);oi.propTypes={},oi.defaultProps={component:"div",childFactory:function(e){return e}};const ai=oi;var ii=n(3290);const li=function(e){const{className:t,classes:n,pulsate:o=!1,rippleX:a,rippleY:i,rippleSize:l,in:s,onExited:c,timeout:u}=e,[d,p]=r.useState(!1),f=(0,ze.A)(t,n.ripple,n.rippleVisible,o&&n.ripplePulsate),m={width:l,height:l,top:-l/2+i,left:-l/2+a},h=(0,ze.A)(n.child,d&&n.childLeaving,o&&n.childPulsate);return s||d||p(!0),r.useEffect((()=>{if(!s&&null!=c){const e=setTimeout(c,u);return()=>{clearTimeout(e)}}}),[c,s,u]),(0,Ue.jsx)("span",{className:f,style:m,children:(0,Ue.jsx)("span",{className:h})})};const si=(0,qe.A)("MuiTouchRipple",["root","ripple","rippleVisible","ripplePulsate","child","childLeaving","childPulsate"]),ci=["center","classes","className"];let ui,di,pi,fi,mi=e=>e;const hi=(0,ii.i7)(ui||(ui=mi`
  0% {
    transform: scale(0);
    opacity: 0.1;
  }

  100% {
    transform: scale(1);
    opacity: 0.3;
  }
`)),gi=(0,ii.i7)(di||(di=mi`
  0% {
    opacity: 1;
  }

  100% {
    opacity: 0;
  }
`)),vi=(0,ii.i7)(pi||(pi=mi`
  0% {
    transform: scale(1);
  }

  50% {
    transform: scale(0.92);
  }

  100% {
    transform: scale(1);
  }
`)),yi=(0,yt.Ay)("span",{name:"MuiTouchRipple",slot:"Root"})({overflow:"hidden",pointerEvents:"none",position:"absolute",zIndex:0,top:0,right:0,bottom:0,left:0,borderRadius:"inherit"}),bi=(0,yt.Ay)(li,{name:"MuiTouchRipple",slot:"Ripple"})(fi||(fi=mi`
  opacity: 0;
  position: absolute;

  &.${0} {
    opacity: 0.3;
    transform: scale(1);
    animation-name: ${0};
    animation-duration: ${0}ms;
    animation-timing-function: ${0};
  }

  &.${0} {
    animation-duration: ${0}ms;
  }

  & .${0} {
    opacity: 1;
    display: block;
    width: 100%;
    height: 100%;
    border-radius: 50%;
    background-color: currentColor;
  }

  & .${0} {
    opacity: 0;
    animation-name: ${0};
    animation-duration: ${0}ms;
    animation-timing-function: ${0};
  }

  & .${0} {
    position: absolute;
    /* @noflip */
    left: 0px;
    top: 0;
    animation-name: ${0};
    animation-duration: 2500ms;
    animation-timing-function: ${0};
    animation-iteration-count: infinite;
    animation-delay: 200ms;
  }
`),si.rippleVisible,hi,550,(e=>{let{theme:t}=e;return t.transitions.easing.easeInOut}),si.ripplePulsate,(e=>{let{theme:t}=e;return t.transitions.duration.shorter}),si.child,si.childLeaving,gi,550,(e=>{let{theme:t}=e;return t.transitions.easing.easeInOut}),si.childPulsate,vi,(e=>{let{theme:t}=e;return t.transitions.easing.easeInOut})),xi=r.forwardRef((function(e,t){const n=(0,bt.A)({props:e,name:"MuiTouchRipple"}),{center:o=!1,classes:a={},className:i}=n,l=(0,Le.A)(n,ci),[s,c]=r.useState([]),u=r.useRef(0),d=r.useRef(null);r.useEffect((()=>{d.current&&(d.current(),d.current=null)}),[s]);const p=r.useRef(!1),f=(0,eo.A)(),m=r.useRef(null),h=r.useRef(null),g=r.useCallback((e=>{const{pulsate:t,rippleX:n,rippleY:r,rippleSize:o,cb:i}=e;c((e=>[...e,(0,Ue.jsx)(bi,{classes:{ripple:(0,ze.A)(a.ripple,si.ripple),rippleVisible:(0,ze.A)(a.rippleVisible,si.rippleVisible),ripplePulsate:(0,ze.A)(a.ripplePulsate,si.ripplePulsate),child:(0,ze.A)(a.child,si.child),childLeaving:(0,ze.A)(a.childLeaving,si.childLeaving),childPulsate:(0,ze.A)(a.childPulsate,si.childPulsate)},timeout:550,pulsate:t,rippleX:n,rippleY:r,rippleSize:o},u.current)])),u.current+=1,d.current=i}),[a]),v=r.useCallback((function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:()=>{};const{pulsate:r=!1,center:a=o||t.pulsate,fakeElement:i=!1}=t;if("mousedown"===(null==e?void 0:e.type)&&p.current)return void(p.current=!1);"touchstart"===(null==e?void 0:e.type)&&(p.current=!0);const l=i?null:h.current,s=l?l.getBoundingClientRect():{width:0,height:0,left:0,top:0};let c,u,d;if(a||void 0===e||0===e.clientX&&0===e.clientY||!e.clientX&&!e.touches)c=Math.round(s.width/2),u=Math.round(s.height/2);else{const{clientX:t,clientY:n}=e.touches&&e.touches.length>0?e.touches[0]:e;c=Math.round(t-s.left),u=Math.round(n-s.top)}if(a)d=Math.sqrt((2*s.width**2+s.height**2)/3),d%2===0&&(d+=1);else{const e=2*Math.max(Math.abs((l?l.clientWidth:0)-c),c)+2,t=2*Math.max(Math.abs((l?l.clientHeight:0)-u),u)+2;d=Math.sqrt(e**2+t**2)}null!=e&&e.touches?null===m.current&&(m.current=()=>{g({pulsate:r,rippleX:c,rippleY:u,rippleSize:d,cb:n})},f.start(80,(()=>{m.current&&(m.current(),m.current=null)}))):g({pulsate:r,rippleX:c,rippleY:u,rippleSize:d,cb:n})}),[o,g,f]),y=r.useCallback((()=>{v({},{pulsate:!0})}),[v]),b=r.useCallback(((e,t)=>{if(f.clear(),"touchend"===(null==e?void 0:e.type)&&m.current)return m.current(),m.current=null,void f.start(0,(()=>{b(e,t)}));m.current=null,c((e=>e.length>0?e.slice(1):e)),d.current=t}),[f]);return r.useImperativeHandle(t,(()=>({pulsate:y,start:v,stop:b})),[y,v,b]),(0,Ue.jsx)(yi,(0,Me.A)({className:(0,ze.A)(si.root,a.root,i),ref:h},l,{children:(0,Ue.jsx)(ai,{component:null,exit:!0,children:s})}))}));function Ai(e){return(0,Ye.Ay)("MuiButtonBase",e)}const wi=(0,qe.A)("MuiButtonBase",["root","disabled","focusVisible"]),Si=["action","centerRipple","children","className","component","disabled","disableRipple","disableTouchRipple","focusRipple","focusVisibleClassName","LinkComponent","onBlur","onClick","onContextMenu","onDragLeave","onFocus","onFocusVisible","onKeyDown","onKeyUp","onMouseDown","onMouseLeave","onMouseUp","onTouchEnd","onTouchMove","onTouchStart","tabIndex","TouchRippleProps","touchRippleRef","type"],ki=(0,yt.Ay)("button",{name:"MuiButtonBase",slot:"Root",overridesResolver:(e,t)=>t.root})({display:"inline-flex",alignItems:"center",justifyContent:"center",position:"relative",boxSizing:"border-box",WebkitTapHighlightColor:"transparent",backgroundColor:"transparent",outline:0,border:0,margin:0,borderRadius:0,padding:0,cursor:"pointer",userSelect:"none",verticalAlign:"middle",MozAppearance:"none",WebkitAppearance:"none",textDecoration:"none",color:"inherit","&::-moz-focus-inner":{borderStyle:"none"},[`&.${wi.disabled}`]:{pointerEvents:"none",cursor:"default"},"@media print":{colorAdjust:"exact"}}),Ci=r.forwardRef((function(e,t){const n=(0,bt.A)({props:e,name:"MuiButtonBase"}),{action:o,centerRipple:a=!1,children:i,className:l,component:s="button",disabled:c=!1,disableRipple:u=!1,disableTouchRipple:d=!1,focusRipple:p=!1,LinkComponent:f="a",onBlur:m,onClick:h,onContextMenu:g,onDragLeave:v,onFocus:y,onFocusVisible:b,onKeyDown:x,onKeyUp:A,onMouseDown:w,onMouseLeave:S,onMouseUp:k,onTouchEnd:C,onTouchMove:E,onTouchStart:j,tabIndex:_=0,TouchRippleProps:P,touchRippleRef:R,type:I}=n,T=(0,Le.A)(n,Si),$=r.useRef(null),O=r.useRef(null),N=(0,Cn.A)(O,R),{isFocusVisibleRef:M,onFocus:L,onBlur:z,ref:D}=(0,Za.A)(),[F,B]=r.useState(!1);c&&F&&B(!1),r.useImperativeHandle(o,(()=>({focusVisible:()=>{B(!0),$.current.focus()}})),[]);const[W,U]=r.useState(!1);r.useEffect((()=>{U(!0)}),[]);const V=W&&!u&&!c;function H(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:d;return(0,Ja.A)((r=>{t&&t(r);return!n&&O.current&&O.current[e](r),!0}))}r.useEffect((()=>{F&&p&&!u&&W&&O.current.pulsate()}),[u,p,F,W]);const K=H("start",w),q=H("stop",g),G=H("stop",v),X=H("stop",k),Q=H("stop",(e=>{F&&e.preventDefault(),S&&S(e)})),Y=H("start",j),J=H("stop",C),Z=H("stop",E),ee=H("stop",(e=>{z(e),!1===M.current&&B(!1),m&&m(e)}),!1),te=(0,Ja.A)((e=>{$.current||($.current=e.currentTarget),L(e),!0===M.current&&(B(!0),b&&b(e)),y&&y(e)})),ne=()=>{const e=$.current;return s&&"button"!==s&&!("A"===e.tagName&&e.href)},re=r.useRef(!1),oe=(0,Ja.A)((e=>{p&&!re.current&&F&&O.current&&" "===e.key&&(re.current=!0,O.current.stop(e,(()=>{O.current.start(e)}))),e.target===e.currentTarget&&ne()&&" "===e.key&&e.preventDefault(),x&&x(e),e.target===e.currentTarget&&ne()&&"Enter"===e.key&&!c&&(e.preventDefault(),h&&h(e))})),ae=(0,Ja.A)((e=>{p&&" "===e.key&&O.current&&F&&!e.defaultPrevented&&(re.current=!1,O.current.stop(e,(()=>{O.current.pulsate(e)}))),A&&A(e),h&&e.target===e.currentTarget&&ne()&&" "===e.key&&!e.defaultPrevented&&h(e)}));let ie=s;"button"===ie&&(T.href||T.to)&&(ie=f);const le={};"button"===ie?(le.type=void 0===I?"button":I,le.disabled=c):(T.href||T.to||(le.role="button"),c&&(le["aria-disabled"]=c));const se=(0,Cn.A)(t,D,$);const ce=(0,Me.A)({},n,{centerRipple:a,component:s,disabled:c,disableRipple:u,disableTouchRipple:d,focusRipple:p,tabIndex:_,focusVisible:F}),ue=(e=>{const{disabled:t,focusVisible:n,focusVisibleClassName:r,classes:o}=e,a={root:["root",t&&"disabled",n&&"focusVisible"]},i=(0,Je.A)(a,Ai,o);return n&&r&&(i.root+=` ${r}`),i})(ce);return(0,Ue.jsxs)(ki,(0,Me.A)({as:ie,className:(0,ze.A)(ue.root,l),ownerState:ce,onBlur:ee,onClick:h,onContextMenu:q,onFocus:te,onKeyDown:oe,onKeyUp:ae,onMouseDown:K,onMouseLeave:Q,onMouseUp:X,onDragLeave:G,onTouchEnd:J,onTouchMove:Z,onTouchStart:Y,ref:se,tabIndex:c?-1:_,type:I},le,T,{children:[i,V?(0,Ue.jsx)(xi,(0,Me.A)({ref:N,center:a},P)):null]}))}));function Ei(e){return(0,Ye.Ay)("MuiButton",e)}const ji=(0,qe.A)("MuiButton",["root","text","textInherit","textPrimary","textSecondary","textSuccess","textError","textInfo","textWarning","outlined","outlinedInherit","outlinedPrimary","outlinedSecondary","outlinedSuccess","outlinedError","outlinedInfo","outlinedWarning","contained","containedInherit","containedPrimary","containedSecondary","containedSuccess","containedError","containedInfo","containedWarning","disableElevation","focusVisible","disabled","colorInherit","textSizeSmall","textSizeMedium","textSizeLarge","outlinedSizeSmall","outlinedSizeMedium","outlinedSizeLarge","containedSizeSmall","containedSizeMedium","containedSizeLarge","sizeMedium","sizeSmall","sizeLarge","fullWidth","startIcon","endIcon","iconSizeSmall","iconSizeMedium","iconSizeLarge"]);const _i=r.createContext({});const Pi=r.createContext(void 0),Ri=["children","color","component","className","disabled","disableElevation","disableFocusRipple","endIcon","focusVisibleClassName","fullWidth","size","startIcon","type","variant"],Ii=e=>(0,Me.A)({},"small"===e.size&&{"& > *:nth-of-type(1)":{fontSize:18}},"medium"===e.size&&{"& > *:nth-of-type(1)":{fontSize:20}},"large"===e.size&&{"& > *:nth-of-type(1)":{fontSize:22}}),Ti=(0,yt.Ay)(Ci,{shouldForwardProp:e=>(0,yt.ep)(e)||"classes"===e,name:"MuiButton",slot:"Root",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[t.root,t[n.variant],t[`${n.variant}${(0,vt.A)(n.color)}`],t[`size${(0,vt.A)(n.size)}`],t[`${n.variant}Size${(0,vt.A)(n.size)}`],"inherit"===n.color&&t.colorInherit,n.disableElevation&&t.disableElevation,n.fullWidth&&t.fullWidth]}})((e=>{let{theme:t,ownerState:n}=e;var r,o;const a="light"===t.palette.mode?t.palette.grey[300]:t.palette.grey[800],i="light"===t.palette.mode?t.palette.grey.A100:t.palette.grey[700];return(0,Me.A)({},t.typography.button,{minWidth:64,padding:"6px 16px",borderRadius:(t.vars||t).shape.borderRadius,transition:t.transitions.create(["background-color","box-shadow","border-color","color"],{duration:t.transitions.duration.short}),"&:hover":(0,Me.A)({textDecoration:"none",backgroundColor:t.vars?`rgba(${t.vars.palette.text.primaryChannel} / ${t.vars.palette.action.hoverOpacity})`:(0,Vt.X4)(t.palette.text.primary,t.palette.action.hoverOpacity),"@media (hover: none)":{backgroundColor:"transparent"}},"text"===n.variant&&"inherit"!==n.color&&{backgroundColor:t.vars?`rgba(${t.vars.palette[n.color].mainChannel} / ${t.vars.palette.action.hoverOpacity})`:(0,Vt.X4)(t.palette[n.color].main,t.palette.action.hoverOpacity),"@media (hover: none)":{backgroundColor:"transparent"}},"outlined"===n.variant&&"inherit"!==n.color&&{border:`1px solid ${(t.vars||t).palette[n.color].main}`,backgroundColor:t.vars?`rgba(${t.vars.palette[n.color].mainChannel} / ${t.vars.palette.action.hoverOpacity})`:(0,Vt.X4)(t.palette[n.color].main,t.palette.action.hoverOpacity),"@media (hover: none)":{backgroundColor:"transparent"}},"contained"===n.variant&&{backgroundColor:t.vars?t.vars.palette.Button.inheritContainedHoverBg:i,boxShadow:(t.vars||t).shadows[4],"@media (hover: none)":{boxShadow:(t.vars||t).shadows[2],backgroundColor:(t.vars||t).palette.grey[300]}},"contained"===n.variant&&"inherit"!==n.color&&{backgroundColor:(t.vars||t).palette[n.color].dark,"@media (hover: none)":{backgroundColor:(t.vars||t).palette[n.color].main}}),"&:active":(0,Me.A)({},"contained"===n.variant&&{boxShadow:(t.vars||t).shadows[8]}),[`&.${ji.focusVisible}`]:(0,Me.A)({},"contained"===n.variant&&{boxShadow:(t.vars||t).shadows[6]}),[`&.${ji.disabled}`]:(0,Me.A)({color:(t.vars||t).palette.action.disabled},"outlined"===n.variant&&{border:`1px solid ${(t.vars||t).palette.action.disabledBackground}`},"contained"===n.variant&&{color:(t.vars||t).palette.action.disabled,boxShadow:(t.vars||t).shadows[0],backgroundColor:(t.vars||t).palette.action.disabledBackground})},"text"===n.variant&&{padding:"6px 8px"},"text"===n.variant&&"inherit"!==n.color&&{color:(t.vars||t).palette[n.color].main},"outlined"===n.variant&&{padding:"5px 15px",border:"1px solid currentColor"},"outlined"===n.variant&&"inherit"!==n.color&&{color:(t.vars||t).palette[n.color].main,border:t.vars?`1px solid rgba(${t.vars.palette[n.color].mainChannel} / 0.5)`:`1px solid ${(0,Vt.X4)(t.palette[n.color].main,.5)}`},"contained"===n.variant&&{color:t.vars?t.vars.palette.text.primary:null==(r=(o=t.palette).getContrastText)?void 0:r.call(o,t.palette.grey[300]),backgroundColor:t.vars?t.vars.palette.Button.inheritContainedBg:a,boxShadow:(t.vars||t).shadows[2]},"contained"===n.variant&&"inherit"!==n.color&&{color:(t.vars||t).palette[n.color].contrastText,backgroundColor:(t.vars||t).palette[n.color].main},"inherit"===n.color&&{color:"inherit",borderColor:"currentColor"},"small"===n.size&&"text"===n.variant&&{padding:"4px 5px",fontSize:t.typography.pxToRem(13)},"large"===n.size&&"text"===n.variant&&{padding:"8px 11px",fontSize:t.typography.pxToRem(15)},"small"===n.size&&"outlined"===n.variant&&{padding:"3px 9px",fontSize:t.typography.pxToRem(13)},"large"===n.size&&"outlined"===n.variant&&{padding:"7px 21px",fontSize:t.typography.pxToRem(15)},"small"===n.size&&"contained"===n.variant&&{padding:"4px 10px",fontSize:t.typography.pxToRem(13)},"large"===n.size&&"contained"===n.variant&&{padding:"8px 22px",fontSize:t.typography.pxToRem(15)},n.fullWidth&&{width:"100%"})}),(e=>{let{ownerState:t}=e;return t.disableElevation&&{boxShadow:"none","&:hover":{boxShadow:"none"},[`&.${ji.focusVisible}`]:{boxShadow:"none"},"&:active":{boxShadow:"none"},[`&.${ji.disabled}`]:{boxShadow:"none"}}})),$i=(0,yt.Ay)("span",{name:"MuiButton",slot:"StartIcon",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[t.startIcon,t[`iconSize${(0,vt.A)(n.size)}`]]}})((e=>{let{ownerState:t}=e;return(0,Me.A)({display:"inherit",marginRight:8,marginLeft:-4},"small"===t.size&&{marginLeft:-2},Ii(t))})),Oi=(0,yt.Ay)("span",{name:"MuiButton",slot:"EndIcon",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[t.endIcon,t[`iconSize${(0,vt.A)(n.size)}`]]}})((e=>{let{ownerState:t}=e;return(0,Me.A)({display:"inherit",marginRight:-4,marginLeft:8},"small"===t.size&&{marginRight:-2},Ii(t))})),Ni=r.forwardRef((function(e,t){const n=r.useContext(_i),o=r.useContext(Pi),a=(0,Ya.A)(n,e),i=(0,bt.A)({props:a,name:"MuiButton"}),{children:l,color:s="primary",component:c="button",className:u,disabled:d=!1,disableElevation:p=!1,disableFocusRipple:f=!1,endIcon:m,focusVisibleClassName:h,fullWidth:g=!1,size:v="medium",startIcon:y,type:b,variant:x="text"}=i,A=(0,Le.A)(i,Ri),w=(0,Me.A)({},i,{color:s,component:c,disabled:d,disableElevation:p,disableFocusRipple:f,fullWidth:g,size:v,type:b,variant:x}),S=(e=>{const{color:t,disableElevation:n,fullWidth:r,size:o,variant:a,classes:i}=e,l={root:["root",a,`${a}${(0,vt.A)(t)}`,`size${(0,vt.A)(o)}`,`${a}Size${(0,vt.A)(o)}`,"inherit"===t&&"colorInherit",n&&"disableElevation",r&&"fullWidth"],label:["label"],startIcon:["startIcon",`iconSize${(0,vt.A)(o)}`],endIcon:["endIcon",`iconSize${(0,vt.A)(o)}`]},s=(0,Je.A)(l,Ei,i);return(0,Me.A)({},i,s)})(w),k=y&&(0,Ue.jsx)($i,{className:S.startIcon,ownerState:w,children:y}),C=m&&(0,Ue.jsx)(Oi,{className:S.endIcon,ownerState:w,children:m}),E=o||"";return(0,Ue.jsxs)(Ti,(0,Me.A)({ownerState:w,className:(0,ze.A)(n.className,S.root,u,E),component:c,disabled:d,focusRipple:!f,focusVisibleClassName:(0,ze.A)(S.focusVisible,h),ref:t,type:b},A,{classes:S,children:[k,l,C]}))}));function Mi(e){return(0,Ye.Ay)("MuiCircularProgress",e)}(0,qe.A)("MuiCircularProgress",["root","determinate","indeterminate","colorPrimary","colorSecondary","svg","circle","circleDeterminate","circleIndeterminate","circleDisableShrink"]);const Li=["className","color","disableShrink","size","style","thickness","value","variant"];let zi,Di,Fi,Bi,Wi=e=>e;const Ui=44,Vi=(0,ii.i7)(zi||(zi=Wi`
  0% {
    transform: rotate(0deg);
  }

  100% {
    transform: rotate(360deg);
  }
`)),Hi=(0,ii.i7)(Di||(Di=Wi`
  0% {
    stroke-dasharray: 1px, 200px;
    stroke-dashoffset: 0;
  }

  50% {
    stroke-dasharray: 100px, 200px;
    stroke-dashoffset: -15px;
  }

  100% {
    stroke-dasharray: 100px, 200px;
    stroke-dashoffset: -125px;
  }
`)),Ki=(0,yt.Ay)("span",{name:"MuiCircularProgress",slot:"Root",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[t.root,t[n.variant],t[`color${(0,vt.A)(n.color)}`]]}})((e=>{let{ownerState:t,theme:n}=e;return(0,Me.A)({display:"inline-block"},"determinate"===t.variant&&{transition:n.transitions.create("transform")},"inherit"!==t.color&&{color:(n.vars||n).palette[t.color].main})}),(e=>{let{ownerState:t}=e;return"indeterminate"===t.variant&&(0,ii.AH)(Fi||(Fi=Wi`
      animation: ${0} 1.4s linear infinite;
    `),Vi)})),qi=(0,yt.Ay)("svg",{name:"MuiCircularProgress",slot:"Svg",overridesResolver:(e,t)=>t.svg})({display:"block"}),Gi=(0,yt.Ay)("circle",{name:"MuiCircularProgress",slot:"Circle",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[t.circle,t[`circle${(0,vt.A)(n.variant)}`],n.disableShrink&&t.circleDisableShrink]}})((e=>{let{ownerState:t,theme:n}=e;return(0,Me.A)({stroke:"currentColor"},"determinate"===t.variant&&{transition:n.transitions.create("stroke-dashoffset")},"indeterminate"===t.variant&&{strokeDasharray:"80px, 200px",strokeDashoffset:0})}),(e=>{let{ownerState:t}=e;return"indeterminate"===t.variant&&!t.disableShrink&&(0,ii.AH)(Bi||(Bi=Wi`
      animation: ${0} 1.4s ease-in-out infinite;
    `),Hi)})),Xi=r.forwardRef((function(e,t){const n=(0,bt.A)({props:e,name:"MuiCircularProgress"}),{className:r,color:o="primary",disableShrink:a=!1,size:i=40,style:l,thickness:s=3.6,value:c=0,variant:u="indeterminate"}=n,d=(0,Le.A)(n,Li),p=(0,Me.A)({},n,{color:o,disableShrink:a,size:i,thickness:s,value:c,variant:u}),f=(e=>{const{classes:t,variant:n,color:r,disableShrink:o}=e,a={root:["root",n,`color${(0,vt.A)(r)}`],svg:["svg"],circle:["circle",`circle${(0,vt.A)(n)}`,o&&"circleDisableShrink"]};return(0,Je.A)(a,Mi,t)})(p),m={},h={},g={};if("determinate"===u){const e=2*Math.PI*((Ui-s)/2);m.strokeDasharray=e.toFixed(3),g["aria-valuenow"]=Math.round(c),m.strokeDashoffset=`${((100-c)/100*e).toFixed(3)}px`,h.transform="rotate(-90deg)"}return(0,Ue.jsx)(Ki,(0,Me.A)({className:(0,ze.A)(f.root,r),style:(0,Me.A)({width:i,height:i},h,l),ownerState:p,ref:t,role:"progressbar"},g,d,{children:(0,Ue.jsx)(qi,{className:f.svg,ownerState:p,viewBox:"22 22 44 44",children:(0,Ue.jsx)(Gi,{className:f.circle,style:m,ownerState:p,cx:Ui,cy:Ui,r:(Ui-s)/2,fill:"none",strokeWidth:s})})}))})),Qi={BASE_URL:{NODE_ENV:"production",PUBLIC_URL:"",WDS_SOCKET_HOST:void 0,WDS_SOCKET_PATH:void 0,WDS_SOCKET_PORT:void 0,FAST_REFRESH:!0}.REACT_APP_API_BASE_URL||"http://localhost:5000",ENDPOINTS:{LOGIN:"/api/save-config",MESSAGE:"/api/message",CONVERSATIONS:"/conversations",BUSINESSES:"/businesses",STAGES:"/stages",TEMPLATES:"/api/templates",DEBUG:"/debug"},DEFAULTS:{BUSINESS_ID:"1c8cde77-0306-42dd-a0b6-c366a07651ad",API_KEY:"default_api_key",USER_ID:"00000000-0000-0000-0000-000000000000"}};console.log("API Configuration:",{baseUrl:Qi.BASE_URL,endpoints:Qi.ENDPOINTS});const Yi={USER_ID:"userId",BUSINESS_ID:"businessId",BUSINESS_API_KEY:"businessApiKey"},Ji={SNACKBAR:{AUTO_HIDE_DURATION:6e3,POSITION:{vertical:"top",horizontal:"center"}},DEBUG_PANEL:{ID:"debugPanel"}},Zi=async(e,t,n)=>{try{const r=e.trim(),o=t.trim(),a=n.trim();console.log("Login attempt with:",{userId:r,businessId:o,businessApiKey:"***"}),console.log("Login URL:",`${Qi.BASE_URL}${Qi.ENDPOINTS.LOGIN}`);const i=await fetch(`${Qi.BASE_URL}${Qi.ENDPOINTS.LOGIN}`,{method:"POST",headers:{"Content-Type":"application/json",Accept:"application/json"},credentials:"include",body:JSON.stringify({userId:r,businessId:o,businessApiKey:a})}),l=await(async e=>{console.log("API Response Status:",e.status,e.statusText),console.log("Response Headers:",Object.fromEntries(e.headers.entries()));const t=e.clone();if(!e.ok)try{const t=await e.json();throw console.error("Error response data:",t),new Error(t.message||t.error||`API error: ${e.status}`)}catch(n){console.error("Error parsing response:",n);try{const n=await t.text();throw console.error("Response text:",n),new Error(`API error: ${e.status} ${e.statusText} - ${n}`)}catch(r){throw new Error(`API error: ${e.status} ${e.statusText}`)}}try{const t=await e.json();return console.log("API Response Data:",t),t}catch(o){return console.log("No JSON in successful response"),{}}})(i);return l.success||"Configuration saved successfully"===l.message?(console.log("Login successful, storing credentials"),localStorage.setItem(Yi.USER_ID,r),localStorage.setItem(Yi.BUSINESS_ID,o),localStorage.setItem(Yi.BUSINESS_API_KEY,a),{success:!0,message:"Login successful"}):(console.error("Login response indicates failure:",l),{success:!1,message:l.error||"Login failed"})}catch(r){return console.error("Login error:",r),{success:!1,message:r.message||"Login failed"}}},el=()=>(localStorage.removeItem(Yi.USER_ID),localStorage.removeItem(Yi.BUSINESS_ID),localStorage.removeItem(Yi.BUSINESS_API_KEY),{success:!0,message:"Logged out successfully"}),tl=()=>{const e=localStorage.getItem(Yi.USER_ID),t=localStorage.getItem(Yi.BUSINESS_ID),n=localStorage.getItem(Yi.BUSINESS_API_KEY);return!!(e&&t&&n)},nl=()=>({userId:localStorage.getItem(Yi.USER_ID)||"",businessId:localStorage.getItem(Yi.BUSINESS_ID)||"",businessApiKey:localStorage.getItem(Yi.BUSINESS_API_KEY)||""}),rl=()=>{const e=localStorage.getItem(Yi.BUSINESS_API_KEY);if(!e)throw new Error("No API key found. Please log in first.");return{"Content-Type":"application/json",Accept:"application/json",businessapikey:e}};const ol=function(e){let{setIsAuthenticated:t,handleSnackbarOpen:n,setUserId:o,setBusinessId:a,setBusinessApiKey:i}=e;const[l,s]=(0,r.useState)(!1),[c,u]=(0,r.useState)(""),[d,p]=(0,r.useState)(Qi.DEFAULTS.BUSINESS_ID),[f,m]=(0,r.useState)(Qi.DEFAULTS.API_KEY),h=ee();return(0,Ue.jsx)(Zt,{sx:{mt:4,maxWidth:400,mx:"auto"},children:(0,Ue.jsxs)(rn,{children:[(0,Ue.jsx)(un,{variant:"h5",gutterBottom:!0,align:"center",children:"Login"}),(0,Ue.jsxs)(Qe,{component:"form",onSubmit:async e=>{e.preventDefault(),s(!0);try{const e=await Zi(c,d,f);e.success?(o(c.trim()),a(d.trim()),i(f.trim()),t(!0),n(e.message||"Login successful","success"),h("/business")):(n(e.message||"Login failed","error"),t(!1))}catch(r){console.error("Login error:",r),n(r.message||"Login failed","error"),t(!1)}finally{s(!1)}},sx:{display:"flex",flexDirection:"column",gap:2,mt:2},children:[(0,Ue.jsx)(Qa,{label:"Business ID",variant:"outlined",value:d,onChange:e=>p(e.target.value),disabled:l,required:!0,error:!d,helperText:d?"":"Business ID is required",fullWidth:!0}),(0,Ue.jsx)(Qa,{label:"Business API Key",variant:"outlined",value:f,onChange:e=>m(e.target.value),disabled:l,type:"password",required:!0,error:!f,helperText:f?"":"Business API Key is required",fullWidth:!0}),(0,Ue.jsx)(Qa,{label:"User ID",variant:"outlined",value:c,onChange:e=>u(e.target.value),disabled:l,required:!0,error:!c,helperText:c?"":"User ID is required",fullWidth:!0}),(0,Ue.jsx)(Ni,{type:"submit",variant:"contained",disabled:l||!c||!d||!f,fullWidth:!0,children:l?(0,Ue.jsx)(Xi,{size:24}):"Login"})]})]})})};var al=n(1188);function il(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;return(0,al.A)(e,t,n)}function ll(e){if(e.type)return e;if("#"===e.charAt(0))return ll(function(e){e=e.slice(1);const t=new RegExp(`.{1,${e.length>=6?2:1}}`,"g");let n=e.match(t);return n&&1===n[0].length&&(n=n.map((e=>e+e))),n?`rgb${4===n.length?"a":""}(${n.map(((e,t)=>t<3?parseInt(e,16):Math.round(parseInt(e,16)/255*1e3)/1e3)).join(", ")})`:""}(e));const t=e.indexOf("("),n=e.substring(0,t);if(-1===["rgb","rgba","hsl","hsla","color"].indexOf(n))throw new Error((0,pn.A)(9,e));let r,o=e.substring(t+1,e.length-1);if("color"===n){if(o=o.split(" "),r=o.shift(),4===o.length&&"/"===o[3].charAt(0)&&(o[3]=o[3].slice(1)),-1===["srgb","display-p3","a98-rgb","prophoto-rgb","rec-2020"].indexOf(r))throw new Error((0,pn.A)(10,r))}else o=o.split(",");return o=o.map((e=>parseFloat(e))),{type:n,values:o,colorSpace:r}}function sl(e){const{type:t,colorSpace:n}=e;let{values:r}=e;return-1!==t.indexOf("rgb")?r=r.map(((e,t)=>t<3?parseInt(e,10):e)):-1!==t.indexOf("hsl")&&(r[1]=`${r[1]}%`,r[2]=`${r[2]}%`),r=-1!==t.indexOf("color")?`${n} ${r.join(" ")}`:`${r.join(", ")}`,`${t}(${r})`}function cl(e,t){if(e=ll(e),t=il(t),-1!==e.type.indexOf("hsl"))e.values[2]*=1-t;else if(-1!==e.type.indexOf("rgb")||-1!==e.type.indexOf("color"))for(let n=0;n<3;n+=1)e.values[n]*=1-t;return sl(e)}function ul(e,t){if(e=ll(e),t=il(t),-1!==e.type.indexOf("hsl"))e.values[2]+=(100-e.values[2])*t;else if(-1!==e.type.indexOf("rgb"))for(let n=0;n<3;n+=1)e.values[n]+=(255-e.values[n])*t;else if(-1!==e.type.indexOf("color"))for(let n=0;n<3;n+=1)e.values[n]+=(1-e.values[n])*t;return sl(e)}const dl=["className","elementType","ownerState","externalForwardedProps","getSlotOwnerState","internalForwardedProps"],pl=["component","slots","slotProps"],fl=["component"];function ml(e,t){const{className:n,elementType:r,ownerState:o,externalForwardedProps:a,getSlotOwnerState:i,internalForwardedProps:l}=t,s=(0,Le.A)(t,dl),{component:c,slots:u={[e]:void 0},slotProps:d={[e]:void 0}}=a,p=(0,Le.A)(a,pl),f=u[e]||r,m=Mr(d[e],o),h=Nr((0,Me.A)({className:n},s,{externalForwardedProps:"root"===e?p:void 0,externalSlotProps:m})),{props:{component:g},internalRef:v}=h,y=(0,Le.A)(h.props,fl),b=(0,fn.A)(v,null==m?void 0:m.ref,t.ref),x=i?i(y):{},A=(0,Me.A)({},o,x),w="root"===e?g||c:g,S=Tr(f,(0,Me.A)({},"root"===e&&!c&&!u[e]&&l,"root"!==e&&!u[e]&&l,y,w&&{as:w},{ref:b}),A);return Object.keys(x).forEach((e=>{delete S[e]})),[f,S]}function hl(e){return(0,Ye.Ay)("MuiAlert",e)}const gl=(0,qe.A)("MuiAlert",["root","action","icon","message","filled","filledSuccess","filledInfo","filledWarning","filledError","outlined","outlinedSuccess","outlinedInfo","outlinedWarning","outlinedError","standard","standardSuccess","standardInfo","standardWarning","standardError"]);function vl(e){return(0,Ye.Ay)("MuiIconButton",e)}const yl=(0,qe.A)("MuiIconButton",["root","disabled","colorInherit","colorPrimary","colorSecondary","colorError","colorInfo","colorSuccess","colorWarning","edgeStart","edgeEnd","sizeSmall","sizeMedium","sizeLarge"]),bl=["edge","children","className","color","disabled","disableFocusRipple","size"],xl=(0,yt.Ay)(Ci,{name:"MuiIconButton",slot:"Root",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[t.root,"default"!==n.color&&t[`color${(0,vt.A)(n.color)}`],n.edge&&t[`edge${(0,vt.A)(n.edge)}`],t[`size${(0,vt.A)(n.size)}`]]}})((e=>{let{theme:t,ownerState:n}=e;return(0,Me.A)({textAlign:"center",flex:"0 0 auto",fontSize:t.typography.pxToRem(24),padding:8,borderRadius:"50%",overflow:"visible",color:(t.vars||t).palette.action.active,transition:t.transitions.create("background-color",{duration:t.transitions.duration.shortest})},!n.disableRipple&&{"&:hover":{backgroundColor:t.vars?`rgba(${t.vars.palette.action.activeChannel} / ${t.vars.palette.action.hoverOpacity})`:(0,Vt.X4)(t.palette.action.active,t.palette.action.hoverOpacity),"@media (hover: none)":{backgroundColor:"transparent"}}},"start"===n.edge&&{marginLeft:"small"===n.size?-3:-12},"end"===n.edge&&{marginRight:"small"===n.size?-3:-12})}),(e=>{let{theme:t,ownerState:n}=e;var r;const o=null==(r=(t.vars||t).palette)?void 0:r[n.color];return(0,Me.A)({},"inherit"===n.color&&{color:"inherit"},"inherit"!==n.color&&"default"!==n.color&&(0,Me.A)({color:null==o?void 0:o.main},!n.disableRipple&&{"&:hover":(0,Me.A)({},o&&{backgroundColor:t.vars?`rgba(${o.mainChannel} / ${t.vars.palette.action.hoverOpacity})`:(0,Vt.X4)(o.main,t.palette.action.hoverOpacity)},{"@media (hover: none)":{backgroundColor:"transparent"}})}),"small"===n.size&&{padding:5,fontSize:t.typography.pxToRem(18)},"large"===n.size&&{padding:12,fontSize:t.typography.pxToRem(28)},{[`&.${yl.disabled}`]:{backgroundColor:"transparent",color:(t.vars||t).palette.action.disabled}})})),Al=r.forwardRef((function(e,t){const n=(0,bt.A)({props:e,name:"MuiIconButton"}),{edge:r=!1,children:o,className:a,color:i="default",disabled:l=!1,disableFocusRipple:s=!1,size:c="medium"}=n,u=(0,Le.A)(n,bl),d=(0,Me.A)({},n,{edge:r,color:i,disabled:l,disableFocusRipple:s,size:c}),p=(e=>{const{classes:t,disabled:n,color:r,edge:o,size:a}=e,i={root:["root",n&&"disabled","default"!==r&&`color${(0,vt.A)(r)}`,o&&`edge${(0,vt.A)(o)}`,`size${(0,vt.A)(a)}`]};return(0,Je.A)(i,vl,t)})(d);return(0,Ue.jsx)(xl,(0,Me.A)({className:(0,ze.A)(p.root,a),centerRipple:!0,focusRipple:!s,disabled:l,ref:t},u,{ownerState:d,children:o}))})),wl=(0,Ma.A)((0,Ue.jsx)("path",{d:"M20,12A8,8 0 0,1 12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4C12.76,4 13.5,4.11 14.2, 4.31L15.77,2.74C14.61,2.26 13.34,2 12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0, 0 22,12M7.91,10.08L6.5,11.5L11,16L21,6L19.59,4.58L11,13.17L7.91,10.08Z"}),"SuccessOutlined"),Sl=(0,Ma.A)((0,Ue.jsx)("path",{d:"M12 5.99L19.53 19H4.47L12 5.99M12 2L1 21h22L12 2zm1 14h-2v2h2v-2zm0-6h-2v4h2v-4z"}),"ReportProblemOutlined"),kl=(0,Ma.A)((0,Ue.jsx)("path",{d:"M11 15h2v2h-2zm0-8h2v6h-2zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"}),"ErrorOutline"),Cl=(0,Ma.A)((0,Ue.jsx)("path",{d:"M11,9H13V7H11M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20, 12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10, 10 0 0,0 12,2M11,17H13V11H11V17Z"}),"InfoOutlined"),El=(0,Ma.A)((0,Ue.jsx)("path",{d:"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"}),"Close"),jl=["action","children","className","closeText","color","components","componentsProps","icon","iconMapping","onClose","role","severity","slotProps","slots","variant"],_l=(0,yt.Ay)(Xt,{name:"MuiAlert",slot:"Root",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[t.root,t[n.variant],t[`${n.variant}${(0,vt.A)(n.color||n.severity)}`]]}})((e=>{let{theme:t,ownerState:n}=e;const r="light"===t.palette.mode?cl:ul,o="light"===t.palette.mode?ul:cl,a=n.color||n.severity;return(0,Me.A)({},t.typography.body2,{backgroundColor:"transparent",display:"flex",padding:"6px 16px"},a&&"standard"===n.variant&&{color:t.vars?t.vars.palette.Alert[`${a}Color`]:r(t.palette[a].light,.6),backgroundColor:t.vars?t.vars.palette.Alert[`${a}StandardBg`]:o(t.palette[a].light,.9),[`& .${gl.icon}`]:t.vars?{color:t.vars.palette.Alert[`${a}IconColor`]}:{color:t.palette[a].main}},a&&"outlined"===n.variant&&{color:t.vars?t.vars.palette.Alert[`${a}Color`]:r(t.palette[a].light,.6),border:`1px solid ${(t.vars||t).palette[a].light}`,[`& .${gl.icon}`]:t.vars?{color:t.vars.palette.Alert[`${a}IconColor`]}:{color:t.palette[a].main}},a&&"filled"===n.variant&&(0,Me.A)({fontWeight:t.typography.fontWeightMedium},t.vars?{color:t.vars.palette.Alert[`${a}FilledColor`],backgroundColor:t.vars.palette.Alert[`${a}FilledBg`]}:{backgroundColor:"dark"===t.palette.mode?t.palette[a].dark:t.palette[a].main,color:t.palette.getContrastText(t.palette[a].main)}))})),Pl=(0,yt.Ay)("div",{name:"MuiAlert",slot:"Icon",overridesResolver:(e,t)=>t.icon})({marginRight:12,padding:"7px 0",display:"flex",fontSize:22,opacity:.9}),Rl=(0,yt.Ay)("div",{name:"MuiAlert",slot:"Message",overridesResolver:(e,t)=>t.message})({padding:"8px 0",minWidth:0,overflow:"auto"}),Il=(0,yt.Ay)("div",{name:"MuiAlert",slot:"Action",overridesResolver:(e,t)=>t.action})({display:"flex",alignItems:"flex-start",padding:"4px 0 0 16px",marginLeft:"auto",marginRight:-8}),Tl={success:(0,Ue.jsx)(wl,{fontSize:"inherit"}),warning:(0,Ue.jsx)(Sl,{fontSize:"inherit"}),error:(0,Ue.jsx)(kl,{fontSize:"inherit"}),info:(0,Ue.jsx)(Cl,{fontSize:"inherit"})},$l=r.forwardRef((function(e,t){const n=(0,bt.A)({props:e,name:"MuiAlert"}),{action:r,children:o,className:a,closeText:i="Close",color:l,components:s={},componentsProps:c={},icon:u,iconMapping:d=Tl,onClose:p,role:f="alert",severity:m="success",slotProps:h={},slots:g={},variant:v="standard"}=n,y=(0,Le.A)(n,jl),b=(0,Me.A)({},n,{color:l,severity:m,variant:v}),x=(e=>{const{variant:t,color:n,severity:r,classes:o}=e,a={root:["root",`${t}${(0,vt.A)(n||r)}`,`${t}`],icon:["icon"],message:["message"],action:["action"]};return(0,Je.A)(a,hl,o)})(b),A={slots:(0,Me.A)({closeButton:s.CloseButton,closeIcon:s.CloseIcon},g),slotProps:(0,Me.A)({},c,h)},[w,S]=ml("closeButton",{elementType:Al,externalForwardedProps:A,ownerState:b}),[k,C]=ml("closeIcon",{elementType:El,externalForwardedProps:A,ownerState:b});return(0,Ue.jsxs)(_l,(0,Me.A)({role:f,elevation:0,ownerState:b,className:(0,ze.A)(x.root,a),ref:t},y,{children:[!1!==u?(0,Ue.jsx)(Pl,{ownerState:b,className:x.icon,children:u||d[m]||Tl[m]}):null,(0,Ue.jsx)(Rl,{ownerState:b,className:x.message,children:o}),null!=r?(0,Ue.jsx)(Il,{ownerState:b,className:x.action,children:r}):null,null==r&&p?(0,Ue.jsx)(Il,{ownerState:b,className:x.action,children:(0,Ue.jsx)(w,(0,Me.A)({size:"small","aria-label":i,title:i,color:"inherit",onClick:p},S,{children:(0,Ue.jsx)(k,(0,Me.A)({fontSize:"small"},C))}))}):null]}))}));function Ol(e){return(0,Ye.Ay)("MuiListItem",e)}const Nl=(0,qe.A)("MuiListItem",["root","container","focusVisible","dense","alignItemsFlexStart","disabled","divider","gutters","padding","button","secondaryAction","selected"]);const Ml=(0,qe.A)("MuiListItemButton",["root","focusVisible","dense","alignItemsFlexStart","disabled","divider","gutters","selected"]);function Ll(e){return(0,Ye.Ay)("MuiListItemSecondaryAction",e)}(0,qe.A)("MuiListItemSecondaryAction",["root","disableGutters"]);const zl=["className"],Dl=(0,yt.Ay)("div",{name:"MuiListItemSecondaryAction",slot:"Root",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[t.root,n.disableGutters&&t.disableGutters]}})((e=>{let{ownerState:t}=e;return(0,Me.A)({position:"absolute",right:16,top:"50%",transform:"translateY(-50%)"},t.disableGutters&&{right:0})})),Fl=r.forwardRef((function(e,t){const n=(0,bt.A)({props:e,name:"MuiListItemSecondaryAction"}),{className:o}=n,a=(0,Le.A)(n,zl),i=r.useContext(Dr),l=(0,Me.A)({},n,{disableGutters:i.disableGutters}),s=(e=>{const{disableGutters:t,classes:n}=e,r={root:["root",t&&"disableGutters"]};return(0,Je.A)(r,Ll,n)})(l);return(0,Ue.jsx)(Dl,(0,Me.A)({className:(0,ze.A)(s.root,o),ownerState:l,ref:t},a))}));Fl.muiName="ListItemSecondaryAction";const Bl=Fl,Wl=["className"],Ul=["alignItems","autoFocus","button","children","className","component","components","componentsProps","ContainerComponent","ContainerProps","dense","disabled","disableGutters","disablePadding","divider","focusVisibleClassName","secondaryAction","selected","slotProps","slots"],Vl=(0,yt.Ay)("div",{name:"MuiListItem",slot:"Root",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[t.root,n.dense&&t.dense,"flex-start"===n.alignItems&&t.alignItemsFlexStart,n.divider&&t.divider,!n.disableGutters&&t.gutters,!n.disablePadding&&t.padding,n.button&&t.button,n.hasSecondaryAction&&t.secondaryAction]}})((e=>{let{theme:t,ownerState:n}=e;return(0,Me.A)({display:"flex",justifyContent:"flex-start",alignItems:"center",position:"relative",textDecoration:"none",width:"100%",boxSizing:"border-box",textAlign:"left"},!n.disablePadding&&(0,Me.A)({paddingTop:8,paddingBottom:8},n.dense&&{paddingTop:4,paddingBottom:4},!n.disableGutters&&{paddingLeft:16,paddingRight:16},!!n.secondaryAction&&{paddingRight:48}),!!n.secondaryAction&&{[`& > .${Ml.root}`]:{paddingRight:48}},{[`&.${Nl.focusVisible}`]:{backgroundColor:(t.vars||t).palette.action.focus},[`&.${Nl.selected}`]:{backgroundColor:t.vars?`rgba(${t.vars.palette.primary.mainChannel} / ${t.vars.palette.action.selectedOpacity})`:(0,Vt.X4)(t.palette.primary.main,t.palette.action.selectedOpacity),[`&.${Nl.focusVisible}`]:{backgroundColor:t.vars?`rgba(${t.vars.palette.primary.mainChannel} / calc(${t.vars.palette.action.selectedOpacity} + ${t.vars.palette.action.focusOpacity}))`:(0,Vt.X4)(t.palette.primary.main,t.palette.action.selectedOpacity+t.palette.action.focusOpacity)}},[`&.${Nl.disabled}`]:{opacity:(t.vars||t).palette.action.disabledOpacity}},"flex-start"===n.alignItems&&{alignItems:"flex-start"},n.divider&&{borderBottom:`1px solid ${(t.vars||t).palette.divider}`,backgroundClip:"padding-box"},n.button&&{transition:t.transitions.create("background-color",{duration:t.transitions.duration.shortest}),"&:hover":{textDecoration:"none",backgroundColor:(t.vars||t).palette.action.hover,"@media (hover: none)":{backgroundColor:"transparent"}},[`&.${Nl.selected}:hover`]:{backgroundColor:t.vars?`rgba(${t.vars.palette.primary.mainChannel} / calc(${t.vars.palette.action.selectedOpacity} + ${t.vars.palette.action.hoverOpacity}))`:(0,Vt.X4)(t.palette.primary.main,t.palette.action.selectedOpacity+t.palette.action.hoverOpacity),"@media (hover: none)":{backgroundColor:t.vars?`rgba(${t.vars.palette.primary.mainChannel} / ${t.vars.palette.action.selectedOpacity})`:(0,Vt.X4)(t.palette.primary.main,t.palette.action.selectedOpacity)}}},n.hasSecondaryAction&&{paddingRight:48})})),Hl=(0,yt.Ay)("li",{name:"MuiListItem",slot:"Container",overridesResolver:(e,t)=>t.container})({position:"relative"}),Kl=r.forwardRef((function(e,t){const n=(0,bt.A)({props:e,name:"MuiListItem"}),{alignItems:o="center",autoFocus:a=!1,button:i=!1,children:l,className:s,component:c,components:u={},componentsProps:d={},ContainerComponent:p="li",ContainerProps:{className:f}={},dense:m=!1,disabled:h=!1,disableGutters:g=!1,disablePadding:v=!1,divider:y=!1,focusVisibleClassName:b,secondaryAction:x,selected:A=!1,slotProps:w={},slots:S={}}=n,k=(0,Le.A)(n.ContainerProps,Wl),C=(0,Le.A)(n,Ul),E=r.useContext(Dr),j=r.useMemo((()=>({dense:m||E.dense||!1,alignItems:o,disableGutters:g})),[o,E.dense,m,g]),_=r.useRef(null);(0,En.A)((()=>{a&&_.current&&_.current.focus()}),[a]);const P=r.Children.toArray(l),R=P.length&&(0,xr.A)(P[P.length-1],["ListItemSecondaryAction"]),I=(0,Me.A)({},n,{alignItems:o,autoFocus:a,button:i,dense:j.dense,disabled:h,disableGutters:g,disablePadding:v,divider:y,hasSecondaryAction:R,selected:A}),T=(e=>{const{alignItems:t,button:n,classes:r,dense:o,disabled:a,disableGutters:i,disablePadding:l,divider:s,hasSecondaryAction:c,selected:u}=e,d={root:["root",o&&"dense",!i&&"gutters",!l&&"padding",s&&"divider",a&&"disabled",n&&"button","flex-start"===t&&"alignItemsFlexStart",c&&"secondaryAction",u&&"selected"],container:["container"]};return(0,Je.A)(d,Ol,r)})(I),$=(0,Cn.A)(_,t),O=S.root||u.Root||Vl,N=w.root||d.root||{},M=(0,Me.A)({className:(0,ze.A)(T.root,N.className,s),disabled:h},C);let L=c||"li";return i&&(M.component=c||"div",M.focusVisibleClassName=(0,ze.A)(Nl.focusVisible,b),L=Ci),R?(L=M.component||c?L:"div","li"===p&&("li"===L?L="div":"li"===M.component&&(M.component="div")),(0,Ue.jsx)(Dr.Provider,{value:j,children:(0,Ue.jsxs)(Hl,(0,Me.A)({as:p,className:(0,ze.A)(T.container,f),ref:$,ownerState:I},k,{children:[(0,Ue.jsx)(O,(0,Me.A)({},N,!An(O)&&{as:L,ownerState:(0,Me.A)({},I,N.ownerState)},M,{children:P})),P.pop()]}))})):(0,Ue.jsx)(Dr.Provider,{value:j,children:(0,Ue.jsxs)(O,(0,Me.A)({},N,{as:L,ref:$},!An(O)&&{ownerState:(0,Me.A)({},I,N.ownerState)},M,{children:[P,x&&(0,Ue.jsx)(Bl,{children:x})]}))})}));function ql(e){if(null==e)return window;if("[object Window]"!==e.toString()){var t=e.ownerDocument;return t&&t.defaultView||window}return e}function Gl(e){return e instanceof ql(e).Element||e instanceof Element}function Xl(e){return e instanceof ql(e).HTMLElement||e instanceof HTMLElement}function Ql(e){return"undefined"!==typeof ShadowRoot&&(e instanceof ql(e).ShadowRoot||e instanceof ShadowRoot)}var Yl=Math.max,Jl=Math.min,Zl=Math.round;function es(){var e=navigator.userAgentData;return null!=e&&e.brands&&Array.isArray(e.brands)?e.brands.map((function(e){return e.brand+"/"+e.version})).join(" "):navigator.userAgent}function ts(){return!/^((?!chrome|android).)*safari/i.test(es())}function ns(e,t,n){void 0===t&&(t=!1),void 0===n&&(n=!1);var r=e.getBoundingClientRect(),o=1,a=1;t&&Xl(e)&&(o=e.offsetWidth>0&&Zl(r.width)/e.offsetWidth||1,a=e.offsetHeight>0&&Zl(r.height)/e.offsetHeight||1);var i=(Gl(e)?ql(e):window).visualViewport,l=!ts()&&n,s=(r.left+(l&&i?i.offsetLeft:0))/o,c=(r.top+(l&&i?i.offsetTop:0))/a,u=r.width/o,d=r.height/a;return{width:u,height:d,top:c,right:s+u,bottom:c+d,left:s,x:s,y:c}}function rs(e){var t=ql(e);return{scrollLeft:t.pageXOffset,scrollTop:t.pageYOffset}}function os(e){return e?(e.nodeName||"").toLowerCase():null}function as(e){return((Gl(e)?e.ownerDocument:e.document)||window.document).documentElement}function is(e){return ns(as(e)).left+rs(e).scrollLeft}function ls(e){return ql(e).getComputedStyle(e)}function ss(e){var t=ls(e),n=t.overflow,r=t.overflowX,o=t.overflowY;return/auto|scroll|overlay|hidden/.test(n+o+r)}function cs(e,t,n){void 0===n&&(n=!1);var r=Xl(t),o=Xl(t)&&function(e){var t=e.getBoundingClientRect(),n=Zl(t.width)/e.offsetWidth||1,r=Zl(t.height)/e.offsetHeight||1;return 1!==n||1!==r}(t),a=as(t),i=ns(e,o,n),l={scrollLeft:0,scrollTop:0},s={x:0,y:0};return(r||!r&&!n)&&(("body"!==os(t)||ss(a))&&(l=function(e){return e!==ql(e)&&Xl(e)?{scrollLeft:(t=e).scrollLeft,scrollTop:t.scrollTop}:rs(e);var t}(t)),Xl(t)?((s=ns(t,!0)).x+=t.clientLeft,s.y+=t.clientTop):a&&(s.x=is(a))),{x:i.left+l.scrollLeft-s.x,y:i.top+l.scrollTop-s.y,width:i.width,height:i.height}}function us(e){var t=ns(e),n=e.offsetWidth,r=e.offsetHeight;return Math.abs(t.width-n)<=1&&(n=t.width),Math.abs(t.height-r)<=1&&(r=t.height),{x:e.offsetLeft,y:e.offsetTop,width:n,height:r}}function ds(e){return"html"===os(e)?e:e.assignedSlot||e.parentNode||(Ql(e)?e.host:null)||as(e)}function ps(e){return["html","body","#document"].indexOf(os(e))>=0?e.ownerDocument.body:Xl(e)&&ss(e)?e:ps(ds(e))}function fs(e,t){var n;void 0===t&&(t=[]);var r=ps(e),o=r===(null==(n=e.ownerDocument)?void 0:n.body),a=ql(r),i=o?[a].concat(a.visualViewport||[],ss(r)?r:[]):r,l=t.concat(i);return o?l:l.concat(fs(ds(i)))}function ms(e){return["table","td","th"].indexOf(os(e))>=0}function hs(e){return Xl(e)&&"fixed"!==ls(e).position?e.offsetParent:null}function gs(e){for(var t=ql(e),n=hs(e);n&&ms(n)&&"static"===ls(n).position;)n=hs(n);return n&&("html"===os(n)||"body"===os(n)&&"static"===ls(n).position)?t:n||function(e){var t=/firefox/i.test(es());if(/Trident/i.test(es())&&Xl(e)&&"fixed"===ls(e).position)return null;var n=ds(e);for(Ql(n)&&(n=n.host);Xl(n)&&["html","body"].indexOf(os(n))<0;){var r=ls(n);if("none"!==r.transform||"none"!==r.perspective||"paint"===r.contain||-1!==["transform","perspective"].indexOf(r.willChange)||t&&"filter"===r.willChange||t&&r.filter&&"none"!==r.filter)return n;n=n.parentNode}return null}(e)||t}var vs="top",ys="bottom",bs="right",xs="left",As="auto",ws=[vs,ys,bs,xs],Ss="start",ks="end",Cs="viewport",Es="popper",js=ws.reduce((function(e,t){return e.concat([t+"-"+Ss,t+"-"+ks])}),[]),_s=[].concat(ws,[As]).reduce((function(e,t){return e.concat([t,t+"-"+Ss,t+"-"+ks])}),[]),Ps=["beforeRead","read","afterRead","beforeMain","main","afterMain","beforeWrite","write","afterWrite"];function Rs(e){var t=new Map,n=new Set,r=[];function o(e){n.add(e.name),[].concat(e.requires||[],e.requiresIfExists||[]).forEach((function(e){if(!n.has(e)){var r=t.get(e);r&&o(r)}})),r.push(e)}return e.forEach((function(e){t.set(e.name,e)})),e.forEach((function(e){n.has(e.name)||o(e)})),r}function Is(e){var t;return function(){return t||(t=new Promise((function(n){Promise.resolve().then((function(){t=void 0,n(e())}))}))),t}}var Ts={placement:"bottom",modifiers:[],strategy:"absolute"};function $s(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return!t.some((function(e){return!(e&&"function"===typeof e.getBoundingClientRect)}))}function Os(e){void 0===e&&(e={});var t=e,n=t.defaultModifiers,r=void 0===n?[]:n,o=t.defaultOptions,a=void 0===o?Ts:o;return function(e,t,n){void 0===n&&(n=a);var o={placement:"bottom",orderedModifiers:[],options:Object.assign({},Ts,a),modifiersData:{},elements:{reference:e,popper:t},attributes:{},styles:{}},i=[],l=!1,s={state:o,setOptions:function(n){var l="function"===typeof n?n(o.options):n;c(),o.options=Object.assign({},a,o.options,l),o.scrollParents={reference:Gl(e)?fs(e):e.contextElement?fs(e.contextElement):[],popper:fs(t)};var u=function(e){var t=Rs(e);return Ps.reduce((function(e,n){return e.concat(t.filter((function(e){return e.phase===n})))}),[])}(function(e){var t=e.reduce((function(e,t){var n=e[t.name];return e[t.name]=n?Object.assign({},n,t,{options:Object.assign({},n.options,t.options),data:Object.assign({},n.data,t.data)}):t,e}),{});return Object.keys(t).map((function(e){return t[e]}))}([].concat(r,o.options.modifiers)));return o.orderedModifiers=u.filter((function(e){return e.enabled})),o.orderedModifiers.forEach((function(e){var t=e.name,n=e.options,r=void 0===n?{}:n,a=e.effect;if("function"===typeof a){var l=a({state:o,name:t,instance:s,options:r}),c=function(){};i.push(l||c)}})),s.update()},forceUpdate:function(){if(!l){var e=o.elements,t=e.reference,n=e.popper;if($s(t,n)){o.rects={reference:cs(t,gs(n),"fixed"===o.options.strategy),popper:us(n)},o.reset=!1,o.placement=o.options.placement,o.orderedModifiers.forEach((function(e){return o.modifiersData[e.name]=Object.assign({},e.data)}));for(var r=0;r<o.orderedModifiers.length;r++)if(!0!==o.reset){var a=o.orderedModifiers[r],i=a.fn,c=a.options,u=void 0===c?{}:c,d=a.name;"function"===typeof i&&(o=i({state:o,options:u,name:d,instance:s})||o)}else o.reset=!1,r=-1}}},update:Is((function(){return new Promise((function(e){s.forceUpdate(),e(o)}))})),destroy:function(){c(),l=!0}};if(!$s(e,t))return s;function c(){i.forEach((function(e){return e()})),i=[]}return s.setOptions(n).then((function(e){!l&&n.onFirstUpdate&&n.onFirstUpdate(e)})),s}}var Ns={passive:!0};function Ms(e){return e.split("-")[0]}function Ls(e){return e.split("-")[1]}function zs(e){return["top","bottom"].indexOf(e)>=0?"x":"y"}function Ds(e){var t,n=e.reference,r=e.element,o=e.placement,a=o?Ms(o):null,i=o?Ls(o):null,l=n.x+n.width/2-r.width/2,s=n.y+n.height/2-r.height/2;switch(a){case vs:t={x:l,y:n.y-r.height};break;case ys:t={x:l,y:n.y+n.height};break;case bs:t={x:n.x+n.width,y:s};break;case xs:t={x:n.x-r.width,y:s};break;default:t={x:n.x,y:n.y}}var c=a?zs(a):null;if(null!=c){var u="y"===c?"height":"width";switch(i){case Ss:t[c]=t[c]-(n[u]/2-r[u]/2);break;case ks:t[c]=t[c]+(n[u]/2-r[u]/2)}}return t}var Fs={top:"auto",right:"auto",bottom:"auto",left:"auto"};function Bs(e){var t,n=e.popper,r=e.popperRect,o=e.placement,a=e.variation,i=e.offsets,l=e.position,s=e.gpuAcceleration,c=e.adaptive,u=e.roundOffsets,d=e.isFixed,p=i.x,f=void 0===p?0:p,m=i.y,h=void 0===m?0:m,g="function"===typeof u?u({x:f,y:h}):{x:f,y:h};f=g.x,h=g.y;var v=i.hasOwnProperty("x"),y=i.hasOwnProperty("y"),b=xs,x=vs,A=window;if(c){var w=gs(n),S="clientHeight",k="clientWidth";if(w===ql(n)&&"static"!==ls(w=as(n)).position&&"absolute"===l&&(S="scrollHeight",k="scrollWidth"),o===vs||(o===xs||o===bs)&&a===ks)x=ys,h-=(d&&w===A&&A.visualViewport?A.visualViewport.height:w[S])-r.height,h*=s?1:-1;if(o===xs||(o===vs||o===ys)&&a===ks)b=bs,f-=(d&&w===A&&A.visualViewport?A.visualViewport.width:w[k])-r.width,f*=s?1:-1}var C,E=Object.assign({position:l},c&&Fs),j=!0===u?function(e,t){var n=e.x,r=e.y,o=t.devicePixelRatio||1;return{x:Zl(n*o)/o||0,y:Zl(r*o)/o||0}}({x:f,y:h},ql(n)):{x:f,y:h};return f=j.x,h=j.y,s?Object.assign({},E,((C={})[x]=y?"0":"",C[b]=v?"0":"",C.transform=(A.devicePixelRatio||1)<=1?"translate("+f+"px, "+h+"px)":"translate3d("+f+"px, "+h+"px, 0)",C)):Object.assign({},E,((t={})[x]=y?h+"px":"",t[b]=v?f+"px":"",t.transform="",t))}var Ws={left:"right",right:"left",bottom:"top",top:"bottom"};function Us(e){return e.replace(/left|right|bottom|top/g,(function(e){return Ws[e]}))}var Vs={start:"end",end:"start"};function Hs(e){return e.replace(/start|end/g,(function(e){return Vs[e]}))}function Ks(e,t){var n=t.getRootNode&&t.getRootNode();if(e.contains(t))return!0;if(n&&Ql(n)){var r=t;do{if(r&&e.isSameNode(r))return!0;r=r.parentNode||r.host}while(r)}return!1}function qs(e){return Object.assign({},e,{left:e.x,top:e.y,right:e.x+e.width,bottom:e.y+e.height})}function Gs(e,t,n){return t===Cs?qs(function(e,t){var n=ql(e),r=as(e),o=n.visualViewport,a=r.clientWidth,i=r.clientHeight,l=0,s=0;if(o){a=o.width,i=o.height;var c=ts();(c||!c&&"fixed"===t)&&(l=o.offsetLeft,s=o.offsetTop)}return{width:a,height:i,x:l+is(e),y:s}}(e,n)):Gl(t)?function(e,t){var n=ns(e,!1,"fixed"===t);return n.top=n.top+e.clientTop,n.left=n.left+e.clientLeft,n.bottom=n.top+e.clientHeight,n.right=n.left+e.clientWidth,n.width=e.clientWidth,n.height=e.clientHeight,n.x=n.left,n.y=n.top,n}(t,n):qs(function(e){var t,n=as(e),r=rs(e),o=null==(t=e.ownerDocument)?void 0:t.body,a=Yl(n.scrollWidth,n.clientWidth,o?o.scrollWidth:0,o?o.clientWidth:0),i=Yl(n.scrollHeight,n.clientHeight,o?o.scrollHeight:0,o?o.clientHeight:0),l=-r.scrollLeft+is(e),s=-r.scrollTop;return"rtl"===ls(o||n).direction&&(l+=Yl(n.clientWidth,o?o.clientWidth:0)-a),{width:a,height:i,x:l,y:s}}(as(e)))}function Xs(e,t,n,r){var o="clippingParents"===t?function(e){var t=fs(ds(e)),n=["absolute","fixed"].indexOf(ls(e).position)>=0&&Xl(e)?gs(e):e;return Gl(n)?t.filter((function(e){return Gl(e)&&Ks(e,n)&&"body"!==os(e)})):[]}(e):[].concat(t),a=[].concat(o,[n]),i=a[0],l=a.reduce((function(t,n){var o=Gs(e,n,r);return t.top=Yl(o.top,t.top),t.right=Jl(o.right,t.right),t.bottom=Jl(o.bottom,t.bottom),t.left=Yl(o.left,t.left),t}),Gs(e,i,r));return l.width=l.right-l.left,l.height=l.bottom-l.top,l.x=l.left,l.y=l.top,l}function Qs(e){return Object.assign({},{top:0,right:0,bottom:0,left:0},e)}function Ys(e,t){return t.reduce((function(t,n){return t[n]=e,t}),{})}function Js(e,t){void 0===t&&(t={});var n=t,r=n.placement,o=void 0===r?e.placement:r,a=n.strategy,i=void 0===a?e.strategy:a,l=n.boundary,s=void 0===l?"clippingParents":l,c=n.rootBoundary,u=void 0===c?Cs:c,d=n.elementContext,p=void 0===d?Es:d,f=n.altBoundary,m=void 0!==f&&f,h=n.padding,g=void 0===h?0:h,v=Qs("number"!==typeof g?g:Ys(g,ws)),y=p===Es?"reference":Es,b=e.rects.popper,x=e.elements[m?y:p],A=Xs(Gl(x)?x:x.contextElement||as(e.elements.popper),s,u,i),w=ns(e.elements.reference),S=Ds({reference:w,element:b,strategy:"absolute",placement:o}),k=qs(Object.assign({},b,S)),C=p===Es?k:w,E={top:A.top-C.top+v.top,bottom:C.bottom-A.bottom+v.bottom,left:A.left-C.left+v.left,right:C.right-A.right+v.right},j=e.modifiersData.offset;if(p===Es&&j){var _=j[o];Object.keys(E).forEach((function(e){var t=[bs,ys].indexOf(e)>=0?1:-1,n=[vs,ys].indexOf(e)>=0?"y":"x";E[e]+=_[n]*t}))}return E}function Zs(e,t,n){return Yl(e,Jl(t,n))}function ec(e,t,n){return void 0===n&&(n={x:0,y:0}),{top:e.top-t.height-n.y,right:e.right-t.width+n.x,bottom:e.bottom-t.height+n.y,left:e.left-t.width-n.x}}function tc(e){return[vs,bs,ys,xs].some((function(t){return e[t]>=0}))}var nc=Os({defaultModifiers:[{name:"eventListeners",enabled:!0,phase:"write",fn:function(){},effect:function(e){var t=e.state,n=e.instance,r=e.options,o=r.scroll,a=void 0===o||o,i=r.resize,l=void 0===i||i,s=ql(t.elements.popper),c=[].concat(t.scrollParents.reference,t.scrollParents.popper);return a&&c.forEach((function(e){e.addEventListener("scroll",n.update,Ns)})),l&&s.addEventListener("resize",n.update,Ns),function(){a&&c.forEach((function(e){e.removeEventListener("scroll",n.update,Ns)})),l&&s.removeEventListener("resize",n.update,Ns)}},data:{}},{name:"popperOffsets",enabled:!0,phase:"read",fn:function(e){var t=e.state,n=e.name;t.modifiersData[n]=Ds({reference:t.rects.reference,element:t.rects.popper,strategy:"absolute",placement:t.placement})},data:{}},{name:"computeStyles",enabled:!0,phase:"beforeWrite",fn:function(e){var t=e.state,n=e.options,r=n.gpuAcceleration,o=void 0===r||r,a=n.adaptive,i=void 0===a||a,l=n.roundOffsets,s=void 0===l||l,c={placement:Ms(t.placement),variation:Ls(t.placement),popper:t.elements.popper,popperRect:t.rects.popper,gpuAcceleration:o,isFixed:"fixed"===t.options.strategy};null!=t.modifiersData.popperOffsets&&(t.styles.popper=Object.assign({},t.styles.popper,Bs(Object.assign({},c,{offsets:t.modifiersData.popperOffsets,position:t.options.strategy,adaptive:i,roundOffsets:s})))),null!=t.modifiersData.arrow&&(t.styles.arrow=Object.assign({},t.styles.arrow,Bs(Object.assign({},c,{offsets:t.modifiersData.arrow,position:"absolute",adaptive:!1,roundOffsets:s})))),t.attributes.popper=Object.assign({},t.attributes.popper,{"data-popper-placement":t.placement})},data:{}},{name:"applyStyles",enabled:!0,phase:"write",fn:function(e){var t=e.state;Object.keys(t.elements).forEach((function(e){var n=t.styles[e]||{},r=t.attributes[e]||{},o=t.elements[e];Xl(o)&&os(o)&&(Object.assign(o.style,n),Object.keys(r).forEach((function(e){var t=r[e];!1===t?o.removeAttribute(e):o.setAttribute(e,!0===t?"":t)})))}))},effect:function(e){var t=e.state,n={popper:{position:t.options.strategy,left:"0",top:"0",margin:"0"},arrow:{position:"absolute"},reference:{}};return Object.assign(t.elements.popper.style,n.popper),t.styles=n,t.elements.arrow&&Object.assign(t.elements.arrow.style,n.arrow),function(){Object.keys(t.elements).forEach((function(e){var r=t.elements[e],o=t.attributes[e]||{},a=Object.keys(t.styles.hasOwnProperty(e)?t.styles[e]:n[e]).reduce((function(e,t){return e[t]="",e}),{});Xl(r)&&os(r)&&(Object.assign(r.style,a),Object.keys(o).forEach((function(e){r.removeAttribute(e)})))}))}},requires:["computeStyles"]},{name:"offset",enabled:!0,phase:"main",requires:["popperOffsets"],fn:function(e){var t=e.state,n=e.options,r=e.name,o=n.offset,a=void 0===o?[0,0]:o,i=_s.reduce((function(e,n){return e[n]=function(e,t,n){var r=Ms(e),o=[xs,vs].indexOf(r)>=0?-1:1,a="function"===typeof n?n(Object.assign({},t,{placement:e})):n,i=a[0],l=a[1];return i=i||0,l=(l||0)*o,[xs,bs].indexOf(r)>=0?{x:l,y:i}:{x:i,y:l}}(n,t.rects,a),e}),{}),l=i[t.placement],s=l.x,c=l.y;null!=t.modifiersData.popperOffsets&&(t.modifiersData.popperOffsets.x+=s,t.modifiersData.popperOffsets.y+=c),t.modifiersData[r]=i}},{name:"flip",enabled:!0,phase:"main",fn:function(e){var t=e.state,n=e.options,r=e.name;if(!t.modifiersData[r]._skip){for(var o=n.mainAxis,a=void 0===o||o,i=n.altAxis,l=void 0===i||i,s=n.fallbackPlacements,c=n.padding,u=n.boundary,d=n.rootBoundary,p=n.altBoundary,f=n.flipVariations,m=void 0===f||f,h=n.allowedAutoPlacements,g=t.options.placement,v=Ms(g),y=s||(v===g||!m?[Us(g)]:function(e){if(Ms(e)===As)return[];var t=Us(e);return[Hs(e),t,Hs(t)]}(g)),b=[g].concat(y).reduce((function(e,n){return e.concat(Ms(n)===As?function(e,t){void 0===t&&(t={});var n=t,r=n.placement,o=n.boundary,a=n.rootBoundary,i=n.padding,l=n.flipVariations,s=n.allowedAutoPlacements,c=void 0===s?_s:s,u=Ls(r),d=u?l?js:js.filter((function(e){return Ls(e)===u})):ws,p=d.filter((function(e){return c.indexOf(e)>=0}));0===p.length&&(p=d);var f=p.reduce((function(t,n){return t[n]=Js(e,{placement:n,boundary:o,rootBoundary:a,padding:i})[Ms(n)],t}),{});return Object.keys(f).sort((function(e,t){return f[e]-f[t]}))}(t,{placement:n,boundary:u,rootBoundary:d,padding:c,flipVariations:m,allowedAutoPlacements:h}):n)}),[]),x=t.rects.reference,A=t.rects.popper,w=new Map,S=!0,k=b[0],C=0;C<b.length;C++){var E=b[C],j=Ms(E),_=Ls(E)===Ss,P=[vs,ys].indexOf(j)>=0,R=P?"width":"height",I=Js(t,{placement:E,boundary:u,rootBoundary:d,altBoundary:p,padding:c}),T=P?_?bs:xs:_?ys:vs;x[R]>A[R]&&(T=Us(T));var $=Us(T),O=[];if(a&&O.push(I[j]<=0),l&&O.push(I[T]<=0,I[$]<=0),O.every((function(e){return e}))){k=E,S=!1;break}w.set(E,O)}if(S)for(var N=function(e){var t=b.find((function(t){var n=w.get(t);if(n)return n.slice(0,e).every((function(e){return e}))}));if(t)return k=t,"break"},M=m?3:1;M>0;M--){if("break"===N(M))break}t.placement!==k&&(t.modifiersData[r]._skip=!0,t.placement=k,t.reset=!0)}},requiresIfExists:["offset"],data:{_skip:!1}},{name:"preventOverflow",enabled:!0,phase:"main",fn:function(e){var t=e.state,n=e.options,r=e.name,o=n.mainAxis,a=void 0===o||o,i=n.altAxis,l=void 0!==i&&i,s=n.boundary,c=n.rootBoundary,u=n.altBoundary,d=n.padding,p=n.tether,f=void 0===p||p,m=n.tetherOffset,h=void 0===m?0:m,g=Js(t,{boundary:s,rootBoundary:c,padding:d,altBoundary:u}),v=Ms(t.placement),y=Ls(t.placement),b=!y,x=zs(v),A="x"===x?"y":"x",w=t.modifiersData.popperOffsets,S=t.rects.reference,k=t.rects.popper,C="function"===typeof h?h(Object.assign({},t.rects,{placement:t.placement})):h,E="number"===typeof C?{mainAxis:C,altAxis:C}:Object.assign({mainAxis:0,altAxis:0},C),j=t.modifiersData.offset?t.modifiersData.offset[t.placement]:null,_={x:0,y:0};if(w){if(a){var P,R="y"===x?vs:xs,I="y"===x?ys:bs,T="y"===x?"height":"width",$=w[x],O=$+g[R],N=$-g[I],M=f?-k[T]/2:0,L=y===Ss?S[T]:k[T],z=y===Ss?-k[T]:-S[T],D=t.elements.arrow,F=f&&D?us(D):{width:0,height:0},B=t.modifiersData["arrow#persistent"]?t.modifiersData["arrow#persistent"].padding:{top:0,right:0,bottom:0,left:0},W=B[R],U=B[I],V=Zs(0,S[T],F[T]),H=b?S[T]/2-M-V-W-E.mainAxis:L-V-W-E.mainAxis,K=b?-S[T]/2+M+V+U+E.mainAxis:z+V+U+E.mainAxis,q=t.elements.arrow&&gs(t.elements.arrow),G=q?"y"===x?q.clientTop||0:q.clientLeft||0:0,X=null!=(P=null==j?void 0:j[x])?P:0,Q=$+K-X,Y=Zs(f?Jl(O,$+H-X-G):O,$,f?Yl(N,Q):N);w[x]=Y,_[x]=Y-$}if(l){var J,Z="x"===x?vs:xs,ee="x"===x?ys:bs,te=w[A],ne="y"===A?"height":"width",re=te+g[Z],oe=te-g[ee],ae=-1!==[vs,xs].indexOf(v),ie=null!=(J=null==j?void 0:j[A])?J:0,le=ae?re:te-S[ne]-k[ne]-ie+E.altAxis,se=ae?te+S[ne]+k[ne]-ie-E.altAxis:oe,ce=f&&ae?function(e,t,n){var r=Zs(e,t,n);return r>n?n:r}(le,te,se):Zs(f?le:re,te,f?se:oe);w[A]=ce,_[A]=ce-te}t.modifiersData[r]=_}},requiresIfExists:["offset"]},{name:"arrow",enabled:!0,phase:"main",fn:function(e){var t,n=e.state,r=e.name,o=e.options,a=n.elements.arrow,i=n.modifiersData.popperOffsets,l=Ms(n.placement),s=zs(l),c=[xs,bs].indexOf(l)>=0?"height":"width";if(a&&i){var u=function(e,t){return Qs("number"!==typeof(e="function"===typeof e?e(Object.assign({},t.rects,{placement:t.placement})):e)?e:Ys(e,ws))}(o.padding,n),d=us(a),p="y"===s?vs:xs,f="y"===s?ys:bs,m=n.rects.reference[c]+n.rects.reference[s]-i[s]-n.rects.popper[c],h=i[s]-n.rects.reference[s],g=gs(a),v=g?"y"===s?g.clientHeight||0:g.clientWidth||0:0,y=m/2-h/2,b=u[p],x=v-d[c]-u[f],A=v/2-d[c]/2+y,w=Zs(b,A,x),S=s;n.modifiersData[r]=((t={})[S]=w,t.centerOffset=w-A,t)}},effect:function(e){var t=e.state,n=e.options.element,r=void 0===n?"[data-popper-arrow]":n;null!=r&&("string"!==typeof r||(r=t.elements.popper.querySelector(r)))&&Ks(t.elements.popper,r)&&(t.elements.arrow=r)},requires:["popperOffsets"],requiresIfExists:["preventOverflow"]},{name:"hide",enabled:!0,phase:"main",requiresIfExists:["preventOverflow"],fn:function(e){var t=e.state,n=e.name,r=t.rects.reference,o=t.rects.popper,a=t.modifiersData.preventOverflow,i=Js(t,{elementContext:"reference"}),l=Js(t,{altBoundary:!0}),s=ec(i,r),c=ec(l,o,a),u=tc(s),d=tc(c);t.modifiersData[n]={referenceClippingOffsets:s,popperEscapeOffsets:c,isReferenceHidden:u,hasPopperEscaped:d},t.attributes.popper=Object.assign({},t.attributes.popper,{"data-popper-reference-hidden":u,"data-popper-escaped":d})}}]});const rc="base";function oc(e,t){const n=Ye.li[t];return n?`${rc}--${n}`:function(e,t){return`${rc}-${e}-${t}`}(e,t)}const ac="Popper";function ic(e){return oc(ac,e)}!function(e,t){const n={};t.forEach((t=>{n[t]=oc(e,t)}))}(ac,["root"]);const lc={disableDefaultClasses:!1},sc=r.createContext(lc);const cc=["anchorEl","children","direction","disablePortal","modifiers","open","placement","popperOptions","popperRef","slotProps","slots","TransitionProps","ownerState"],uc=["anchorEl","children","container","direction","disablePortal","keepMounted","modifiers","open","placement","popperOptions","popperRef","style","transition","slotProps","slots"];function dc(e){return"function"===typeof e?e():e}function pc(e){return void 0!==e.nodeType}const fc=()=>(0,Je.A)({root:["root"]},function(e){const{disableDefaultClasses:t}=r.useContext(sc);return n=>t?"":e(n)}(ic)),mc={},hc=r.forwardRef((function(e,t){var n;const{anchorEl:o,children:a,direction:i,disablePortal:l,modifiers:s,open:c,placement:u,popperOptions:d,popperRef:p,slotProps:f={},slots:m={},TransitionProps:h}=e,g=(0,Le.A)(e,cc),v=r.useRef(null),y=(0,fn.A)(v,t),b=r.useRef(null),x=(0,fn.A)(b,p),A=r.useRef(x);(0,hn.A)((()=>{A.current=x}),[x]),r.useImperativeHandle(p,(()=>b.current),[]);const w=function(e,t){if("ltr"===t)return e;switch(e){case"bottom-end":return"bottom-start";case"bottom-start":return"bottom-end";case"top-end":return"top-start";case"top-start":return"top-end";default:return e}}(u,i),[S,k]=r.useState(w),[C,E]=r.useState(dc(o));r.useEffect((()=>{b.current&&b.current.forceUpdate()})),r.useEffect((()=>{o&&E(dc(o))}),[o]),(0,hn.A)((()=>{if(!C||!c)return;let e=[{name:"preventOverflow",options:{altBoundary:l}},{name:"flip",options:{altBoundary:l}},{name:"onUpdate",enabled:!0,phase:"afterWrite",fn:e=>{let{state:t}=e;k(t.placement)}}];null!=s&&(e=e.concat(s)),d&&null!=d.modifiers&&(e=e.concat(d.modifiers));const t=nc(C,v.current,(0,Me.A)({placement:w},d,{modifiers:e}));return A.current(t),()=>{t.destroy(),A.current(null)}}),[C,l,s,c,d,w]);const j={placement:S};null!==h&&(j.TransitionProps=h);const _=fc(),P=null!=(n=m.root)?n:"div",R=zr({elementType:P,externalSlotProps:f.root,externalForwardedProps:g,additionalProps:{role:"tooltip",ref:y},ownerState:e,className:_.root});return(0,Ue.jsx)(P,(0,Me.A)({},R,{children:"function"===typeof a?a(j):a}))})),gc=r.forwardRef((function(e,t){const{anchorEl:n,children:o,container:a,direction:i="ltr",disablePortal:l=!1,keepMounted:s=!1,modifiers:c,open:u,placement:d="bottom",popperOptions:p=mc,popperRef:f,style:m,transition:h=!1,slotProps:g={},slots:v={}}=e,y=(0,Le.A)(e,uc),[b,x]=r.useState(!0);if(!s&&!u&&(!h||b))return null;let A;if(a)A=a;else if(n){const e=dc(n);A=e&&pc(e)?(0,So.A)(e).body:(0,So.A)(null).body}const w=u||!s||h&&!b?void 0:"none",S=h?{in:u,onEnter:()=>{x(!1)},onExited:()=>{x(!0)}}:void 0;return(0,Ue.jsx)(zo,{disablePortal:l,container:A,children:(0,Ue.jsx)(hc,(0,Me.A)({anchorEl:n,direction:i,disablePortal:l,modifiers:c,ref:t,open:h?!b:u,placement:d,popperOptions:p,popperRef:f,slotProps:g,slots:v},y,{style:(0,Me.A)({position:"fixed",top:0,left:0,display:w},m),TransitionProps:S,children:o}))})}));var vc=n(2374);const yc=["anchorEl","component","components","componentsProps","container","disablePortal","keepMounted","modifiers","open","placement","popperOptions","popperRef","transition","slots","slotProps"],bc=(0,yt.Ay)(gc,{name:"MuiPopper",slot:"Root",overridesResolver:(e,t)=>t.root})({}),xc=r.forwardRef((function(e,t){var n;const r=(0,vc.A)(),o=(0,bt.A)({props:e,name:"MuiPopper"}),{anchorEl:a,component:i,components:l,componentsProps:s,container:c,disablePortal:u,keepMounted:d,modifiers:p,open:f,placement:m,popperOptions:h,popperRef:g,transition:v,slots:y,slotProps:b}=o,x=(0,Le.A)(o,yc),A=null!=(n=null==y?void 0:y.root)?n:null==l?void 0:l.Root,w=(0,Me.A)({anchorEl:a,container:c,disablePortal:u,keepMounted:d,modifiers:p,open:f,placement:m,popperOptions:h,popperRef:g,transition:v},x);return(0,Ue.jsx)(bc,(0,Me.A)({as:i,direction:null==r?void 0:r.direction,slots:{root:A},slotProps:null!=b?b:s},w,{ref:t}))}));var Ac=n(5879);function wc(e){return(0,Ye.Ay)("MuiTooltip",e)}const Sc=(0,qe.A)("MuiTooltip",["popper","popperInteractive","popperArrow","popperClose","tooltip","tooltipArrow","touch","tooltipPlacementLeft","tooltipPlacementRight","tooltipPlacementTop","tooltipPlacementBottom","arrow"]),kc=["arrow","children","classes","components","componentsProps","describeChild","disableFocusListener","disableHoverListener","disableInteractive","disableTouchListener","enterDelay","enterNextDelay","enterTouchDelay","followCursor","id","leaveDelay","leaveTouchDelay","onClose","onOpen","open","placement","PopperComponent","PopperProps","slotProps","slots","title","TransitionComponent","TransitionProps"];const Cc=(0,yt.Ay)(xc,{name:"MuiTooltip",slot:"Popper",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[t.popper,!n.disableInteractive&&t.popperInteractive,n.arrow&&t.popperArrow,!n.open&&t.popperClose]}})((e=>{let{theme:t,ownerState:n,open:r}=e;return(0,Me.A)({zIndex:(t.vars||t).zIndex.tooltip,pointerEvents:"none"},!n.disableInteractive&&{pointerEvents:"auto"},!r&&{pointerEvents:"none"},n.arrow&&{[`&[data-popper-placement*="bottom"] .${Sc.arrow}`]:{top:0,marginTop:"-0.71em","&::before":{transformOrigin:"0 100%"}},[`&[data-popper-placement*="top"] .${Sc.arrow}`]:{bottom:0,marginBottom:"-0.71em","&::before":{transformOrigin:"100% 0"}},[`&[data-popper-placement*="right"] .${Sc.arrow}`]:(0,Me.A)({},n.isRtl?{right:0,marginRight:"-0.71em"}:{left:0,marginLeft:"-0.71em"},{height:"1em",width:"0.71em","&::before":{transformOrigin:"100% 100%"}}),[`&[data-popper-placement*="left"] .${Sc.arrow}`]:(0,Me.A)({},n.isRtl?{left:0,marginLeft:"-0.71em"}:{right:0,marginRight:"-0.71em"},{height:"1em",width:"0.71em","&::before":{transformOrigin:"0 0"}})})})),Ec=(0,yt.Ay)("div",{name:"MuiTooltip",slot:"Tooltip",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[t.tooltip,n.touch&&t.touch,n.arrow&&t.tooltipArrow,t[`tooltipPlacement${(0,vt.A)(n.placement.split("-")[0])}`]]}})((e=>{let{theme:t,ownerState:n}=e;return(0,Me.A)({backgroundColor:t.vars?t.vars.palette.Tooltip.bg:(0,Vt.X4)(t.palette.grey[700],.92),borderRadius:(t.vars||t).shape.borderRadius,color:(t.vars||t).palette.common.white,fontFamily:t.typography.fontFamily,padding:"4px 8px",fontSize:t.typography.pxToRem(11),maxWidth:300,margin:2,wordWrap:"break-word",fontWeight:t.typography.fontWeightMedium},n.arrow&&{position:"relative",margin:0},n.touch&&{padding:"8px 16px",fontSize:t.typography.pxToRem(14),lineHeight:(r=16/14,Math.round(1e5*r)/1e5)+"em",fontWeight:t.typography.fontWeightRegular},{[`.${Sc.popper}[data-popper-placement*="left"] &`]:(0,Me.A)({transformOrigin:"right center"},n.isRtl?(0,Me.A)({marginLeft:"14px"},n.touch&&{marginLeft:"24px"}):(0,Me.A)({marginRight:"14px"},n.touch&&{marginRight:"24px"})),[`.${Sc.popper}[data-popper-placement*="right"] &`]:(0,Me.A)({transformOrigin:"left center"},n.isRtl?(0,Me.A)({marginRight:"14px"},n.touch&&{marginRight:"24px"}):(0,Me.A)({marginLeft:"14px"},n.touch&&{marginLeft:"24px"})),[`.${Sc.popper}[data-popper-placement*="top"] &`]:(0,Me.A)({transformOrigin:"center bottom",marginBottom:"14px"},n.touch&&{marginBottom:"24px"}),[`.${Sc.popper}[data-popper-placement*="bottom"] &`]:(0,Me.A)({transformOrigin:"center top",marginTop:"14px"},n.touch&&{marginTop:"24px"})});var r})),jc=(0,yt.Ay)("span",{name:"MuiTooltip",slot:"Arrow",overridesResolver:(e,t)=>t.arrow})((e=>{let{theme:t}=e;return{overflow:"hidden",position:"absolute",width:"1em",height:"0.71em",boxSizing:"border-box",color:t.vars?t.vars.palette.Tooltip.bg:(0,Vt.X4)(t.palette.grey[700],.9),"&::before":{content:'""',margin:"auto",display:"block",width:"100%",height:"100%",backgroundColor:"currentColor",transform:"rotate(45deg)"}}}));let _c=!1;const Pc=new eo.E;let Rc={x:0,y:0};function Ic(e,t){return n=>{t&&t(n),e(n)}}const Tc=r.forwardRef((function(e,t){var n,o,a,i,l,s,c,u,d,p,f,m,h,g,v,y,b,x,A;const w=(0,bt.A)({props:e,name:"MuiTooltip"}),{arrow:S=!1,children:k,components:C={},componentsProps:E={},describeChild:j=!1,disableFocusListener:_=!1,disableHoverListener:P=!1,disableInteractive:R=!1,disableTouchListener:I=!1,enterDelay:T=100,enterNextDelay:$=0,enterTouchDelay:O=700,followCursor:N=!1,id:M,leaveDelay:L=0,leaveTouchDelay:z=1500,onClose:D,onOpen:F,open:B,placement:W="bottom",PopperComponent:U,PopperProps:V={},slotProps:H={},slots:K={},title:q,TransitionComponent:G=wo,TransitionProps:X}=w,Q=(0,Le.A)(w,kc),Y=r.isValidElement(k)?k:(0,Ue.jsx)("span",{children:k}),J=mo(),Z="rtl"===J.direction,[ee,te]=r.useState(),[ne,re]=r.useState(null),oe=r.useRef(!1),ae=R||N,ie=(0,eo.A)(),le=(0,eo.A)(),se=(0,eo.A)(),ce=(0,eo.A)(),[ue,de]=(0,Ca.A)({controlled:B,default:!1,name:"Tooltip",state:"open"});let pe=ue;const fe=(0,Ac.A)(M),me=r.useRef(),he=(0,Ja.A)((()=>{void 0!==me.current&&(document.body.style.WebkitUserSelect=me.current,me.current=void 0),ce.clear()}));r.useEffect((()=>he),[he]);const ge=e=>{Pc.clear(),_c=!0,de(!0),F&&!pe&&F(e)},ve=(0,Ja.A)((e=>{Pc.start(800+L,(()=>{_c=!1})),de(!1),D&&pe&&D(e),ie.start(J.transitions.duration.shortest,(()=>{oe.current=!1}))})),ye=e=>{oe.current&&"touchstart"!==e.type||(ee&&ee.removeAttribute("title"),le.clear(),se.clear(),T||_c&&$?le.start(_c?$:T,(()=>{ge(e)})):ge(e))},be=e=>{le.clear(),se.start(L,(()=>{ve(e)}))},{isFocusVisibleRef:xe,onBlur:Ae,onFocus:we,ref:Se}=(0,Za.A)(),[,ke]=r.useState(!1),Ce=e=>{Ae(e),!1===xe.current&&(ke(!1),be(e))},Ee=e=>{ee||te(e.currentTarget),we(e),!0===xe.current&&(ke(!0),ye(e))},je=e=>{oe.current=!0;const t=Y.props;t.onTouchStart&&t.onTouchStart(e)},_e=e=>{je(e),se.clear(),ie.clear(),he(),me.current=document.body.style.WebkitUserSelect,document.body.style.WebkitUserSelect="none",ce.start(O,(()=>{document.body.style.WebkitUserSelect=me.current,ye(e)}))},Pe=e=>{Y.props.onTouchEnd&&Y.props.onTouchEnd(e),he(),se.start(z,(()=>{ve(e)}))};r.useEffect((()=>{if(pe)return document.addEventListener("keydown",e),()=>{document.removeEventListener("keydown",e)};function e(e){"Escape"!==e.key&&"Esc"!==e.key||ve(e)}}),[ve,pe]);const Re=(0,Cn.A)(Y.ref,Se,te,t);q||0===q||(pe=!1);const Ie=r.useRef(),Te={},$e="string"===typeof q;j?(Te.title=pe||!$e||P?null:q,Te["aria-describedby"]=pe?fe:null):(Te["aria-label"]=$e?q:null,Te["aria-labelledby"]=pe&&!$e?fe:null);const Oe=(0,Me.A)({},Te,Q,Y.props,{className:(0,ze.A)(Q.className,Y.props.className),onTouchStart:je,ref:Re},N?{onMouseMove:e=>{const t=Y.props;t.onMouseMove&&t.onMouseMove(e),Rc={x:e.clientX,y:e.clientY},Ie.current&&Ie.current.update()}}:{});const Ne={};I||(Oe.onTouchStart=_e,Oe.onTouchEnd=Pe),P||(Oe.onMouseOver=Ic(ye,Oe.onMouseOver),Oe.onMouseLeave=Ic(be,Oe.onMouseLeave),ae||(Ne.onMouseOver=ye,Ne.onMouseLeave=be)),_||(Oe.onFocus=Ic(Ee,Oe.onFocus),Oe.onBlur=Ic(Ce,Oe.onBlur),ae||(Ne.onFocus=Ee,Ne.onBlur=Ce));const De=r.useMemo((()=>{var e;let t=[{name:"arrow",enabled:Boolean(ne),options:{element:ne,padding:4}}];return null!=(e=V.popperOptions)&&e.modifiers&&(t=t.concat(V.popperOptions.modifiers)),(0,Me.A)({},V.popperOptions,{modifiers:t})}),[ne,V]),Fe=(0,Me.A)({},w,{isRtl:Z,arrow:S,disableInteractive:ae,placement:W,PopperComponentProp:U,touch:oe.current}),Be=(e=>{const{classes:t,disableInteractive:n,arrow:r,touch:o,placement:a}=e,i={popper:["popper",!n&&"popperInteractive",r&&"popperArrow"],tooltip:["tooltip",r&&"tooltipArrow",o&&"touch",`tooltipPlacement${(0,vt.A)(a.split("-")[0])}`],arrow:["arrow"]};return(0,Je.A)(i,wc,t)})(Fe),We=null!=(n=null!=(o=K.popper)?o:C.Popper)?n:Cc,Ve=null!=(a=null!=(i=null!=(l=K.transition)?l:C.Transition)?i:G)?a:wo,He=null!=(s=null!=(c=K.tooltip)?c:C.Tooltip)?s:Ec,Ke=null!=(u=null!=(d=K.arrow)?d:C.Arrow)?u:jc,qe=Tr(We,(0,Me.A)({},V,null!=(p=H.popper)?p:E.popper,{className:(0,ze.A)(Be.popper,null==V?void 0:V.className,null==(f=null!=(m=H.popper)?m:E.popper)?void 0:f.className)}),Fe),Ge=Tr(Ve,(0,Me.A)({},X,null!=(h=H.transition)?h:E.transition),Fe),Xe=Tr(He,(0,Me.A)({},null!=(g=H.tooltip)?g:E.tooltip,{className:(0,ze.A)(Be.tooltip,null==(v=null!=(y=H.tooltip)?y:E.tooltip)?void 0:v.className)}),Fe),Qe=Tr(Ke,(0,Me.A)({},null!=(b=H.arrow)?b:E.arrow,{className:(0,ze.A)(Be.arrow,null==(x=null!=(A=H.arrow)?A:E.arrow)?void 0:x.className)}),Fe);return(0,Ue.jsxs)(r.Fragment,{children:[r.cloneElement(Y,Oe),(0,Ue.jsx)(We,(0,Me.A)({as:null!=U?U:xc,placement:W,anchorEl:N?{getBoundingClientRect:()=>({top:Rc.y,left:Rc.x,right:Rc.x,bottom:Rc.y,width:0,height:0})}:ee,popperRef:Ie,open:!!ee&&pe,id:fe,transition:!0},Ne,qe,{popperOptions:De,children:e=>{let{TransitionProps:t}=e;return(0,Ue.jsx)(Ve,(0,Me.A)({timeout:J.transitions.duration.shorter},t,Ge,{children:(0,Ue.jsxs)(He,(0,Me.A)({},Xe,{children:[q,S?(0,Ue.jsx)(Ke,(0,Me.A)({},Qe,{ref:re})):null]}))}))}}))]})}));function $c(e){return(0,Ye.Ay)("MuiListItemText",e)}const Oc=(0,qe.A)("MuiListItemText",["root","multiline","dense","inset","primary","secondary"]),Nc=["children","className","disableTypography","inset","primary","primaryTypographyProps","secondary","secondaryTypographyProps"],Mc=(0,yt.Ay)("div",{name:"MuiListItemText",slot:"Root",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[{[`& .${Oc.primary}`]:t.primary},{[`& .${Oc.secondary}`]:t.secondary},t.root,n.inset&&t.inset,n.primary&&n.secondary&&t.multiline,n.dense&&t.dense]}})((e=>{let{ownerState:t}=e;return(0,Me.A)({flex:"1 1 auto",minWidth:0,marginTop:4,marginBottom:4},t.primary&&t.secondary&&{marginTop:6,marginBottom:6},t.inset&&{paddingLeft:56})})),Lc=r.forwardRef((function(e,t){const n=(0,bt.A)({props:e,name:"MuiListItemText"}),{children:o,className:a,disableTypography:i=!1,inset:l=!1,primary:s,primaryTypographyProps:c,secondary:u,secondaryTypographyProps:d}=n,p=(0,Le.A)(n,Nc),{dense:f}=r.useContext(Dr);let m=null!=s?s:o,h=u;const g=(0,Me.A)({},n,{disableTypography:i,inset:l,primary:!!m,secondary:!!h,dense:f}),v=(e=>{const{classes:t,inset:n,primary:r,secondary:o,dense:a}=e,i={root:["root",n&&"inset",a&&"dense",r&&o&&"multiline"],primary:["primary"],secondary:["secondary"]};return(0,Je.A)(i,$c,t)})(g);return null==m||m.type===un||i||(m=(0,Ue.jsx)(un,(0,Me.A)({variant:f?"body2":"body1",className:v.primary,component:null!=c&&c.variant?void 0:"span",display:"block"},c,{children:m}))),null==h||h.type===un||i||(h=(0,Ue.jsx)(un,(0,Me.A)({variant:"body2",className:v.secondary,color:"text.secondary",display:"block"},d,{children:h}))),(0,Ue.jsxs)(Mc,(0,Me.A)({className:(0,ze.A)(v.root,a),ownerState:g,ref:t},p,{children:[m,h]}))}));function zc(e){return(0,Ye.Ay)("MuiDivider",e)}const Dc=(0,qe.A)("MuiDivider",["root","absolute","fullWidth","inset","middle","flexItem","light","vertical","withChildren","withChildrenVertical","textAlignRight","textAlignLeft","wrapper","wrapperVertical"]),Fc=["absolute","children","className","component","flexItem","light","orientation","role","textAlign","variant"],Bc=(0,yt.Ay)("div",{name:"MuiDivider",slot:"Root",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[t.root,n.absolute&&t.absolute,t[n.variant],n.light&&t.light,"vertical"===n.orientation&&t.vertical,n.flexItem&&t.flexItem,n.children&&t.withChildren,n.children&&"vertical"===n.orientation&&t.withChildrenVertical,"right"===n.textAlign&&"vertical"!==n.orientation&&t.textAlignRight,"left"===n.textAlign&&"vertical"!==n.orientation&&t.textAlignLeft]}})((e=>{let{theme:t,ownerState:n}=e;return(0,Me.A)({margin:0,flexShrink:0,borderWidth:0,borderStyle:"solid",borderColor:(t.vars||t).palette.divider,borderBottomWidth:"thin"},n.absolute&&{position:"absolute",bottom:0,left:0,width:"100%"},n.light&&{borderColor:t.vars?`rgba(${t.vars.palette.dividerChannel} / 0.08)`:(0,Vt.X4)(t.palette.divider,.08)},"inset"===n.variant&&{marginLeft:72},"middle"===n.variant&&"horizontal"===n.orientation&&{marginLeft:t.spacing(2),marginRight:t.spacing(2)},"middle"===n.variant&&"vertical"===n.orientation&&{marginTop:t.spacing(1),marginBottom:t.spacing(1)},"vertical"===n.orientation&&{height:"100%",borderBottomWidth:0,borderRightWidth:"thin"},n.flexItem&&{alignSelf:"stretch",height:"auto"})}),(e=>{let{ownerState:t}=e;return(0,Me.A)({},t.children&&{display:"flex",whiteSpace:"nowrap",textAlign:"center",border:0,"&::before, &::after":{content:'""',alignSelf:"center"}})}),(e=>{let{theme:t,ownerState:n}=e;return(0,Me.A)({},n.children&&"vertical"!==n.orientation&&{"&::before, &::after":{width:"100%",borderTop:`thin solid ${(t.vars||t).palette.divider}`}})}),(e=>{let{theme:t,ownerState:n}=e;return(0,Me.A)({},n.children&&"vertical"===n.orientation&&{flexDirection:"column","&::before, &::after":{height:"100%",borderLeft:`thin solid ${(t.vars||t).palette.divider}`}})}),(e=>{let{ownerState:t}=e;return(0,Me.A)({},"right"===t.textAlign&&"vertical"!==t.orientation&&{"&::before":{width:"90%"},"&::after":{width:"10%"}},"left"===t.textAlign&&"vertical"!==t.orientation&&{"&::before":{width:"10%"},"&::after":{width:"90%"}})})),Wc=(0,yt.Ay)("span",{name:"MuiDivider",slot:"Wrapper",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[t.wrapper,"vertical"===n.orientation&&t.wrapperVertical]}})((e=>{let{theme:t,ownerState:n}=e;return(0,Me.A)({display:"inline-block",paddingLeft:`calc(${t.spacing(1)} * 1.2)`,paddingRight:`calc(${t.spacing(1)} * 1.2)`},"vertical"===n.orientation&&{paddingTop:`calc(${t.spacing(1)} * 1.2)`,paddingBottom:`calc(${t.spacing(1)} * 1.2)`})})),Uc=r.forwardRef((function(e,t){const n=(0,bt.A)({props:e,name:"MuiDivider"}),{absolute:r=!1,children:o,className:a,component:i=(o?"div":"hr"),flexItem:l=!1,light:s=!1,orientation:c="horizontal",role:u=("hr"!==i?"separator":void 0),textAlign:d="center",variant:p="fullWidth"}=n,f=(0,Le.A)(n,Fc),m=(0,Me.A)({},n,{absolute:r,component:i,flexItem:l,light:s,orientation:c,role:u,textAlign:d,variant:p}),h=(e=>{const{absolute:t,children:n,classes:r,flexItem:o,light:a,orientation:i,textAlign:l,variant:s}=e,c={root:["root",t&&"absolute",s,a&&"light","vertical"===i&&"vertical",o&&"flexItem",n&&"withChildren",n&&"vertical"===i&&"withChildrenVertical","right"===l&&"vertical"!==i&&"textAlignRight","left"===l&&"vertical"!==i&&"textAlignLeft"],wrapper:["wrapper","vertical"===i&&"wrapperVertical"]};return(0,Je.A)(c,zc,r)})(m);return(0,Ue.jsx)(Bc,(0,Me.A)({as:i,className:(0,ze.A)(h.root,a),role:u,ref:t,ownerState:m},f,{children:o?(0,Ue.jsx)(Wc,{className:h.wrapper,ownerState:m,children:o}):null}))}));Uc.muiSkipListHighlight=!0;const Vc=Uc;function Hc(e){return(0,Ye.Ay)("MuiDialog",e)}const Kc=(0,qe.A)("MuiDialog",["root","scrollPaper","scrollBody","container","paper","paperScrollPaper","paperScrollBody","paperWidthFalse","paperWidthXs","paperWidthSm","paperWidthMd","paperWidthLg","paperWidthXl","paperFullWidth","paperFullScreen"]);const qc=r.createContext({}),Gc=["aria-describedby","aria-labelledby","BackdropComponent","BackdropProps","children","className","disableEscapeKeyDown","fullScreen","fullWidth","maxWidth","onBackdropClick","onClose","open","PaperComponent","PaperProps","scroll","TransitionComponent","transitionDuration","TransitionProps"],Xc=(0,yt.Ay)(Ho,{name:"MuiDialog",slot:"Backdrop",overrides:(e,t)=>t.backdrop})({zIndex:-1}),Qc=(0,yt.Ay)(Qo,{name:"MuiDialog",slot:"Root",overridesResolver:(e,t)=>t.root})({"@media print":{position:"absolute !important"}}),Yc=(0,yt.Ay)("div",{name:"MuiDialog",slot:"Container",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[t.container,t[`scroll${(0,vt.A)(n.scroll)}`]]}})((e=>{let{ownerState:t}=e;return(0,Me.A)({height:"100%","@media print":{height:"auto"},outline:0},"paper"===t.scroll&&{display:"flex",justifyContent:"center",alignItems:"center"},"body"===t.scroll&&{overflowY:"auto",overflowX:"hidden",textAlign:"center","&::after":{content:'""',display:"inline-block",verticalAlign:"middle",height:"100%",width:"0"}})})),Jc=(0,yt.Ay)(Xt,{name:"MuiDialog",slot:"Paper",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[t.paper,t[`scrollPaper${(0,vt.A)(n.scroll)}`],t[`paperWidth${(0,vt.A)(String(n.maxWidth))}`],n.fullWidth&&t.paperFullWidth,n.fullScreen&&t.paperFullScreen]}})((e=>{let{theme:t,ownerState:n}=e;return(0,Me.A)({margin:32,position:"relative",overflowY:"auto","@media print":{overflowY:"visible",boxShadow:"none"}},"paper"===n.scroll&&{display:"flex",flexDirection:"column",maxHeight:"calc(100% - 64px)"},"body"===n.scroll&&{display:"inline-block",verticalAlign:"middle",textAlign:"left"},!n.maxWidth&&{maxWidth:"calc(100% - 64px)"},"xs"===n.maxWidth&&{maxWidth:"px"===t.breakpoints.unit?Math.max(t.breakpoints.values.xs,444):`max(${t.breakpoints.values.xs}${t.breakpoints.unit}, 444px)`,[`&.${Kc.paperScrollBody}`]:{[t.breakpoints.down(Math.max(t.breakpoints.values.xs,444)+64)]:{maxWidth:"calc(100% - 64px)"}}},n.maxWidth&&"xs"!==n.maxWidth&&{maxWidth:`${t.breakpoints.values[n.maxWidth]}${t.breakpoints.unit}`,[`&.${Kc.paperScrollBody}`]:{[t.breakpoints.down(t.breakpoints.values[n.maxWidth]+64)]:{maxWidth:"calc(100% - 64px)"}}},n.fullWidth&&{width:"calc(100% - 64px)"},n.fullScreen&&{margin:0,width:"100%",maxWidth:"100%",height:"100%",maxHeight:"none",borderRadius:0,[`&.${Kc.paperScrollBody}`]:{margin:0,maxWidth:"100%"}})})),Zc=r.forwardRef((function(e,t){const n=(0,bt.A)({props:e,name:"MuiDialog"}),o=mo(),a={enter:o.transitions.duration.enteringScreen,exit:o.transitions.duration.leavingScreen},{"aria-describedby":i,"aria-labelledby":l,BackdropComponent:s,BackdropProps:c,children:u,className:d,disableEscapeKeyDown:p=!1,fullScreen:f=!1,fullWidth:m=!1,maxWidth:h="sm",onBackdropClick:g,onClose:v,open:y,PaperComponent:b=Xt,PaperProps:x={},scroll:A="paper",TransitionComponent:w=Bo,transitionDuration:S=a,TransitionProps:k}=n,C=(0,Le.A)(n,Gc),E=(0,Me.A)({},n,{disableEscapeKeyDown:p,fullScreen:f,fullWidth:m,maxWidth:h,scroll:A}),j=(e=>{const{classes:t,scroll:n,maxWidth:r,fullWidth:o,fullScreen:a}=e,i={root:["root"],container:["container",`scroll${(0,vt.A)(n)}`],paper:["paper",`paperScroll${(0,vt.A)(n)}`,`paperWidth${(0,vt.A)(String(r))}`,o&&"paperFullWidth",a&&"paperFullScreen"]};return(0,Je.A)(i,Hc,t)})(E),_=r.useRef(),P=(0,dn.A)(l),R=r.useMemo((()=>({titleId:P})),[P]);return(0,Ue.jsx)(Qc,(0,Me.A)({className:(0,ze.A)(j.root,d),closeAfterTransition:!0,components:{Backdrop:Xc},componentsProps:{backdrop:(0,Me.A)({transitionDuration:S,as:s},c)},disableEscapeKeyDown:p,onClose:v,open:y,ref:t,onClick:e=>{_.current&&(_.current=null,g&&g(e),v&&v(e,"backdropClick"))},ownerState:E},C,{children:(0,Ue.jsx)(w,(0,Me.A)({appear:!0,in:y,timeout:S,role:"presentation"},k,{children:(0,Ue.jsx)(Yc,{className:(0,ze.A)(j.container),onMouseDown:e=>{_.current=e.target===e.currentTarget},ownerState:E,children:(0,Ue.jsx)(Jc,(0,Me.A)({as:b,elevation:24,role:"dialog","aria-describedby":i,"aria-labelledby":P},x,{className:(0,ze.A)(j.paper,x.className),ownerState:E,children:(0,Ue.jsx)(qc.Provider,{value:R,children:u})}))})}))}))}));function eu(e){return(0,Ye.Ay)("MuiDialogTitle",e)}const tu=(0,qe.A)("MuiDialogTitle",["root"]),nu=["className","id"],ru=(0,yt.Ay)(un,{name:"MuiDialogTitle",slot:"Root",overridesResolver:(e,t)=>t.root})({padding:"16px 24px",flex:"0 0 auto"}),ou=r.forwardRef((function(e,t){const n=(0,bt.A)({props:e,name:"MuiDialogTitle"}),{className:o,id:a}=n,i=(0,Le.A)(n,nu),l=n,s=(e=>{const{classes:t}=e;return(0,Je.A)({root:["root"]},eu,t)})(l),{titleId:c=a}=r.useContext(qc);return(0,Ue.jsx)(ru,(0,Me.A)({component:"h2",className:(0,ze.A)(s.root,o),ownerState:l,ref:t,variant:"h6",id:null!=a?a:c},i))}));function au(e){return(0,Ye.Ay)("MuiDialogContent",e)}(0,qe.A)("MuiDialogContent",["root","dividers"]);const iu=["className","dividers"],lu=(0,yt.Ay)("div",{name:"MuiDialogContent",slot:"Root",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[t.root,n.dividers&&t.dividers]}})((e=>{let{theme:t,ownerState:n}=e;return(0,Me.A)({flex:"1 1 auto",WebkitOverflowScrolling:"touch",overflowY:"auto",padding:"20px 24px"},n.dividers?{padding:"16px 24px",borderTop:`1px solid ${(t.vars||t).palette.divider}`,borderBottom:`1px solid ${(t.vars||t).palette.divider}`}:{[`.${tu.root} + &`]:{paddingTop:0}})})),su=r.forwardRef((function(e,t){const n=(0,bt.A)({props:e,name:"MuiDialogContent"}),{className:r,dividers:o=!1}=n,a=(0,Le.A)(n,iu),i=(0,Me.A)({},n,{dividers:o}),l=(e=>{const{classes:t,dividers:n}=e,r={root:["root",n&&"dividers"]};return(0,Je.A)(r,au,t)})(i);return(0,Ue.jsx)(lu,(0,Me.A)({className:(0,ze.A)(l.root,r),ownerState:i,ref:t},a))}));function cu(e){return(0,Ye.Ay)("MuiDialogActions",e)}(0,qe.A)("MuiDialogActions",["root","spacing"]);const uu=["className","disableSpacing"],du=(0,yt.Ay)("div",{name:"MuiDialogActions",slot:"Root",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[t.root,!n.disableSpacing&&t.spacing]}})((e=>{let{ownerState:t}=e;return(0,Me.A)({display:"flex",alignItems:"center",padding:8,justifyContent:"flex-end",flex:"0 0 auto"},!t.disableSpacing&&{"& > :not(style) ~ :not(style)":{marginLeft:8}})})),pu=r.forwardRef((function(e,t){const n=(0,bt.A)({props:e,name:"MuiDialogActions"}),{className:r,disableSpacing:o=!1}=n,a=(0,Le.A)(n,uu),i=(0,Me.A)({},n,{disableSpacing:o}),l=(e=>{const{classes:t,disableSpacing:n}=e,r={root:["root",!n&&"spacing"]};return(0,Je.A)(r,cu,t)})(i);return(0,Ue.jsx)(du,(0,Me.A)({className:(0,ze.A)(l.root,r),ownerState:i,ref:t},a))}));var fu=n(4783),mu=n(5540),hu=n(3471),gu=n(2462);const vu=e=>{if(!e)return null;try{const t=e.toLowerCase().trim(),n=/^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/;if(n.test(t))return t;if(32===t.length&&/^[0-9a-f]{32}$/.test(t)){const e=`${t.slice(0,8)}-${t.slice(8,12)}-${t.slice(12,16)}-${t.slice(16,20)}-${t.slice(20)}`;if(n.test(e))return console.log(`Reformatted UUID from ${t} to ${e}`),e}return console.warn("Invalid UUID format:",e),e}catch(t){return console.error("Error normalizing UUID:",t),e}},yu=()=>{const[e,t]=(0,r.useState)(""),[n,o]=(0,r.useState)(localStorage.getItem("userId")||""),[a,i]=(0,r.useState)(localStorage.getItem("businessId")||""),[l,s]=(0,r.useState)("");return(0,r.useEffect)((()=>{localStorage.setItem("userId",n)}),[n]),(0,r.useEffect)((()=>{localStorage.setItem("businessId",a)}),[a]),{apiKey:e,setApiKey:t,userId:n,setUserId:o,businessId:a,setBusinessId:i,businessApiKey:l,setBusinessApiKey:s}},bu=async e=>{try{const t=vu(e);console.log(`Fetching agents for business: ${t}`);const n=await fetch(`${Qi.BASE_URL}/agents?business_id=${t}`,{method:"GET",credentials:"include",headers:rl()});if(!n.ok){const e=await n.json();throw new Error(e.message||"Failed to fetch agents")}return await n.json()}catch(t){throw console.error("Error in fetchAgents:",t),t}},xu=async e=>{try{const t={...e,business_id:vu(e.business_id)};console.log("Creating agent:",t);const n=await fetch(`${Qi.BASE_URL}/agents`,{method:"POST",credentials:"include",headers:rl(),body:JSON.stringify(t)});if(!n.ok){const e=await n.json();throw new Error(e.message||"Failed to create agent")}return await n.json()}catch(t){throw console.error("Error in createAgent:",t),t}},Au=async(e,t)=>{try{const n={...t,business_id:vu(t.business_id)};console.log(`Updating agent ${e}:`,n);const r=await fetch(`${Qi.BASE_URL}/agents/${e}`,{method:"PUT",credentials:"include",headers:rl(),body:JSON.stringify(n)});if(!r.ok){const e=await r.json();throw new Error(e.message||"Failed to update agent")}return await r.json()}catch(n){throw console.error("Error in updateAgent:",n),n}},wu=async(e,t)=>{try{const n=vu(t);console.log(`Deleting agent ${e} for business ${n}`);const r=await fetch(`${Qi.BASE_URL}/agents/${e}?business_id=${n}`,{method:"DELETE",credentials:"include",headers:rl(),body:JSON.stringify({business_id:n})});if(!r.ok){const e=await r.json();throw new Error(e.message||"Failed to delete agent")}return!0}catch(n){throw console.error("Error in deleteAgent:",n),n}},Su=e=>{const[t,n]=(0,r.useState)([]),[o,a]=(0,r.useState)(!1),[i,l]=(0,r.useState)(null),{businessId:s}=yu(),c=vu(s),u=(0,r.useCallback)((async()=>{if(c){a(!0),l(null),console.log(`Fetching agents for business ID: ${c}`);try{const e=await bu(c);console.log("Fetched agents:",e),n(Array.isArray(e)?e:[])}catch(t){console.error("Error fetching agents:",t);const r=t.message||"Failed to fetch agents";l(r),n([]),e&&e(`Error fetching agents: ${r}`,"error")}finally{a(!1)}}else n([])}),[c,e]);return(0,r.useEffect)((()=>{u()}),[u]),{agents:t,isLoading:o,error:i,refreshAgents:u}};const ku=function(e){let{handleSnackbarOpen:t,onAgentSelect:n}=e;console.log("Rendering AgentSection component");const{agents:o,isLoading:a,error:i,refreshAgents:l}=Su(t),[s,c]=(0,r.useState)(null),{businessId:u}=yu(),d=vu(u),p=ee();(0,r.useEffect)((()=>{console.log("AgentSection - Current state:",{agents:o,isLoading:a,error:i,businessId:u,normalizedBusinessId:d,selectedAgentId:s})}),[o,a,i,u,d,s]);const[f,m]=(0,r.useState)(!1),[h,g]=(0,r.useState)("create"),[v,y]=(0,r.useState)({business_id:d,agent_name:""}),[b,x]=(0,r.useState)(!1);(0,r.useEffect)((()=>{y((e=>({...e,business_id:d})))}),[d]);const A=()=>{m(!1),x(!1)};let w;return w=a?(0,Ue.jsxs)(Qe,{sx:{display:"flex",justifyContent:"center",alignItems:"center",p:2},children:[(0,Ue.jsx)(Xi,{size:24}),(0,Ue.jsx)(un,{sx:{ml:1},variant:"body2",children:"Loading Agents..."})]}):i?(0,Ue.jsxs)($l,{severity:"error",children:["Error loading agents: ",i]}):o.length>0?(0,Ue.jsx)(Ur,{dense:!0,children:o.map((e=>(0,Ue.jsx)(Kl,{button:!0,selected:s===e.agent_id,onClick:()=>{return t=e.agent_id,console.log("Selected Agent ID:",t),c(t),void(n&&n(t));var t},secondaryAction:(0,Ue.jsxs)(Qe,{children:[(0,Ue.jsx)(Tc,{title:"Manage Stages",children:(0,Ue.jsx)(Al,{edge:"end","aria-label":"manage-stages",color:"primary",onClick:t=>{var n,r;t.stopPropagation(),n=e.agent_id,r=e.agent_name,console.log(`Navigating to stage management for agent: ${r} (${n})`),localStorage.setItem("agentId",n),p(`/stage-management/business_id=${d}/agent_id=${n}`)},children:(0,Ue.jsx)(gu.A,{})})}),(0,Ue.jsx)(Al,{edge:"end","aria-label":"edit",onClick:t=>((e,t)=>{t&&t.stopPropagation(),console.log("Opening edit dialog for agent:",e),y({business_id:d,agent_name:e.agent_name}),c(e.agent_id),g("edit"),m(!0)})(e,t),children:(0,Ue.jsx)(mu.A,{})}),(0,Ue.jsx)(Al,{edge:"end","aria-label":"delete",onClick:n=>(async(e,n)=>{if(n&&n.stopPropagation(),window.confirm("Are you sure you want to delete this agent?"))try{if(!d)throw new Error("Business ID not found");console.log(`Deleting agent ${e} for business ${d}`),await wu(e,d)&&(t("Agent deleted successfully","success"),l(),s===e&&c(null))}catch(r){console.error("Error deleting agent:",r),t(r.message||"An error occurred while deleting the agent","error")}})(e.agent_id,n),children:(0,Ue.jsx)(hu.A,{})})]}),children:(0,Ue.jsx)(Lc,{primary:e.agent_name||"Unnamed Agent",secondary:`Created: ${new Date(e.created_at).toLocaleDateString()}`})},e.agent_id)))}):(0,Ue.jsx)(un,{variant:"body2",sx:{p:2,textAlign:"center"},children:"No agents found for this business."}),(0,Ue.jsxs)(Ue.Fragment,{children:[(0,Ue.jsx)(Zt,{sx:{mt:2},children:(0,Ue.jsxs)(rn,{children:[(0,Ue.jsxs)(Qe,{sx:{display:"flex",justifyContent:"space-between",alignItems:"center",mb:1},children:[(0,Ue.jsx)(un,{variant:"h6",gutterBottom:!0,component:"div",children:"Agents"}),(0,Ue.jsx)(Ni,{variant:"contained",size:"small",startIcon:(0,Ue.jsx)(fu.A,{}),onClick:()=>{console.log("Opening create dialog with businessId:",d),y({business_id:d,agent_name:""}),g("create"),m(!0)},children:"Create Agent"})]}),(0,Ue.jsx)(Vc,{sx:{mb:1}}),w]})}),(0,Ue.jsxs)(Zc,{open:f,onClose:A,children:[(0,Ue.jsx)(ou,{children:"create"===h?"Create New Agent":"Edit Agent"}),(0,Ue.jsx)(su,{children:(0,Ue.jsx)(Qa,{autoFocus:!0,margin:"dense",label:"Agent Name",fullWidth:!0,variant:"outlined",value:v.agent_name,onChange:e=>y({...v,agent_name:e.target.value}),disabled:b})}),(0,Ue.jsxs)(pu,{children:[(0,Ue.jsx)(Ni,{onClick:A,disabled:b,children:"Cancel"}),(0,Ue.jsx)(Ni,{onClick:async()=>{if(v.agent_name.trim()){x(!0);try{const e={...v,business_id:d};console.log(("create"===h?"Creating":"Updating")+" agent with data:",e),"create"===h?(await xu(e),t("Agent created successfully","success")):(await Au(s,e),t("Agent updated successfully","success")),l(),A()}catch(e){console.error("create"===h?"Error creating agent:":"Error updating agent:",e),t(e.message||"An error occurred","error"),x(!1)}}else t("Agent name is required","error")},variant:"contained",disabled:b,startIcon:b?(0,Ue.jsx)(Xi,{size:20}):null,children:"create"===h?"Create":"Save"})]})]})]})};const Cu=(0,qe.A)("MuiListItemIcon",["root","alignItemsFlexStart"]);function Eu(e){return(0,Ye.Ay)("MuiMenuItem",e)}const ju=(0,qe.A)("MuiMenuItem",["root","focusVisible","dense","disabled","divider","gutters","selected"]),_u=["autoFocus","component","dense","divider","disableGutters","focusVisibleClassName","role","tabIndex","className"],Pu=(0,yt.Ay)(Ci,{shouldForwardProp:e=>(0,yt.ep)(e)||"classes"===e,name:"MuiMenuItem",slot:"Root",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[t.root,n.dense&&t.dense,n.divider&&t.divider,!n.disableGutters&&t.gutters]}})((e=>{let{theme:t,ownerState:n}=e;return(0,Me.A)({},t.typography.body1,{display:"flex",justifyContent:"flex-start",alignItems:"center",position:"relative",textDecoration:"none",minHeight:48,paddingTop:6,paddingBottom:6,boxSizing:"border-box",whiteSpace:"nowrap"},!n.disableGutters&&{paddingLeft:16,paddingRight:16},n.divider&&{borderBottom:`1px solid ${(t.vars||t).palette.divider}`,backgroundClip:"padding-box"},{"&:hover":{textDecoration:"none",backgroundColor:(t.vars||t).palette.action.hover,"@media (hover: none)":{backgroundColor:"transparent"}},[`&.${ju.selected}`]:{backgroundColor:t.vars?`rgba(${t.vars.palette.primary.mainChannel} / ${t.vars.palette.action.selectedOpacity})`:(0,Vt.X4)(t.palette.primary.main,t.palette.action.selectedOpacity),[`&.${ju.focusVisible}`]:{backgroundColor:t.vars?`rgba(${t.vars.palette.primary.mainChannel} / calc(${t.vars.palette.action.selectedOpacity} + ${t.vars.palette.action.focusOpacity}))`:(0,Vt.X4)(t.palette.primary.main,t.palette.action.selectedOpacity+t.palette.action.focusOpacity)}},[`&.${ju.selected}:hover`]:{backgroundColor:t.vars?`rgba(${t.vars.palette.primary.mainChannel} / calc(${t.vars.palette.action.selectedOpacity} + ${t.vars.palette.action.hoverOpacity}))`:(0,Vt.X4)(t.palette.primary.main,t.palette.action.selectedOpacity+t.palette.action.hoverOpacity),"@media (hover: none)":{backgroundColor:t.vars?`rgba(${t.vars.palette.primary.mainChannel} / ${t.vars.palette.action.selectedOpacity})`:(0,Vt.X4)(t.palette.primary.main,t.palette.action.selectedOpacity)}},[`&.${ju.focusVisible}`]:{backgroundColor:(t.vars||t).palette.action.focus},[`&.${ju.disabled}`]:{opacity:(t.vars||t).palette.action.disabledOpacity},[`& + .${Dc.root}`]:{marginTop:t.spacing(1),marginBottom:t.spacing(1)},[`& + .${Dc.inset}`]:{marginLeft:52},[`& .${Oc.root}`]:{marginTop:0,marginBottom:0},[`& .${Oc.inset}`]:{paddingLeft:36},[`& .${Cu.root}`]:{minWidth:36}},!n.dense&&{[t.breakpoints.up("sm")]:{minHeight:"auto"}},n.dense&&(0,Me.A)({minHeight:32,paddingTop:4,paddingBottom:4},t.typography.body2,{[`& .${Cu.root} svg`]:{fontSize:"1.25rem"}}))})),Ru=r.forwardRef((function(e,t){const n=(0,bt.A)({props:e,name:"MuiMenuItem"}),{autoFocus:o=!1,component:a="li",dense:i=!1,divider:l=!1,disableGutters:s=!1,focusVisibleClassName:c,role:u="menuitem",tabIndex:d,className:p}=n,f=(0,Le.A)(n,_u),m=r.useContext(Dr),h=r.useMemo((()=>({dense:i||m.dense||!1,disableGutters:s})),[m.dense,i,s]),g=r.useRef(null);(0,En.A)((()=>{o&&g.current&&g.current.focus()}),[o]);const v=(0,Me.A)({},n,{dense:h.dense,divider:l,disableGutters:s}),y=(e=>{const{disabled:t,dense:n,divider:r,disableGutters:o,selected:a,classes:i}=e,l={root:["root",n&&"dense",t&&"disabled",!o&&"gutters",r&&"divider",a&&"selected"]},s=(0,Je.A)(l,Eu,i);return(0,Me.A)({},i,s)})(n),b=(0,Cn.A)(g,t);let x;return n.disabled||(x=void 0!==d?d:-1),(0,Ue.jsx)(Dr.Provider,{value:h,children:(0,Ue.jsx)(Pu,(0,Me.A)({ref:b,role:u,tabIndex:x,component:a,focusVisibleClassName:(0,ze.A)(y.focusVisible,c),className:(0,ze.A)(y.root,p)},f,{ownerState:v,classes:y}))})}));function Iu(e){return e.substring(2).toLowerCase()}function Tu(e){const{children:t,disableReactTree:n=!1,mouseEvent:o="onClick",onClickAway:a,touchEvent:i="onTouchEnd"}=e,l=r.useRef(!1),s=r.useRef(null),c=r.useRef(!1),u=r.useRef(!1);r.useEffect((()=>(setTimeout((()=>{c.current=!0}),0),()=>{c.current=!1})),[]);const d=(0,fn.A)(t.ref,s),p=(0,ko.A)((e=>{const t=u.current;u.current=!1;const r=(0,So.A)(s.current);if(!c.current||!s.current||"clientX"in e&&function(e,t){return t.documentElement.clientWidth<e.clientX||t.documentElement.clientHeight<e.clientY}(e,r))return;if(l.current)return void(l.current=!1);let o;o=e.composedPath?e.composedPath().indexOf(s.current)>-1:!r.documentElement.contains(e.target)||s.current.contains(e.target),o||!n&&t||a(e)})),f=e=>n=>{u.current=!0;const r=t.props[e];r&&r(n)},m={ref:d};return!1!==i&&(m[i]=f(i)),r.useEffect((()=>{if(!1!==i){const e=Iu(i),t=(0,So.A)(s.current),n=()=>{l.current=!0};return t.addEventListener(e,p),t.addEventListener("touchmove",n),()=>{t.removeEventListener(e,p),t.removeEventListener("touchmove",n)}}}),[p,i]),!1!==o&&(m[o]=f(o)),r.useEffect((()=>{if(!1!==o){const e=Iu(o),t=(0,So.A)(s.current);return t.addEventListener(e,p),()=>{t.removeEventListener(e,p)}}}),[p,o]),(0,Ue.jsx)(r.Fragment,{children:r.cloneElement(t,m)})}function $u(e){return(0,Ye.Ay)("MuiSnackbarContent",e)}(0,qe.A)("MuiSnackbarContent",["root","message","action"]);const Ou=["action","className","message","role"],Nu=(0,yt.Ay)(Xt,{name:"MuiSnackbarContent",slot:"Root",overridesResolver:(e,t)=>t.root})((e=>{let{theme:t}=e;const n="light"===t.palette.mode?.8:.98,r=(0,Vt.tL)(t.palette.background.default,n);return(0,Me.A)({},t.typography.body2,{color:t.vars?t.vars.palette.SnackbarContent.color:t.palette.getContrastText(r),backgroundColor:t.vars?t.vars.palette.SnackbarContent.bg:r,display:"flex",alignItems:"center",flexWrap:"wrap",padding:"6px 16px",borderRadius:(t.vars||t).shape.borderRadius,flexGrow:1,[t.breakpoints.up("sm")]:{flexGrow:"initial",minWidth:288}})})),Mu=(0,yt.Ay)("div",{name:"MuiSnackbarContent",slot:"Message",overridesResolver:(e,t)=>t.message})({padding:"8px 0"}),Lu=(0,yt.Ay)("div",{name:"MuiSnackbarContent",slot:"Action",overridesResolver:(e,t)=>t.action})({display:"flex",alignItems:"center",marginLeft:"auto",paddingLeft:16,marginRight:-8}),zu=r.forwardRef((function(e,t){const n=(0,bt.A)({props:e,name:"MuiSnackbarContent"}),{action:r,className:o,message:a,role:i="alert"}=n,l=(0,Le.A)(n,Ou),s=n,c=(e=>{const{classes:t}=e;return(0,Je.A)({root:["root"],action:["action"],message:["message"]},$u,t)})(s);return(0,Ue.jsxs)(Nu,(0,Me.A)({role:i,square:!0,elevation:6,className:(0,ze.A)(c.root,o),ownerState:s,ref:t},l,{children:[(0,Ue.jsx)(Mu,{className:c.message,ownerState:s,children:a}),r?(0,Ue.jsx)(Lu,{className:c.action,ownerState:s,children:r}):null]}))}));function Du(e){return(0,Ye.Ay)("MuiSnackbar",e)}(0,qe.A)("MuiSnackbar",["root","anchorOriginTopCenter","anchorOriginBottomCenter","anchorOriginTopRight","anchorOriginBottomRight","anchorOriginTopLeft","anchorOriginBottomLeft"]);const Fu=["onEnter","onExited"],Bu=["action","anchorOrigin","autoHideDuration","children","className","ClickAwayListenerProps","ContentProps","disableWindowBlurListener","message","onBlur","onClose","onFocus","onMouseEnter","onMouseLeave","open","resumeHideDuration","TransitionComponent","transitionDuration","TransitionProps"],Wu=(0,yt.Ay)("div",{name:"MuiSnackbar",slot:"Root",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[t.root,t[`anchorOrigin${(0,vt.A)(n.anchorOrigin.vertical)}${(0,vt.A)(n.anchorOrigin.horizontal)}`]]}})((e=>{let{theme:t,ownerState:n}=e;return(0,Me.A)({zIndex:(t.vars||t).zIndex.snackbar,position:"fixed",display:"flex",left:8,right:8,justifyContent:"center",alignItems:"center"},"top"===n.anchorOrigin.vertical?{top:8}:{bottom:8},"left"===n.anchorOrigin.horizontal&&{justifyContent:"flex-start"},"right"===n.anchorOrigin.horizontal&&{justifyContent:"flex-end"},{[t.breakpoints.up("sm")]:(0,Me.A)({},"top"===n.anchorOrigin.vertical?{top:24}:{bottom:24},"center"===n.anchorOrigin.horizontal&&{left:"50%",right:"auto",transform:"translateX(-50%)"},"left"===n.anchorOrigin.horizontal&&{left:24,right:"auto"},"right"===n.anchorOrigin.horizontal&&{right:24,left:"auto"})})})),Uu=r.forwardRef((function(e,t){const n=(0,bt.A)({props:e,name:"MuiSnackbar"}),o=mo(),a={enter:o.transitions.duration.enteringScreen,exit:o.transitions.duration.leavingScreen},{action:i,anchorOrigin:{vertical:l,horizontal:s}={vertical:"bottom",horizontal:"left"},autoHideDuration:c=null,children:u,className:d,ClickAwayListenerProps:p,ContentProps:f,disableWindowBlurListener:m=!1,message:h,open:g,TransitionComponent:v=wo,transitionDuration:y=a,TransitionProps:{onEnter:b,onExited:x}={}}=n,A=(0,Le.A)(n.TransitionProps,Fu),w=(0,Le.A)(n,Bu),S=(0,Me.A)({},n,{anchorOrigin:{vertical:l,horizontal:s},autoHideDuration:c,disableWindowBlurListener:m,TransitionComponent:v,transitionDuration:y}),k=(e=>{const{classes:t,anchorOrigin:n}=e,r={root:["root",`anchorOrigin${(0,vt.A)(n.vertical)}${(0,vt.A)(n.horizontal)}`]};return(0,Je.A)(r,Du,t)})(S),{getRootProps:C,onClickAway:E}=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const{autoHideDuration:t=null,disableWindowBlurListener:n=!1,onClose:o,open:a,resumeHideDuration:i}=e,l=(0,eo.A)();r.useEffect((()=>{if(a)return document.addEventListener("keydown",e),()=>{document.removeEventListener("keydown",e)};function e(e){e.defaultPrevented||"Escape"!==e.key&&"Esc"!==e.key||null==o||o(e,"escapeKeyDown")}}),[a,o]);const s=(0,ko.A)(((e,t)=>{null==o||o(e,t)})),c=(0,ko.A)((e=>{o&&null!=e&&l.start(e,(()=>{s(null,"timeout")}))}));r.useEffect((()=>(a&&c(t),l.clear)),[a,t,c,l]);const u=l.clear,d=r.useCallback((()=>{null!=t&&c(null!=i?i:.5*t)}),[t,i,c]),p=e=>t=>{const n=e.onFocus;null==n||n(t),u()},f=e=>t=>{const n=e.onMouseEnter;null==n||n(t),u()},m=e=>t=>{const n=e.onMouseLeave;null==n||n(t),d()};return r.useEffect((()=>{if(!n&&a)return window.addEventListener("focus",d),window.addEventListener("blur",u),()=>{window.removeEventListener("focus",d),window.removeEventListener("blur",u)}}),[n,a,d,u]),{getRootProps:function(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const n=(0,Me.A)({},$r(e),$r(t));return(0,Me.A)({role:"presentation"},t,n,{onBlur:(r=n,e=>{const t=r.onBlur;null==t||t(e),d()}),onFocus:p(n),onMouseEnter:f(n),onMouseLeave:m(n)});var r},onClickAway:e=>{null==o||o(e,"clickaway")}}}((0,Me.A)({},S)),[j,_]=r.useState(!0),P=zr({elementType:Wu,getSlotProps:C,externalForwardedProps:w,ownerState:S,additionalProps:{ref:t},className:[k.root,d]});return!g&&j?null:(0,Ue.jsx)(Tu,(0,Me.A)({onClickAway:E},p,{children:(0,Ue.jsx)(Wu,(0,Me.A)({},P,{children:(0,Ue.jsx)(v,(0,Me.A)({appear:!0,in:g,timeout:y,direction:"top"===l?"down":"up",onEnter:(e,t)=>{_(!1),b&&b(e,t)},onExited:e=>{_(!0),x&&x(e)}},A,{children:u||(0,Ue.jsx)(zu,(0,Me.A)({message:h,action:i},f))}))}))}))}));var Vu=n(9120),Hu=n(1702);const Ku=async e=>{if(!e.ok){const t=await e.json().catch((()=>({})));throw new Error(t.message||t.error||`HTTP error ${e.status}`)}return 204===e.status?null:e.json()},qu=async e=>{console.log(`[Service] Fetching business details for ID: ${e}`);const t=await fetch(`${Qi.BASE_URL}/businesses/${e}`,{method:"GET",credentials:"include",headers:rl()});return Ku(t)},Gu=async e=>{if(!e.ok){const t=await e.json().catch((()=>({})));throw new Error(t.message||t.error||`HTTP error ${e.status}`)}return 204===e.status?null:e.json()},Xu=async e=>{if(!e)throw console.error("[Service Error] fetchStages requires a businessId."),new Error("Business ID is required to fetch stages.");console.log(`[Service] Fetching stages for business: ${e}`);const t=rl();console.log("[Service] Using headers:",t);const n=await fetch(`/stages?business_id=${e}`,{method:"GET",credentials:"include",headers:t});return console.log(`[Service] Response status: ${n.status}`),Gu(n)};const Qu=function(){var e;const t=ee(),[n,o]=(0,r.useState)(null),[a,i]=(0,r.useState)({}),[l,s]=(0,r.useState)([]),[c,u]=(0,r.useState)(!0),[d,p]=(0,r.useState)(!1),[f,m]=(0,r.useState)(null),[h,g]=(0,r.useState)(!1),[v,y]=(0,r.useState)({open:!1,message:"",severity:"success"}),[b,x]=(0,r.useState)(!1),[A,w]=(0,r.useState)(null),[S,k]=(0,r.useState)({agent_name:"",agent_description:""}),[C,E]=(0,r.useState)([]),[j,_]=(0,r.useState)(""),P=localStorage.getItem("businessId"),R=(0,r.useCallback)((function(e){y({open:!0,message:e,severity:arguments.length>1&&void 0!==arguments[1]?arguments[1]:"success"})}),[]),I=()=>{y({...v,open:!1})},T=(0,r.useCallback)((()=>{localStorage.removeItem("userId"),localStorage.removeItem("businessId"),localStorage.removeItem("businessApiKey"),R("Logged out successfully","success"),t("/login")}),[t,R]),$=(0,r.useCallback)(((e,n)=>{console.log(`Navigating to stages for agent: ${n} (${e})`),localStorage.setItem("agentId",e),t(`/stages?business_id=${P}&agent_id=${e}`)}),[t,P]),O=(0,r.useCallback)((async()=>{if(!P)return m("Business ID not found. Please login again."),void u(!1);u(!0),m(null),console.log(`Fetching data for business ID: ${P}`);try{const[e,t,n]=await Promise.all([qu(P),Xu(P),bu(P)]);console.log("Fetched business data:",e),o(e),i(e),_(e.first_stage_id||""),console.log("Fetched stages:",t),E(t||[]),console.log("Fetched agents:",n),s(n||[])}catch(e){console.error("Error fetching data:",e),m(`Failed to load data: ${e.message}`),R(`Error loading data: ${e.message}`,"error")}finally{u(!1)}}),[P,R]);(0,r.useEffect)((()=>{O()}),[O]);const N=e=>{const{name:t,value:n}=e.target;i((e=>({...e,[t]:n})))},M=()=>{!h&&n&&i({business_name:n.business_name||"",business_description:n.business_description||"",address:n.address||"",phone_number:n.phone_number||"",website:n.website||""}),g(!h),m(null)},L=()=>{x(!1),w(null),k({agent_name:"",agent_description:""})},z=e=>{const{name:t,value:n}=e.target;A?w((e=>({...e,[t]:n}))):k((e=>({...e,[t]:n})))};return c?(0,Ue.jsx)(xt,{children:(0,Ue.jsx)(Qe,{display:"flex",justifyContent:"center",mt:5,children:(0,Ue.jsx)(Xi,{})})}):P?f&&!n?(0,Ue.jsx)(xt,{children:(0,Ue.jsx)($l,{severity:"error",sx:{mt:2},children:f})}):n?(0,Ue.jsxs)(xt,{maxWidth:"lg",children:[(0,Ue.jsxs)(Xt,{elevation:3,sx:{p:3,mt:2},children:[(0,Ue.jsxs)(Qe,{display:"flex",justifyContent:"space-between",alignItems:"center",mb:2,children:[(0,Ue.jsxs)(Al,{onClick:()=>t(-1),children:[" ",(0,Ue.jsx)(Vu.A,{})]}),(0,Ue.jsx)(un,{variant:"h4",component:"h1",children:"Business Dashboard"}),(0,Ue.jsx)(Ni,{variant:"outlined",startIcon:(0,Ue.jsx)(Hu.A,{}),onClick:T,children:"Logout"})]}),f&&(0,Ue.jsx)($l,{severity:"error",sx:{mb:2},children:f}),(0,Ue.jsxs)(Qe,{mb:4,children:[(0,Ue.jsx)(un,{variant:"h5",gutterBottom:!0,children:"Business Details"}),h?(0,Ue.jsxs)(Qe,{component:"form",onSubmit:async e=>{e.preventDefault(),p(!0),m(null),console.log("Saving business changes:",a);try{const e={business_name:a.business_name,business_description:a.business_description,address:a.address,phone_number:a.phone_number,website:a.website};await(async(e,t)=>{console.log(`[Service] Updating business ${e} with:`,t);const n=await fetch(`${Qi.BASE_URL}/businesses/${e}`,{method:"PUT",credentials:"include",headers:rl(),body:JSON.stringify(t)});return Ku(n)})(P,e),o((t=>({...t,...e}))),g(!1),R("Business details updated successfully!","success")}catch(t){console.error("Error saving business details:",t),m(`Save failed: ${t.message}`),R(`Error saving details: ${t.message}`,"error")}finally{p(!1)}},noValidate:!0,autoComplete:"off",children:[(0,Ue.jsx)(Qa,{label:"Business Name",name:"business_name",value:a.business_name||"",onChange:N,fullWidth:!0,margin:"normal",required:!0,disabled:d}),(0,Ue.jsx)(Qa,{label:"Description",name:"business_description",value:a.business_description||"",onChange:N,fullWidth:!0,margin:"normal",multiline:!0,rows:3,disabled:d}),(0,Ue.jsx)(Qa,{label:"Address",name:"address",value:a.address||"",onChange:N,fullWidth:!0,margin:"normal",disabled:d}),(0,Ue.jsx)(Qa,{label:"Phone Number",name:"phone_number",value:a.phone_number||"",onChange:N,fullWidth:!0,margin:"normal",disabled:d}),(0,Ue.jsx)(Qa,{label:"Website",name:"website",value:a.website||"",onChange:N,fullWidth:!0,margin:"normal",type:"url",disabled:d}),(0,Ue.jsxs)(Qe,{sx:{mt:2},children:[(0,Ue.jsx)(Ni,{type:"submit",variant:"contained",disabled:d,sx:{mr:1},children:d?(0,Ue.jsx)(Xi,{size:24}):"Save Changes"}),(0,Ue.jsx)(Ni,{variant:"outlined",onClick:M,disabled:d,children:"Cancel"})]})]}):(0,Ue.jsxs)(Qe,{children:[(0,Ue.jsxs)(un,{children:[(0,Ue.jsx)("strong",{children:"Name:"})," ",n.business_name]}),(0,Ue.jsxs)(un,{children:[(0,Ue.jsx)("strong",{children:"Description:"})," ",n.business_description||"N/A"]}),(0,Ue.jsxs)(un,{children:[(0,Ue.jsx)("strong",{children:"Address:"})," ",n.address||"N/A"]}),(0,Ue.jsxs)(un,{children:[(0,Ue.jsx)("strong",{children:"Phone:"})," ",n.phone_number||"N/A"]}),(0,Ue.jsxs)(un,{children:[(0,Ue.jsx)("strong",{children:"Website:"})," ",n.website?(0,Ue.jsx)("a",{href:n.website,target:"_blank",rel:"noopener noreferrer",children:n.website}):"N/A"]}),(0,Ue.jsxs)(un,{children:[(0,Ue.jsx)("strong",{children:"Business ID:"})," ",n.business_id]}),(0,Ue.jsxs)(un,{children:[(0,Ue.jsx)("strong",{children:"Owner ID:"})," ",n.owner_id]}),(0,Ue.jsx)(Ni,{variant:"contained",startIcon:(0,Ue.jsx)(mu.A,{}),onClick:M,sx:{mt:2},children:"Edit Details"})]})]}),(0,Ue.jsx)("hr",{}),(0,Ue.jsxs)(Qe,{mt:4,mb:4,children:[(0,Ue.jsx)(un,{variant:"h6",gutterBottom:!0,children:"Conversation Settings"}),(0,Ue.jsxs)(kr,{fullWidth:!0,margin:"normal",children:[(0,Ue.jsx)(br,{id:"default-stage-label",children:"Default Starting Stage"}),(0,Ue.jsxs)(Ha,{labelId:"default-stage-label",id:"default-stage-select",value:j,label:"Default Starting Stage",onChange:e=>{_(e.target.value)},disabled:d||c,children:[(0,Ue.jsx)(Ru,{value:"",children:(0,Ue.jsx)("em",{children:"None (System will pick first available)"})}),C.length>0?C.map((e=>{console.log("Rendering stage:",e);const t=l&&l.find((t=>t.agent_id===e.agent_id)),n=t?` (Agent: ${t.agent_name})`:"",r=`${e.stage_name}${n}`;return console.log("Display text:",r),(0,Ue.jsx)(Ru,{value:e.stage_id,children:r},e.stage_id)})):(0,Ue.jsx)(Ru,{disabled:!0,children:"No stages available for this business"})]})]}),(0,Ue.jsx)(Ni,{variant:"contained",onClick:async()=>{if(P){p(!0),m(null);try{const e=""===j?null:j;await(async(e,t)=>{console.log(`[Service] Setting default stage for business ${e} to: ${t}`);const n=await fetch(`${Qi.BASE_URL}/businesses/${e}/default-stage`,{method:"PUT",credentials:"include",headers:rl(),body:JSON.stringify({stage_id:t})});return Ku(n)})(P,e),o((t=>({...t,first_stage_id:e}))),R("Default starting stage updated successfully!","success")}catch(e){console.error("Error saving default stage:",e),m(`Failed to save default stage: ${e.message}`),R(`Error saving default stage: ${e.message}`,"error")}finally{p(!1)}}},disabled:d||c||j===(n.first_stage_id||""),sx:{mt:2},children:d?(0,Ue.jsx)(Xi,{size:24}):"Save Default Stage"})]}),(0,Ue.jsx)("hr",{}),(0,Ue.jsx)(ku,{agents:l,isLoading:c,isSaving:d,businessId:P,onEditAgent:e=>{w(e),x(!0)},onDeleteAgent:async e=>{if(window.confirm("Are you sure you want to delete this agent?")){u(!0);try{await wu(P,e),s((t=>t.filter((t=>t.agent_id!==e)))),R("Agent deleted successfully","success")}catch(f){console.error("Error deleting agent:",f),R(`Error deleting agent: ${f.message}`,"error")}finally{u(!1)}}},onNavigateToStages:$,onAddAgent:()=>{w(null),x(!0)},handleSnackbarOpen:R}),(0,Ue.jsxs)(Zc,{open:b,onClose:L,fullWidth:!0,maxWidth:"sm",children:[(0,Ue.jsx)(ou,{children:A?"Edit Agent":"Add New Agent"}),(0,Ue.jsxs)(su,{children:[(0,Ue.jsx)(Qa,{autoFocus:!0,margin:"dense",name:"agent_name",label:"Agent Name",type:"text",fullWidth:!0,variant:"standard",value:A?A.agent_name:S.agent_name,onChange:z,required:!0,disabled:d}),(0,Ue.jsx)(Qa,{margin:"dense",name:"agent_description",label:"Agent Description",type:"text",fullWidth:!0,variant:"standard",multiline:!0,rows:3,value:A?A.agent_description:S.agent_description,onChange:z,disabled:d})]}),(0,Ue.jsxs)(pu,{children:[(0,Ue.jsx)(Ni,{onClick:L,disabled:d,children:"Cancel"}),(0,Ue.jsx)(Ni,{onClick:async e=>{var t;e.preventDefault();const n=A||S;if(null!==(t=n.agent_name)&&void 0!==t&&t.trim()){p(!0);try{let e;A?(e=await Au(A.agent_id,n),s((t=>t.map((t=>t.agent_id===e.agent_id?e:t))))):(e=await xu(n),s((t=>[...t,e]))),R(A?"Agent updated":"Agent created","success"),L()}catch(f){console.error("Error saving agent:",f),R(`Error saving agent: ${f.message}`,"error")}finally{p(!1)}}else R("Agent name cannot be empty","warning")},variant:"contained",disabled:d||!(null!==(e=(A||S).agent_name)&&void 0!==e&&e.trim()),children:d?(0,Ue.jsx)(Xi,{size:24}):A?"Save Changes":"Create Agent"})]})]})]}),(0,Ue.jsx)(Uu,{open:v.open,autoHideDuration:6e3,onClose:I,anchorOrigin:{vertical:"bottom",horizontal:"center"},children:(0,Ue.jsx)($l,{onClose:I,severity:v.severity,sx:{width:"100%"},children:v.message})})]}):(0,Ue.jsx)(xt,{children:(0,Ue.jsx)($l,{severity:"info",sx:{mt:2},children:"No business data loaded."})}):(0,Ue.jsxs)(xt,{children:[(0,Ue.jsx)($l,{severity:"warning",sx:{mt:2},children:"Business ID not found. Please log in or configure your application."}),(0,Ue.jsx)(Ni,{onClick:()=>t("/login"),sx:{mt:1},children:"Go to Login"})]})};var Yu=n(9751);const Ju=r.createContext();function Zu(e){return(0,Ye.Ay)("MuiGrid",e)}const ed=["auto",!0,1,2,3,4,5,6,7,8,9,10,11,12],td=(0,qe.A)("MuiGrid",["root","container","item","zeroMinWidth",...[0,1,2,3,4,5,6,7,8,9,10].map((e=>`spacing-xs-${e}`)),...["column-reverse","column","row-reverse","row"].map((e=>`direction-xs-${e}`)),...["nowrap","wrap-reverse","wrap"].map((e=>`wrap-xs-${e}`)),...ed.map((e=>`grid-xs-${e}`)),...ed.map((e=>`grid-sm-${e}`)),...ed.map((e=>`grid-md-${e}`)),...ed.map((e=>`grid-lg-${e}`)),...ed.map((e=>`grid-xl-${e}`))]),nd=["className","columns","columnSpacing","component","container","direction","item","rowSpacing","spacing","wrap","zeroMinWidth"];function rd(e){const t=parseFloat(e);return`${t}${String(e).replace(String(t),"")||"px"}`}function od(e){let{breakpoints:t,values:n}=e,r="";Object.keys(n).forEach((e=>{""===r&&0!==n[e]&&(r=e)}));const o=Object.keys(t).sort(((e,n)=>t[e]-t[n]));return o.slice(0,o.indexOf(r))}const ad=(0,yt.Ay)("div",{name:"MuiGrid",slot:"Root",overridesResolver:(e,t)=>{const{ownerState:n}=e,{container:r,direction:o,item:a,spacing:i,wrap:l,zeroMinWidth:s,breakpoints:c}=n;let u=[];r&&(u=function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!e||e<=0)return[];if("string"===typeof e&&!Number.isNaN(Number(e))||"number"===typeof e)return[n[`spacing-xs-${String(e)}`]];const r=[];return t.forEach((t=>{const o=e[t];Number(o)>0&&r.push(n[`spacing-${t}-${String(o)}`])})),r}(i,c,t));const d=[];return c.forEach((e=>{const r=n[e];r&&d.push(t[`grid-${e}-${String(r)}`])})),[t.root,r&&t.container,a&&t.item,s&&t.zeroMinWidth,...u,"row"!==o&&t[`direction-xs-${String(o)}`],"wrap"!==l&&t[`wrap-xs-${String(l)}`],...d]}})((e=>{let{ownerState:t}=e;return(0,Me.A)({boxSizing:"border-box"},t.container&&{display:"flex",flexWrap:"wrap",width:"100%"},t.item&&{margin:0},t.zeroMinWidth&&{minWidth:0},"wrap"!==t.wrap&&{flexWrap:t.wrap})}),(function(e){let{theme:t,ownerState:n}=e;const r=(0,Yu.kW)({values:n.direction,breakpoints:t.breakpoints.values});return(0,Yu.NI)({theme:t},r,(e=>{const t={flexDirection:e};return 0===e.indexOf("column")&&(t[`& > .${td.item}`]={maxWidth:"none"}),t}))}),(function(e){let{theme:t,ownerState:n}=e;const{container:r,rowSpacing:o}=n;let a={};if(r&&0!==o){const e=(0,Yu.kW)({values:o,breakpoints:t.breakpoints.values});let n;"object"===typeof e&&(n=od({breakpoints:t.breakpoints.values,values:e})),a=(0,Yu.NI)({theme:t},e,((e,r)=>{var o;const a=t.spacing(e);return"0px"!==a?{marginTop:`-${rd(a)}`,[`& > .${td.item}`]:{paddingTop:rd(a)}}:null!=(o=n)&&o.includes(r)?{}:{marginTop:0,[`& > .${td.item}`]:{paddingTop:0}}}))}return a}),(function(e){let{theme:t,ownerState:n}=e;const{container:r,columnSpacing:o}=n;let a={};if(r&&0!==o){const e=(0,Yu.kW)({values:o,breakpoints:t.breakpoints.values});let n;"object"===typeof e&&(n=od({breakpoints:t.breakpoints.values,values:e})),a=(0,Yu.NI)({theme:t},e,((e,r)=>{var o;const a=t.spacing(e);return"0px"!==a?{width:`calc(100% + ${rd(a)})`,marginLeft:`-${rd(a)}`,[`& > .${td.item}`]:{paddingLeft:rd(a)}}:null!=(o=n)&&o.includes(r)?{}:{width:"100%",marginLeft:0,[`& > .${td.item}`]:{paddingLeft:0}}}))}return a}),(function(e){let t,{theme:n,ownerState:r}=e;return n.breakpoints.keys.reduce(((e,o)=>{let a={};if(r[o]&&(t=r[o]),!t)return e;if(!0===t)a={flexBasis:0,flexGrow:1,maxWidth:"100%"};else if("auto"===t)a={flexBasis:"auto",flexGrow:0,flexShrink:0,maxWidth:"none",width:"auto"};else{const i=(0,Yu.kW)({values:r.columns,breakpoints:n.breakpoints.values}),l="object"===typeof i?i[o]:i;if(void 0===l||null===l)return e;const s=Math.round(t/l*1e8)/1e6+"%";let c={};if(r.container&&r.item&&0!==r.columnSpacing){const e=n.spacing(r.columnSpacing);if("0px"!==e){const t=`calc(${s} + ${rd(e)})`;c={flexBasis:t,maxWidth:t}}}a=(0,Me.A)({flexBasis:s,flexGrow:0,maxWidth:s},c)}return 0===n.breakpoints.values[o]?Object.assign(e,a):e[n.breakpoints.up(o)]=a,e}),{})}));const id=e=>{const{classes:t,container:n,direction:r,item:o,spacing:a,wrap:i,zeroMinWidth:l,breakpoints:s}=e;let c=[];n&&(c=function(e,t){if(!e||e<=0)return[];if("string"===typeof e&&!Number.isNaN(Number(e))||"number"===typeof e)return[`spacing-xs-${String(e)}`];const n=[];return t.forEach((t=>{const r=e[t];if(Number(r)>0){const e=`spacing-${t}-${String(r)}`;n.push(e)}})),n}(a,s));const u=[];s.forEach((t=>{const n=e[t];n&&u.push(`grid-${t}-${String(n)}`)}));const d={root:["root",n&&"container",o&&"item",l&&"zeroMinWidth",...c,"row"!==r&&`direction-xs-${String(r)}`,"wrap"!==i&&`wrap-xs-${String(i)}`,...u]};return(0,Je.A)(d,Zu,t)};const ld=r.forwardRef((function(e,t){const n=(0,bt.A)({props:e,name:"MuiGrid"}),{breakpoints:o}=mo(),a=(0,Be.A)(n),{className:i,columns:l,columnSpacing:s,component:c="div",container:u=!1,direction:d="row",item:p=!1,rowSpacing:f,spacing:m=0,wrap:h="wrap",zeroMinWidth:g=!1}=a,v=(0,Le.A)(a,nd),y=f||m,b=s||m,x=r.useContext(Ju),A=u?l||12:x,w={},S=(0,Me.A)({},v);o.keys.forEach((e=>{null!=v[e]&&(w[e]=v[e],delete S[e])}));const k=(0,Me.A)({},a,{columns:A,container:u,direction:d,item:p,rowSpacing:y,columnSpacing:b,wrap:h,zeroMinWidth:g,spacing:m},w,{breakpoints:o.keys}),C=id(k);return(0,Ue.jsx)(Ju.Provider,{value:A,children:(0,Ue.jsx)(ad,(0,Me.A)({ownerState:k,className:(0,ze.A)(C.root,i),as:c,ref:t},S))})}));var sd=n(2505),cd=n(3608),ud=n(977),dd=n(4329),pd=n(9380),fd=n(7260),md=n(7412);const hd=()=>{const{businessId:e,agentId:t}=te(),n=J(),o=ee(),a=new URLSearchParams(n.search),i=a.get("business_id"),l=a.get("agent_id"),s=e||i||localStorage.getItem("businessId"),c=t||l||localStorage.getItem("agentId"),[u,d]=(0,r.useState)([]),[p,f]=(0,r.useState)(null),[m,h]=(0,r.useState)(!0),[g,v]=(0,r.useState)(""),[y,b]=(0,r.useState)(""),[x,A]=(0,r.useState)(!1),[w,S]=(0,r.useState)(!1),[k,C]=(0,r.useState)(null),[E,j]=(0,r.useState)(""),[_,P]=(0,r.useState)(""),[R,I]=(0,r.useState)("conversation"),[T,$]=(0,r.useState)({stage_selection:[],data_extraction:[],response_generation:[]}),[O,N]=(0,r.useState)({stage_selection:"",data_extraction:"",response_generation:""}),[M,L]=(0,r.useState)({stage_selection:"",data_extraction:"",response_generation:""}),[z,D]=(0,r.useState)({open:!1,message:"",severity:"success"}),[F,B]=(0,r.useState)(""),[W,U]=(0,r.useState)(!1),{agents:V,isLoading:H,error:K,refreshAgents:q}=Su(),[G,X]=(0,r.useState)("");(0,r.useEffect)((()=>{s&&localStorage.setItem("businessId",s),c&&localStorage.setItem("agentId",c)}),[s,c]),(0,r.useEffect)((()=>{console.log("StageManager - Current params:",{paramBusinessId:e,paramAgentId:t,queryBusinessId:i,queryAgentId:l,resolvedBusinessId:s,resolvedAgentId:c})}),[e,t,i,l,s,c]);const Q=(e,t)=>{const n=e.target.value;console.log(`Template changed for ${t}: ${n}`),N((e=>({...e,[t]:n})))},Y=(0,r.useCallback)((async()=>{if(!s)return console.error("No business ID available for fetching stages"),void h(!1);h(!0);try{console.log("Fetching stages for business:",s);const e=await Xu(s);console.log("Fetched stages:",e),d(e)}catch(e){console.error("Error fetching stages:",e),ne(e.message,"error")}finally{h(!1)}}),[s]),Z=(0,r.useCallback)((async()=>{if(s&&c)try{const e=await fetch(`/agents/${c}?business_id=${s}`,{credentials:"include"});if(!e.ok)throw new Error("Failed to fetch agent details");const t=await e.json();B(t.agent_name||`Agent ${c}`)}catch(e){console.error("Error fetching agent details:",e),B(`Agent ${c}`)}}),[s,c]);(0,r.useEffect)((()=>{if(s){const e=async()=>{h(!0),v("");try{await(async()=>{try{const e=rl(),t=await fetch(`/api/templates/?business_id=${s}`,{headers:e,credentials:"include"});if(!t.ok)throw console.error("Template fetch error:",t.status,t.statusText),new Error("Failed to fetch templates");const n=await t.json();console.log("Fetched templates:",n);const r={stage_selection:[],data_extraction:[],response_generation:[]};n.forEach((e=>{const t={...e,isDefault:e.template_type.startsWith("default_")},n={stage_selection:"stage_selection",default_stage_selection:"stage_selection",data_extraction:"data_extraction",default_data_extraction:"data_extraction",response_generation:"response_generation",default_response_generation:"response_generation"}[e.template_type];n&&r[n].push(t)})),Object.keys(r).forEach((e=>{r[e].sort(((e,t)=>e.isDefault!==t.isDefault?e.isDefault?-1:1:e.template_name.localeCompare(t.template_name)))})),$(r);const o={stage_selection:"",data_extraction:"",response_generation:""};Object.keys(r).forEach((e=>{const t=r[e].find((e=>e.isDefault));t&&(o[e]=t.template_id)})),L(o),x&&N(o)}catch(g){console.error("Error fetching templates:",g),v("Failed to load templates. Please try again.")}})(),await Y(),p&&p.agent_id?X(p.agent_id):X("")}catch(e){console.error("Error in initial data load:",e),ne("Failed to load initial data: "+e.message,"error")}finally{h(!1)}};e()}}),[s]),(0,r.useEffect)((()=>{c&&Z()}),[c,Z]);const ne=function(e){D({open:!0,message:e,severity:arguments.length>1&&void 0!==arguments[1]?arguments[1]:"success"})},re=()=>{D({...z,open:!1})},oe=async(e,t)=>{try{const n=u.findIndex((t=>t.stage_id===e));if(-1===n)return;if(0===n&&"up"===t||n===u.length-1&&"down"===t)return;const r="up"===t?n-1:n+1,o=[...u],a={...o[n]},i={...o[r]};a.stage_config={...a.stage_config,order:r+1},i.stage_config={...i.stage_config,order:n+1};const l=fetch(`/stages/${a.stage_id}`,{method:"PUT",headers:{"Content-Type":"application/json"},credentials:"include",body:JSON.stringify(a)}),s=fetch(`/stages/${i.stage_id}`,{method:"PUT",headers:{"Content-Type":"application/json"},credentials:"include",body:JSON.stringify(i)});await Promise.all([l,s]),await Y(),ne("Stage order updated","success")}catch(n){ne(n.message,"error")}};return(0,Ue.jsxs)(xt,{maxWidth:"lg",sx:{mt:4,mb:4},children:[(0,Ue.jsxs)(Xt,{sx:{p:3,mb:4},children:[(0,Ue.jsxs)(Qe,{sx:{display:"flex",alignItems:"center",mb:2},children:[(0,Ue.jsx)(Al,{onClick:()=>{o("/business")},sx:{mr:1},children:(0,Ue.jsx)(Vu.A,{})}),(0,Ue.jsxs)(un,{variant:"h5",component:"h1",gutterBottom:!0,sx:{flexGrow:1},children:["Stage Manager",s&&(0,Ue.jsxs)(un,{variant:"subtitle1",component:"span",color:"text.secondary",children:[` - Business ID: ${s}`,c&&` - Agent: ${F||c}`]})]}),(0,Ue.jsx)(Ni,{variant:"contained",color:"primary",startIcon:(0,Ue.jsx)(sd.A,{}),onClick:()=>{j(""),P(""),I("conversation"),N(M),X(c||""),A(!0)},sx:{mr:1},children:"Create Stage"}),(0,Ue.jsx)(Ni,{variant:"outlined",color:"secondary",startIcon:(0,Ue.jsx)(pd.A,{}),onClick:()=>o("/templates"),children:"Manage Templates"})]}),(0,Ue.jsx)(Vc,{sx:{mb:3}}),g&&(0,Ue.jsx)($l,{severity:"error",sx:{mb:2},onClose:()=>v(""),children:g}),y&&(0,Ue.jsx)($l,{severity:"success",sx:{mb:2},onClose:()=>b(""),children:y}),m?(0,Ue.jsx)(Qe,{sx:{display:"flex",justifyContent:"center",p:4},children:(0,Ue.jsx)(Xi,{})}):(0,Ue.jsx)(Ue.Fragment,{children:0===u.length?(0,Ue.jsx)($l,{severity:"info",children:"No stages found. Create your first stage to get started."}):(0,Ue.jsx)(Ur,{sx:{bgcolor:"background.paper"},children:[...u].sort(((e,t)=>{var n,r;return((null===(n=e.stage_config)||void 0===n?void 0:n.order)||1/0)-((null===(r=t.stage_config)||void 0===r?void 0:r.order)||1/0)})).map((e=>(0,Ue.jsxs)(Kl,{sx:{mb:1,bgcolor:"background.paper"},children:[(0,Ue.jsx)(Lc,{primary:e.stage_name,secondary:(0,Ue.jsxs)(Ue.Fragment,{children:[(0,Ue.jsx)(un,{component:"span",variant:"body2",color:"text.primary",children:e.stage_description||"No description"}),e.stage_config&&e.stage_config.order&&` \u2022 Order: ${e.stage_config.order}`]})}),(0,Ue.jsxs)(Bl,{children:[(0,Ue.jsx)(Tc,{title:"Move Up",children:(0,Ue.jsx)(Al,{edge:"end","aria-label":"move-up",onClick:t=>{t.stopPropagation(),oe(e.stage_id,"up")},disabled:0===u.indexOf(e),children:(0,Ue.jsx)(cd.A,{})})}),(0,Ue.jsx)(Tc,{title:"Move Down",children:(0,Ue.jsx)(Al,{edge:"end","aria-label":"move-down",onClick:t=>{t.stopPropagation(),oe(e.stage_id,"down")},disabled:u.indexOf(e)===u.length-1,children:(0,Ue.jsx)(ud.A,{})})}),(0,Ue.jsx)(Tc,{title:"View Stage",children:(0,Ue.jsx)(Al,{edge:"end","aria-label":"view",onClick:t=>{t.stopPropagation(),(e=>{let t=`/stages/${e}?business_id=${s}`;c&&(t+=`&agent_id=${c}`),o(t)})(e.stage_id)},children:(0,Ue.jsx)(fd.A,{})})}),(0,Ue.jsx)(Tc,{title:"Delete Stage",children:(0,Ue.jsx)(Al,{edge:"end","aria-label":"delete",onClick:t=>{t.stopPropagation(),C(e),S(!0)},children:(0,Ue.jsx)(hu.A,{})})})]})]},e.stage_id)))})})]}),(0,Ue.jsxs)(Zc,{open:x,onClose:()=>!W&&A(!1),maxWidth:"md",fullWidth:!0,children:[(0,Ue.jsx)(ou,{children:p?"Edit Stage":"Create New Stage"}),(0,Ue.jsx)(su,{children:(0,Ue.jsxs)(ld,{container:!0,spacing:2,children:[console.log("Dialog rendering with state:",{selectedTemplates:O,availableTemplates:T,defaultTemplates:M,templatesInfo:{stageSelectionCount:T.stage_selection.length,dataExtractionCount:T.data_extraction.length,responseGenerationCount:T.response_generation.length}}),(0,Ue.jsx)(ld,{item:!0,xs:12,children:(0,Ue.jsx)(Qa,{fullWidth:!0,label:"Stage Name",value:E,onChange:e=>j(e.target.value),required:!0})}),(0,Ue.jsx)(ld,{item:!0,xs:12,children:(0,Ue.jsx)(Qa,{fullWidth:!0,multiline:!0,rows:2,label:"Stage Description",value:_,onChange:e=>P(e.target.value)})}),(0,Ue.jsx)(ld,{item:!0,xs:12,children:(0,Ue.jsxs)(kr,{fullWidth:!0,children:[(0,Ue.jsx)(br,{children:"Stage Selection Template"}),(0,Ue.jsxs)(Ha,{fullWidth:!0,value:O.stage_selection,onChange:e=>Q(e,"stage_selection"),children:[(0,Ue.jsx)(Ru,{value:"",children:(0,Ue.jsx)("em",{children:"None"})}),T.stage_selection.map((e=>(0,Ue.jsx)(Ru,{value:e.template_id,sx:e.isDefault?{backgroundColor:"rgba(245, 0, 87, 0.04)","&:hover":{backgroundColor:"rgba(245, 0, 87, 0.08)"}}:{},children:e.isDefault?(0,Ue.jsxs)(Qe,{sx:{display:"flex",alignItems:"center"},children:[(0,Ue.jsx)(md.A,{sx:{mr:1,color:"secondary.main",fontSize:"1rem"}}),e.template_name]}):e.template_name},e.template_id)))]}),(0,Ue.jsx)(Rr,{children:"Template for determining if this stage should handle the message"})]})}),(0,Ue.jsx)(ld,{item:!0,xs:12,children:(0,Ue.jsxs)(kr,{fullWidth:!0,children:[(0,Ue.jsx)(br,{children:"Data Extraction Template"}),(0,Ue.jsxs)(Ha,{fullWidth:!0,value:O.data_extraction,onChange:e=>Q(e,"data_extraction"),children:[(0,Ue.jsx)(Ru,{value:"",children:(0,Ue.jsx)("em",{children:"None"})}),T.data_extraction.map((e=>(0,Ue.jsx)(Ru,{value:e.template_id,sx:e.isDefault?{backgroundColor:"rgba(245, 0, 87, 0.04)","&:hover":{backgroundColor:"rgba(245, 0, 87, 0.08)"}}:{},children:e.isDefault?(0,Ue.jsxs)(Qe,{sx:{display:"flex",alignItems:"center"},children:[(0,Ue.jsx)(md.A,{sx:{mr:1,color:"secondary.main",fontSize:"1rem"}}),e.template_name]}):e.template_name},e.template_id)))]}),(0,Ue.jsx)(Rr,{children:"Template for extracting data from the message"})]})}),(0,Ue.jsx)(ld,{item:!0,xs:12,children:(0,Ue.jsxs)(kr,{fullWidth:!0,children:[(0,Ue.jsx)(br,{children:"Response Generation Template"}),(0,Ue.jsxs)(Ha,{fullWidth:!0,value:O.response_generation,onChange:e=>Q(e,"response_generation"),children:[(0,Ue.jsx)(Ru,{value:"",children:(0,Ue.jsx)("em",{children:"None"})}),T.response_generation.map((e=>(0,Ue.jsx)(Ru,{value:e.template_id,sx:e.isDefault?{backgroundColor:"rgba(245, 0, 87, 0.04)","&:hover":{backgroundColor:"rgba(245, 0, 87, 0.08)"}}:{},children:e.isDefault?(0,Ue.jsxs)(Qe,{sx:{display:"flex",alignItems:"center"},children:[(0,Ue.jsx)(md.A,{sx:{mr:1,color:"secondary.main",fontSize:"1rem"}}),e.template_name]}):e.template_name},e.template_id)))]}),(0,Ue.jsx)(Rr,{children:"Template for generating responses"})]})}),(0,Ue.jsxs)(kr,{fullWidth:!0,margin:"normal",children:[(0,Ue.jsx)(br,{id:"agent-select-label",children:"Agent"}),(0,Ue.jsxs)(Ha,{labelId:"agent-select-label",id:"agent-select",value:G,label:"Agent",onChange:e=>{X(e.target.value)},disabled:W,children:[(0,Ue.jsx)(Ru,{value:"",children:(0,Ue.jsx)("em",{children:"None"})}),V.map((e=>(0,Ue.jsx)(Ru,{value:e.agent_id,children:e.agent_name},e.agent_id)))]}),(0,Ue.jsx)(Rr,{children:"Select an agent to associate with this stage"})]})]})}),(0,Ue.jsxs)(pu,{children:[(0,Ue.jsx)(Ni,{onClick:()=>!W&&A(!1),children:"Cancel"}),(0,Ue.jsx)(Ni,{onClick:async()=>{if(E.trim()){U(!0),v("");try{const e={business_id:s,agent_id:G,stage_name:E.trim(),stage_description:_.trim(),stage_type:R,stage_selection_template_id:O.stage_selection||null,data_extraction_template_id:O.data_extraction||null,response_generation_template_id:O.response_generation||null};console.log("Creating stage with data:",e);const t=await fetch("/stages",{method:"POST",headers:{"Content-Type":"application/json",Accept:"application/json",Authorization:`Bearer ${localStorage.getItem("businessApiKey")}`},credentials:"include",body:JSON.stringify(e)});if(!t.ok){const e=await t.json();throw new Error(e.error||"Failed to create stage")}const n=await t.json();console.log("Stage created successfully:",n),ne("Stage created successfully","success"),j(""),Y(),A(!1)}catch(g){console.error("Error creating stage:",g),ne(g.message,"error")}finally{U(!1)}}else v("Stage name is required")},variant:"contained",color:"primary",disabled:!E.trim(),startIcon:(0,Ue.jsx)(dd.A,{}),children:"Create & Save"})]})]}),(0,Ue.jsxs)(Zc,{open:w,onClose:()=>S(!1),children:[(0,Ue.jsx)(ou,{children:"Confirm Delete"}),(0,Ue.jsx)(su,{children:(0,Ue.jsxs)(un,{children:['Are you sure you want to delete the stage "',null===k||void 0===k?void 0:k.stage_name,'"? This action cannot be undone.']})}),(0,Ue.jsxs)(pu,{children:[(0,Ue.jsx)(Ni,{onClick:()=>S(!1),children:"Cancel"}),(0,Ue.jsx)(Ni,{onClick:async()=>{if(k&&s)try{await(async(e,t)=>{if(!e||!t)throw new Error("Missing required parameters: stageId and businessId");console.log(`[Service] Deleting stage ${e} for business ${t}`);const n=rl();console.log("[Service] Using headers:",n);const r=await fetch(`/stages/${e}?business_id=${t}`,{method:"DELETE",credentials:"include",headers:n});return console.log(`[Service] Response status: ${r.status}`),Gu(r)})(k.stage_id,s),await Y(),S(!1),ne("Stage deleted successfully","success")}catch(e){console.error("Error deleting stage:",e),ne(e.message,"error")}},variant:"contained",color:"error",children:"Delete"})]})]}),(0,Ue.jsx)(Uu,{open:z.open,autoHideDuration:6e3,onClose:re,children:(0,Ue.jsx)($l,{severity:z.severity,onClose:re,children:z.message})})]})};function gd(e){return(0,Ye.Ay)("MuiListSubheader",e)}(0,qe.A)("MuiListSubheader",["root","colorPrimary","colorInherit","gutters","inset","sticky"]);const vd=["className","color","component","disableGutters","disableSticky","inset"],yd=(0,yt.Ay)("li",{name:"MuiListSubheader",slot:"Root",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[t.root,"default"!==n.color&&t[`color${(0,vt.A)(n.color)}`],!n.disableGutters&&t.gutters,n.inset&&t.inset,!n.disableSticky&&t.sticky]}})((e=>{let{theme:t,ownerState:n}=e;return(0,Me.A)({boxSizing:"border-box",lineHeight:"48px",listStyle:"none",color:(t.vars||t).palette.text.secondary,fontFamily:t.typography.fontFamily,fontWeight:t.typography.fontWeightMedium,fontSize:t.typography.pxToRem(14)},"primary"===n.color&&{color:(t.vars||t).palette.primary.main},"inherit"===n.color&&{color:"inherit"},!n.disableGutters&&{paddingLeft:16,paddingRight:16},n.inset&&{paddingLeft:72},!n.disableSticky&&{position:"sticky",top:0,zIndex:1,backgroundColor:(t.vars||t).palette.background.paper})})),bd=r.forwardRef((function(e,t){const n=(0,bt.A)({props:e,name:"MuiListSubheader"}),{className:r,color:o="default",component:a="li",disableGutters:i=!1,disableSticky:l=!1,inset:s=!1}=n,c=(0,Le.A)(n,vd),u=(0,Me.A)({},n,{color:o,component:a,disableGutters:i,disableSticky:l,inset:s}),d=(e=>{const{classes:t,color:n,disableGutters:r,inset:o,disableSticky:a}=e,i={root:["root","default"!==n&&`color${(0,vt.A)(n)}`,!r&&"gutters",o&&"inset",!a&&"sticky"]};return(0,Je.A)(i,gd,t)})(u);return(0,Ue.jsx)(yd,(0,Me.A)({as:a,className:(0,ze.A)(d.root,r),ref:t,ownerState:u},c))}));bd.muiSkipListHighlight=!0;const xd=bd,Ad=(0,Ma.A)((0,Ue.jsx)("path",{d:"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z"}),"Cancel");function wd(e){return(0,Ye.Ay)("MuiChip",e)}const Sd=(0,qe.A)("MuiChip",["root","sizeSmall","sizeMedium","colorError","colorInfo","colorPrimary","colorSecondary","colorSuccess","colorWarning","disabled","clickable","clickableColorPrimary","clickableColorSecondary","deletable","deletableColorPrimary","deletableColorSecondary","outlined","filled","outlinedPrimary","outlinedSecondary","filledPrimary","filledSecondary","avatar","avatarSmall","avatarMedium","avatarColorPrimary","avatarColorSecondary","icon","iconSmall","iconMedium","iconColorPrimary","iconColorSecondary","label","labelSmall","labelMedium","deleteIcon","deleteIconSmall","deleteIconMedium","deleteIconColorPrimary","deleteIconColorSecondary","deleteIconOutlinedColorPrimary","deleteIconOutlinedColorSecondary","deleteIconFilledColorPrimary","deleteIconFilledColorSecondary","focusVisible"]),kd=["avatar","className","clickable","color","component","deleteIcon","disabled","icon","label","onClick","onDelete","onKeyDown","onKeyUp","size","variant","tabIndex","skipFocusWhenDisabled"],Cd=(0,yt.Ay)("div",{name:"MuiChip",slot:"Root",overridesResolver:(e,t)=>{const{ownerState:n}=e,{color:r,iconColor:o,clickable:a,onDelete:i,size:l,variant:s}=n;return[{[`& .${Sd.avatar}`]:t.avatar},{[`& .${Sd.avatar}`]:t[`avatar${(0,vt.A)(l)}`]},{[`& .${Sd.avatar}`]:t[`avatarColor${(0,vt.A)(r)}`]},{[`& .${Sd.icon}`]:t.icon},{[`& .${Sd.icon}`]:t[`icon${(0,vt.A)(l)}`]},{[`& .${Sd.icon}`]:t[`iconColor${(0,vt.A)(o)}`]},{[`& .${Sd.deleteIcon}`]:t.deleteIcon},{[`& .${Sd.deleteIcon}`]:t[`deleteIcon${(0,vt.A)(l)}`]},{[`& .${Sd.deleteIcon}`]:t[`deleteIconColor${(0,vt.A)(r)}`]},{[`& .${Sd.deleteIcon}`]:t[`deleteIcon${(0,vt.A)(s)}Color${(0,vt.A)(r)}`]},t.root,t[`size${(0,vt.A)(l)}`],t[`color${(0,vt.A)(r)}`],a&&t.clickable,a&&"default"!==r&&t[`clickableColor${(0,vt.A)(r)})`],i&&t.deletable,i&&"default"!==r&&t[`deletableColor${(0,vt.A)(r)}`],t[s],t[`${s}${(0,vt.A)(r)}`]]}})((e=>{let{theme:t,ownerState:n}=e;const r="light"===t.palette.mode?t.palette.grey[700]:t.palette.grey[300];return(0,Me.A)({maxWidth:"100%",fontFamily:t.typography.fontFamily,fontSize:t.typography.pxToRem(13),display:"inline-flex",alignItems:"center",justifyContent:"center",height:32,color:(t.vars||t).palette.text.primary,backgroundColor:(t.vars||t).palette.action.selected,borderRadius:16,whiteSpace:"nowrap",transition:t.transitions.create(["background-color","box-shadow"]),cursor:"unset",outline:0,textDecoration:"none",border:0,padding:0,verticalAlign:"middle",boxSizing:"border-box",[`&.${Sd.disabled}`]:{opacity:(t.vars||t).palette.action.disabledOpacity,pointerEvents:"none"},[`& .${Sd.avatar}`]:{marginLeft:5,marginRight:-6,width:24,height:24,color:t.vars?t.vars.palette.Chip.defaultAvatarColor:r,fontSize:t.typography.pxToRem(12)},[`& .${Sd.avatarColorPrimary}`]:{color:(t.vars||t).palette.primary.contrastText,backgroundColor:(t.vars||t).palette.primary.dark},[`& .${Sd.avatarColorSecondary}`]:{color:(t.vars||t).palette.secondary.contrastText,backgroundColor:(t.vars||t).palette.secondary.dark},[`& .${Sd.avatarSmall}`]:{marginLeft:4,marginRight:-4,width:18,height:18,fontSize:t.typography.pxToRem(10)},[`& .${Sd.icon}`]:(0,Me.A)({marginLeft:5,marginRight:-6},"small"===n.size&&{fontSize:18,marginLeft:4,marginRight:-4},n.iconColor===n.color&&(0,Me.A)({color:t.vars?t.vars.palette.Chip.defaultIconColor:r},"default"!==n.color&&{color:"inherit"})),[`& .${Sd.deleteIcon}`]:(0,Me.A)({WebkitTapHighlightColor:"transparent",color:t.vars?`rgba(${t.vars.palette.text.primaryChannel} / 0.26)`:(0,Vt.X4)(t.palette.text.primary,.26),fontSize:22,cursor:"pointer",margin:"0 5px 0 -6px","&:hover":{color:t.vars?`rgba(${t.vars.palette.text.primaryChannel} / 0.4)`:(0,Vt.X4)(t.palette.text.primary,.4)}},"small"===n.size&&{fontSize:16,marginRight:4,marginLeft:-4},"default"!==n.color&&{color:t.vars?`rgba(${t.vars.palette[n.color].contrastTextChannel} / 0.7)`:(0,Vt.X4)(t.palette[n.color].contrastText,.7),"&:hover, &:active":{color:(t.vars||t).palette[n.color].contrastText}})},"small"===n.size&&{height:24},"default"!==n.color&&{backgroundColor:(t.vars||t).palette[n.color].main,color:(t.vars||t).palette[n.color].contrastText},n.onDelete&&{[`&.${Sd.focusVisible}`]:{backgroundColor:t.vars?`rgba(${t.vars.palette.action.selectedChannel} / calc(${t.vars.palette.action.selectedOpacity} + ${t.vars.palette.action.focusOpacity}))`:(0,Vt.X4)(t.palette.action.selected,t.palette.action.selectedOpacity+t.palette.action.focusOpacity)}},n.onDelete&&"default"!==n.color&&{[`&.${Sd.focusVisible}`]:{backgroundColor:(t.vars||t).palette[n.color].dark}})}),(e=>{let{theme:t,ownerState:n}=e;return(0,Me.A)({},n.clickable&&{userSelect:"none",WebkitTapHighlightColor:"transparent",cursor:"pointer","&:hover":{backgroundColor:t.vars?`rgba(${t.vars.palette.action.selectedChannel} / calc(${t.vars.palette.action.selectedOpacity} + ${t.vars.palette.action.hoverOpacity}))`:(0,Vt.X4)(t.palette.action.selected,t.palette.action.selectedOpacity+t.palette.action.hoverOpacity)},[`&.${Sd.focusVisible}`]:{backgroundColor:t.vars?`rgba(${t.vars.palette.action.selectedChannel} / calc(${t.vars.palette.action.selectedOpacity} + ${t.vars.palette.action.focusOpacity}))`:(0,Vt.X4)(t.palette.action.selected,t.palette.action.selectedOpacity+t.palette.action.focusOpacity)},"&:active":{boxShadow:(t.vars||t).shadows[1]}},n.clickable&&"default"!==n.color&&{[`&:hover, &.${Sd.focusVisible}`]:{backgroundColor:(t.vars||t).palette[n.color].dark}})}),(e=>{let{theme:t,ownerState:n}=e;return(0,Me.A)({},"outlined"===n.variant&&{backgroundColor:"transparent",border:t.vars?`1px solid ${t.vars.palette.Chip.defaultBorder}`:`1px solid ${"light"===t.palette.mode?t.palette.grey[400]:t.palette.grey[700]}`,[`&.${Sd.clickable}:hover`]:{backgroundColor:(t.vars||t).palette.action.hover},[`&.${Sd.focusVisible}`]:{backgroundColor:(t.vars||t).palette.action.focus},[`& .${Sd.avatar}`]:{marginLeft:4},[`& .${Sd.avatarSmall}`]:{marginLeft:2},[`& .${Sd.icon}`]:{marginLeft:4},[`& .${Sd.iconSmall}`]:{marginLeft:2},[`& .${Sd.deleteIcon}`]:{marginRight:5},[`& .${Sd.deleteIconSmall}`]:{marginRight:3}},"outlined"===n.variant&&"default"!==n.color&&{color:(t.vars||t).palette[n.color].main,border:`1px solid ${t.vars?`rgba(${t.vars.palette[n.color].mainChannel} / 0.7)`:(0,Vt.X4)(t.palette[n.color].main,.7)}`,[`&.${Sd.clickable}:hover`]:{backgroundColor:t.vars?`rgba(${t.vars.palette[n.color].mainChannel} / ${t.vars.palette.action.hoverOpacity})`:(0,Vt.X4)(t.palette[n.color].main,t.palette.action.hoverOpacity)},[`&.${Sd.focusVisible}`]:{backgroundColor:t.vars?`rgba(${t.vars.palette[n.color].mainChannel} / ${t.vars.palette.action.focusOpacity})`:(0,Vt.X4)(t.palette[n.color].main,t.palette.action.focusOpacity)},[`& .${Sd.deleteIcon}`]:{color:t.vars?`rgba(${t.vars.palette[n.color].mainChannel} / 0.7)`:(0,Vt.X4)(t.palette[n.color].main,.7),"&:hover, &:active":{color:(t.vars||t).palette[n.color].main}}})})),Ed=(0,yt.Ay)("span",{name:"MuiChip",slot:"Label",overridesResolver:(e,t)=>{const{ownerState:n}=e,{size:r}=n;return[t.label,t[`label${(0,vt.A)(r)}`]]}})((e=>{let{ownerState:t}=e;return(0,Me.A)({overflow:"hidden",textOverflow:"ellipsis",paddingLeft:12,paddingRight:12,whiteSpace:"nowrap"},"outlined"===t.variant&&{paddingLeft:11,paddingRight:11},"small"===t.size&&{paddingLeft:8,paddingRight:8},"small"===t.size&&"outlined"===t.variant&&{paddingLeft:7,paddingRight:7})}));function jd(e){return"Backspace"===e.key||"Delete"===e.key}const _d=r.forwardRef((function(e,t){const n=(0,bt.A)({props:e,name:"MuiChip"}),{avatar:o,className:a,clickable:i,color:l="default",component:s,deleteIcon:c,disabled:u=!1,icon:d,label:p,onClick:f,onDelete:m,onKeyDown:h,onKeyUp:g,size:v="medium",variant:y="filled",tabIndex:b,skipFocusWhenDisabled:x=!1}=n,A=(0,Le.A)(n,kd),w=r.useRef(null),S=(0,Cn.A)(w,t),k=e=>{e.stopPropagation(),m&&m(e)},C=!(!1===i||!f)||i,E=C||m?Ci:s||"div",j=(0,Me.A)({},n,{component:E,disabled:u,size:v,color:l,iconColor:r.isValidElement(d)&&d.props.color||l,onDelete:!!m,clickable:C,variant:y}),_=(e=>{const{classes:t,disabled:n,size:r,color:o,iconColor:a,onDelete:i,clickable:l,variant:s}=e,c={root:["root",s,n&&"disabled",`size${(0,vt.A)(r)}`,`color${(0,vt.A)(o)}`,l&&"clickable",l&&`clickableColor${(0,vt.A)(o)}`,i&&"deletable",i&&`deletableColor${(0,vt.A)(o)}`,`${s}${(0,vt.A)(o)}`],label:["label",`label${(0,vt.A)(r)}`],avatar:["avatar",`avatar${(0,vt.A)(r)}`,`avatarColor${(0,vt.A)(o)}`],icon:["icon",`icon${(0,vt.A)(r)}`,`iconColor${(0,vt.A)(a)}`],deleteIcon:["deleteIcon",`deleteIcon${(0,vt.A)(r)}`,`deleteIconColor${(0,vt.A)(o)}`,`deleteIcon${(0,vt.A)(s)}Color${(0,vt.A)(o)}`]};return(0,Je.A)(c,wd,t)})(j),P=E===Ci?(0,Me.A)({component:s||"div",focusVisibleClassName:_.focusVisible},m&&{disableRipple:!0}):{};let R=null;m&&(R=c&&r.isValidElement(c)?r.cloneElement(c,{className:(0,ze.A)(c.props.className,_.deleteIcon),onClick:k}):(0,Ue.jsx)(Ad,{className:(0,ze.A)(_.deleteIcon),onClick:k}));let I=null;o&&r.isValidElement(o)&&(I=r.cloneElement(o,{className:(0,ze.A)(_.avatar,o.props.className)}));let T=null;return d&&r.isValidElement(d)&&(T=r.cloneElement(d,{className:(0,ze.A)(_.icon,d.props.className)})),(0,Ue.jsxs)(Cd,(0,Me.A)({as:E,className:(0,ze.A)(_.root,a),disabled:!(!C||!u)||void 0,onClick:f,onKeyDown:e=>{e.currentTarget===e.target&&jd(e)&&e.preventDefault(),h&&h(e)},onKeyUp:e=>{e.currentTarget===e.target&&(m&&jd(e)?m(e):"Escape"===e.key&&w.current&&w.current.blur()),g&&g(e)},ref:S,tabIndex:x&&u?-1:b,ownerState:j},P,A,{children:[I||T,(0,Ue.jsx)(Ed,{className:(0,ze.A)(_.label),ownerState:j,children:p}),R]}))}));var Pd=n(5465);const Rd=()=>{const{templateId:e}=te(),t=ee(),n=J(),o=new URLSearchParams(n.search),a=o.get("business_id"),i=o.get("agent_id"),l=localStorage.getItem("businessId"),s=localStorage.getItem("businessApiKey"),c=localStorage.getItem("agentId"),[u,d]=(0,r.useState)({template_id:"new"===e?"":e,template_name:"",content:"",system_prompt:"",template_type:"stage_selection",variables:[],agent_id:""}),[p,f]=(0,r.useState)(a||l||""),[m,h]=(0,r.useState)(s||""),[g,v]=(0,r.useState)(i||c||""),[y,b]=(0,r.useState)(!p||!m),[x,A]=(0,r.useState)(!g),[w,S]=(0,r.useState)(!1),[k,C]=(0,r.useState)(""),[E,j]=(0,r.useState)(""),[_,P]=(0,r.useState)(null),[R,I]=(0,r.useState)(!1),[T,$]=(0,r.useState)({open:!1,message:"",severity:"success"}),O=[{value:"stage_selection",label:"Stage Selection",group:"Regular"},{value:"data_extraction",label:"Data Extraction",group:"Regular"},{value:"response_generation",label:"Response Generation",group:"Regular"},{value:"default_stage_selection",label:"Default Stage Selection",group:"Default"},{value:"default_data_extraction",label:"Default Data Extraction",group:"Default"},{value:"default_response_generation",label:"Default Response Generation",group:"Default"}],N=e=>{if(!e)return[];return(e.match(/\{([^}]+)\}/g)||[]).map((e=>e.slice(1,-1)))};(0,r.useEffect)((()=>{const e=N(u.content);d((t=>({...t,variables:e})))}),[u.content]),(0,r.useEffect)((()=>{g&&d((e=>({...e,agent_id:g})))}),[g]),(0,r.useEffect)((()=>{(async()=>{if("new"!==e){if(!e||"undefined"===e)return console.error("Invalid template ID:",e),M("Invalid template ID","error"),void t("/template-editor/new");if(!p)return M("Business ID is required to fetch template","error"),void b(!0);if(!m)return M("Business API Key is required","error"),void b(!0);S(!0);try{console.log(`Fetching template with ID: ${e}`);const t=await fetch(`/templates/${e}?business_id=${p}`,{method:"GET",headers:{"Content-Type":"application/json",Accept:"application/json",Authorization:`Bearer ${m}`},credentials:"include"});if(!t.ok){const e=await t.json().catch((()=>({})));throw new Error(e.error||e.message||"Failed to fetch template")}const n=await t.json();console.log("Fetched template:",n),d({template_id:n.template_id,template_name:n.template_name||"",content:n.content||"",system_prompt:n.system_prompt||"",template_type:n.template_type||"stage_selection",variables:N(n.content),agent_id:n.agent_id||""})}catch(n){console.error("Error fetching template:",n),M(n.message,"error"),t("/templates")}finally{S(!1)}}})()}),[e,p,m,t]);const M=function(e){$({open:!0,message:e,severity:arguments.length>1&&void 0!==arguments[1]?arguments[1]:"success"})},L=()=>{$((e=>({...e,open:!1})))};return(0,Ue.jsxs)(Xt,{sx:{p:3,mb:3,maxWidth:1200,mx:"auto"},children:[(0,Ue.jsxs)(Qe,{sx:{display:"flex",alignItems:"center",mb:3},children:[(0,Ue.jsx)(Al,{onClick:()=>{t("/templates")},sx:{mr:1},children:(0,Ue.jsx)(Vu.A,{})}),(0,Ue.jsx)(un,{variant:"h5",children:u.template_id&&"new"!==u.template_id?"Edit Template":"Create New Template"}),(0,Ue.jsx)(Qe,{sx:{flexGrow:1}}),(0,Ue.jsx)(Ni,{variant:"contained",color:"primary",onClick:async()=>{if(u.template_name&&u.content){S(!0);try{const n="new"===e?"POST":"PUT",r="new"===e?"/templates":`/templates/${e}`,o=await fetch(r,{method:n,headers:{"Content-Type":"application/json",Authorization:`Bearer ${m}`},body:JSON.stringify({...u,business_id:p})});if(!o.ok)throw new Error("Failed to save template");const a=await o.json();M("Template saved successfully","success"),"new"===e&&t(`/template-editor/${a.template_id}`)}catch(n){console.error("Error saving template:",n),M(n.message,"error")}finally{S(!1)}}else M("Template name and content are required","error")},disabled:w||!u.template_name.trim()||!u.content.trim(),startIcon:w?(0,Ue.jsx)(Xi,{size:24}):(0,Ue.jsx)(dd.A,{}),children:"Save Template"})]}),(y||!p||!m)&&(0,Ue.jsxs)(Qe,{sx:{mb:3,p:2,border:"1px dashed",borderColor:"warning.main",borderRadius:1},children:[(0,Ue.jsx)(un,{variant:"subtitle1",color:"warning.main",gutterBottom:!0,children:"Business Credentials Required"}),(0,Ue.jsxs)(ld,{container:!0,spacing:2,children:[(0,Ue.jsx)(ld,{item:!0,xs:12,md:5,children:(0,Ue.jsx)(Qa,{fullWidth:!0,label:"Business ID",value:p,onChange:e=>f(e.target.value),placeholder:"Enter your business ID",helperText:"Required for saving templates",required:!0})}),(0,Ue.jsx)(ld,{item:!0,xs:12,md:5,children:(0,Ue.jsx)(Qa,{fullWidth:!0,label:"Business API Key",value:m,onChange:e=>h(e.target.value),placeholder:"Enter your business API key",helperText:"Required for authentication",type:"password",required:!0})}),(0,Ue.jsx)(ld,{item:!0,xs:12,md:2,children:(0,Ue.jsx)(Ni,{variant:"contained",color:"primary",onClick:async()=>{if(!p||!m)return void M("Please enter both Business ID and API Key","error");await(async()=>{if(!p||!m)return $({open:!0,message:"Business ID and API Key are required",severity:"error"}),b(!0),!1;try{const e=await fetch(`/businesses/validate-credentials?business_id=${p}&api_key=${m}`,{method:"GET",headers:{Accept:"application/json",Authorization:`Bearer ${m}`},credentials:"include"});if(!e.ok)throw new Error("Invalid business ID or API key");const t=await e.json();if(!t.valid)throw new Error(t.message||"Credential validation failed");return!0}catch(e){return console.error("Credential validation error:",e),$({open:!0,message:"Failed to validate credentials: "+e.message,severity:"error"}),b(!0),!1}})()&&(localStorage.setItem("businessId",p),localStorage.setItem("businessApiKey",m),document.cookie=`businessId=${p}; path=/; max-age=86400`,document.cookie=`businessApiKey=${m}; path=/; max-age=86400`,b(!1),M("Business credentials validated and saved","success"))},fullWidth:!0,sx:{height:"56px"},children:"Validate & Save"})})]})]}),(x||!g)&&(0,Ue.jsxs)(Qe,{sx:{mb:3,p:2,border:"1px dashed",borderColor:"warning.main",borderRadius:1},children:[(0,Ue.jsx)(un,{variant:"subtitle1",color:"warning.main",gutterBottom:!0,children:"Agent ID Required"}),(0,Ue.jsx)(ld,{container:!0,spacing:2,children:(0,Ue.jsx)(ld,{item:!0,xs:12,md:5,children:(0,Ue.jsx)(Qa,{fullWidth:!0,label:"Agent ID",value:g,onChange:e=>v(e.target.value),placeholder:"Enter your agent ID",helperText:"Required for saving templates",required:!0})})})]}),(0,Ue.jsxs)(ld,{container:!0,spacing:3,children:[(0,Ue.jsxs)(ld,{item:!0,xs:12,md:6,children:[(0,Ue.jsx)(Qa,{fullWidth:!0,label:"Template Name",value:u.template_name,onChange:e=>d((t=>({...t,template_name:e.target.value}))),required:!0,error:!u.template_name.trim(),helperText:u.template_name.trim()?"":"Template name is required",sx:{mb:2}}),(0,Ue.jsxs)(kr,{fullWidth:!0,sx:{mb:2},children:[(0,Ue.jsx)(br,{id:"template-type-label",children:"Template Type"}),(0,Ue.jsxs)(Ha,{labelId:"template-type-label",value:u.template_type,label:"Template Type",onChange:e=>{const t=e.target.value;console.log("Template type changed to:",t),d((e=>{const n={...e,template_type:t};return console.log("Updated template state:",n),n}))},children:[(0,Ue.jsx)(xd,{children:"Regular Templates"}),O.filter((e=>"Regular"===e.group)).map((e=>(0,Ue.jsx)(Ru,{value:e.value,children:e.label},e.value))),(0,Ue.jsx)(xd,{children:"Default Templates"}),O.filter((e=>"Default"===e.group)).map((e=>(0,Ue.jsx)(Ru,{value:e.value,children:e.label},e.value)))]})]}),(0,Ue.jsx)(Qa,{fullWidth:!0,label:"Template Description",value:u.template_description,onChange:e=>d((t=>({...t,template_description:e.target.value}))),multiline:!0,rows:2,sx:{mb:2}}),(0,Ue.jsxs)(Qe,{sx:{display:"flex",alignItems:"center",mb:2},children:[(0,Ue.jsx)(un,{variant:"subtitle1",sx:{mr:2},children:"Detected Variables:"}),(0,Ue.jsx)(Qe,{sx:{display:"flex",flexWrap:"wrap",gap:1},children:u.variables.length>0?u.variables.map(((e,t)=>(0,Ue.jsx)(_d,{label:e,color:"primary",variant:"outlined"},t))):(0,Ue.jsxs)(un,{variant:"body2",color:"text.secondary",children:["No variables detected. Use ","{variable_name}"," syntax."]})})]}),(0,Ue.jsx)(Ni,{variant:"outlined",color:"primary",onClick:async()=>{if(u.content.trim()){S(!0);try{const t={template_type:u.template_type,template_text:u.content,business_id:p,agent_id:g,context:{conversation_history:[{role:"user",content:"I'm interested in your products"},{role:"assistant",content:"I'd be happy to tell you about our products. What type are you interested in?"}],extracted_data:{customer_name:"John Doe",product_interest:"shoes",budget:"$100"}}};let n=!1,r="";const o=["/templates/preview","/templates/render","/render_template","/api/templates/preview"];let a=null;for(const i of o)try{if(console.log(`Trying to preview template with endpoint: ${i}`),a=await fetch(i,{method:"POST",headers:{"Content-Type":"application/json",Accept:"application/json",Authorization:`Bearer ${m}`},credentials:"include",body:JSON.stringify(t)}),a.ok){const e=await a.json();console.log("Preview response:",e),P(e),I(!0),n=!0;break}{const e=await a.json().catch((()=>({})));r=e.message||e.error||`Failed with status ${a.status}`,console.warn(`Endpoint ${i} failed: ${r}`)}}catch(e){console.warn(`Endpoint ${i} failed:`,e),r=e.message}if(!n){console.log("All endpoint attempts failed, using local preview");let e=u.content;u.variables.forEach((t=>{const n=`[Sample ${t}]`;e=e.replace(new RegExp(`{${t}}`,"g"),n)})),P({rendered_text:e,message:"Using client-side preview (API endpoints not available)",is_fallback:!0}),I(!0),M(`Using fallback preview. Server error: ${r}`,"warning")}}catch(t){console.error("Error generating preview:",t),M(`Failed to generate preview: ${t.message}`,"error")}finally{S(!1)}}else M("Template content is empty","error")},disabled:!u.content.trim(),startIcon:(0,Ue.jsx)(fd.A,{}),sx:{mt:2},children:"Preview Template"})]}),(0,Ue.jsxs)(ld,{item:!0,xs:12,md:6,children:[(0,Ue.jsxs)(un,{variant:"subtitle1",gutterBottom:!0,children:["Template Content",(0,Ue.jsx)(Tc,{title:"Use {variable_name} syntax to create variables in your template",children:(0,Ue.jsx)(Al,{size:"small",children:(0,Ue.jsx)(Pd.A,{fontSize:"small"})})})]}),(0,Ue.jsx)(Qa,{fullWidth:!0,multiline:!0,rows:10,value:u.content,onChange:e=>d({...u,content:e.target.value}),placeholder:"Enter your template content here with variables in {curly_braces}...",sx:{mb:2,fontFamily:"monospace","& .MuiInputBase-input":{fontFamily:"monospace"}}}),(0,Ue.jsx)(ld,{item:!0,xs:12,children:(0,Ue.jsx)(Qa,{label:"System Prompt (Optional)",value:u.system_prompt,onChange:e=>d({...u,system_prompt:e.target.value}),fullWidth:!0,multiline:!0,rows:4,margin:"normal",variant:"outlined",placeholder:"Enter optional system prompt for the model..."})})]})]}),(0,Ue.jsxs)(Zc,{open:R,onClose:()=>I(!1),maxWidth:"md",fullWidth:!0,children:[(0,Ue.jsx)(ou,{children:"Template Preview"}),(0,Ue.jsxs)(su,{children:[(0,Ue.jsxs)(un,{variant:"subtitle1",gutterBottom:!0,children:["Template: ",u.template_name]}),(0,Ue.jsxs)(un,{variant:"subtitle2",color:"text.secondary",gutterBottom:!0,children:["Type: ",u.template_type]}),(0,Ue.jsx)(Vc,{sx:{my:2}}),(0,Ue.jsx)(Qe,{sx:{bgcolor:"background.paper",p:2,borderRadius:1,border:"1px solid",borderColor:"divider",maxHeight:"500px",overflow:"auto",fontFamily:"monospace",whiteSpace:"pre-wrap",wordBreak:"break-word"},children:(null===_||void 0===_?void 0:_.rendered_text)||(null===_||void 0===_?void 0:_.content)||"No preview data available"})]}),(0,Ue.jsx)(pu,{children:(0,Ue.jsx)(Ni,{onClick:()=>I(!1),children:"Close"})})]}),(0,Ue.jsx)(Uu,{open:T.open,autoHideDuration:6e3,onClose:L,anchorOrigin:{vertical:"top",horizontal:"right"},children:(0,Ue.jsx)($l,{onClose:L,severity:T.severity,sx:{width:"100%"},children:T.message})})]})};var Id=n(4914),Td=n(8625);const $d=async e=>{try{const t={...e,business_id:vu(e.business_id),agent_id:vu(e.agent_id),template_name:`${e.template_name} (Copy)`};return console.log("Duplicating template as:",t),await(async e=>{try{const t={...e,business_id:vu(e.business_id),agent_id:e.agent_id?vu(e.agent_id):null};console.log("Creating template with data:",{original:e.business_id,normalized:t.business_id});const n=await fetch(`${Qi.BASE_URL}${Qi.ENDPOINTS.TEMPLATES}`,{method:"POST",credentials:"include",headers:rl(),body:JSON.stringify(t)});if(!n.ok){const e=await n.json();throw new Error(e.message||"Failed to create template")}return await n.json()}catch(t){throw console.error("Error in createTemplate:",t),t}})(t)}catch(t){throw console.error("Error in duplicateTemplate:",t),t}};const Od=function(e){let{templateID:t,setTemplateID:n,availableVariable:o=[],setAvailableVariable:a,selectedVariable:i,setSelectedVariable:l,handleTemplateSelection:s,handleVariableSelection:c,addVariableToTemplate:u,templateName:d,setTemplateName:p,templateContent:f,setTemplateContent:m,templateSystemPrompt:h,setTemplateSystemPrompt:g,templateOutput:v,createTemplate:y,fetchTemplates:b,handleSnackbarOpen:x,handleSaveDefaultTemplate:A,apiKey:w,setTemplateOutput:S}=e;const k=ee(),C=J(),[E,j]=(0,r.useState)([]),[_,P]=(0,r.useState)(null),[R,I]=(0,r.useState)(""),[T,$]=(0,r.useState)(""),[O,N]=(0,r.useState)(""),[M,L]=(0,r.useState)(0),[z,D]=(0,r.useState)(!1),[F,B]=(0,r.useState)(!1),[W,U]=(0,r.useState)({template_id:"",template_name:"",content:"",system_prompt:"",template_type:"",variables:[]}),[V,H]=(0,r.useState)("all"),[K,q]=(0,r.useState)(!w||!t),[G,X]=(0,r.useState)(t||""),[Q,Y]=(0,r.useState)(w||""),[Z,te]=(0,r.useState)(""),[ne,re]=(0,r.useState)([]),[oe,ae]=(0,r.useState)({open:!1,message:"",severity:"success"}),[ie,le]=(0,r.useState)(!Z),se=[{value:"stage_selection",label:"Stage Selection",group:"Regular"},{value:"data_extraction",label:"Data Extraction",group:"Regular"},{value:"response_generation",label:"Response Generation",group:"Regular"},{value:"default_stage_selection",label:"Default Stage Selection",group:"Default"},{value:"default_data_extraction",label:"Default Data Extraction",group:"Default"},{value:"default_response_generation",label:"Default Response Generation",group:"Default"}],ce=new URLSearchParams(window.location.search),ue=ce.get("business_id"),de=ce.get("agent_id"),pe=localStorage.getItem("businessId"),fe=localStorage.getItem("businessApiKey"),me=localStorage.getItem("agentId");(0,r.useEffect)((()=>{(ue||pe)&&X(ue||pe),fe&&Y(fe),(de||me)&&te(de||me),q(!G||!Q),le(!Z)}),[ue,pe,fe,de,me]),(0,r.useEffect)((()=>{re(E)}),[E]),(0,r.useEffect)((()=>{G&&Z&&(console.log("TemplateManagement.js - Fetching templates with:",{businessId:G,agentId:Z}),"function"===typeof b?b():he())}),[G,Z,b]);const he=async()=>{if(!G)return be("Business ID is required to fetch templates","error"),q(!0),void D(!1);if(!Z)return be("Agent ID is required to fetch templates","error"),le(!0),void D(!1);if(!Q)return be("Business API Key is required to fetch templates","error"),q(!0),void D(!1);D(!0);try{const e=await(async(e,t)=>{try{const n=vu(e),r=vu(t);console.log(`Fetching templates for business: ${n}, agent: ${r}`);const o=await fetch(`${Qi.BASE_URL}/templates?business_id=${n}&agent_id=${r}`,{method:"GET",credentials:"include",headers:rl()});if(!o.ok){const e=await o.json();throw new Error(e.message||"Failed to fetch templates")}return await o.json()}catch(n){throw console.error("Error in fetchTemplates:",n),n}})(G,Z);console.log("Fetched templates (raw):",e);const t=Array.isArray(e)?e.map((e=>({template_id:e.template_id||e.id||`temp-${Math.random().toString(36).substring(2,9)}`,template_name:e.template_name||"Unnamed Template",content:e.content||"",system_prompt:e.system_prompt||"",template_type:e.template_type||"Unknown Type",variables:we(e.content||"")}))):[];console.log("Normalized templates:",t),j(t),re(t),be(`${t.length} templates loaded successfully`,"success")}catch(e){console.error("Error fetching templates:",e),be(e.message,"error")}finally{D(!1)}};(0,r.useEffect)((()=>{"function"===typeof a&&a(["variable1","variable2","variable3"])}),[a]);const ge=async e=>{if(window.confirm("Are you sure you want to delete this template?"))try{await(async(e,t)=>{try{const n=vu(t);console.log(`Deleting template ${e} for business: ${n}`);const r=await fetch(`${Qi.BASE_URL}/templates/${e}?business_id=${n}`,{method:"DELETE",credentials:"include",headers:rl()});if(!r.ok){const e=await r.json();throw new Error(e.message||"Failed to delete template")}return!0}catch(n){throw console.error("Error in deleteTemplate:",n),n}})(e,G),b(),be("Template deleted successfully","success")}catch(t){console.error("Error deleting template:",t),be(`Failed to delete template: ${t.message}`,"error")}},ve=e=>e&&"string"===typeof e&&e.startsWith("default_"),ye=e=>{if(!e)return"Unknown Type";const t=se.find((t=>t.value===e));return t?t.label:e},be=function(e){ae({open:!0,message:e,severity:arguments.length>1&&void 0!==arguments[1]?arguments[1]:"success"})},xe=()=>{ae((e=>({...e,open:!1})))},Ae=e=>{if(!e||"undefined"===e)return console.error("Invalid template ID:",e),void be("Cannot edit template: Invalid template ID","error");let t=`/template-editor/${e}?business_id=${G}`;Z&&(t+=`&agent_id=${Z}`),console.log(`Navigating to edit template: ${t}`),k(t)};(0,r.useEffect)((()=>{const e=localStorage.getItem("template_updated"),t=ce.get("refresh");("true"===e||t)&&(localStorage.removeItem("template_updated"),G&&Z&&Q&&(console.log("Template was just updated, refreshing templates list"),setTimeout((()=>{he()}),500)))}),[C,G,Z,Q]),(0,r.useEffect)((()=>{if(W.content){const e=(W.content.match(/\{([^}]+)\}/g)||[]).map((e=>e.substring(1,e.length-1)));U((t=>({...t,variables:Array.from(new Set(e))})))}}),[W.content]);const we=e=>{if(!e)return[];return(e.match(/\{([^}]+)\}/g)||[]).map((e=>e.slice(1,-1)))};return(0,Ue.jsx)(xt,{maxWidth:"lg",sx:{mt:4,mb:4},children:(0,Ue.jsxs)(Xt,{sx:{p:3,mb:4},children:[(0,Ue.jsxs)(Qe,{sx:{display:"flex",alignItems:"center",mb:2},children:[(0,Ue.jsx)(Al,{onClick:()=>{k("/business")},sx:{mr:1},children:(0,Ue.jsx)(Vu.A,{})}),(0,Ue.jsx)(un,{variant:"h5",component:"h1",gutterBottom:!0,sx:{flexGrow:1},children:"Template Management"}),(0,Ue.jsx)(Ni,{variant:"outlined",color:"primary",onClick:()=>he(),startIcon:(0,Ue.jsx)(Td.A,{}),sx:{mr:2},children:"Refresh Templates"}),(0,Ue.jsx)(Ni,{variant:"contained",color:"primary",onClick:()=>{let e=`/template-editor/new?business_id=${G}`;Z&&(e+=`&agent_id=${Z}`),k(e)},startIcon:(0,Ue.jsx)(sd.A,{}),children:"Create Template"})]}),(0,Ue.jsx)(Vc,{sx:{mb:3}}),(K||!G||!Q)&&(0,Ue.jsxs)(Qe,{sx:{mb:3,p:2,border:"1px dashed",borderColor:"warning.main",borderRadius:1},children:[(0,Ue.jsx)(un,{variant:"subtitle1",color:"warning.main",gutterBottom:!0,children:"Business Credentials Required"}),(0,Ue.jsxs)(ld,{container:!0,spacing:2,children:[(0,Ue.jsx)(ld,{item:!0,xs:12,md:5,children:(0,Ue.jsx)(Qa,{fullWidth:!0,label:"Business ID",value:G,onChange:e=>X(e.target.value),placeholder:"Enter your business ID",helperText:"Required for managing templates",required:!0})}),(0,Ue.jsx)(ld,{item:!0,xs:12,md:5,children:(0,Ue.jsx)(Qa,{fullWidth:!0,label:"Business API Key",value:Q,onChange:e=>Y(e.target.value),placeholder:"Enter your business API key",helperText:"Required for authentication",type:"password",required:!0})}),(0,Ue.jsx)(ld,{item:!0,xs:12,md:2,children:(0,Ue.jsx)(Ni,{variant:"contained",color:"primary",onClick:async()=>{if(!G||!Q)return void be("Please enter both Business ID and API Key","error");await(async()=>{if(!G||!Q)return be("Business ID and API Key are required","error"),q(!0),!1;try{const e=await fetch(`/businesses/validate-credentials?business_id=${G}&api_key=${Q}`,{method:"GET",headers:{Accept:"application/json",Authorization:`Bearer ${Q}`},credentials:"include"});if(!e.ok)throw new Error("Invalid business ID or API key");const t=await e.json();if(!t.valid)throw new Error(t.message||"Credential validation failed");return!0}catch(e){return console.error("Credential validation error:",e),be("Failed to validate credentials: "+e.message,"error"),q(!0),!1}})()&&(localStorage.setItem("businessId",G),localStorage.setItem("businessApiKey",Q),document.cookie=`businessId=${G}; path=/; max-age=86400`,document.cookie=`businessApiKey=${Q}; path=/; max-age=86400`,q(!1),be("Business credentials validated and saved","success"),he())},fullWidth:!0,sx:{height:"56px"},children:"Validate & Save"})})]})]}),(ie||!Z)&&(0,Ue.jsxs)(Qe,{sx:{mb:3,p:2,border:"1px dashed",borderColor:"warning.main",borderRadius:1},children:[(0,Ue.jsx)(un,{variant:"subtitle1",color:"warning.main",gutterBottom:!0,children:"Agent ID Required"}),(0,Ue.jsxs)(ld,{container:!0,spacing:2,children:[(0,Ue.jsx)(ld,{item:!0,xs:12,md:9,children:(0,Ue.jsx)(Qa,{fullWidth:!0,label:"Agent ID",value:Z,onChange:e=>te(e.target.value),placeholder:"Enter an agent ID",helperText:"Required for managing templates",required:!0})}),(0,Ue.jsx)(ld,{item:!0,xs:12,md:3,children:(0,Ue.jsx)(Ni,{variant:"contained",color:"primary",onClick:()=>{Z?(localStorage.setItem("agentId",Z),le(!1),be("Agent ID saved","success"),he()):be("Please enter an Agent ID","error")},fullWidth:!0,sx:{height:"56px"},children:"Save & Use"})}),(0,Ue.jsxs)(ld,{item:!0,xs:12,mt:2,children:[(0,Ue.jsx)(un,{variant:"body2",color:"text.secondary",children:"After saving or changing the agent ID, click the button below to load templates:"}),(0,Ue.jsx)(Ni,{variant:"outlined",fullWidth:!0,onClick:he,startIcon:(0,Ue.jsx)(Td.A,{}),sx:{mt:1},children:"Load Templates for this Agent"})]})]})]}),(0,Ue.jsx)(Qe,{sx:{mb:3},children:(0,Ue.jsxs)(ld,{container:!0,spacing:2,alignItems:"center",children:[(0,Ue.jsx)(ld,{item:!0,xs:12,md:4,children:(0,Ue.jsx)(Qa,{fullWidth:!0,label:"Search Templates",value:V,onChange:e=>H(e.target.value),placeholder:"Search by type"})}),(0,Ue.jsx)(ld,{item:!0,xs:12,md:3,children:(0,Ue.jsxs)(kr,{fullWidth:!0,children:[(0,Ue.jsx)(br,{id:"filter-type-label",children:"Filter by Type"}),(0,Ue.jsxs)(Ha,{labelId:"filter-type-label",value:V,onChange:e=>H(e.target.value),label:"Filter by Type",children:[(0,Ue.jsx)(Ru,{value:"all",children:"All Templates"}),(0,Ue.jsx)(xd,{children:"Regular Templates"}),se.filter((e=>"Regular"===e.group)).map((e=>(0,Ue.jsx)(Ru,{value:e.value,children:e.label},e.value))),(0,Ue.jsx)(xd,{children:"Default Templates"}),se.filter((e=>"Default"===e.group)).map((e=>(0,Ue.jsx)(Ru,{value:e.value,children:e.label},e.value)))]})]})}),(0,Ue.jsx)(ld,{item:!0,xs:12,md:4,children:(0,Ue.jsx)(Ni,{variant:"outlined",startIcon:(0,Ue.jsx)(Td.A,{}),onClick:()=>{"function"===typeof b?b():he()},children:"Refresh"})})]})}),z?(0,Ue.jsx)(Qe,{sx:{display:"flex",justifyContent:"center",p:4},children:(0,Ue.jsx)(Xi,{})}):(0,Ue.jsx)(Ue.Fragment,{children:0===ne.length?(0,Ue.jsx)($l,{severity:"info",children:"No templates found. Create your first template to get started."}):(0,Ue.jsx)(Ur,{sx:{bgcolor:"background.paper"},children:ne.map((e=>(0,Ue.jsxs)(Kl,{button:!0,onClick:()=>Ae(e.template_id),sx:{mb:1,borderLeft:ve(e.template_type)?"4px solid #f50057":"none",bgcolor:ve(e.template_type)?"rgba(245, 0, 87, 0.04)":"background.paper"},children:[(0,Ue.jsx)(Lc,{primary:(0,Ue.jsxs)(Qe,{sx:{display:"flex",alignItems:"center"},children:[ve(e.template_type)&&(0,Ue.jsx)(Tc,{title:"Default Template",children:(0,Ue.jsx)(md.A,{sx:{mr:1,color:"secondary.main",fontSize:"1rem"}})}),(0,Ue.jsx)(un,{variant:"subtitle1",children:e.template_name||"Unnamed Template"}),(0,Ue.jsx)(_d,{size:"small",label:ye(e.template_type),sx:{ml:1},color:ve(e.template_type)?"secondary":"primary",variant:ve(e.template_type)?"filled":"outlined"})]}),secondary:(0,Ue.jsxs)(Ue.Fragment,{children:[(0,Ue.jsx)(un,{component:"span",variant:"body2",color:"text.secondary",children:e.template_description||"No description"}),(0,Ue.jsxs)(un,{component:"span",variant:"caption",color:"text.secondary",sx:{display:"block"},children:["ID: ",e.template_id]})]})}),(0,Ue.jsxs)(Bl,{children:[(0,Ue.jsx)(Tc,{title:"Edit Template",children:(0,Ue.jsx)(Al,{edge:"end","aria-label":"edit",onClick:t=>{t.stopPropagation(),Ae(e.template_id)},children:(0,Ue.jsx)(mu.A,{})})}),(0,Ue.jsx)(Tc,{title:"Duplicate Template",children:(0,Ue.jsx)(Al,{edge:"end","aria-label":"duplicate",onClick:t=>{t.stopPropagation(),(async e=>{try{D(!0);const t={template_name:e.template_name,content:e.content,system_prompt:e.system_prompt||"",template_type:e.template_type,business_id:G,agent_id:Z};await $d(t),b(),be(`Template "${e.template_name} (Copy)" created successfully`,"success")}catch(t){console.error("Error duplicating template:",t),be(`Failed to duplicate template: ${t.message}`,"error")}finally{D(!1)}})(e)},children:(0,Ue.jsx)(Id.A,{})})}),(0,Ue.jsx)(Tc,{title:"Delete Template",children:(0,Ue.jsx)(Al,{edge:"end","aria-label":"delete",onClick:t=>{t.stopPropagation(),ge(e.template_id)},children:(0,Ue.jsx)(hu.A,{})})})]})]},e.template_id)))})}),(0,Ue.jsxs)(Zc,{open:F,onClose:()=>B(!1),maxWidth:"md",fullWidth:!0,children:[(0,Ue.jsxs)(ou,{children:["Edit Template: ",W.template_name]}),(0,Ue.jsx)(su,{children:(0,Ue.jsxs)(ld,{container:!0,spacing:2,children:[(0,Ue.jsx)(ld,{item:!0,xs:12,children:(0,Ue.jsx)(Qa,{label:"Template Name",value:W.template_name,onChange:e=>U({...W,template_name:e.target.value}),fullWidth:!0,margin:"normal"})}),(0,Ue.jsx)(ld,{item:!0,xs:12,children:(0,Ue.jsxs)(kr,{fullWidth:!0,margin:"normal",children:[(0,Ue.jsx)(br,{children:"Template Type"}),(0,Ue.jsx)(Ha,{value:W.template_type,onChange:e=>U({...W,template_type:e.target.value}),label:"Template Type",children:se.map((e=>(0,Ue.jsx)(Ru,{value:e.value,children:e.label},e.value)))})]})}),(0,Ue.jsx)(ld,{item:!0,xs:12,children:(0,Ue.jsx)(Qa,{label:"Template Content",value:W.content,onChange:e=>U({...W,content:e.target.value}),fullWidth:!0,multiline:!0,rows:6,margin:"normal"})}),(0,Ue.jsx)(ld,{item:!0,xs:12,children:(0,Ue.jsx)(Qa,{label:"System Prompt (Optional)",value:W.system_prompt,onChange:e=>U({...W,system_prompt:e.target.value}),fullWidth:!0,multiline:!0,rows:3,margin:"normal"})}),(0,Ue.jsx)(ld,{item:!0,xs:12,children:(0,Ue.jsxs)(Qe,{sx:{mt:1},children:[(0,Ue.jsx)(un,{variant:"subtitle2",children:"Variables detected:"}),(0,Ue.jsxs)(Qe,{sx:{display:"flex",flexWrap:"wrap",gap:1,mt:1},children:[W.variables.map(((e,t)=>(0,Ue.jsx)(_d,{label:e,size:"small"},t))),0===W.variables.length&&(0,Ue.jsxs)(un,{variant:"body2",color:"text.secondary",children:["No variables detected. Use ","{variable_name}"," syntax to create variables."]})]})]})})]})}),(0,Ue.jsxs)(pu,{children:[(0,Ue.jsx)(Ni,{onClick:()=>B(!1),children:"Cancel"}),(0,Ue.jsx)(Ni,{onClick:async()=>{try{if(!W)return;const e={template_name:W.template_name,content:W.content,system_prompt:W.system_prompt||"",template_type:W.template_type,business_id:G,agent_id:Z};await(async(e,t)=>{try{const n={...t,business_id:vu(t.business_id),agent_id:t.agent_id?vu(t.agent_id):null};console.log(`Updating template ${e}:`,{original:t.business_id,normalized:n.business_id});const r=await fetch(`${Qi.BASE_URL}${Qi.ENDPOINTS.TEMPLATES}/${e}`,{method:"PUT",credentials:"include",headers:rl(),body:JSON.stringify(n)});if(!r.ok){const e=await r.json();throw new Error(e.message||"Failed to update template")}return await r.json()}catch(n){throw console.error("Error in updateTemplate:",n),n}})(W.template_id,e),B(!1),b(),be("Template updated successfully","success")}catch(e){console.error("Error updating template:",e),be(`Failed to update template: ${e.message}`,"error")}},color:"primary",variant:"contained",disabled:!W.template_name||!W.content,children:"Save Changes"})]})]}),(0,Ue.jsx)(Uu,{open:oe.open,autoHideDuration:6e3,onClose:xe,anchorOrigin:{vertical:"top",horizontal:"right"},children:(0,Ue.jsx)($l,{onClose:xe,severity:oe.severity,sx:{width:"100%"},children:oe.message})})]})})};function Nd(e){return(0,Ye.Ay)("MuiAppBar",e)}(0,qe.A)("MuiAppBar",["root","positionFixed","positionAbsolute","positionSticky","positionStatic","positionRelative","colorDefault","colorPrimary","colorSecondary","colorInherit","colorTransparent","colorError","colorInfo","colorSuccess","colorWarning"]);const Md=["className","color","enableColorOnDark","position"],Ld=(e,t)=>e?`${null==e?void 0:e.replace(")","")}, ${t})`:t,zd=(0,yt.Ay)(Xt,{name:"MuiAppBar",slot:"Root",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[t.root,t[`position${(0,vt.A)(n.position)}`],t[`color${(0,vt.A)(n.color)}`]]}})((e=>{let{theme:t,ownerState:n}=e;const r="light"===t.palette.mode?t.palette.grey[100]:t.palette.grey[900];return(0,Me.A)({display:"flex",flexDirection:"column",width:"100%",boxSizing:"border-box",flexShrink:0},"fixed"===n.position&&{position:"fixed",zIndex:(t.vars||t).zIndex.appBar,top:0,left:"auto",right:0,"@media print":{position:"absolute"}},"absolute"===n.position&&{position:"absolute",zIndex:(t.vars||t).zIndex.appBar,top:0,left:"auto",right:0},"sticky"===n.position&&{position:"sticky",zIndex:(t.vars||t).zIndex.appBar,top:0,left:"auto",right:0},"static"===n.position&&{position:"static"},"relative"===n.position&&{position:"relative"},!t.vars&&(0,Me.A)({},"default"===n.color&&{backgroundColor:r,color:t.palette.getContrastText(r)},n.color&&"default"!==n.color&&"inherit"!==n.color&&"transparent"!==n.color&&{backgroundColor:t.palette[n.color].main,color:t.palette[n.color].contrastText},"inherit"===n.color&&{color:"inherit"},"dark"===t.palette.mode&&!n.enableColorOnDark&&{backgroundColor:null,color:null},"transparent"===n.color&&(0,Me.A)({backgroundColor:"transparent",color:"inherit"},"dark"===t.palette.mode&&{backgroundImage:"none"})),t.vars&&(0,Me.A)({},"default"===n.color&&{"--AppBar-background":n.enableColorOnDark?t.vars.palette.AppBar.defaultBg:Ld(t.vars.palette.AppBar.darkBg,t.vars.palette.AppBar.defaultBg),"--AppBar-color":n.enableColorOnDark?t.vars.palette.text.primary:Ld(t.vars.palette.AppBar.darkColor,t.vars.palette.text.primary)},n.color&&!n.color.match(/^(default|inherit|transparent)$/)&&{"--AppBar-background":n.enableColorOnDark?t.vars.palette[n.color].main:Ld(t.vars.palette.AppBar.darkBg,t.vars.palette[n.color].main),"--AppBar-color":n.enableColorOnDark?t.vars.palette[n.color].contrastText:Ld(t.vars.palette.AppBar.darkColor,t.vars.palette[n.color].contrastText)},{backgroundColor:"var(--AppBar-background)",color:"inherit"===n.color?"inherit":"var(--AppBar-color)"},"transparent"===n.color&&{backgroundImage:"none",backgroundColor:"transparent",color:"inherit"}))})),Dd=r.forwardRef((function(e,t){const n=(0,bt.A)({props:e,name:"MuiAppBar"}),{className:r,color:o="primary",enableColorOnDark:a=!1,position:i="fixed"}=n,l=(0,Le.A)(n,Md),s=(0,Me.A)({},n,{color:o,position:i,enableColorOnDark:a}),c=(e=>{const{color:t,position:n,classes:r}=e,o={root:["root",`color${(0,vt.A)(t)}`,`position${(0,vt.A)(n)}`]};return(0,Je.A)(o,Nd,r)})(s);return(0,Ue.jsx)(zd,(0,Me.A)({square:!0,component:"header",ownerState:s,elevation:4,className:(0,ze.A)(c.root,r,"fixed"===i&&"mui-fixed"),ref:t},l))}));function Fd(e){return(0,Ye.Ay)("MuiToolbar",e)}(0,qe.A)("MuiToolbar",["root","gutters","regular","dense"]);const Bd=["className","component","disableGutters","variant"],Wd=(0,yt.Ay)("div",{name:"MuiToolbar",slot:"Root",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[t.root,!n.disableGutters&&t.gutters,t[n.variant]]}})((e=>{let{theme:t,ownerState:n}=e;return(0,Me.A)({position:"relative",display:"flex",alignItems:"center"},!n.disableGutters&&{paddingLeft:t.spacing(2),paddingRight:t.spacing(2),[t.breakpoints.up("sm")]:{paddingLeft:t.spacing(3),paddingRight:t.spacing(3)}},"dense"===n.variant&&{minHeight:48})}),(e=>{let{theme:t,ownerState:n}=e;return"regular"===n.variant&&t.mixins.toolbar})),Ud=r.forwardRef((function(e,t){const n=(0,bt.A)({props:e,name:"MuiToolbar"}),{className:r,component:o="div",disableGutters:a=!1,variant:i="regular"}=n,l=(0,Le.A)(n,Bd),s=(0,Me.A)({},n,{component:o,disableGutters:a,variant:i}),c=(e=>{const{classes:t,disableGutters:n,variant:r}=e,o={root:["root",!n&&"gutters",r]};return(0,Je.A)(o,Fd,t)})(s);return(0,Ue.jsx)(Wd,(0,Me.A)({as:o,className:(0,ze.A)(c.root,r),ref:t,ownerState:s},l))})),Vd=()=>(0,Ue.jsx)(Dd,{position:"static",children:(0,Ue.jsxs)(Ud,{children:[(0,Ue.jsx)(un,{variant:"h6",component:"div",sx:{flexGrow:1},children:"ICMP Events API"}),(0,Ue.jsx)(Qe,{children:[{text:"Home",path:"/"},{text:"Business",path:"/business"},{text:"Templates",path:"/templates"},{text:"Stages",path:"/stages"}].map(((e,t)=>(0,Ue.jsx)(Ni,{color:"inherit",component:Re,to:e.path,children:e.text},t)))})]})}),Hd=()=>(0,Ue.jsx)(Qe,{component:"footer",sx:{py:3,px:2,mt:"auto",backgroundColor:e=>e.palette.grey[200]},children:(0,Ue.jsx)(xt,{maxWidth:"lg",children:(0,Ue.jsxs)(un,{variant:"body2",color:"text.secondary",align:"center",children:["\xa9 ",(new Date).getFullYear()," ICMP Events API. All rights reserved."]})})}),Kd=(0,Ma.A)((0,Ue.jsx)("path",{d:"M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"}),"MoreHoriz"),qd=["slots","slotProps"],Gd=(0,yt.Ay)(Ci)((e=>{let{theme:t}=e;return(0,Me.A)({display:"flex",marginLeft:`calc(${t.spacing(1)} * 0.5)`,marginRight:`calc(${t.spacing(1)} * 0.5)`},"light"===t.palette.mode?{backgroundColor:t.palette.grey[100],color:t.palette.grey[700]}:{backgroundColor:t.palette.grey[700],color:t.palette.grey[100]},{borderRadius:2,"&:hover, &:focus":(0,Me.A)({},"light"===t.palette.mode?{backgroundColor:t.palette.grey[200]}:{backgroundColor:t.palette.grey[600]}),"&:active":(0,Me.A)({boxShadow:t.shadows[0]},"light"===t.palette.mode?{backgroundColor:(0,Vt.tL)(t.palette.grey[200],.12)}:{backgroundColor:(0,Vt.tL)(t.palette.grey[600],.12)})})})),Xd=(0,yt.Ay)(Kd)({width:24,height:16});const Qd=function(e){const{slots:t={},slotProps:n={}}=e,r=(0,Le.A)(e,qd),o=e;return(0,Ue.jsx)("li",{children:(0,Ue.jsx)(Gd,(0,Me.A)({focusRipple:!0},r,{ownerState:o,children:(0,Ue.jsx)(Xd,(0,Me.A)({as:t.CollapsedIcon,ownerState:o},n.collapsedIcon))}))})};function Yd(e){return(0,Ye.Ay)("MuiBreadcrumbs",e)}const Jd=(0,qe.A)("MuiBreadcrumbs",["root","ol","li","separator"]),Zd=["children","className","component","slots","slotProps","expandText","itemsAfterCollapse","itemsBeforeCollapse","maxItems","separator"],ep=(0,yt.Ay)(un,{name:"MuiBreadcrumbs",slot:"Root",overridesResolver:(e,t)=>[{[`& .${Jd.li}`]:t.li},t.root]})({}),tp=(0,yt.Ay)("ol",{name:"MuiBreadcrumbs",slot:"Ol",overridesResolver:(e,t)=>t.ol})({display:"flex",flexWrap:"wrap",alignItems:"center",padding:0,margin:0,listStyle:"none"}),np=(0,yt.Ay)("li",{name:"MuiBreadcrumbs",slot:"Separator",overridesResolver:(e,t)=>t.separator})({display:"flex",userSelect:"none",marginLeft:8,marginRight:8});function rp(e,t,n,r){return e.reduce(((o,a,i)=>(i<e.length-1?o=o.concat(a,(0,Ue.jsx)(np,{"aria-hidden":!0,className:t,ownerState:r,children:n},`separator-${i}`)):o.push(a),o)),[])}const op=r.forwardRef((function(e,t){const n=(0,bt.A)({props:e,name:"MuiBreadcrumbs"}),{children:o,className:a,component:i="nav",slots:l={},slotProps:s={},expandText:c="Show path",itemsAfterCollapse:u=1,itemsBeforeCollapse:d=1,maxItems:p=8,separator:f="/"}=n,m=(0,Le.A)(n,Zd),[h,g]=r.useState(!1),v=(0,Me.A)({},n,{component:i,expanded:h,expandText:c,itemsAfterCollapse:u,itemsBeforeCollapse:d,maxItems:p,separator:f}),y=(e=>{const{classes:t}=e;return(0,Je.A)({root:["root"],li:["li"],ol:["ol"],separator:["separator"]},Yd,t)})(v),b=zr({elementType:l.CollapsedIcon,externalSlotProps:s.collapsedIcon,ownerState:v}),x=r.useRef(null),A=r.Children.toArray(o).filter((e=>r.isValidElement(e))).map(((e,t)=>(0,Ue.jsx)("li",{className:y.li,children:e},`child-${t}`)));return(0,Ue.jsx)(ep,(0,Me.A)({ref:t,component:i,color:"text.secondary",className:(0,ze.A)(y.root,a),ownerState:v},m,{children:(0,Ue.jsx)(tp,{className:y.ol,ref:x,ownerState:v,children:rp(h||p&&A.length<=p?A:(e=>d+u>=e.length?e:[...e.slice(0,d),(0,Ue.jsx)(Qd,{"aria-label":c,slots:{CollapsedIcon:l.CollapsedIcon},slotProps:{collapsedIcon:b},onClick:()=>{g(!0);const e=x.current.querySelector("a[href],button,[tabindex]");e&&e.focus()}},"ellipsis"),...e.slice(e.length-u,e.length)])(A),y.separator,f,v)})}))})),ap=()=>{var e;const{stageId:t}=te(),n=ee(),[o,a]=(0,r.useState)(!0),[i,l]=(0,r.useState)(null),[s,c]=(0,r.useState)(null),[u,d]=(0,r.useState)(!1),[p,f]=(0,r.useState)(""),[m,h]=(0,r.useState)(""),[g,v]=(0,r.useState)(!1),[y,b]=(0,r.useState)(null),[x,A]=(0,r.useState)(""),[w,S]=(0,r.useState)(""),[k,C]=(0,r.useState)([]),[E,j]=(0,r.useState)(!1),[_,P]=(0,r.useState)(null);(0,r.useEffect)((()=>{(async()=>{j(!0),P(null);try{const e=localStorage.getItem("businessId"),t=localStorage.getItem("businessApiKey");if(!e||!t)return P("Authentication required. Please log in."),void j(!1);const n=await fetch(`${Qi.BASE_URL}${Qi.ENDPOINTS.AGENTS}?business_id=${e}`,{headers:{Accept:"application/json",Authorization:`Bearer ${t}`}});if(!n.ok){const e=await n.json().catch((()=>({})));throw new Error(e.message||`HTTP error ${n.status}`)}const r=await n.json();C(r)}catch(e){console.error("Error fetching agents:",e),P(e.message)}finally{j(!1)}})()}),[]),(0,r.useEffect)((()=>{(async()=>{if(t)try{const e=localStorage.getItem("businessId"),n=localStorage.getItem("businessApiKey");if(!e||!n)return l("Authentication required. Please log in."),void a(!1);const r=await fetch(`${Qi.BASE_URL}${Qi.ENDPOINTS.STAGES}/${t}?business_id=${e}`,{headers:{Accept:"application/json",Authorization:`Bearer ${n}`}});if(!r.ok){const e=await r.json().catch((()=>({})));throw new Error(e.message||`HTTP error ${r.status}`)}const o=await r.json();console.log("Stage data:",o),c(o),f(o.stage_name),h(o.stage_description||""),S(o.agent_id||"")}catch(e){console.error("Error fetching stage:",e),l(e.message)}finally{a(!1)}else a(!1)})()}),[t]);const R=e=>{A(e),d(!0)},I=()=>{d(!1),b(null)},T=e=>{let{label:t,templateId:n}=e;return(0,Ue.jsx)(Qe,{sx:{display:"flex",alignItems:"center",mb:1},children:(0,Ue.jsxs)(un,{variant:"body1",component:"span",children:[(0,Ue.jsxs)("strong",{children:[t,":"]})," ",n||"Not set"]})})};return o?(0,Ue.jsx)(Qe,{display:"flex",justifyContent:"center",p:3,children:(0,Ue.jsx)(Xi,{})}):i?(0,Ue.jsx)($l,{severity:"error",sx:{mt:2},children:i}):s?(0,Ue.jsxs)(Xt,{sx:{p:3,mt:2},children:[(0,Ue.jsx)(Qe,{display:"flex",justifyContent:"space-between",alignItems:"center",mb:2,children:(0,Ue.jsx)(un,{variant:"h6",children:"Basic Information"})}),(0,Ue.jsx)(Vc,{sx:{mb:2}}),(0,Ue.jsxs)(ld,{container:!0,spacing:2,children:[(0,Ue.jsx)(ld,{item:!0,xs:12,children:(0,Ue.jsxs)(Qe,{display:"flex",justifyContent:"space-between",alignItems:"center",children:[(0,Ue.jsxs)(Qe,{children:[(0,Ue.jsx)(un,{variant:"subtitle2",color:"primary",children:"Name"}),(0,Ue.jsx)(un,{children:s.stage_name})]}),(0,Ue.jsx)(Ni,{startIcon:(0,Ue.jsx)(mu.A,{}),variant:"outlined",onClick:()=>R("name"),children:"Edit Stage Name"})]})}),(0,Ue.jsx)(ld,{item:!0,xs:12,children:(0,Ue.jsxs)(Qe,{display:"flex",justifyContent:"space-between",alignItems:"center",children:[(0,Ue.jsxs)(Qe,{children:[(0,Ue.jsx)(un,{variant:"subtitle2",color:"primary",children:"Description"}),(0,Ue.jsx)(un,{children:s.stage_description||"No description"})]}),(0,Ue.jsx)(Ni,{startIcon:(0,Ue.jsx)(mu.A,{}),variant:"outlined",onClick:()=>R("description"),children:"Edit Description"})]})}),(0,Ue.jsx)(ld,{item:!0,xs:12,children:(0,Ue.jsxs)(Qe,{display:"flex",justifyContent:"space-between",alignItems:"center",children:[(0,Ue.jsxs)(Qe,{children:[(0,Ue.jsx)(un,{variant:"subtitle2",color:"primary",children:"Agent"}),(0,Ue.jsx)(un,{children:s.agent_id?(null===(e=k.find((e=>e.agent_id===s.agent_id)))||void 0===e?void 0:e.agent_name)||"Unknown Agent":"No agent assigned"})]}),(0,Ue.jsx)(Ni,{startIcon:(0,Ue.jsx)(mu.A,{}),variant:"outlined",onClick:()=>R("agent"),children:"Assign Agent"})]})}),(0,Ue.jsxs)(ld,{item:!0,xs:12,children:[(0,Ue.jsx)(un,{variant:"subtitle2",color:"primary",children:"Type"}),(0,Ue.jsx)(un,{children:s.stage_type})]}),(0,Ue.jsxs)(ld,{item:!0,xs:12,sm:6,children:[(0,Ue.jsx)(un,{variant:"subtitle2",color:"primary",children:"Stage ID"}),(0,Ue.jsx)(un,{component:"code",children:s.stage_id})]}),(0,Ue.jsxs)(ld,{item:!0,xs:12,sm:6,children:[(0,Ue.jsx)(un,{variant:"subtitle2",color:"primary",children:"Business ID"}),(0,Ue.jsx)(un,{component:"code",children:s.business_id})]}),s.agent_id&&(0,Ue.jsxs)(ld,{item:!0,xs:12,sm:6,children:[(0,Ue.jsx)(un,{variant:"subtitle2",color:"primary",children:"Agent ID"}),(0,Ue.jsx)(un,{component:"code",children:s.agent_id})]})]}),(0,Ue.jsx)(un,{variant:"h6",sx:{mt:4,mb:2},children:"Template Configuration"}),(0,Ue.jsx)(Vc,{sx:{mb:2}}),(0,Ue.jsxs)(ld,{container:!0,spacing:2,children:[(0,Ue.jsxs)(ld,{item:!0,xs:12,children:[(0,Ue.jsx)(un,{variant:"subtitle2",color:"primary",children:"Stage Selection Template"}),(0,Ue.jsxs)(Qe,{display:"flex",justifyContent:"space-between",alignItems:"center",children:[(0,Ue.jsx)(T,{label:"Stage Selection Template",templateId:s.stage_selection_template_id}),(0,Ue.jsx)(Ni,{variant:"outlined",size:"small",onClick:()=>n(`/template-editor/${s.stage_selection_template_id}`),children:"Edit Template"})]})]}),(0,Ue.jsxs)(ld,{item:!0,xs:12,children:[(0,Ue.jsx)(un,{variant:"subtitle2",color:"primary",children:"Data Extraction Template"}),(0,Ue.jsxs)(Qe,{display:"flex",justifyContent:"space-between",alignItems:"center",children:[(0,Ue.jsx)(T,{label:"Data Extraction Template",templateId:s.data_extraction_template_id}),(0,Ue.jsx)(Ni,{variant:"outlined",size:"small",onClick:()=>n(`/template-editor/${s.data_extraction_template_id}`),children:"Edit Template"})]})]}),(0,Ue.jsxs)(ld,{item:!0,xs:12,children:[(0,Ue.jsx)(un,{variant:"subtitle2",color:"primary",children:"Response Generation Template"}),(0,Ue.jsxs)(Qe,{display:"flex",justifyContent:"space-between",alignItems:"center",children:[(0,Ue.jsx)(T,{label:"Response Generation Template",templateId:s.response_generation_template_id}),(0,Ue.jsx)(Ni,{variant:"outlined",size:"small",onClick:()=>n(`/template-editor/${s.response_generation_template_id}`),children:"Edit Template"})]})]})]}),s.created_at&&(0,Ue.jsxs)(Qe,{mt:4,children:[(0,Ue.jsx)(Vc,{}),(0,Ue.jsxs)(un,{variant:"caption",color:"text.secondary",sx:{mt:2,display:"block"},children:["Created: ",new Date(s.created_at).toLocaleString()]})]}),(0,Ue.jsxs)(Zc,{open:u,onClose:I,children:[(0,Ue.jsx)(ou,{children:"name"===x?"Edit Stage Name":"description"===x?"Edit Stage Description":"Assign Agent"}),(0,Ue.jsx)(su,{children:"name"===x?(0,Ue.jsx)(Qa,{autoFocus:!0,margin:"dense",label:"Stage Name",type:"text",fullWidth:!0,value:p,onChange:e=>f(e.target.value),error:!!y,helperText:y}):"description"===x?(0,Ue.jsx)(Qa,{autoFocus:!0,margin:"dense",label:"Stage Description",type:"text",fullWidth:!0,multiline:!0,rows:4,value:m,onChange:e=>h(e.target.value),error:!!y,helperText:y}):(0,Ue.jsxs)(kr,{fullWidth:!0,margin:"dense",children:[(0,Ue.jsx)(br,{id:"agent-select-label",children:"Select Agent"}),(0,Ue.jsxs)(Ha,{labelId:"agent-select-label",id:"agent-select",value:w,label:"Select Agent",onChange:e=>{S(e.target.value)},children:[(0,Ue.jsx)(Ru,{value:"",children:(0,Ue.jsx)("em",{children:"None"})}),k.map((e=>(0,Ue.jsx)(Ru,{value:e.agent_id,children:e.agent_name},e.agent_id)))]}),y&&(0,Ue.jsx)(un,{color:"error",variant:"caption",children:y})]})}),(0,Ue.jsxs)(pu,{children:[(0,Ue.jsx)(Ni,{onClick:I,children:"Cancel"}),(0,Ue.jsx)(Ni,{onClick:async()=>{if("name"!==x||p.trim())if("description"!==x||m.trim()){v(!0),b(null);try{var e;const n=null===(e=localStorage.getItem("businessId"))||void 0===e?void 0:e.trim(),r=localStorage.getItem("businessApiKey"),o=await fetch(`${Qi.BASE_URL}${Qi.ENDPOINTS.STAGES}/${t}`,{method:"PUT",headers:{"Content-Type":"application/json",Accept:"application/json",Authorization:`Bearer ${r}`},body:JSON.stringify({business_id:n,stage_name:"name"===x?p.trim():s.stage_name,stage_description:"description"===x?m.trim():s.stage_description,stage_type:s.stage_type,stage_selection_template_id:s.stage_selection_template_id,data_extraction_template_id:s.data_extraction_template_id,response_generation_template_id:s.response_generation_template_id,agent_id:"agent"===x?w:s.agent_id})});if(!o.ok){const e=await o.json().catch((()=>({})));throw new Error(e.message||`HTTP error ${o.status}`)}const a=await fetch(`${Qi.BASE_URL}${Qi.ENDPOINTS.STAGES}/${t}?business_id=${n}`,{headers:{Accept:"application/json",Authorization:`Bearer ${r}`}});if(!a.ok)throw new Error("Failed to fetch updated stage data");const i=await a.json();c(i),d(!1)}catch(n){console.error("Error updating stage:",n),b(n.message)}finally{v(!1)}}else b("Stage description cannot be empty");else b("Stage name cannot be empty")},variant:"contained",disabled:g,children:g?(0,Ue.jsx)(Xi,{size:24}):"Save"})]})]})]}):(0,Ue.jsx)($l,{severity:"info",sx:{mt:2},children:"No stage data available"})};const ip=function(){const{stageId:e}=te();return(0,Ue.jsxs)(Qe,{children:[(0,Ue.jsxs)(Qe,{mb:3,display:"flex",justifyContent:"space-between",alignItems:"center",children:[(0,Ue.jsxs)(op,{"aria-label":"breadcrumb",children:[(0,Ue.jsx)(Re,{to:"/stages",style:{textDecoration:"none",color:"inherit"},children:"Stage Management"}),(0,Ue.jsx)(un,{color:"text.primary",children:"View Stage"})]}),(0,Ue.jsx)(Ni,{variant:"outlined",startIcon:(0,Ue.jsx)(Vu.A,{}),component:Re,to:"/stages",children:"Back to Stages"})]}),(0,Ue.jsx)(ap,{})]})},lp=async function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const n=`${e}`,r={headers:rl(),credentials:"include"};return(async e=>{if(!e.ok)try{const t=await e.json();throw new Error(t.message||t.error||`API error: ${e.status}`)}catch(t){throw new Error(`API error: ${e.status} ${e.statusText}`)}try{return await e.json()}catch(n){return{}}})(await fetch(n,{...r,...t}))},sp={getConversationDebug:e=>lp(`${Qi.ENDPOINTS.DEBUG}/conversation/${e}`),getMessageProcessingDebug:e=>lp(`${Qi.ENDPOINTS.DEBUG}/message/${e}`),getStageNavigationDebug:e=>lp(`${Qi.ENDPOINTS.DEBUG}/stages/${e}`),getPromptGenerationDebug:e=>lp(`${Qi.ENDPOINTS.DEBUG}/prompts/${e}`),getDataExtractionDebug:e=>lp(`${Qi.ENDPOINTS.DEBUG}/extraction/${e}`),subscribeToDebugEvents:(e,t)=>{const n=new EventSource(`${Qi.ENDPOINTS.DEBUG}/events/${e}`);return n.onmessage=e=>{try{const n=JSON.parse(e.data);t(n)}catch(n){console.error("Error parsing event data:",n)}},n.onerror=e=>{console.error("EventSource error:",e),n.close()},()=>{n.readyState!==EventSource.CLOSED&&n.close()}}},cp=e=>{let{title:t,prompt:n,response:r}=e;return(0,Ue.jsxs)(Xt,{sx:{p:2,mb:2},children:[(0,Ue.jsx)(un,{variant:"h6",gutterBottom:!0,children:t}),(0,Ue.jsxs)(Qe,{sx:{bgcolor:"grey.100",p:2,mb:2,borderRadius:1},children:[(0,Ue.jsx)(un,{variant:"subtitle2",color:"text.secondary",children:"Prompt:"}),(0,Ue.jsx)(un,{component:"pre",sx:{whiteSpace:"pre-wrap",fontFamily:"monospace"},children:n})]}),(0,Ue.jsxs)(Qe,{sx:{bgcolor:"grey.100",p:2,borderRadius:1},children:[(0,Ue.jsx)(un,{variant:"subtitle2",color:"text.secondary",children:"Response:"}),(0,Ue.jsx)(un,{component:"pre",sx:{whiteSpace:"pre-wrap",fontFamily:"monospace"},children:r})]})]})},up=e=>{let{stages:t}=e;return(0,Ue.jsxs)(Xt,{sx:{p:2,mb:2},children:[(0,Ue.jsx)(un,{variant:"h6",gutterBottom:!0,children:"Stage Navigation"}),(0,Ue.jsx)(Qe,{sx:{display:"flex",overflowX:"auto",pb:1},children:t.map(((e,n)=>(0,Ue.jsxs)(r.Fragment,{children:[(0,Ue.jsxs)(Qe,{sx:{p:1,bgcolor:e.current?"primary.main":"grey.100",color:e.current?"white":"text.primary",borderRadius:1,minWidth:"fit-content"},children:[(0,Ue.jsx)(un,{variant:"body2",children:e.name}),(0,Ue.jsxs)(un,{variant:"caption",display:"block",children:["Confidence: ",e.confidence]})]}),n<t.length-1&&(0,Ue.jsx)(Qe,{sx:{display:"flex",alignItems:"center",px:1},children:"\u2192"})]},e.id)))})]})},dp=e=>{let{data:t}=e;return(0,Ue.jsxs)(Xt,{sx:{p:2,mb:2},children:[(0,Ue.jsx)(un,{variant:"h6",gutterBottom:!0,children:"Extracted Data"}),(0,Ue.jsx)(Qe,{component:"pre",sx:{bgcolor:"grey.100",p:2,borderRadius:1,whiteSpace:"pre-wrap",fontFamily:"monospace"},children:JSON.stringify(t,null,2)})]})},pp=()=>{const{conversationId:e}=te(),[t,n]=(0,r.useState)(!0),[o,a]=(0,r.useState)(null),[i,l]=(0,r.useState)(null),[s,c]=(0,r.useState)([]);return(0,r.useEffect)((()=>{const t=sp.subscribeToDebugEvents(e,(e=>{c((t=>[...t,e]))}));return(async()=>{try{const t=await sp.getConversationDebug(e);l(t)}catch(t){a(t.message)}finally{n(!1)}})(),t}),[e]),t?(0,Ue.jsx)(Xi,{}):o?(0,Ue.jsx)(un,{color:"error",children:o}):i?(0,Ue.jsxs)(Qe,{sx:{p:3},children:[(0,Ue.jsx)(un,{variant:"h4",gutterBottom:!0,children:"Message Processing Debug View"}),(0,Ue.jsxs)(un,{variant:"subtitle1",gutterBottom:!0,children:["Conversation ID: ",e]}),(0,Ue.jsxs)(ld,{container:!0,spacing:3,children:[(0,Ue.jsx)(ld,{item:!0,xs:12,children:(0,Ue.jsx)(up,{stages:i.stages})}),(0,Ue.jsx)(ld,{item:!0,xs:12,children:(0,Ue.jsx)(cp,{title:"Stage Selection",prompt:i.stageSelection.prompt,response:i.stageSelection.response})}),(0,Ue.jsx)(ld,{item:!0,xs:12,children:(0,Ue.jsx)(cp,{title:"Data Extraction",prompt:i.dataExtraction.prompt,response:i.dataExtraction.response})}),(0,Ue.jsx)(ld,{item:!0,xs:12,children:(0,Ue.jsx)(dp,{data:i.extractedData})}),(0,Ue.jsx)(ld,{item:!0,xs:12,children:(0,Ue.jsx)(cp,{title:"Response Generation",prompt:i.responseGeneration.prompt,response:i.responseGeneration.response})}),s.length>0&&(0,Ue.jsx)(ld,{item:!0,xs:12,children:(0,Ue.jsxs)(Xt,{sx:{p:2},children:[(0,Ue.jsx)(un,{variant:"h6",gutterBottom:!0,children:"Real-time Events"}),(0,Ue.jsx)(Qe,{sx:{maxHeight:200,overflow:"auto"},children:s.map(((e,t)=>(0,Ue.jsxs)(Qe,{sx:{mb:1},children:[(0,Ue.jsx)(un,{variant:"caption",color:"text.secondary",children:new Date(e.timestamp).toLocaleTimeString()}),(0,Ue.jsx)(un,{children:e.message}),(0,Ue.jsx)(Vc,{sx:{my:1}})]},t)))})]})})]})]}):(0,Ue.jsx)(un,{children:"No debug data available"})},fp=(0,r.createContext)(null),mp=e=>{let{children:t}=e;const[n,o]=(0,r.useState)(!1),[a,i]=(0,r.useState)(""),[l,s]=(0,r.useState)(""),[c,u]=(0,r.useState)("");(0,r.useEffect)((()=>{if(tl()){const{userId:e,businessId:t,businessApiKey:n}=nl();i(e),s(t),u(n),o(!0)}}),[]);const d={isAuthenticated:n,userId:a,businessId:l,businessApiKey:c,setUserId:i,setBusinessId:s,setBusinessApiKey:u,setIsAuthenticated:o,handleLogout:()=>{el(),i(""),s(""),u(""),o(!1)}};return(0,Ue.jsx)(fp.Provider,{value:d,children:t})},hp=(0,Ne.A)({palette:{mode:"light",primary:{main:"#1976d2"},secondary:{main:"#dc004e"}}});function gp(){const{isAuthenticated:e,userId:t,businessId:n,businessApiKey:o,setUserId:a,setBusinessId:i,setBusinessApiKey:l,setIsAuthenticated:s}=(()=>{const e=(0,r.useContext)(fp);if(!e)throw new Error("useAuth must be used within an AuthProvider");return e})(),[c,u]=r.useState({open:!1,message:"",severity:"success"}),d=()=>{u({...c,open:!1})};return(0,Ue.jsxs)(Qe,{sx:{display:"flex",flexDirection:"column",minHeight:"100vh"},children:[(0,Ue.jsx)(Vd,{}),(0,Ue.jsx)(xt,{component:"main",sx:{flexGrow:1,py:3},children:(0,Ue.jsxs)(be,{children:[(0,Ue.jsx)(ve,{path:"/",element:e?(0,Ue.jsx)(ge,{to:"/business",replace:!0}):(0,Ue.jsx)(ge,{to:"/login",replace:!0})}),(0,Ue.jsx)(ve,{path:"/stages",element:e?(0,Ue.jsx)(hd,{}):(0,Ue.jsx)(ge,{to:"/login",replace:!0})}),(0,Ue.jsx)(ve,{path:"/stages/:stageId",element:e?(0,Ue.jsx)(ip,{}):(0,Ue.jsx)(ge,{to:"/login",replace:!0})}),(0,Ue.jsx)(ve,{path:"/stage-management/business_id=:businessId/agent_id=:agentId",element:e?(0,Ue.jsx)(hd,{}):(0,Ue.jsx)(ge,{to:"/login",replace:!0})}),(0,Ue.jsx)(ve,{path:"/debug/conversation/:conversationId",element:e?(0,Ue.jsx)(pp,{}):(0,Ue.jsx)(ge,{to:"/login",replace:!0})}),(0,Ue.jsx)(ve,{path:"/login",element:e?(0,Ue.jsx)(ge,{to:"/business",replace:!0}):(0,Ue.jsx)(ol,{userId:t,setUserId:a,businessId:n,setBusinessId:i,businessApiKey:o,setBusinessApiKey:l,setIsAuthenticated:s,handleSnackbarOpen:function(e){u({open:!0,message:e,severity:arguments.length>1&&void 0!==arguments[1]?arguments[1]:"success"})}})}),(0,Ue.jsx)(ve,{path:"/business",element:e?(0,Ue.jsx)(Qu,{}):(0,Ue.jsx)(ge,{to:"/login",replace:!0})}),(0,Ue.jsx)(ve,{path:"/templates",element:e?(0,Ue.jsx)(Od,{}):(0,Ue.jsx)(ge,{to:"/login",replace:!0})}),(0,Ue.jsx)(ve,{path:"/template-editor/:templateId",element:e?(0,Ue.jsx)(Rd,{}):(0,Ue.jsx)(ge,{to:"/login",replace:!0})}),(0,Ue.jsx)(ve,{path:"/template-editor/new",element:e?(0,Ue.jsx)(Rd,{}):(0,Ue.jsx)(ge,{to:"/login",replace:!0})})]})}),(0,Ue.jsx)(Hd,{}),(0,Ue.jsx)(Uu,{open:c.open,autoHideDuration:Ji.SNACKBAR.AUTO_HIDE_DURATION,onClose:d,anchorOrigin:Ji.SNACKBAR.POSITION,children:(0,Ue.jsx)($l,{onClose:d,severity:c.severity,sx:{width:"100%"},children:c.message})})]})}const vp=function(){return(0,Ue.jsx)(je,{children:(0,Ue.jsxs)(Mt,{theme:hp,children:[(0,Ue.jsx)(Ut,{}),(0,Ue.jsx)(mp,{children:(0,Ue.jsx)(gp,{})})]})})},yp=e=>{e&&e instanceof Function&&n.e(453).then(n.bind(n,6453)).then((t=>{let{getCLS:n,getFID:r,getFCP:o,getLCP:a,getTTFB:i}=t;n(e),r(e),o(e),a(e),i(e)}))};a.createRoot(document.getElementById("root")).render((0,Ue.jsx)(r.StrictMode,{children:(0,Ue.jsx)(vp,{})})),yp()})()})();
//# sourceMappingURL=main.b08dd1c0.js.map

================================================================================
File: App.js
Path: .\front-end\src\App.js
Size: 5422
Modified: 2025-04-25T12:58:31.494731
Created: 2025-03-28T18:55:14.288411
Hash: 02254cafa96150b73a03f9a1994de8815253b42c6004db52d56cc0d965ef788b
Lines: 173
================================================================================
// src/App.js
import React from 'react';
import { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';
import { Container, CssBaseline, ThemeProvider, createTheme, Box } from '@mui/material';
import Login from './components/Login';
import BusinessDetailsView from './components/BusinessDetailsView/BusinessDetailsView.jsx';
import StageManager from './components/StageManager';
import TemplateEditor from './components/TemplateEditor';
import TemplateManagement from './components/TemplateManagement';
import Snackbar from '@mui/material/Snackbar';
import Alert from '@mui/material/Alert';
import Header from './components/Header';
import Footer from './components/Footer';
import Home from './components/Home';
import StageViewPage from './pages/StageViewPage';
import MessageDebugPage from './pages/MessageDebugPage';
import { UI_CONFIG } from './config';
import { AuthProvider, useAuth } from './contexts/AuthContext';
import './App.css';

const theme = createTheme({
  palette: {
    mode: 'light',
    primary: {
      main: '#1976d2',
    },
    secondary: {
      main: '#dc004e',
    },
  },
});

function AppContent() {
  const { isAuthenticated, userId, businessId, businessApiKey, setUserId, setBusinessId, setBusinessApiKey, setIsAuthenticated } = useAuth();
  const [snackbar, setSnackbar] = React.useState({ open: false, message: '', severity: 'success' });

  const handleSnackbarOpen = (message, severity = 'success') => {
    setSnackbar({ open: true, message, severity });
  };

  const handleSnackbarClose = () => {
    setSnackbar({ ...snackbar, open: false });
  };

  return (
    <Box sx={{ display: 'flex', flexDirection: 'column', minHeight: '100vh' }}>
      <Header />
      <Container component="main" sx={{ flexGrow: 1, py: 3 }}>
        <Routes>
          <Route 
            path="/" 
            element={
              isAuthenticated ? (
                <Navigate to="/business" replace />
              ) : (
                <Navigate to="/login" replace />
              )
            } 
          />
          <Route 
            path="/stages" 
            element={
              isAuthenticated ? <StageManager /> : <Navigate to="/login" replace />
            } 
          />
          <Route 
            path="/stages/:stageId" 
            element={
              isAuthenticated ? <StageViewPage /> : <Navigate to="/login" replace />
            } 
          />
          <Route 
            path="/stage-management/business_id=:businessId/agent_id=:agentId" 
            element={
              isAuthenticated ? <StageManager /> : <Navigate to="/login" replace />
            } 
          />
          <Route 
            path="/debug/conversation/:conversationId" 
            element={
              isAuthenticated ? <MessageDebugPage /> : <Navigate to="/login" replace />
            } 
          />
          <Route 
            path="/login" 
            element={
              isAuthenticated ? (
                <Navigate to="/business" replace />
              ) : (
                <Login 
                  userId={userId}
                  setUserId={setUserId}
                  businessId={businessId}
                  setBusinessId={setBusinessId}
                  businessApiKey={businessApiKey}
                  setBusinessApiKey={setBusinessApiKey}
                  setIsAuthenticated={setIsAuthenticated}
                  handleSnackbarOpen={handleSnackbarOpen}
                />
              )
            } 
          />
          <Route 
            path="/business" 
            element={
              isAuthenticated ? (
                <BusinessDetailsView />
              ) : (
                <Navigate to="/login" replace />
              )
            } 
          />
          <Route 
            path="/templates" 
            element={
              isAuthenticated ? (
                <TemplateManagement />
              ) : (
                <Navigate to="/login" replace />
              )
            } 
          />
          <Route 
            path="/template-editor/:templateId" 
            element={
              isAuthenticated ? (
                <TemplateEditor />
              ) : (
                <Navigate to="/login" replace />
              )
            } 
          />
          <Route 
            path="/template-editor/new" 
            element={
              isAuthenticated ? (
                <TemplateEditor />
              ) : (
                <Navigate to="/login" replace />
              )
            } 
          />
        </Routes>
      </Container>
      <Footer />
      <Snackbar 
        open={snackbar.open} 
        autoHideDuration={UI_CONFIG.SNACKBAR.AUTO_HIDE_DURATION} 
        onClose={handleSnackbarClose}
        anchorOrigin={UI_CONFIG.SNACKBAR.POSITION}
      >
        <Alert onClose={handleSnackbarClose} severity={snackbar.severity} sx={{ width: '100%' }}>
          {snackbar.message}
        </Alert>
      </Snackbar>
    </Box>
  );
}

function App() {
  return (
    <Router>
      <ThemeProvider theme={theme}>
        <CssBaseline />
        <AuthProvider>
          <AppContent />
        </AuthProvider>
      </ThemeProvider>
    </Router>
  );
}

export default App;

================================================================================
File: config.js
Path: .\front-end\src\config.js
Size: 1706
Modified: 2025-04-25T14:18:52.842959
Created: 2025-04-08T13:30:30.684730
Hash: 706a4f29a3c5335534bbdf25dc0d83baab44f3d7f8543d7a08599a5ef8b22bfc
Lines: 67
================================================================================
// Configuration settings for the application

// API Configuration
const API_CONFIG = {
  // Base URL for API requests
  BASE_URL: process.env.REACT_APP_API_URL || process.env.REACT_APP_API_BASE_URL || 'http://localhost:5000',
  
  // API endpoints
  ENDPOINTS: {
    LOGIN: '/api/save-config',
    MESSAGE: '/api/message',
    CONVERSATIONS: '/conversations',
    BUSINESSES: '/businesses',
    STAGES: '/api/stages',
    TEMPLATES: '/templates',
    AGENTS: '/agents',
    DEBUG: '/debug'
  },
  
  // Default values
  DEFAULTS: {
    BUSINESS_ID: '1c8cde77-0306-42dd-a0b6-c366a07651ad',
    API_KEY: 'default_api_key',
    USER_ID: '00000000-0000-0000-0000-000000000000'
  }
};

// Enhanced debugging for environment variables
console.log('Environment Variables Debug:');
console.log('REACT_APP_API_URL:', process.env.REACT_APP_API_URL);
console.log('REACT_APP_API_BASE_URL:', process.env.REACT_APP_API_BASE_URL);
console.log('All environment variables:', process.env);
console.log('API Configuration:', {
  baseUrl: API_CONFIG.BASE_URL,
  endpoints: API_CONFIG.ENDPOINTS
});

// Authentication settings
const AUTH_CONFIG = {
  // Cookie names
  COOKIES: {
    BUSINESS_API_KEY: 'businessApiKey'
  },
  
  // Local storage keys
  STORAGE_KEYS: {
    USER_ID: 'userId',
    BUSINESS_ID: 'businessId',
    BUSINESS_API_KEY: 'businessApiKey'
  }
};

// UI Configuration
const UI_CONFIG = {
  // Snackbar settings
  SNACKBAR: {
    AUTO_HIDE_DURATION: 6000,
    POSITION: { vertical: 'top', horizontal: 'center' }
  },
  
  // Debug panel settings
  DEBUG_PANEL: {
    ID: 'debugPanel'
  }
};

export { API_CONFIG, AUTH_CONFIG, UI_CONFIG };

================================================================================
File: index.js
Path: .\front-end\src\index.js
Size: 550
Modified: 2025-04-17T01:19:07.160093
Created: 2025-03-28T18:54:14.864247
Hash: a0485d1062e8b675955592c0d51a2dcba12c2c9b70ad88f3efa98e14dd34debf
Lines: 17
================================================================================
import React from 'react';
import ReactDOM from 'react-dom/client';
import './index.css';
import App from './App';
import reportWebVitals from './reportWebVitals';

const root = ReactDOM.createRoot(document.getElementById('root'));
root.render(
  <React.StrictMode>
    <App />
  </React.StrictMode>
);

// If you want to start measuring performance in your app, pass a function
// to log results (for example: reportWebVitals(console.log))
// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals
reportWebVitals();

================================================================================
File: jest.setup.js
Path: .\front-end\src\jest.setup.js
Size: 1873
Modified: 2025-04-17T01:19:07.210949
Created: 2025-04-02T00:28:59.398894
Hash: 8183753a7bf9aaa22dcdd7254c2a999e549d636567b770f7796ea83cfb9cbb48
Lines: 87
================================================================================
import '@testing-library/jest-dom';
import 'jest-canvas-mock';

// Mock axios
const mockAxios = {
  get: jest.fn(),
  post: jest.fn(),
  put: jest.fn(),
  delete: jest.fn()
};

jest.mock('axios', () => ({
  __esModule: true,
  default: mockAxios
}));

// Mock fetch
const mockFetch = jest.fn(() =>
  Promise.resolve({
    ok: true,
    json: () => Promise.resolve({})
  })
);
mockFetch.mockClear = jest.fn();
global.fetch = mockFetch;

// Mock window.matchMedia
Object.defineProperty(window, 'matchMedia', {
  writable: true,
  value: jest.fn().mockImplementation(query => ({
    matches: false,
    media: query,
    onchange: null,
    addListener: jest.fn(),
    removeListener: jest.fn(),
    addEventListener: jest.fn(),
    removeEventListener: jest.fn(),
    dispatchEvent: jest.fn(),
  })),
});

// Mock localStorage
const localStorageMock = {
  getItem: jest.fn(),
  setItem: jest.fn(),
  removeItem: jest.fn(),
  clear: jest.fn(),
};
global.localStorage = localStorageMock;

// Mock useNavigate
const mockNavigate = jest.fn();
jest.mock('react-router-dom', () => ({
  ...jest.requireActual('react-router-dom'),
  useNavigate: () => mockNavigate
}));

// Mock useConfig hook
jest.mock('../hooks/useConfig', () => ({
  __esModule: true,
  default: () => ({
    config: {
      apiKey: 'test_api_key',
      userId: 'test_user',
      businessId: 'test_business',
      businessApiKey: 'test_business_key'
    },
    setConfig: jest.fn(),
    loading: false,
    error: null
  })
}));

// Mock useBusiness hook
jest.mock('../hooks/useBusiness', () => ({
  __esModule: true,
  default: () => ({
    business: {
      id: 'test_business',
      name: 'Test Business',
      apiKey: 'test_business_key'
    },
    setBusiness: jest.fn(),
    loading: false,
    error: null
  })
}));

================================================================================
File: reportWebVitals.js
Path: .\front-end\src\reportWebVitals.js
Size: 373
Modified: 2025-04-17T01:19:07.267420
Created: 2025-03-28T20:45:25.341227
Hash: a1178ce3b04297218a756cc0c68f640336e25727e03200b5997f04677f9ff954
Lines: 13
================================================================================
const reportWebVitals = onPerfEntry => {
  if (onPerfEntry && onPerfEntry instanceof Function) {
    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {
      getCLS(onPerfEntry);
      getFID(onPerfEntry);
      getFCP(onPerfEntry);
      getLCP(onPerfEntry);
      getTTFB(onPerfEntry);
    });
  }
};

export default reportWebVitals;

================================================================================
File: setupTests.js
Path: .\front-end\src\setupTests.js
Size: 1143
Modified: 2025-04-17T01:19:07.312351
Created: 2025-04-01T13:38:51.018812
Hash: e3d372127147bc6b5f28e53107875e924471f8c147dfcf7017ecbcdc98643b71
Lines: 48
================================================================================
import '@testing-library/jest-dom';
import { configure } from '@testing-library/react';
import { act } from 'react';

// Increase test timeout
jest.setTimeout(10000);

// Configure testing-library
configure({
  asyncUtilTimeout: 5000,
  testIdAttribute: 'data-testid',
});

// Configure global test environment
global.React = { act };

// Mock window.matchMedia
Object.defineProperty(window, 'matchMedia', {
  writable: true,
  value: jest.fn().mockImplementation(query => ({
    matches: false,
    media: query,
    onchange: null,
    addListener: jest.fn(),
    removeListener: jest.fn(),
    addEventListener: jest.fn(),
    removeEventListener: jest.fn(),
    dispatchEvent: jest.fn(),
  })),
});

// Setup fetch mock
global.fetch = jest.fn();

// Helper to reset all mocks
beforeEach(() => {
  global.fetch.mockClear();
  jest.clearAllMocks();
});

// Add fetch mock implementations
global.fetch.mockImplementation(() => Promise.resolve({
  ok: true,
  json: () => Promise.resolve({}),
}));

// Configure MUI for testing environment
window.HTMLElement.prototype.scrollIntoView = jest.fn();

================================================================================
File: test-utils.js
Path: .\front-end\src\test-utils.js
Size: 2554
Modified: 2025-04-17T01:19:07.361391
Created: 2025-04-02T02:09:40.402565
Hash: c89de9325ffa0ecf102aa7f637e223f8e278ab752a3633132efba8b9cf78571e
Lines: 92
================================================================================
import React from 'react';
import { render } from '@testing-library/react';
import { BrowserRouter } from 'react-router-dom';

// Custom render function that includes router context
const customRender = (ui, options = {}) => {
  return render(ui, {
    wrapper: ({ children }) => (
      <BrowserRouter>
        {children}
      </BrowserRouter>
    ),
    ...options,
  });
};

// Mock template data
export const mockTemplates = {
  stage_selection: [
    {
      template_id: 'template1',
      template_name: 'Stage Selection Template',
      template_type: 'stage_selection',
      template_text: 'Test stage selection template'
    }
  ],
  data_extraction: [
    {
      template_id: 'template2',
      template_name: 'Data Extraction Template',
      template_type: 'data_extraction',
      template_text: 'Test data extraction template'
    }
  ],
  response_generation: [
    {
      template_id: 'template3',
      template_name: 'Response Generation Template',
      template_type: 'response_generation',
      template_text: 'Test response generation template'
    }
  ],
  default_stage_selection: [
    {
      template_id: 'default1',
      template_name: 'Default Stage Selection',
      template_type: 'default_stage_selection',
      template_text: 'Default stage selection template'
    }
  ],
  default_data_extraction: [
    {
      template_id: 'default2',
      template_name: 'Default Data Extraction',
      template_type: 'default_data_extraction',
      template_text: 'Default data extraction template'
    }
  ],
  default_response_generation: [
    {
      template_id: 'default3',
      template_name: 'Default Response Generation',
      template_type: 'default_response_generation',
      template_text: 'Default response generation template'
    }
  ]
};

// Helper to mock localStorage
export const mockLocalStorage = {
  getItem: jest.fn(),
  setItem: jest.fn(),
  removeItem: jest.fn(),
  clear: jest.fn()
};

// Helper to setup localStorage mock
export const setupLocalStorageMock = (credentials = null) => {
  if (credentials) {
    mockLocalStorage.getItem.mockImplementation((key) => {
      if (key === 'businessId') return credentials.businessId;
      if (key === 'businessApiKey') return credentials.businessApiKey;
      return null;
    });
  } else {
    mockLocalStorage.getItem.mockImplementation(() => null);
  }
};

// Export everything
export * from '@testing-library/react';
export { customRender as render };

================================================================================
File: AgentSection.js
Path: .\front-end\src\components\AgentSection.js
Size: 11360
Modified: 2025-04-17T01:19:07.417242
Created: 2025-04-01T16:09:47.910680
Hash: ece06d8a369b9208e496e5d6b6c2f7781e4b42f8cb345aba52ea019649aaddad
Lines: 286
================================================================================
import React, { useState, useEffect } from 'react';
import {
    Typography,
    Card,
    CardContent,
    List,
    ListItem,
    ListItemText,
    ListItemIcon,
    IconButton,
    CircularProgress,
    Alert,
    Button,
    Box,
    Divider,
    Dialog,
    DialogTitle,
    DialogContent,
    DialogActions,
    TextField,
    Tooltip
} from '@mui/material';
import AddCircleOutlineIcon from '@mui/icons-material/AddCircleOutline';
import EditIcon from '@mui/icons-material/Edit';
import DeleteIcon from '@mui/icons-material/Delete';
import StageIcon from '@mui/icons-material/Layers';
import { useNavigate } from 'react-router-dom';
import useAgents from '../hooks/useAgents';
import { createAgent, updateAgent, deleteAgent } from '../services/agentService';
import useConfig from '../hooks/useConfig';
import { normalizeUUID } from '../hooks/useConfig';

function AgentSection({ handleSnackbarOpen, onAgentSelect }) {
    console.log("Rendering AgentSection component");
    const { agents, isLoading, error, refreshAgents } = useAgents(handleSnackbarOpen);
    const [selectedAgentId, setSelectedAgentId] = useState(null);
    const { businessId } = useConfig(); // Get businessId from config
    const normalizedBusinessId = normalizeUUID(businessId);
    const navigate = useNavigate();

    // Debug logging
    useEffect(() => {
        console.log("AgentSection - Current state:", { 
            agents, 
            isLoading, 
            error, 
            businessId,
            normalizedBusinessId,
            selectedAgentId
        });
    }, [agents, isLoading, error, businessId, normalizedBusinessId, selectedAgentId]);

    // Dialog state
    const [openDialog, setOpenDialog] = useState(false);
    const [dialogMode, setDialogMode] = useState('create'); // 'create' or 'edit'
    const [agentData, setAgentData] = useState({
        business_id: normalizedBusinessId,
        agent_name: ''
    });
    const [isSubmitting, setIsSubmitting] = useState(false);

    // Update agent data whenever businessId changes
    useEffect(() => {
        setAgentData(prev => ({
            ...prev,
            business_id: normalizedBusinessId
        }));
    }, [normalizedBusinessId]);

    const handleAgentClick = (agentId) => {
        console.log("Selected Agent ID:", agentId);
        setSelectedAgentId(agentId);
        if (onAgentSelect) {
            onAgentSelect(agentId);
        }
    };

    const navigateToStageManagement = (agentId, agentName) => {
        console.log(`Navigating to stage management for agent: ${agentName} (${agentId})`);
        
        // Store agent ID in localStorage
        localStorage.setItem('agentId', agentId);
        
        // Navigate to stage management with proper URL format
        navigate(`/stage-management/business_id=${normalizedBusinessId}/agent_id=${agentId}`);
    };

    const openCreateDialog = () => {
        console.log("Opening create dialog with businessId:", normalizedBusinessId);
        setAgentData({
            business_id: normalizedBusinessId,
            agent_name: ''
        });
        setDialogMode('create');
        setOpenDialog(true);
    };

    const openEditDialog = (agent, event) => {
        if (event) event.stopPropagation();
        console.log("Opening edit dialog for agent:", agent);
        setAgentData({
            business_id: normalizedBusinessId,
            agent_name: agent.agent_name
        });
        setSelectedAgentId(agent.agent_id);
        setDialogMode('edit');
        setOpenDialog(true);
    };

    const handleCloseDialog = () => {
        setOpenDialog(false);
        setIsSubmitting(false);
    };

    const handleSubmit = async () => {
        if (!agentData.agent_name.trim()) {
            handleSnackbarOpen("Agent name is required", "error");
            return;
        }

        setIsSubmitting(true);
        try {
            // Make sure we're using the normalized businessId
            const submissionData = {
                ...agentData,
                business_id: normalizedBusinessId
            };
            
            console.log(`${dialogMode === 'create' ? 'Creating' : 'Updating'} agent with data:`, submissionData);
            if (dialogMode === 'create') {
                await createAgent(submissionData);
                handleSnackbarOpen("Agent created successfully", "success");
            } else {
                await updateAgent(selectedAgentId, submissionData);
                handleSnackbarOpen("Agent updated successfully", "success");
            }
            refreshAgents(); // Refresh the agents list
            handleCloseDialog();
        } catch (err) {
            console.error(dialogMode === 'create' ? "Error creating agent:" : "Error updating agent:", err);
            handleSnackbarOpen(err.message || "An error occurred", "error");
            setIsSubmitting(false);
        }
    };

    const handleDeleteAgent = async (agentId, event) => {
        if (event) event.stopPropagation();
        if (!window.confirm("Are you sure you want to delete this agent?")) return;

        try {
            if (!normalizedBusinessId) {
                throw new Error('Business ID not found');
            }

            console.log(`Deleting agent ${agentId} for business ${normalizedBusinessId}`);
            const response = await deleteAgent(agentId, normalizedBusinessId);
            if (response) {
                handleSnackbarOpen("Agent deleted successfully", "success");
                refreshAgents(); // Refresh the agents list
                if (selectedAgentId === agentId) {
                    setSelectedAgentId(null); // Clear selection if deleted agent was selected
                }
            }
        } catch (err) {
            console.error("Error deleting agent:", err);
            handleSnackbarOpen(err.message || "An error occurred while deleting the agent", "error");
        }
    };

    let agentListContent;
    if (isLoading) {
        agentListContent = (
            <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', p: 2 }}>
                <CircularProgress size={24} />
                <Typography sx={{ ml: 1 }} variant="body2">Loading Agents...</Typography>
            </Box>
        );
    } else if (error) {
        agentListContent = <Alert severity="error">Error loading agents: {error}</Alert>;
    } else if (agents.length > 0) {
        agentListContent = (
            <List dense>
                {agents.map((agent) => (
                    <ListItem
                        key={agent.agent_id}
                        button
                        selected={selectedAgentId === agent.agent_id}
                        onClick={() => handleAgentClick(agent.agent_id)}
                        secondaryAction={
                            <Box>
                                <Tooltip title="Manage Stages">
                                    <IconButton
                                        edge="end"
                                        aria-label="manage-stages"
                                        color="primary"
                                        onClick={(e) => {
                                            e.stopPropagation();
                                            navigateToStageManagement(agent.agent_id, agent.agent_name);
                                        }}
                                    >
                                        <StageIcon />
                                    </IconButton>
                                </Tooltip>
                                <IconButton
                                    edge="end"
                                    aria-label="edit"
                                    onClick={(e) => openEditDialog(agent, e)}
                                >
                                    <EditIcon />
                                </IconButton>
                                <IconButton
                                    edge="end"
                                    aria-label="delete"
                                    onClick={(e) => handleDeleteAgent(agent.agent_id, e)}
                                >
                                    <DeleteIcon />
                                </IconButton>
                            </Box>
                        }
                    >
                        <ListItemText
                            primary={agent.agent_name || 'Unnamed Agent'}
                            secondary={`Created: ${new Date(agent.created_at).toLocaleDateString()}`}
                        />
                    </ListItem>
                ))}
            </List>
        );
    } else {
        agentListContent = <Typography variant="body2" sx={{ p: 2, textAlign: 'center' }}>No agents found for this business.</Typography>;
    }

    return (
        <>
            <Card sx={{ mt: 2 }}>
                <CardContent>
                    <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 1 }}>
                        <Typography variant="h6" gutterBottom component="div">
                            Agents
                        </Typography>
                        <Button
                            variant="contained"
                            size="small"
                            startIcon={<AddCircleOutlineIcon />}
                            onClick={openCreateDialog}
                        >
                            Create Agent
                        </Button>
                    </Box>
                    <Divider sx={{ mb: 1 }}/>
                    {agentListContent}
                </CardContent>
            </Card>

            {/* Create/Edit Dialog */}
            <Dialog open={openDialog} onClose={handleCloseDialog}>
                <DialogTitle>{dialogMode === 'create' ? 'Create New Agent' : 'Edit Agent'}</DialogTitle>
                <DialogContent>
                    <TextField
                        autoFocus
                        margin="dense"
                        label="Agent Name"
                        fullWidth
                        variant="outlined"
                        value={agentData.agent_name}
                        onChange={(e) => setAgentData({ ...agentData, agent_name: e.target.value })}
                        disabled={isSubmitting}
                    />
                </DialogContent>
                <DialogActions>
                    <Button onClick={handleCloseDialog} disabled={isSubmitting}>Cancel</Button>
                    <Button 
                        onClick={handleSubmit} 
                        variant="contained" 
                        disabled={isSubmitting}
                        startIcon={isSubmitting ? <CircularProgress size={20} /> : null}
                    >
                        {dialogMode === 'create' ? 'Create' : 'Save'}
                    </Button>
                </DialogActions>
            </Dialog>
        </>
    );
}

export default AgentSection;

================================================================================
File: ApiTester.js
Path: .\front-end\src\components\ApiTester.js
Size: 17907
Modified: 2025-04-17T01:19:07.476333
Created: 2025-04-06T12:17:19.244493
Hash: daaefe09b5006bdd6fc04c046f63802c38ab74d6109d3dc88a06ea8760507477
Lines: 530
================================================================================
import React, { useState } from 'react';
import { 
  Box, 
  Button, 
  TextField, 
  Typography, 
  Paper, 
  Divider, 
  CircularProgress,
  Alert,
  Accordion,
  AccordionSummary,
  AccordionDetails,
  List,
  ListItem,
  ListItemText,
  Chip
} from '@mui/material';
import ExpandMoreIcon from '@mui/icons-material/ExpandMore';
import { runAllApiTests, testApiKeyAuth, testTemplateOperations } from '../utils/apiTest';
import { getStoredCredentials } from '../utils/fetchUtils';

const ApiTester = () => {
  // Get stored credentials
  const storedCredentials = getStoredCredentials();
  
  const [businessId, setBusinessId] = useState(storedCredentials.businessId || '');
  const [businessApiKey, setBusinessApiKey] = useState(storedCredentials.businessApiKey || '');
  const [isLoading, setIsLoading] = useState(false);
  const [testResults, setTestResults] = useState([]);
  const [error, setError] = useState('');
  const [success, setSuccess] = useState('');

  const handleRunTests = async () => {
    if (!businessId || !businessApiKey) {
      setError('Business ID and API Key are required');
      return;
    }
    
    setIsLoading(true);
    setError('');
    setSuccess('');
    setTestResults([]);
    
    try {
      // Test with different authentication methods
      const authMethods = [
        // Method 1: API key as query parameter
        {
          url: `/businesses/validate-credentials/?business_id=${businessId}&api_key=${businessApiKey}`,
          headers: {
            'Content-Type': 'application/json',
            'Accept': 'application/json'
          }
        },
        // Method 2: API key in X-API-Key header
        {
          url: `/businesses/validate-credentials/?business_id=${businessId}`,
          headers: {
            'Content-Type': 'application/json',
            'Accept': 'application/json',
            'X-API-Key': businessApiKey
          }
        },
        // Method 3: API key in Authorization header as Bearer token
        {
          url: `/businesses/validate-credentials/?business_id=${businessId}`,
          headers: {
            'Content-Type': 'application/json',
            'Accept': 'application/json',
            'Authorization': `Bearer ${businessApiKey}`
          }
        }
      ];
      
      const results = [];
      
      for (const method of authMethods) {
        try {
          console.log(`Testing with URL: ${method.url} and headers:`, method.headers);
          
          const response = await fetch(method.url, {
            method: 'GET',
            headers: method.headers,
            credentials: 'include'
          });
          
          const status = response.status;
          const data = await response.json().catch(() => ({}));
          
          const result = {
            test: 'Authentication',
            method: Object.keys(method.headers).find(h => h.includes('API') || h.includes('Authorization')) || 'query',
            status,
            data,
            success: response.ok
          };
          
          results.push(result);
          
          // If any method succeeds, we can stop testing
          if (response.ok) {
            setSuccess(`Authentication successful using ${result.method} method!`);
            break;
          }
        } catch (err) {
          console.error(`Error testing authentication with method:`, err);
          results.push({
            test: 'Authentication',
            method: Object.keys(method.headers).find(h => h.includes('API') || h.includes('Authorization')) || 'query',
            error: err.message,
            success: false
          });
        }
      }
      
      // Check if any method succeeded
      const successfulResult = results.find(r => r.success);
      
      if (!successfulResult) {
        setError('All authentication methods failed. Check the results for details.');
      }
      
      // If authentication succeeded, test templates
      if (successfulResult) {
        await handleTestTemplates();
      }
      
      setTestResults(results);
    } catch (err) {
      console.error('Test error:', err);
      setError(`Test error: ${err.message}`);
      setTestResults([{
        test: 'Authentication',
        error: err.message,
        success: false
      }]);
    } finally {
      setIsLoading(false);
    }
  };

  const handleTestAuth = async () => {
    if (!businessId || !businessApiKey) {
      setError('Business ID and API Key are required');
      return;
    }
    
    setIsLoading(true);
    setError('');
    setSuccess('');
    setTestResults([]);
    
    try {
      // Test with different authentication methods
      const authMethods = [
        // Method 1: API key as query parameter
        {
          url: `/businesses/validate-credentials?business_id=${businessId}&api_key=${businessApiKey}`,
          headers: {
            'Content-Type': 'application/json',
            'Accept': 'application/json'
          }
        },
        // Method 2: API key in X-API-Key header
        {
          url: `/businesses/validate-credentials?business_id=${businessId}`,
          headers: {
            'Content-Type': 'application/json',
            'Accept': 'application/json',
            'X-API-Key': businessApiKey
          }
        },
        // Method 3: API key in Authorization header as Bearer token
        {
          url: `/businesses/validate-credentials?business_id=${businessId}`,
          headers: {
            'Content-Type': 'application/json',
            'Accept': 'application/json',
            'Authorization': `Bearer ${businessApiKey}`
          }
        }
      ];
      
      const results = [];
      
      for (const method of authMethods) {
        try {
          console.log(`Testing with URL: ${method.url} and headers:`, method.headers);
          
          const response = await fetch(method.url, {
            method: 'GET',
            headers: method.headers,
            credentials: 'include'
          });
          
          const status = response.status;
          const data = await response.json().catch(() => ({}));
          
          const result = {
            method: Object.keys(method.headers).find(h => h.includes('API') || h.includes('Authorization')) || 'query',
            status,
            data,
            success: response.ok
          };
          
          results.push(result);
          
          // If any method succeeds, we can stop testing
          if (response.ok) {
            setSuccess(`Authentication successful using ${result.method} method!`);
            break;
          }
        } catch (err) {
          console.error(`Error testing authentication method:`, err);
          results.push({
            method: Object.keys(method.headers).find(h => h.includes('API') || h.includes('Authorization')) || 'query',
            error: err.message,
            success: false
          });
        }
      }
      
      setTestResults(results);
      
      // Check if any method succeeded
      const successfulResult = results.find(r => r.success);
      
      if (!successfulResult) {
        setError('All authentication methods failed. Check the results for details.');
      }
    } catch (err) {
      console.error('Authentication test error:', err);
      setError(`Authentication test error: ${err.message}`);
      setTestResults([{
        test: 'Authentication',
        error: err.message,
        success: false
      }]);
    } finally {
      setIsLoading(false);
    }
  };

  const handleTestTemplates = async () => {
    if (!businessId || !businessApiKey) {
      setError('Business ID and API Key are required');
      return;
    }
    
    setIsLoading(true);
    setError('');
    setSuccess('');
    setTestResults([]);
    
    try {
      // Test with different authentication methods
      const authMethods = [
        // Method 1: API key as query parameter
        {
          url: `/templates/?business_id=${businessId}&api_key=${businessApiKey}`,
          headers: {
            'Content-Type': 'application/json',
            'Accept': 'application/json'
          }
        },
        // Method 2: API key in X-API-Key header
        {
          url: `/templates/?business_id=${businessId}`,
          headers: {
            'Content-Type': 'application/json',
            'Accept': 'application/json',
            'X-API-Key': businessApiKey
          }
        },
        // Method 3: API key in Authorization header as Bearer token
        {
          url: `/templates/?business_id=${businessId}`,
          headers: {
            'Content-Type': 'application/json',
            'Accept': 'application/json',
            'Authorization': `Bearer ${businessApiKey}`
          }
        }
      ];
      
      const results = [];
      
      for (const method of authMethods) {
        try {
          console.log(`Testing with URL: ${method.url} and headers:`, method.headers);
          
          const response = await fetch(method.url, {
            method: 'GET',
            headers: method.headers,
            credentials: 'include'
          });
          
          const status = response.status;
          const data = await response.json().catch(() => ({}));
          
          const result = {
            method: Object.keys(method.headers).find(h => h.includes('API') || h.includes('Authorization')) || 'query',
            status,
            data,
            success: response.ok
          };
          
          results.push(result);
          
          // If any method succeeds, we can stop testing
          if (response.ok) {
            setSuccess(`Templates fetched successfully using ${result.method} method!`);
            break;
          }
        } catch (err) {
          console.error(`Error testing templates with method:`, err);
          results.push({
            method: Object.keys(method.headers).find(h => h.includes('API') || h.includes('Authorization')) || 'query',
            error: err.message,
            success: false
          });
        }
      }
      
      setTestResults(results);
      
      // Check if any method succeeded
      const successfulResult = results.find(r => r.success);
      
      if (!successfulResult) {
        setError('All template fetch methods failed. Check the results for details.');
      }
    } catch (err) {
      console.error('Templates test error:', err);
      setError(`Templates test error: ${err.message}`);
      setTestResults([{
        test: 'Templates',
        error: err.message,
        success: false
      }]);
    } finally {
      setIsLoading(false);
    }
  };

  const renderTestResults = () => {
    if (!testResults) return null;

    return (
      <Box sx={{ mt: 3 }}>
        <Typography variant="h6" gutterBottom>Test Results</Typography>
        
        {testResults.authResult && (
          <Accordion defaultExpanded>
            <AccordionSummary expandIcon={<ExpandMoreIcon />}>
              <Typography>Authentication Test Results</Typography>
            </AccordionSummary>
            <AccordionDetails>
              <List>
                {testResults.authResult.results.map((result, index) => (
                  <ListItem key={index} divider>
                    <ListItemText
                      primary={
                        <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>
                          <Typography variant="subtitle1">
                            {Object.keys(result.headers)[0]}
                          </Typography>
                          <Chip 
                            label={result.success ? 'Success' : 'Failed'} 
                            color={result.success ? 'success' : 'error'} 
                            size="small" 
                          />
                        </Box>
                      }
                      secondary={
                        <Box>
                          <Typography variant="body2">
                            Status: {result.status || 'N/A'}
                          </Typography>
                          {result.data && (
                            <Typography variant="body2">
                              Response: {JSON.stringify(result.data)}
                            </Typography>
                          )}
                          {result.error && (
                            <Typography variant="body2" color="error">
                              Error: {result.error}
                            </Typography>
                          )}
                        </Box>
                      }
                    />
                  </ListItem>
                ))}
              </List>
            </AccordionDetails>
          </Accordion>
        )}
        
        {testResults.templateResult && (
          <Accordion defaultExpanded>
            <AccordionSummary expandIcon={<ExpandMoreIcon />}>
              <Typography>Template Operations Test Results</Typography>
            </AccordionSummary>
            <AccordionDetails>
              <Typography variant="subtitle1" gutterBottom>Fetch Templates</Typography>
              <Box sx={{ mb: 2 }}>
                <Typography variant="body2">
                  Status: {testResults.templateResult.fetchResult.status || 'N/A'}
                </Typography>
                <Chip 
                  label={testResults.templateResult.fetchResult.success ? 'Success' : 'Failed'} 
                  color={testResults.templateResult.fetchResult.success ? 'success' : 'error'} 
                  size="small" 
                  sx={{ mt: 1 }}
                />
                {testResults.templateResult.fetchResult.data && (
                  <Typography variant="body2" sx={{ mt: 1 }}>
                    Response: {JSON.stringify(testResults.templateResult.fetchResult.data)}
                  </Typography>
                )}
                {testResults.templateResult.fetchResult.error && (
                  <Typography variant="body2" color="error" sx={{ mt: 1 }}>
                    Error: {testResults.templateResult.fetchResult.error}
                  </Typography>
                )}
              </Box>
              
              <Divider sx={{ my: 2 }} />
              
              <Typography variant="subtitle1" gutterBottom>Create Template</Typography>
              <Box>
                <Typography variant="body2">
                  Status: {testResults.templateResult.createResult.status || 'N/A'}
                </Typography>
                <Chip 
                  label={testResults.templateResult.createResult.success ? 'Success' : 'Failed'} 
                  color={testResults.templateResult.createResult.success ? 'success' : 'error'} 
                  size="small" 
                  sx={{ mt: 1 }}
                />
                {testResults.templateResult.createResult.data && (
                  <Typography variant="body2" sx={{ mt: 1 }}>
                    Response: {JSON.stringify(testResults.templateResult.createResult.data)}
                  </Typography>
                )}
                {testResults.templateResult.createResult.error && (
                  <Typography variant="body2" color="error" sx={{ mt: 1 }}>
                    Error: {testResults.templateResult.createResult.error}
                  </Typography>
                )}
              </Box>
            </AccordionDetails>
          </Accordion>
        )}
      </Box>
    );
  };

  return (
    <Paper sx={{ p: 3, maxWidth: 800, mx: 'auto', mt: 4 }}>
      <Typography variant="h5" gutterBottom>API Tester</Typography>
      <Typography variant="body1" paragraph>
        Use this tool to test API connectivity and authentication. Enter your Business ID and API Key below.
      </Typography>
      
      {error && (
        <Alert severity="error" sx={{ mb: 2 }} onClose={() => setError('')}>
          {error}
        </Alert>
      )}
      
      {success && (
        <Alert severity="success" sx={{ mb: 2 }} onClose={() => setSuccess('')}>
          {success}
        </Alert>
      )}
      
      <Box sx={{ mb: 3 }}>
        <TextField
          fullWidth
          label="Business ID"
          value={businessId}
          onChange={(e) => setBusinessId(e.target.value)}
          margin="normal"
          required
        />
        <TextField
          fullWidth
          label="API Key"
          value={businessApiKey}
          onChange={(e) => setBusinessApiKey(e.target.value)}
          margin="normal"
          required
          type="password"
        />
      </Box>
      
      <Box sx={{ display: 'flex', gap: 2, mb: 3 }}>
        <Button 
          variant="contained" 
          onClick={handleRunTests} 
          disabled={isLoading}
          startIcon={isLoading ? <CircularProgress size={20} /> : null}
        >
          Run All Tests
        </Button>
        <Button 
          variant="outlined" 
          onClick={handleTestAuth} 
          disabled={isLoading}
        >
          Test Authentication
        </Button>
        <Button 
          variant="outlined" 
          onClick={handleTestTemplates} 
          disabled={isLoading}
        >
          Test Templates
        </Button>
      </Box>
      
      {renderTestResults()}
    </Paper>
  );
};

export default ApiTester;

================================================================================
File: Business.js
Path: .\front-end\src\components\Business.js
Size: 2633
Modified: 2025-04-17T01:19:07.542159
Created: 2025-04-01T22:33:33.261519
Hash: 84f3770c4b85376db9b2e9a39e3964733e5d7509dc8db6fad2f37f8ba6ac7b99
Lines: 105
================================================================================
import React, { useState } from 'react';
import {
  Box,
  Paper,
  Typography,
  Button,
  List,
  ListItem,
  ListItemText,
  Divider,
  CircularProgress,
  Alert,
  Snackbar,
  Tabs,
  Tab
} from '@mui/material';
import LogoutIcon from '@mui/icons-material/Logout';
import StageManager from './StageManager';

const Business = ({ 
  handleLogout, 
  userId, 
  businessId, 
  businessApiKey 
}) => {
  const [activeTab, setActiveTab] = useState(0);

  const handleLogoutClick = () => {
    handleLogout();
  };

  const handleTabChange = (event, newValue) => {
    setActiveTab(newValue);
  };

  return (
    <Box sx={{ p: 3 }}>
      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 3 }}>
        <Typography variant="h4">Business Dashboard</Typography>
        <Button
          startIcon={<LogoutIcon />}
          onClick={handleLogoutClick}
          variant="outlined"
          color="error"
        >
          Logout
        </Button>
      </Box>

      <Paper sx={{ mb: 3 }}>
        <Tabs value={activeTab} onChange={handleTabChange}>
          <Tab label="Configuration" />
          <Tab label="Stages" />
          <Tab label="Analytics" />
        </Tabs>
      </Paper>

      {activeTab === 0 && (
        <Paper sx={{ p: 2 }}>
          <Typography variant="h6" gutterBottom>
            Current Configuration
          </Typography>
          <Divider sx={{ my: 1 }} />
          <List>
            <ListItem>
              <ListItemText
                primary="User ID"
                secondary={userId || 'Not set'}
              />
            </ListItem>
            <ListItem>
              <ListItemText
                primary="Business ID"
                secondary={businessId || 'Not set'}
              />
            </ListItem>
            <ListItem>
              <ListItemText
                primary="Business API Key"
                secondary={businessApiKey ? `${businessApiKey.slice(0, 8)}...` : 'Not set'}
              />
            </ListItem>
          </List>
        </Paper>
      )}

      {activeTab === 1 && (
        <StageManager businessId={businessId} />
      )}

      {activeTab === 2 && (
        <Paper sx={{ p: 2 }}>
          <Typography variant="h6" gutterBottom>
            Analytics Dashboard
          </Typography>
          <Typography variant="body2" color="text.secondary">
            Analytics features coming soon...
          </Typography>
        </Paper>
      )}
    </Box>
  );
};

export default Business;

================================================================================
File: BusinessDetailsView.js
Path: .\front-end\src\components\BusinessDetailsView.js
Size: 7773
Modified: 2025-04-25T12:58:31.503198
Created: 2025-04-08T15:04:02.499761
Hash: 43dc66e1f04d0de4ddcab32ac64ced9751b4bb7b9bdad6847dbad951ab933c72
Lines: 210
================================================================================
import React, { useEffect, useState, useCallback } from 'react';
import { API_BASE_URL } from '../config';
import { 
    Box, Typography, TextField, Button, CircularProgress, Alert, 
    Select, MenuItem, FormControl, InputLabel 
} from '@mui/material';
import { businessService } from '../services/businessService';
import { stageService } from '../services/stageService';

const BusinessDetailsView = () => {
  const [businessId, setBusinessId] = useState(localStorage.getItem('businessId'));
  const [businessData, setBusinessData] = useState(null);
  const [editFormData, setEditFormData] = useState(null);
  const [availableStages, setAvailableStages] = useState([]);
  const [selectedStageId, setSelectedStageId] = useState('');
  const [isLoading, setIsLoading] = useState(true);
  const [isSaving, setIsSaving] = useState(false);
  const [error, setError] = useState(null);

  const handleSnackbarOpen = (message, variant) => { console.log(`${variant}: ${message}`); };

  const fetchData = useCallback(async () => {
      if (!businessId) {
          setError("Please login and configure your business to view details.");
          setIsLoading(false);
          return;
      }
      setIsLoading(true);
      setError(null);
      console.log(`Fetching data for business ID: ${businessId}`);

      try {
          const fetchedBusinessData = await businessService.getBusiness(businessId);
          console.log('Fetched business data:', fetchedBusinessData);
          setBusinessData(fetchedBusinessData);
          setEditFormData(fetchedBusinessData); 
          setSelectedStageId(fetchedBusinessData.first_stage_id || '');
          
          const fetchedStages = await stageService.getStages(businessId);
          console.log('Fetched stages:', fetchedStages);
          setAvailableStages(fetchedStages || []);
          
      } catch (err) {
          console.error('Error fetching data:', err);
          setError(err.message);
      } finally {
          setIsLoading(false);
      }
  }, [businessId]);

  useEffect(() => {
      fetchData();
  }, [fetchData]);

  const handleStageSelectChange = (event) => {
      setSelectedStageId(event.target.value);
  };

  const handleSaveDefaultStage = async () => {
      if (!businessId) return;
      setIsSaving(true);
      setError(null);
      try {
          const stageIdToSave = selectedStageId === '' ? null : selectedStageId;
          await businessService.setDefaultStage(businessId, stageIdToSave);
          handleSnackbarOpen('Default starting stage updated successfully!', 'success');
      } catch (err) {
          console.error('Error saving default stage:', err);
          setError(err.message);
          handleSnackbarOpen(`Error saving default stage: ${err.message}`, 'error');
      } finally {
          setIsSaving(false);
      }
  };

  const handleInputChange = (event) => {
      const { name, value } = event.target;
      setEditFormData(prev => ({ ...prev, [name]: value }));
  };

  const handleSaveDetails = async () => {
      if (!businessId || !editFormData) return;
      setIsSaving(true);
      setError(null);
      try {
          const dataToUpdate = { 
              business_name: editFormData.business_name, 
              business_description: editFormData.business_description,
              address: editFormData.address,
              phone_number: editFormData.phone_number,
              website: editFormData.website
          }; 
          await businessService.updateBusiness(businessId, dataToUpdate);
          handleSnackbarOpen('Business details updated successfully!', 'success');
          setBusinessData(prev => ({ ...prev, ...dataToUpdate })); 
      } catch (err) {
          console.error('Error updating business details:', err);
          setError(err.message);
          handleSnackbarOpen(`Error updating details: ${err.message}`, 'error');
      } finally {
          setIsSaving(false);
      }
  };

  if (isLoading) {
    return <Box display="flex" justifyContent="center" mt={4}><CircularProgress /></Box>;
  }

  if (error) {
    return <Alert severity="error" sx={{ mt: 2 }}>{error}</Alert>;
  }

  if (!businessData || !editFormData) {
    return <Alert severity="warning" sx={{ mt: 2 }}>No business data found. Please configure first.</Alert>;
  }

  return (
    <Box sx={{ p: 3 }}>
        <Typography variant="h4" gutterBottom>Business Details</Typography>
        
        <Box component="form" noValidate autoComplete="off" sx={{ mb: 4 }}>
            <TextField 
                label="Business Name"
                name="business_name"
                value={editFormData.business_name || ''}
                onChange={handleInputChange}
                fullWidth 
                margin="normal"
                required
            />
            <TextField 
                label="Description"
                name="business_description"
                value={editFormData.business_description || ''}
                onChange={handleInputChange}
                fullWidth 
                margin="normal"
                multiline
                rows={3}
            />
             <TextField 
                label="Address"
                name="address"
                value={editFormData.address || ''}
                onChange={handleInputChange}
                fullWidth 
                margin="normal"
            />
             <TextField 
                label="Phone Number"
                name="phone_number"
                value={editFormData.phone_number || ''}
                onChange={handleInputChange}
                fullWidth 
                margin="normal"
            />
             <TextField 
                label="Website"
                name="website"
                value={editFormData.website || ''}
                onChange={handleInputChange}
                fullWidth 
                margin="normal"
            />
            <Button 
                variant="contained" 
                onClick={handleSaveDetails}
                disabled={isSaving}
                sx={{ mt: 2 }}
            >
                {isSaving ? <CircularProgress size={24} /> : 'Save Details'}
            </Button>
        </Box>

        <hr />

        <Box sx={{ mt: 4, mb: 4 }}>
            <Typography variant="h6" gutterBottom>Conversation Settings</Typography>
            <FormControl fullWidth margin="normal">
                <InputLabel id="default-stage-label">Default Starting Stage</InputLabel>
                <Select
                    labelId="default-stage-label"
                    id="default-stage-select"
                    value={selectedStageId}
                    label="Default Starting Stage"
                    onChange={handleStageSelectChange}
                >
                    <MenuItem value=""><em>None (System Default)</em></MenuItem>
                    {availableStages.map((stage) => (
                        <MenuItem key={stage.stage_id} value={stage.stage_id}>
                            {stage.stage_name} ({stage.stage_id.substring(0, 8)}...)
                        </MenuItem>
                    ))}
                </Select>
            </FormControl>
            <Button 
                variant="contained" 
                onClick={handleSaveDefaultStage}
                disabled={isSaving}
                sx={{ mt: 2 }}
            >
                {isSaving ? <CircularProgress size={24} /> : 'Save Default Stage'}
            </Button>
        </Box>

    </Box>
  );
};

export default BusinessDetailsView;

================================================================================
File: BusinessManagement.js
Path: .\front-end\src\components\BusinessManagement.js
Size: 1425
Modified: 2025-04-17T01:19:07.656234
Created: 2025-03-28T21:40:09.408126
Hash: e9aeb523b4c2652be9d9a18887160d108e9868fab10d6517c13380f0946e4c0e
Lines: 39
================================================================================
// src/components/BusinessManagement.js
import React from 'react';
import { TextField, Button, Typography, Card, CardContent, Box } from '@mui/material';

function BusinessManagement({
    businessName,
    setBusinessName,
    businessOutput,
    setBusinessOutput,
     fetchBusinessDetails,
    handleSnackbarOpen,
    apiKey,
    businessId,
}) {
    return (
        <Card sx={{ mt: 2 }}>
            <CardContent>
                <Typography variant="h6" gutterBottom>Business Management</Typography>
                <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2, mt: 2 }}>
                    <TextField
                        label="Business Name"
                        variant="outlined"
                        value={businessName}
                        onChange={(e) => setBusinessName(e.target.value)}
                    />
                    <Button variant="contained" onClick={() => console.log("Create Business not yet implemented")}>
                        Create Business
                    </Button>
                    <Button variant="contained" onClick={fetchBusinessDetails}>
                        Fetch Business Details
                    </Button>
                    <Typography variant="body1">{businessOutput}</Typography>
                </Box>
            </CardContent>
        </Card>
    );
}

export default BusinessManagement;

================================================================================
File: BusinessSection.js
Path: .\front-end\src\components\BusinessSection.js
Size: 2086
Modified: 2025-04-17T01:19:07.704114
Created: 2025-04-01T07:22:22.839236
Hash: a965409e3b6cc1070814319a0289bbcb5a8ddd1fb7aa35887ac35e5e3dbf832e
Lines: 60
================================================================================
import React from 'react';
import {
    Typography,
    Card,
    CardContent,
    List,
    ListItem,
    ListItemText,
    CircularProgress,
    Alert,
    Box
} from '@mui/material';
import useBusiness from '../hooks/useBusiness';

function BusinessSection({ handleSnackbarOpen }) {
    const { businessDetails, isLoading, error } = useBusiness(handleSnackbarOpen);

    let content;

    if (isLoading) {
        content = (
            <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', minHeight: '100px' }} data-testid="loading-state">
                <CircularProgress />
                <Typography sx={{ ml: 1 }}>Loading Business Details...</Typography>
            </Box>
        );
    } else if (error) {
        content = <Alert severity="error" data-testid="error-state">Error loading business details: {error}</Alert>;
    } else if (businessDetails) {
        content = (
            <List dense>
                <ListItem>
                    <ListItemText primary="Business Name" secondary={businessDetails.business_name || 'N/A'} />
                </ListItem>
                <ListItem>
                    <ListItemText primary="Address" secondary={businessDetails.address || 'N/A'} />
                </ListItem>
                <ListItem>
                    <ListItemText primary="Phone" secondary={businessDetails.phone || 'N/A'} />
                </ListItem>
                <ListItem>
                    <ListItemText primary="Email" secondary={businessDetails.email || 'N/A'} />
                </ListItem>
            </List>
        );
    } else {
        content = <Typography variant="body2" data-testid="empty-state">Business details will load here.</Typography>;
    }

    return (
        <Card sx={{ mt: 2 }} data-testid="business-details">
            <CardContent>
                <Typography variant="h6" gutterBottom>Business Details</Typography>
                {content}
            </CardContent>
        </Card>
    );
}

export default BusinessSection;

================================================================================
File: Configuration.js
Path: .\front-end\src\components\Configuration.js
Size: 3759
Modified: 2025-04-17T01:19:07.758960
Created: 2025-03-28T21:47:07.228445
Hash: 7f9b61c2ba832888288551c6524c66d51306f071c117cd03fd06dc95523f1bb5
Lines: 103
================================================================================
import React from 'react';
import { TextField, Button, Typography, Card, CardContent, Box } from '@mui/material';
import { useNavigate } from 'react-router-dom';

const Configuration = ({
    userId,
    setUserId,
    businessId,
    setBusinessId,
    businessApiKey,
    setBusinessApiKey,
    handleSnackbarOpen,
    handleLogout
}) => {
    const navigate = useNavigate();

    const handleSave = async () => {
        if (!userId || !businessId || !businessApiKey) {
            handleSnackbarOpen('Please enter all the configuration values', 'warning');
            return;
        }

        try {
            const response = await fetch('/api/save-config', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'Accept': 'application/json',
                },
                credentials: 'include',
                body: JSON.stringify({
                    userId,
                    businessId,
                    businessApiKey
                })
            });

            if (!response.ok) {
                const data = await response.json();
                handleSnackbarOpen(data.message || 'Invalid credentials', 'error');
                return;
            }

            handleSnackbarOpen('Configuration saved successfully', 'success');
            navigate('/business');
        } catch (error) {
            handleSnackbarOpen('Error saving configuration', 'error');
        }
    };

    const onLogout = () => {
        handleLogout();
        navigate('/login');
    };

    return (
        <Card>
            <CardContent>
                <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>
                    <Typography variant="h6">Configuration</Typography>
                    <Button variant="outlined" color="secondary" onClick={onLogout}>
                        Logout
                    </Button>
                </Box>
                <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2 }}>
                    <TextField
                        label="Business API Key"
                        type="password"
                        value={businessApiKey}
                        onChange={(e) => setBusinessApiKey(e.target.value)}
                        required
                        error={!businessApiKey}
                        helperText={!businessApiKey ? 'Business API Key is required' : ''}
                        data-testid="business-api-key-input"
                    />
                    <TextField
                        label="User ID"
                        value={userId}
                        onChange={(e) => setUserId(e.target.value)}
                        required
                        error={!userId}
                        helperText={!userId ? 'User ID is required' : ''}
                        data-testid="user-id-input"
                    />
                    <TextField
                        label="Business ID"
                        value={businessId}
                        onChange={(e) => setBusinessId(e.target.value)}
                        required
                        error={!businessId}
                        helperText={!businessId ? 'Business ID is required' : ''}
                        data-testid="business-id-input"
                    />
                    <Button variant="contained" color="primary" onClick={handleSave}>
                        Save Config
                    </Button>
                </Box>
            </CardContent>
        </Card>
    );
};

export default Configuration;

================================================================================
File: ErrorDisplay.js
Path: .\front-end\src\components\ErrorDisplay.js
Size: 268
Modified: 2025-04-17T01:19:07.817811
Created: 2025-03-28T19:06:28.494064
Hash: d100be5cb76e7cbc06be0b510809123166ba6f567111e82f081c1f6e0dab0cc4
Lines: 12
================================================================================
// File: src/components/ErrorDisplay.js
import React from 'react';

function ErrorDisplay({ message }) {
    return (
        <div className="error-message">
            <strong>Error:</strong> {message}
        </div>
    );
}

export default ErrorDisplay;

================================================================================
File: Footer.js
Path: .\front-end\src\components\Footer.js
Size: 585
Modified: 2025-04-17T01:19:07.861694
Created: 2025-04-06T12:17:48.132487
Hash: 4d3e3fe77d243d862480867c26a736a3b3bd4ff192e97c62d51d1fd875f630c3
Lines: 24
================================================================================
import React from 'react';
import { Box, Typography, Container } from '@mui/material';

const Footer = () => {
  return (
    <Box
      component="footer"
      sx={{
        py: 3,
        px: 2,
        mt: 'auto',
        backgroundColor: (theme) => theme.palette.grey[200],
      }}
    >
      <Container maxWidth="lg">
        <Typography variant="body2" color="text.secondary" align="center">
          © {new Date().getFullYear()} ICMP Events API. All rights reserved.
        </Typography>
      </Container>
    </Box>
  );
};

export default Footer;

================================================================================
File: Header.js
Path: .\front-end\src\components\Header.js
Size: 864
Modified: 2025-04-17T01:19:07.910165
Created: 2025-04-06T12:17:40.740059
Hash: bc161fab6c48a29fd85707c83e4578f194a49d5de0be6f310c1c2c087d8bc6b3
Lines: 31
================================================================================
import React from 'react';
import { AppBar, Toolbar, Typography, Button, Box } from '@mui/material';
import { Link as RouterLink } from 'react-router-dom';

const Header = () => {
  const menuItems = [
    { text: 'Home', path: '/' },
    { text: 'Business', path: '/business' },
    { text: 'Templates', path: '/templates' },
    { text: 'Stages', path: '/stages' }
  ];

  return (
    <AppBar position="static">
      <Toolbar>
        <Typography variant="h6" component="div" sx={{ flexGrow: 1 }}>
          ICMP Events API
        </Typography>
        <Box>
          {menuItems.map((item, index) => (
            <Button key={index} color="inherit" component={RouterLink} to={item.path}>
              {item.text}
            </Button>
          ))}
        </Box>
      </Toolbar>
    </AppBar>
  );
};

export default Header;

================================================================================
File: HealthCheck.js
Path: .\front-end\src\components\HealthCheck.js
Size: 1622
Modified: 2025-04-17T01:19:07.957045
Created: 2025-03-28T19:06:04.366290
Hash: cbe65624772604ab4a2529fc4a1cf2f79592d9b3373f4f4ab615d47e67efc21c
Lines: 53
================================================================================
// File: src/components/HealthCheck.js
import React, { useState, useEffect } from 'react';
import { getHealthCheck } from './healthCheckService';
import ErrorDisplay from './ErrorDisplay';
import LoadingIndicator from './LoadingIndicator';
import './HealthCheck.css';

function HealthCheck() {
    const [healthData, setHealthData] = useState(null);
    const [loading, setLoading] = useState(true);
    const [error, setError] = useState(null);

    useEffect(() => {
        const fetchHealthData = async () => {
            setLoading(true);
            setError(null);
            try {
                const data = await getHealthCheck();
                setHealthData(data);
            } catch (e) {
                setError(e.message);
            } finally {
                setLoading(false);
            }
        };

        fetchHealthData();
    }, []);

    if (loading) {
        return <LoadingIndicator />;
    }

    if (error) {
        return <ErrorDisplay message={error} />;
    }

    return (
        <div className="health-check-container">
            <h2>Health Check</h2>
            {healthData && (
                <div className="health-data">
                    <p><strong>Status:</strong> {healthData.status}</p>
                    <p><strong>Date:</strong> {healthData.date}</p>
                    <p><strong>Database:</strong> {healthData.database}</p>
                    <p><strong>Schemas Loaded:</strong> {healthData.schemas_loaded}</p>
                </div>
            )}
        </div>
    );
}

export default HealthCheck;

================================================================================
File: healthCheckService.js
Path: .\front-end\src\components\healthCheckService.js
Size: 1055
Modified: 2025-04-17T01:19:08.010898
Created: 2025-03-28T19:05:26.051262
Hash: 8e2cb5d64b217498830814b495aacab2ebf4b6cb420dc1b13d95ebafc2daee7a
Lines: 32
================================================================================
// File: src/components/healthCheckService.js
const API_ENDPOINT = '/health';

export const getHealthCheck = async () => {
    try {
        const apiKey = process.env.REACT_APP_API_KEY; // Access the API key from environment variables

        if (!apiKey) {
            throw new Error("ICMP API Key is missing. Ensure REACT_APP_API_KEY is set in your environment.");
        }

        const response = await fetch(API_ENDPOINT, {
            method: 'GET',
            headers: {
                'Authorization': `Bearer ${apiKey}`,
                'Content-Type': 'application/json'
            }
        });

        if (!response.ok) {
            const errorData = await response.json();
            const errorMessage = errorData.message || `HTTP error! Status: ${response.status}`;
            throw new Error(errorMessage);
        }

        const data = await response.json();
        return data;
    } catch (error) {
        console.error("Error fetching health check:", error);
        throw error;
    }
};

================================================================================
File: Home.js
Path: .\front-end\src\components\Home.js
Size: 1890
Modified: 2025-04-25T12:58:31.510201
Created: 2025-04-06T12:17:57.734053
Hash: 2cc184a534f8e55bf8bee7f2781562ea471d9a83abb4eb7cd589c2a9818e843b
Lines: 60
================================================================================
import React from 'react';
import { Typography, Box, Paper, Grid, Button } from '@mui/material';
import { Link as RouterLink } from 'react-router-dom';

const Home = () => {
  return (
    <Box sx={{ flexGrow: 1 }}>
      <Paper sx={{ p: 4, mb: 4 }}>
        <Typography variant="h4" component="h1" gutterBottom>
          Welcome to ICMP Events API
        </Typography>
        <Typography variant="body1" paragraph>
          This application helps you manage stages and templates for your ICMP events.
        </Typography>
      </Paper>

      <Grid container spacing={3}>
        <Grid item xs={12} md={6}>
          <Paper sx={{ p: 3, height: '100%' }}>
            <Typography variant="h5" component="h2" gutterBottom>
              Business Details
            </Typography>
            <Typography variant="body1" paragraph>
              View and manage your business configuration.
            </Typography>
            <Button
              variant="contained"
              color="primary"
              component={RouterLink}
              to="/business"
            >
              Go to Business Details
            </Button>
          </Paper>
        </Grid>

        <Grid item xs={12} md={6}>
          <Paper sx={{ p: 3, height: '100%' }}>
            <Typography variant="h5" component="h2" gutterBottom>
              Stage Management
            </Typography>
            <Typography variant="body1" paragraph>
              Create, edit, and manage your stages for ICMP events.
            </Typography>
            <Button
              variant="contained"
              color="primary"
              component={RouterLink}
              to="/stages"
            >
              Go to Stages
            </Button>
          </Paper>
        </Grid>
      </Grid>
    </Box>
  );
};

export default Home;

================================================================================
File: LoadingIndicator.js
Path: .\front-end\src\components\LoadingIndicator.js
Size: 250
Modified: 2025-04-17T01:19:08.116683
Created: 2025-03-28T19:05:01.779583
Hash: f4ce1bc8416c1257020598856080bfc2a4981ba693e1ba88c64d7619392cd7ee
Lines: 12
================================================================================
// File: src/components/LoadingIndicator.js
import React from 'react';

function LoadingIndicator() {
    return (
        <div className="loading-indicator">
            Loading...
        </div>
    );
}

export default LoadingIndicator;

================================================================================
File: Login.js
Path: .\front-end\src\components\Login.js
Size: 4468
Modified: 2025-04-17T01:19:08.162277
Created: 2025-04-01T18:05:15.377653
Hash: 70e094df703020b1c535f681c443093bf7b44752136cd7fb80fd99746f42d44c
Lines: 110
================================================================================
import React, { useState } from 'react';
import { TextField, Button, Typography, Card, CardContent, Box, CircularProgress } from '@mui/material';
import { useNavigate } from 'react-router-dom';
import { login } from '../services/authService';
import { API_CONFIG } from '../config';

function Login({ 
    setIsAuthenticated, 
    handleSnackbarOpen,
    setUserId: setParentUserId,
    setBusinessId: setParentBusinessId,
    setBusinessApiKey: setParentBusinessApiKey
}) {
    const [isLoading, setIsLoading] = useState(false);
    const [userId, setUserId] = useState('');
    const [businessId, setBusinessId] = useState(API_CONFIG.DEFAULTS.BUSINESS_ID);
    const [businessApiKey, setBusinessApiKey] = useState(API_CONFIG.DEFAULTS.API_KEY);
    const navigate = useNavigate();

    const handleSubmit = async (event) => {
        event.preventDefault();
        setIsLoading(true);

        try {
            // Validate and save credentials using the authService
            const data = await login(userId, businessId, businessApiKey);

            if (data.success) {
                // Update parent state
                setParentUserId(userId.trim());
                setParentBusinessId(businessId.trim());
                setParentBusinessApiKey(businessApiKey.trim());

                // Set authentication state
                setIsAuthenticated(true);
                
                // Show success message and redirect
                handleSnackbarOpen(data.message || 'Login successful', 'success');
                navigate('/business');
            } else {
                // Show error message
                handleSnackbarOpen(data.message || 'Login failed', 'error');
                setIsAuthenticated(false);
            }
        } catch (error) {
            console.error('Login error:', error);
            handleSnackbarOpen(error.message || 'Login failed', 'error');
            setIsAuthenticated(false);
        } finally {
            setIsLoading(false);
        }
    };

    return (
        <Card sx={{ mt: 4, maxWidth: 400, mx: 'auto' }}>
            <CardContent>
                <Typography variant="h5" gutterBottom align="center">
                    Login
                </Typography>
                <Box component="form" onSubmit={handleSubmit} sx={{ display: 'flex', flexDirection: 'column', gap: 2, mt: 2 }}>
                    <TextField
                        label="Business ID" 
                        variant="outlined" 
                        value={businessId}
                        onChange={(e) => setBusinessId(e.target.value)}
                        disabled={isLoading}
                        required
                        error={!businessId}
                        helperText={!businessId ? "Business ID is required" : ""}
                        fullWidth
                    />
                    <TextField
                        label="Business API Key"
                        variant="outlined"
                        value={businessApiKey}
                        onChange={(e) => setBusinessApiKey(e.target.value)}
                        disabled={isLoading}
                        type="password"
                        required
                        error={!businessApiKey}
                        helperText={!businessApiKey ? "Business API Key is required" : ""}
                        fullWidth
                    />
                    <TextField 
                        label="User ID" 
                        variant="outlined" 
                        value={userId}
                        onChange={(e) => setUserId(e.target.value)}
                        disabled={isLoading}
                        required
                        error={!userId}
                        helperText={!userId ? "User ID is required" : ""}
                        fullWidth
                    />

                    <Button 
                        type="submit"
                        variant="contained" 
                        disabled={isLoading || !userId || !businessId || !businessApiKey}
                        fullWidth
                    >
                        {isLoading ? <CircularProgress size={24} /> : 'Login'}
                    </Button>
                </Box>
            </CardContent>
        </Card>
    );
}

export default Login;

================================================================================
File: MyInterface.js
Path: .\front-end\src\components\MyInterface.js
Size: 10098
Modified: 2025-04-17T01:19:08.225674
Created: 2025-03-28T18:52:14.478188
Hash: df39b05e6141ae0b7f7e7def5a38a47b1c9e32be2fd577b048530be4c583f887
Lines: 262
================================================================================
// File: src/components/MyInterface.js
// Last Modified: 2026-03-30
import React, { useState } from 'react';
import './MyInterface.css';
import { Typography, Snackbar, Alert } from '@mui/material';
import Configuration from './Configuration';
import BusinessSection from './BusinessSection';
import UserSection from './UserSection';
import SendMessage from './SendMessage';
import StageManagement from './StageManagement';
import useTemplateManagement from '../hooks/useTemplateManagement';
import useStageManagement from '../hooks/useStageManagement';
import useConfig from '../hooks/useConfig';
import useUser from '../hooks/useUser';
import { createUser as createUserApi, createTemplate as createTemplateApi } from '../services/testService';
import AgentSection from './AgentSection';
import StageSection from './StageSection';
import StageDetailView from './StageDetailView';
import TemplateSection from './TemplateSection';

// Main MyInterface component
function MyInterface() {
    const [snackbarOpen, setSnackbarOpen] = useState(false);
    const [snackbarMessage, setSnackbarMessage] = useState('');
    const [snackbarSeverity, setSnackbarSeverity] = useState('success'); // or 'error'
    const [selectedAgentId, setSelectedAgentId] = useState(null);
    const [selectedStageId, setSelectedStageId] = useState(null);

    const handleSnackbarOpen = (message, severity) => {
        setSnackbarMessage(message);
        setSnackbarSeverity(severity);
        setSnackbarOpen(true);
    };

    const handleSnackbarClose = (event, reason) => {
        if (reason === 'clickaway') {
            return;
        }
        setSnackbarOpen(false);
    };

   const {
        apiKey,
        setApiKey,
        userId,
        setUserId,
        businessId,
        setBusinessId,
        businessApiKey,
        setBusinessApiKey,
    } = useConfig();

    const {
        firstName,
        setFirstName,
        lastName,
        setLastName,
        email,
        setEmail,
        userOutput,
        setUserOutput
    } = useUser();

    const {
        templateID,
        setTemplateID,
        templateName,
        setTemplateName,
        templateText,
        setTemplateText,
        templateOutput,
        setTemplateOutput,
    } = useTemplateManagement(apiKey, handleSnackbarOpen);

    const {
        stageId,
        setStageId,
        stageName,
        setStageName,
        stageDescription,
        setStageDescription,
        stageType,
        setStageType,
        selectionTemplateId,
        setSelectionTemplateId,
        selectionCustomPrompt,
        setSelectionCustomPrompt,
         extractionTemplateId,
        setExtractionTemplateId,
        extractionCustomPrompt,
        setExtractionCustomPrompt,
        responseTemplateId,
        setResponseTemplateId,
        responseCustomPrompt,
        setResponseCustomPrompt,
        stageOutput,
        setStageOutput,
        fetchStages,
        createStage
    } = useStageManagement(apiKey, businessId, handleSnackbarOpen);

    //user section
    const createUser = async () => {
        try {
            await createUserApi(firstName, lastName, email)
            setUserOutput("User Created (dummy)");
            handleSnackbarOpen("User Created!", "success")

        } catch (error) {
            setUserOutput(`Error: ${error.message}`);
            handleSnackbarOpen(error.message, "error")

        }
    };

    const createTemplate = async () => {
        const templateData = {
            template_name: templateName,
            template_text: templateText
        };
        try {
            const data = await createTemplateApi(templateData, apiKey)
            setTemplateOutput(`Template Created: ${data.template_id}`);
            handleSnackbarOpen(`Template Created: ${data.template_id}`, "success")
        } catch (error) {
            setTemplateOutput(`Error: ${error.message}`);
            handleSnackbarOpen(error.message, "error")

        }
    };

    // Define placeholder processMessage function
    const processMessage = async (message) => {
        console.log("Processing message (TODO):", message);
        // TODO: Implement actual message processing logic, likely calling an API
        handleSnackbarOpen("Message processing not yet implemented.", "info");
    };

    // Handler for when an agent is selected in AgentSection
    const handleAgentSelect = (agentId) => {
        console.log("Agent selected in MyInterface:", agentId);
        setSelectedAgentId(agentId);
        // Clear stage selection when agent changes
        setSelectedStageId(null); 
    };

    // Handler for when a stage is selected in StageSection
    const handleStageSelect = (stageId) => {
        console.log("Stage selected in MyInterface:", stageId);
        setSelectedStageId(stageId);
    };

    // Determine if configuration is complete (we check for businessId as a proxy)
    const isConfigComplete = !!businessId && !!userId; // Check both IDs are present

    return (
        <div className="container">
            <Typography variant="h4" align="center" gutterBottom>ICMP Proof of Concept</Typography>

            {!isConfigComplete ? (
                <Configuration
                    apiKey={apiKey}
                    setApiKey={setApiKey}
                    userId={userId}
                    setUserId={setUserId}
                    businessId={businessId}
                    setBusinessId={setBusinessId}
                    businessApiKey={businessApiKey}
                    setBusinessApiKey={setBusinessApiKey}
                    handleSnackbarOpen={handleSnackbarOpen}
                />
            ) : (
                // Render dashboard content only if config is complete
                <>
                    <BusinessSection handleSnackbarOpen={handleSnackbarOpen} />

                    <AgentSection 
                        handleSnackbarOpen={handleSnackbarOpen} 
                        onAgentSelect={handleAgentSelect} 
                    />

                    <UserSection
                        firstName={firstName}
                        setFirstName={setFirstName}
                        lastName={lastName}
                        setLastName={setLastName}
                        email={email}
                        setEmail={setEmail}
                        createUser={createUser}
                        userOutput={userOutput}
                    />

                    <TemplateSection
                        templateID={templateID}
                        setTemplateID={setTemplateID}
                        templateName={templateName}
                        setTemplateName={setTemplateName}
                        templateText={templateText}
                        setTemplateText={setTemplateText}
                        createTemplate={createTemplate}
                        templateOutput={templateOutput}
                    />

                    <StageManagement
                        stageId={stageId}
                        setStageId={setStageId}
                        stageName={stageName}
                        setStageName={setStageName}
                        stageDescription={stageDescription}
                        setStageDescription={setStageDescription}
                        stageType={stageType}
                        setStageType={setStageType}
                        selectionTemplateId={selectionTemplateId}
                        setSelectionTemplateId={setSelectionTemplateId}
                        selectionCustomPrompt={selectionCustomPrompt}
                        setSelectionCustomPrompt={setSelectionCustomPrompt}
                         extractionTemplateId={extractionTemplateId}
                        setExtractionTemplateId={setExtractionTemplateId}
                        extractionCustomPrompt={extractionCustomPrompt}
                        setExtractionCustomPrompt={setExtractionCustomPrompt}
                        responseTemplateId={responseTemplateId}
                        setResponseTemplateId={setResponseTemplateId}
                        responseCustomPrompt={responseCustomPrompt}
                        setResponseCustomPrompt={setResponseCustomPrompt}
                        stageOutput={stageOutput}
                        setStageOutput={setStageOutput}
                        fetchStages={fetchStages}
                        createStage={createStage}
                        handleSnackbarOpen={handleSnackbarOpen}
                        apiKey={apiKey}
                        businessId={businessId} />

                    {/* Render StageSection, passing selectedAgentId and selection handler */}
                    <StageSection 
                        selectedAgentId={selectedAgentId} 
                        handleSnackbarOpen={handleSnackbarOpen}
                        onStageSelect={handleStageSelect}
                    />

                    {/* Conditionally render StageDetailView only when a stage is selected */}
                    {selectedStageId && (
                        <StageDetailView 
                            selectedStageId={selectedStageId} 
                            handleSnackbarOpen={handleSnackbarOpen} 
                        />
                    )}

                    <SendMessage processMessage={processMessage} handleSnackbarOpen={handleSnackbarOpen} />
                </>
            )}

            {/* Snackbar for notifications */}
            <Snackbar open={snackbarOpen} autoHideDuration={6000} onClose={handleSnackbarClose}>
                <Alert onClose={handleSnackbarClose} severity={snackbarSeverity} sx={{ width: '100%' }}>
                    {snackbarMessage}
                </Alert>
            </Snackbar>
        </div>
    );
}

export default MyInterface;

================================================================================
File: SendMessage.js
Path: .\front-end\src\components\SendMessage.js
Size: 1294
Modified: 2025-04-17T01:19:08.288100
Created: 2025-03-28T21:49:38.501143
Hash: 2f85e46b75c46465e6411ca3643a1ad0509519771ae446e83731f454cc89154d
Lines: 35
================================================================================
// File: src/components/SendMessage.js
// Last Modified: 2026-03-29

import React, { useState } from 'react';
import { TextareaAutosize, Button, Typography, Card, CardContent, Box } from '@mui/material';

function SendMessage({handleSnackbarOpen }) {
     const [messageInput, setMessageInput] = useState('');
     const [messageOutput, setMessageOutput] = useState('');

    const processMessage = async () => {
        //TODO
    };

    return (
        <Card sx={{ mt: 2 }}>
            <CardContent>
                <Typography variant="h6" gutterBottom>Send Message</Typography>
                <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2, mt: 2 }}>
                    <TextareaAutosize
                        minRows={3}
                        placeholder="Message"
                        style={{ width: 300, padding: 8 }}
                        value={messageInput}
                        onChange={(e) => setMessageInput(e.target.value)}
                    />
                    <Button variant="contained" onClick={processMessage}>Send</Button>
                    <Typography variant="body1">{messageOutput}</Typography>
                </Box>
            </CardContent>
        </Card>
    );
}

export default SendMessage;

================================================================================
File: StageDetailView.js
Path: .\front-end\src\components\StageDetailView.js
Size: 5892
Modified: 2025-04-17T01:19:08.339506
Created: 2025-04-01T16:20:20.927159
Hash: 5d34cfce673dfe571a8588ac945e162789618b495a1896d25d5593842b561c8c
Lines: 146
================================================================================
import React from 'react';
import {
    Typography,
    Card,
    CardContent,
    Box,
    TextField, // Use TextField for consistent layout, make read-only for now
    CircularProgress,
    Alert,
    Grid, // For layout
    Divider
} from '@mui/material';
import useStageDetails from '../hooks/useStageDetails'; // Import the hook

function StageDetailView({ selectedStageId, handleSnackbarOpen }) {
    // Use the hook to get details for the selected stage
    const { stageDetails, isLoading, error } = useStageDetails(selectedStageId, handleSnackbarOpen);

    // Define common TextField props for read-only view
    const textFieldProps = {
        variant: "outlined",
        fullWidth: true,
        InputProps: {
            readOnly: true, // Make fields read-only for now
        },
        size: "small",
        margin: "dense" // Adjust spacing
    };

    // Content to render based on loading/error/data state
    let content;
    if (!selectedStageId) {
        // This component should ideally not be rendered if no stage is selected,
        // but handle the case defensively.
        content = null; // Or a placeholder like <Typography>Select a stage</Typography>
    } else if (isLoading) {
        content = (
            <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', p: 3 }}>
                <CircularProgress />
                <Typography sx={{ ml: 2 }}>Loading Stage Details...</Typography>
            </Box>
        );
    } else if (error) {
        content = <Alert severity="error" sx={{ m: 1 }}>Error loading stage details: {error}</Alert>;
    } else if (stageDetails) {
        // Assuming stageDetails object structure from typical API response
        content = (
            <Box>
                <Grid container spacing={1}>
                     {/* Basic Stage Info */}
                     <Grid item xs={12} sm={6}>
                        <TextField
                            label="Stage ID"
                            value={stageDetails.stage_id || ''}
                            {...textFieldProps}
                        />
                    </Grid>
                     <Grid item xs={12} sm={6}>
                        <TextField
                            label="Stage Name"
                            value={stageDetails.stage_name || ''}
                            {...textFieldProps}
                        />
                    </Grid>
                    <Grid item xs={12} sm={6}>
                        <TextField
                            label="Stage Type"
                            value={stageDetails.stage_type || ''}
                            {...textFieldProps}
                            // Potentially map type ID/code to a user-friendly name later
                        />
                    </Grid>
                    <Grid item xs={12}>
                         <TextField
                            label="Description"
                            value={stageDetails.description || ''}
                            multiline
                            rows={2} // Adjust as needed
                            {...textFieldProps}
                        />
                    </Grid>
                </Grid>

                <Divider sx={{ my: 2 }} />
                <Typography variant="subtitle1" gutterBottom>Associated Templates</Typography>
                <Grid container spacing={1}>
                    {/* Template IDs */}
                    <Grid item xs={12} sm={4}>
                        <TextField
                            label="Selection Template ID"
                            value={stageDetails.selection_template_id || 'None'}
                            {...textFieldProps}
                        />
                    </Grid>
                    <Grid item xs={12} sm={4}>
                        <TextField
                            label="Extraction Template ID"
                            value={stageDetails.extraction_template_id || 'None'}
                            {...textFieldProps}
                        />
                    </Grid>
                    <Grid item xs={12} sm={4}>
                        <TextField
                            label="Response Template ID"
                            value={stageDetails.response_template_id || 'None'}
                            {...textFieldProps}
                        />
                    </Grid>
                </Grid>

                {/* Placeholder for Template Management Windows */}
                {/* <Divider sx={{ my: 2 }} />
                <Typography variant="subtitle1">Template Editors (Coming Soon)</Typography>
                {/* ... */}

                {/* Placeholder for Prompt Preview */}
                {/* <Divider sx={{ my: 2 }} />
                <Typography variant="subtitle1">Prompt Preview (Coming Soon)</Typography>
                {/* ... */}
            </Box>
        );
    } else {
        // Should not happen if selectedStageId is valid but data is null after loading without error
        content = <Typography variant="body2" sx={{ p: 2 }}>No details available for this stage.</Typography>;
    }

    // Only render the card if a stage is selected
    if (!selectedStageId) {
        return null;
    }

    return (
        <Card sx={{ mt: 2 }}>
            <CardContent>
                 {/* Add Edit button later */}
                <Typography variant="h6" gutterBottom>
                    Stage Details {stageDetails ? `(${stageDetails.stage_name || selectedStageId})` : ''}
                </Typography>
                 <Divider sx={{ mb: 2 }} />
                {content}
            </CardContent>
        </Card>
    );
}

export default StageDetailView;

================================================================================
File: StageDetailView.jsx
Path: .\front-end\src\components\StageDetailView.jsx
Size: 3582
Modified: 2025-04-17T01:19:08.391370
Created: 2025-04-08T13:14:54.730426
Hash: 9b82008bd1938875d99eed968cda53cc372af62bca4a944439bfc7010621079a
Lines: 88
================================================================================
import React from 'react';
import {
    Card,
    CardContent,
    Typography,
    Grid,
    Divider,
    Box,
    CircularProgress,
    Button
} from '@mui/material';
import { useStageDetails } from '../hooks/useStageDetails';

function StageDetailView({ selectedStageId, handleSnackbarOpen }) {
    const { stageDetails, isLoading, error } = useStageDetails(selectedStageId, handleSnackbarOpen);

    let content;
    if (isLoading) {
        content = (
            <Box display="flex" justifyContent="center" alignItems="center" minHeight={200}>
                <CircularProgress />
            </Box>
        );
    } else if (error) {
        content = (
            <Typography color="error" variant="body1">
                {error}
            </Typography>
        );
    } else if (!stageDetails) {
        content = (
            <Typography variant="body1">
                No stage selected. Please select a stage to view its details.
            </Typography>
        );
    } else {
        content = (
            <Grid container spacing={2}>
                <Grid item xs={12}>
                    <Typography variant="subtitle1" color="primary">Basic Information</Typography>
                    <Typography variant="body1"><strong>Stage ID:</strong> {stageDetails.stage_id}</Typography>
                    <Typography variant="body1"><strong>Name:</strong> {stageDetails.stage_name}</Typography>
                    <Typography variant="body1"><strong>Type:</strong> {stageDetails.stage_type}</Typography>
                    <Typography variant="body1"><strong>Description:</strong> {stageDetails.stage_description}</Typography>
                </Grid>
                
                <Grid item xs={12}>
                    <Divider sx={{ my: 2 }} />
                    <Typography variant="subtitle1" color="primary">Template IDs</Typography>
                    <Typography variant="body1">
                        <strong>Stage Selection Template:</strong> {stageDetails.stage_selection_template_id || 'Not configured'}
                    </Typography>
                    <Typography variant="body1">
                        <strong>Data Extraction Template:</strong> {stageDetails.data_extraction_template_id || 'Not configured'}
                    </Typography>
                    <Typography variant="body1">
                        <strong>Response Generation Template:</strong> {stageDetails.response_generation_template_id || 'Not configured'}
                    </Typography>
                </Grid>

                {stageDetails.created_at && (
                    <Grid item xs={12}>
                        <Divider sx={{ my: 2 }} />
                        <Typography variant="body2" color="textSecondary">
                            Created: {new Date(stageDetails.created_at).toLocaleString()}
                        </Typography>
                    </Grid>
                )}
            </Grid>
        );
    }

    return (
        <Card sx={{ mt: 2 }}>
            <CardContent>
                <Box display="flex" justifyContent="space-between" alignItems="center" mb={2}>
                    <Typography variant="h6">
                        Stage Details {stageDetails ? `(${stageDetails.stage_name || selectedStageId})` : ''}
                    </Typography>
                </Box>
                <Divider sx={{ mb: 2 }} />
                {content}
            </CardContent>
        </Card>
    );
}

export default StageDetailView;

================================================================================
File: StageEditor.js
Path: .\front-end\src\components\StageEditor.js
Size: 5952
Modified: 2025-04-17T01:19:08.439235
Created: 2025-04-05T00:44:47.326555
Hash: edb114238680312c0b7af7fc53992a990dc4bccfea865947cfb7bff177ba2450
Lines: 213
================================================================================
import React, { useState, useEffect, useRef } from 'react';
import { useNavigate } from 'react-router-dom';
import {
  Box,
  Paper,
  Typography,
  Button,
  Alert,
  CircularProgress,
  Grid,
  Card,
  CardContent,
  CardHeader
} from '@mui/material';
import AddEditStageForm from './AddEditStageForm/AddEditStageForm';

const StageEditor = ({ stageId }) => {
  const navigate = useNavigate();
  
  // State variables
  const [stage, setStage] = useState(null);
  const [error, setError] = useState('');
  const [isLoading, setIsLoading] = useState(false);
  
  // Get stored credentials
  const getStoredCredentials = () => {
    return {
      businessId: localStorage.getItem('businessId') || '',
      businessApiKey: localStorage.getItem('businessApiKey') || ''
    };
  };

  // Track if component is mounted
  const isMounted = useRef(true);
  
  useEffect(() => {
    return () => {
      isMounted.current = false;
    };
  }, []);

  // Fetch stage data on component mount
  useEffect(() => {
    const { businessId, businessApiKey } = getStoredCredentials();
    
    if (!businessId || !businessApiKey) {
      setError('Authentication required. Please log in.');
      return;
    }
    
    if (stageId && stageId !== 'new') {
      fetchStage(stageId, businessId, businessApiKey);
    }
  }, [stageId]);
  
  // Fetch specific stage data
  const fetchStage = async (id, businessId, businessApiKey) => {
    if (!isMounted.current || !businessId || !businessApiKey) {
      console.error('Missing required parameters:', { id, businessId, hasApiKey: !!businessApiKey });
      setIsLoading(false);
      return;
    }
    
    setIsLoading(true);
    setError('');
    try {
      const params = new URLSearchParams();
      params.append('business_id', businessId);
      
      const url = `/stages/${id}?${params.toString()}`;
      console.log('Fetching stage from URL:', url);
      
      const response = await fetch(url, {
        method: 'GET',
        headers: {
          'Accept': 'application/json',
          'Content-Type': 'application/json',
          'Authorization': `Bearer ${businessApiKey}`
        },
        credentials: 'include'
      });
      
      console.log('Response status:', response.status);
      
      // Log the raw response text first
      const responseText = await response.text();
      console.log('Raw response text:', responseText);
      
      if (!response.ok) {
        throw new Error(`Failed to fetch stage: ${response.status} ${responseText || ''}`);
      }
      
      // Try to parse the response text as JSON
      let data;
      try {
        data = JSON.parse(responseText);
        console.log('Parsed stage data:', data);
      } catch (parseError) {
        console.error('Failed to parse response as JSON:', parseError);
        throw new Error('Invalid JSON response from server');
      }
      
      if (!data) {
        throw new Error('Empty response from server');
      }

      // Validate required fields
      const requiredFields = ['stage_name', 'stage_description', 'stage_type'];
      const missingFields = requiredFields.filter(field => !data[field]);
      if (missingFields.length > 0) {
        console.error('Missing required fields:', missingFields);
        console.log('Available fields:', Object.keys(data));
        throw new Error(`Missing required fields: ${missingFields.join(', ')}`);
      }
      
      if (isMounted.current) {
        setStage(data);
        setError('');
        console.log('Stage state set to:', data);
      }
    } catch (err) {
      console.error('Error in fetchStage:', err);
      if (isMounted.current) {
        setError(`Error: ${err.message}`);
        setStage(null);
      }
    } finally {
      if (isMounted.current) {
        setIsLoading(false);
      }
    }
  };
  
  // Handle return to stage management
  const handleReturn = () => {
    navigate('/stage-management');
  };
  
  if (isLoading) {
    return (
      <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', minHeight: '200px' }}>
        <CircularProgress />
      </Box>
    );
  }
  
  if (error) {
    return (
      <Box>
        <Alert severity="error" sx={{ mb: 2 }}>
          {error}
        </Alert>
        <Button
          variant="outlined"
          onClick={handleReturn}
          sx={{ mt: 2 }}
        >
          Return to Stage Management
        </Button>
      </Box>
    );
  }
  
  if (!stage) {
    return (
      <Box>
        <Alert severity="info" sx={{ mb: 2 }}>
          No stage data available. This could mean either:
          <ul>
            <li>The stage doesn't exist</li>
            <li>The data format is invalid</li>
            <li>There was an error fetching the data</li>
          </ul>
          {error && <Typography color="error">Error details: {error}</Typography>}
        </Alert>
        <Button 
          variant="outlined"
          onClick={handleReturn}
          sx={{ mt: 2 }}
        >
          Return to Stage Management
        </Button>
      </Box>
    );
  }
  
  // Add debug output before render
  console.log('Rendering stage:', stage);

  return (
    <Box>
      <Paper sx={{ p: 3, mb: 3 }}>
        <Typography variant="h5" gutterBottom>
          {stageId === 'new' ? 'Create New Stage' : 'Edit Stage'}
        </Typography>
        
        <AddEditStageForm stageId={stageId} />
        
        <Box sx={{ mt: 3, display: 'flex', justifyContent: 'flex-start' }}>
          <Button
            variant="outlined"
            onClick={handleReturn}
            sx={{ mr: 2 }}
          >
            Return to Stage Management
          </Button>
        </Box>
      </Paper>
    </Box>
  );
};

export default StageEditor;

================================================================================
File: StageFlow.js
Path: .\front-end\src\components\StageFlow.js
Size: 9832
Modified: 2025-04-17T01:19:08.503256
Created: 2025-04-01T23:35:37.997434
Hash: 601d5994379c5531969ab65e8f49579d48ae9615156b33409303f26c10b74660
Lines: 314
================================================================================
import React, { useState, useEffect, useCallback } from 'react';
import {
  Box,
  Paper,
  Typography,
  Grid,
  Button,
  Dialog,
  DialogTitle,
  DialogContent,
  DialogActions,
  TextField,
  Select,
  MenuItem,
  FormControl,
  InputLabel,
  Alert,
  Snackbar,
  IconButton,
  Tooltip,
  CircularProgress
} from '@mui/material';
import AddIcon from '@mui/icons-material/Add';
import DeleteIcon from '@mui/icons-material/Delete';
import EditIcon from '@mui/icons-material/Edit';

const StageFlow = ({ stages, businessId, agentId }) => {
  const [transitions, setTransitions] = useState([]);
  const [isLoading, setIsLoading] = useState(false);
  const [openDialog, setOpenDialog] = useState(false);
  const [selectedTransition, setSelectedTransition] = useState(null);
  const [newTransition, setNewTransition] = useState({
    from_stage_id: '',
    to_stage_id: '',
    condition: '',
    priority: 1
  });
  const [error, setError] = useState('');
  const [success, setSuccess] = useState('');

  const fetchTransitions = useCallback(async () => {
    if (!businessId) {
      setError('Business ID is required');
      return;
    }

    setIsLoading(true);
    setError('');
    try {
      // Include agent_id in the query params if it exists
      const queryParams = new URLSearchParams({
        business_id: businessId
      });
      
      if (agentId) {
        queryParams.append('agent_id', agentId);
      }

      const response = await fetch(`/transitions?${queryParams.toString()}`, {
        credentials: 'include',
      });
      
      if (!response.ok) throw new Error('Failed to fetch transitions');
      const data = await response.json();
      setTransitions(data);
    } catch (err) {
      setError(err.message || 'Failed to fetch transitions');
    } finally {
      setIsLoading(false);
    }
  }, [businessId, agentId]);

  useEffect(() => {
    fetchTransitions();
  }, [fetchTransitions]);

  const handleCreateTransition = async () => {
    if (!newTransition.from_stage_id || !newTransition.to_stage_id) {
      setError('From stage and To stage are required');
      return;
    }

    setIsLoading(true);
    try {
      // Include agent_id in the transition data if it exists
      const transitionData = {
        ...newTransition,
        business_id: businessId,
        ...(agentId && { agent_id: agentId })
      };

      const response = await fetch('/transitions', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        credentials: 'include',
        body: JSON.stringify(transitionData),
      });
      
      if (!response.ok) throw new Error('Failed to create transition');
      const data = await response.json();
      setTransitions([...transitions, data]);
      setOpenDialog(false);
      setNewTransition({
        from_stage_id: '',
        to_stage_id: '',
        condition: '',
        priority: 1
      });
      setSuccess('Transition created successfully');
    } catch (err) {
      setError(err.message);
    } finally {
      setIsLoading(false);
    }
  };

  const handleDeleteTransition = async (transitionId) => {
    if (!window.confirm('Are you sure you want to delete this transition?')) {
      return;
    }

    setIsLoading(true);
    try {
      const response = await fetch(`/transitions/${transitionId}`, {
        method: 'DELETE',
        credentials: 'include',
      });
      
      if (!response.ok) throw new Error('Failed to delete transition');
      setTransitions(transitions.filter(t => t.transition_id !== transitionId));
      setSuccess('Transition deleted successfully');
    } catch (err) {
      setError(err.message);
    } finally {
      setIsLoading(false);
    }
  };

  const getStageNameById = (stageId) => {
    const stage = stages.find(s => s.stage_id === stageId);
    return stage ? stage.stage_name : 'Unknown Stage';
  };

  // Filter stages by agent_id if needed
  const filteredStages = agentId 
    ? stages.filter(stage => !stage.agent_id || stage.agent_id === agentId)
    : stages;

  return (
    <Box sx={{ p: 3 }}>
      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 3 }}>
        <Typography variant="h5">
          Stage Transitions {agentId ? 'for Selected Agent' : ''}
        </Typography>
        <Button
          variant="contained"
          onClick={() => {
            setSelectedTransition(null);
            setNewTransition({
              from_stage_id: '',
              to_stage_id: '',
              condition: '',
              priority: 1
            });
            setOpenDialog(true);
          }}
          disabled={filteredStages.length < 2}
        >
          Add Transition
        </Button>
      </Box>

      {filteredStages.length < 2 && (
        <Alert severity="info" sx={{ mb: 3 }}>
          You need at least two stages to create transitions.
        </Alert>
      )}

      {isLoading && (
        <Box sx={{ display: 'flex', justifyContent: 'center', my: 3 }}>
          <CircularProgress />
        </Box>
      )}
      
      {error && (
        <Alert severity="error" sx={{ my: 2 }}>
          {error}
        </Alert>
      )}

      {!isLoading && !error && transitions.length === 0 && (
        <Paper sx={{ p: 3, textAlign: 'center' }}>
          <Typography>No transitions defined yet.</Typography>
        </Paper>
      )}

      {!isLoading && !error && transitions.length > 0 && (
        <Grid container spacing={2}>
          {transitions.map((transition) => (
            <Grid item xs={12} md={6} key={transition.transition_id}>
              <Paper sx={{ p: 2 }}>
                <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 1 }}>
                  <Typography variant="subtitle1">
                    {getStageNameById(transition.from_stage_id)} → {getStageNameById(transition.to_stage_id)}
                  </Typography>
                  <Button 
                    variant="outlined" 
                    color="error" 
                    size="small"
                    onClick={() => handleDeleteTransition(transition.transition_id)}
                  >
                    Delete
                  </Button>
                </Box>
                <Typography variant="body2">
                  <strong>Condition:</strong> {transition.condition || 'Unconditional'}
                </Typography>
                <Typography variant="body2">
                  <strong>Priority:</strong> {transition.priority}
                </Typography>
              </Paper>
            </Grid>
          ))}
        </Grid>
      )}

      <Dialog open={openDialog} onClose={() => setOpenDialog(false)} maxWidth="sm" fullWidth>
        <DialogTitle>
          {selectedTransition ? 'Edit Transition' : 'Create New Transition'}
        </DialogTitle>
        <DialogContent>
          <FormControl fullWidth sx={{ mt: 2 }}>
            <InputLabel>From Stage</InputLabel>
            <Select
              value={newTransition.from_stage_id}
              onChange={(e) => setNewTransition({ ...newTransition, from_stage_id: e.target.value })}
              label="From Stage"
            >
              {filteredStages.map((stage) => (
                <MenuItem key={stage.stage_id} value={stage.stage_id}>
                  {stage.stage_name}
                </MenuItem>
              ))}
            </Select>
          </FormControl>

          <FormControl fullWidth sx={{ mt: 2 }}>
            <InputLabel>To Stage</InputLabel>
            <Select
              value={newTransition.to_stage_id}
              onChange={(e) => setNewTransition({ ...newTransition, to_stage_id: e.target.value })}
              label="To Stage"
            >
              {filteredStages.map((stage) => (
                <MenuItem key={stage.stage_id} value={stage.stage_id}>
                  {stage.stage_name}
                </MenuItem>
              ))}
            </Select>
          </FormControl>

          <TextField
            fullWidth
            label="Condition"
            value={newTransition.condition}
            onChange={(e) => setNewTransition({ ...newTransition, condition: e.target.value })}
            sx={{ mt: 2 }}
            helperText="Enter the condition that triggers this transition (e.g., 'user_agreed', 'payment_completed')"
          />

          <TextField
            margin="dense"
            label="Priority"
            type="number"
            fullWidth
            value={newTransition.priority}
            onChange={(e) => setNewTransition({ ...newTransition, priority: parseInt(e.target.value) || 1 })}
            sx={{ mt: 1 }}
          />
        </DialogContent>
        <DialogActions>
          <Button onClick={() => setOpenDialog(false)}>Cancel</Button>
          <Button onClick={handleCreateTransition} variant="contained">
            {selectedTransition ? 'Update' : 'Create'}
          </Button>
        </DialogActions>
      </Dialog>

      <Snackbar
        open={!!error}
        autoHideDuration={6000}
        onClose={() => setError('')}
      >
        <Alert severity="error" onClose={() => setError('')}>
          {error}
        </Alert>
      </Snackbar>

      <Snackbar
        open={!!success}
        autoHideDuration={6000}
        onClose={() => setSuccess('')}
      >
        <Alert severity="success" onClose={() => setSuccess('')}>
          {success}
        </Alert>
      </Snackbar>
    </Box>
  );
};

export default StageFlow;

================================================================================
File: StageManagement.js
Path: .\front-end\src\components\StageManagement.js
Size: 2991
Modified: 2025-04-17T01:19:08.567064
Created: 2025-03-28T21:49:10.331438
Hash: 7ff34d20e1f4aad5d7913617bc66db8527f51fb78760e256d5fff736fe48eddd
Lines: 59
================================================================================
import React from 'react';
import {
    TextField, Button, Typography, Card, CardContent, Box,
} from '@mui/material';

function StageManagement({
    stageId,
    setStageId,
    stageName,
    setStageName,
    stageDescription,
    setStageDescription,
    stageType,
    setStageType,
    selectionTemplateId,
    setSelectionTemplateId,
    selectionCustomPrompt,
    setSelectionCustomPrompt,
    extractionTemplateId,
    setExtractionTemplateId,
    extractionCustomPrompt,
    setExtractionCustomPrompt,
    responseTemplateId,
    setResponseTemplateId,
    responseCustomPrompt,
    setResponseCustomPrompt,
    stageOutput,
    setStageOutput,
    fetchStages,
    createStage,
    handleSnackbarOpen,
    businessId
}) {

    return (
        <Card sx={{ mt: 2 }}>
            <CardContent>
                <Typography variant="h6" gutterBottom>Stage Management</Typography>
                <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2, mt: 2 }}>
                    <TextField label="Stage ID" variant="outlined" value={stageId} onChange={(e) => setStageId(e.target.value)} />
                    <TextField label="Stage Name" variant="outlined" value={stageName} onChange={(e) => setStageName(e.target.value)} />
                    <TextField label="Stage Description" variant="outlined" value={stageDescription} onChange={(e) => setStageDescription(e.target.value)} />
                    <TextField label="Stage Type" variant="outlined" value={stageType} onChange={(e) => setStageType(e.target.value)} />
                    <TextField label="Selection Template ID" variant="outlined" value={selectionTemplateId} onChange={(e) => setSelectionTemplateId(e.target.value)} />
                    <TextField label="Selection Custom Prompt" variant="outlined" value={selectionCustomPrompt} onChange={(e) => setSelectionCustomPrompt(e.target.value)} />
                     <TextField label="Extraction Template ID" variant="outlined" value={extractionTemplateId} onChange={(e) => setExtractionTemplateId(e.target.value)} />
                     <TextField label="Extraction Custom Prompt" variant="outlined" value={extractionCustomPrompt} onChange={(e) => setExtractionCustomPrompt(e.target.value)} />
                    <TextField label="Response Template ID" variant="outlined" value={responseTemplateId} onChange={(e) => setResponseTemplateId(e.target.value)} />
                     <TextField label="Response Custom Prompt" variant="outlined" value={responseCustomPrompt} onChange={(e) => setResponseCustomPrompt(e.target.value)} />
                    <Button variant="contained" onClick={fetchStages}>Fetch Stages</Button>
                    <Button variant="contained" onClick={createStage}>Create Stage</Button>
                    <Typography variant="body1">{stageOutput}</Typography>
                </Box>
            </CardContent>
        </Card>
    );
}

export default StageManagement;

================================================================================
File: StageManager.js
Path: .\front-end\src\components\StageManager.js
Size: 29786
Modified: 2025-04-25T20:18:47.381660
Created: 2025-04-01T23:31:12.449774
Hash: 17d86d7fa6695bf0d74b6bfd1fc1a91ebf302a0589c143108c2000a1257e57d6
Lines: 851
================================================================================
import React, { useState, useEffect, useCallback } from 'react';
import { useParams, useNavigate, useLocation } from 'react-router-dom';
import {
  Container,
  Typography,
  Paper,
  Button,
  Dialog,
  DialogTitle,
  DialogContent,
  DialogActions,
  TextField,
  CircularProgress,
  Grid,
  Box,
  IconButton,
  Divider,
  Alert,
  Snackbar,
  List,
  ListItem,
  ListItemText,
  ListItemSecondaryAction,
  Tooltip,
  FormControl,
  InputLabel,
  MenuItem,
  Select,
  Card,
  CardContent,
  FormHelperText,
  ListSubheader
} from '@mui/material';
import AddIcon from '@mui/icons-material/Add';
import DeleteIcon from '@mui/icons-material/Delete';
import ArrowUpwardIcon from '@mui/icons-material/ArrowUpward';
import ArrowDownwardIcon from '@mui/icons-material/ArrowDownward';
import ArrowBackIcon from '@mui/icons-material/ArrowBack';
import SaveIcon from '@mui/icons-material/Save';
import DescriptionIcon from '@mui/icons-material/Description';
import VisibilityIcon from '@mui/icons-material/Visibility';
import StarIcon from '@mui/icons-material/Star';
import { fetchStages, createStage, updateStage, deleteStage } from '../services/stageService';
import { getAuthHeaders } from '../services/authService';
import useAgents from '../hooks/useAgents';
import { API_CONFIG } from '../config';

const StageManager = () => {
  // Get parameters from URL and location
  const { businessId: paramBusinessId, agentId: paramAgentId } = useParams();
  const location = useLocation();
  const navigate = useNavigate();
  
  // Extract query parameters if not using path params
  const queryParams = new URLSearchParams(location.search);
  const queryBusinessId = queryParams.get('business_id');
  const queryAgentId = queryParams.get('agent_id');
  
  // Use params or query params, then fallback to localStorage
  const businessId = paramBusinessId || queryBusinessId || localStorage.getItem('businessId');
  const agentId = paramAgentId || queryAgentId || localStorage.getItem('agentId');
  
  // States for stages and templates
  const [stages, setStages] = useState([]);
  const [selectedStage, setSelectedStage] = useState(null);
  const [isLoading, setIsLoading] = useState(true);
  const [error, setError] = useState('');
  const [success, setSuccess] = useState('');
  const [openDialog, setOpenDialog] = useState(false);
  const [openDeleteDialog, setOpenDeleteDialog] = useState(false);
  const [stageToDelete, setStageToDelete] = useState(null);
  const [newStageName, setNewStageName] = useState('');
  const [stageDescription, setStageDescription] = useState('');
  const [stageType, setStageType] = useState('conversation');
  const [availableTemplates, setAvailableTemplates] = useState({
    stage_selection: [],
    data_extraction: [],
    response_generation: []
  });
  const [selectedTemplates, setSelectedTemplates] = useState({
    stage_selection: '',
    data_extraction: '',
    response_generation: ''
  });
  const [defaultTemplates, setDefaultTemplates] = useState({
    stage_selection: '',
    data_extraction: '',
    response_generation: ''
  });
  const [snackbar, setSnackbar] = useState({
    open: false,
    message: '',
    severity: 'success'
  });
  const [agentName, setAgentName] = useState('');
  const [isSubmitting, setIsSubmitting] = useState(false);
  const { agents, isLoading: agentsLoading, error: agentsError, refreshAgents } = useAgents();
  const [selectedAgentId, setSelectedAgentId] = useState('');

  // Store current values in localStorage for persistence
  useEffect(() => {
    if (businessId) {
      localStorage.setItem('businessId', businessId);
    }
    if (agentId) {
      localStorage.setItem('agentId', agentId);
    }
  }, [businessId, agentId]);

  // Logging for debugging
  useEffect(() => {
    console.log("StageManager - Current params:", { 
      paramBusinessId, 
      paramAgentId,
      queryBusinessId,
      queryAgentId,
      resolvedBusinessId: businessId,
      resolvedAgentId: agentId
    });
  }, [
    paramBusinessId, 
    paramAgentId, 
    queryBusinessId, 
    queryAgentId, 
    businessId, 
    agentId
  ]);

  // Fetch templates for this business
  const fetchTemplates = async () => {
    try {
      const headers = getAuthHeaders();
      
      // Corrected URL: removed /api prefix
      const response = await fetch(`${API_CONFIG.BASE_URL}/templates?business_id=${businessId}`, { 
        headers,
        credentials: 'include'
      });
      
      if (!response.ok) {
        console.error('Template fetch error:', response.status, response.statusText);
        throw new Error('Failed to fetch templates');
      }
      
      const templates = await response.json();
      console.log('Fetched templates:', templates);
      
      // Initialize template categories
      const templatesByType = {
        stage_selection: [],
        data_extraction: [],
        response_generation: []
      };

      // Process and categorize templates
      templates.forEach(template => {
        // Add isDefault flag to identify default templates
        const normalizedTemplate = {
          ...template,
          isDefault: template.template_type.startsWith('default_')
        };

        // Map template types to categories
        const typeMapping = {
          'stage_selection': 'stage_selection',
          'default_stage_selection': 'stage_selection',
          'data_extraction': 'data_extraction',
          'default_data_extraction': 'data_extraction',
          'response_generation': 'response_generation',
          'default_response_generation': 'response_generation'
        };

        const category = typeMapping[template.template_type];
        if (category) {
          templatesByType[category].push(normalizedTemplate);
        }
      });

      // Sort templates within each category
      Object.keys(templatesByType).forEach(category => {
        templatesByType[category].sort((a, b) => {
          // Sort by isDefault first (default templates first)
          if (a.isDefault !== b.isDefault) {
            return a.isDefault ? -1 : 1;
          }
          // Then sort by name
          return a.template_name.localeCompare(b.template_name);
        });
      });

      setAvailableTemplates(templatesByType);
      
      // Set default templates if available
      const defaultTemplates = {
        stage_selection: '',
        data_extraction: '',
        response_generation: ''
      };
      
      // Find default templates in each category
      Object.keys(templatesByType).forEach(category => {
        const defaultTemplate = templatesByType[category].find(t => t.isDefault);
        if (defaultTemplate) {
          defaultTemplates[category] = defaultTemplate.template_id;
        }
      });
      
      setDefaultTemplates(defaultTemplates);
      
      // If we're opening the dialog, pre-select default templates
      if (openDialog) {
        setSelectedTemplates(defaultTemplates);
      }
      
    } catch (error) {
      console.error('Error fetching templates:', error);
      setError('Failed to load templates. Please try again.');
    }
  };

  // Handle template selection change
  const handleTemplateChange = (event, templateType) => {
    const templateId = event.target.value;
    console.log(`Template changed for ${templateType}: ${templateId}`);
    
    setSelectedTemplates(prev => ({
      ...prev,
      [templateType]: templateId
    }));
  };

  // Fetch stages based on business ID and agent ID
  const fetchStagesData = useCallback(async () => {
    if (!businessId) {
      console.error("No business ID available for fetching stages");
      setIsLoading(false);
      return;
    }
    
    setIsLoading(true);
    try {
      console.log("Fetching stages for business:", businessId);
      const stagesData = await fetchStages(businessId);
      console.log("Fetched stages:", stagesData);
      setStages(stagesData);
    } catch (err) {
      console.error("Error fetching stages:", err);
      showSnackbar(err.message, 'error');
    } finally {
      setIsLoading(false);
    }
  }, [businessId]);

  // Fetch agent details
  const fetchAgentDetails = useCallback(async () => {
    if (!businessId || !agentId) {
      return;
    }

    try {
      // Construct the correct URL using API_CONFIG
      const response = await fetch(`${API_CONFIG.BASE_URL}${API_CONFIG.ENDPOINTS.AGENTS}/${agentId}?business_id=${businessId}`, {
        headers: {
          'Accept': 'application/json',
          'Authorization': `Bearer ${localStorage.getItem('businessApiKey')}`
        },
        credentials: 'include' // Keep credentials if needed by backend
      });
      
      if (!response.ok) {
        throw new Error('Failed to fetch agent details');
      }
      
      const agentData = await response.json();
      setAgentName(agentData.agent_name || `Agent ${agentId}`);
    } catch (err) {
      console.error("Error fetching agent details:", err);
      setAgentName(`Agent ${agentId}`); // Fallback
    }
  }, [businessId, agentId]);

  // Initial data fetch
  useEffect(() => {
    if (businessId) {
      const loadData = async () => {
        setIsLoading(true);
        setError('');
        
        try {
          // Load templates first
          await fetchTemplates();
          // Then load stages
          await fetchStagesData();
          
          // Set the selected agent ID if it exists in the stage data
          if (selectedStage && selectedStage.agent_id) {
            setSelectedAgentId(selectedStage.agent_id);
          } else {
            setSelectedAgentId('');
          }
        } catch (err) {
          console.error("Error in initial data load:", err);
          showSnackbar("Failed to load initial data: " + err.message, 'error');
        } finally {
          setIsLoading(false);
        }
      };
      
      loadData();
    }
  }, [businessId]);

  // Update useEffect to fetch agent details
  useEffect(() => {
    if (agentId) {
      fetchAgentDetails();
    }
  }, [agentId, fetchAgentDetails]);

  // Helper function for showing snackbar messages
  const showSnackbar = (message, severity = 'success') => {
    setSnackbar({
      open: true,
      message,
      severity
    });
  };

  const handleCloseSnackbar = () => {
    setSnackbar({
      ...snackbar,
      open: false
    });
  };

  const handleNavigateToHome = () => {
    navigate('/business');
  };

  const handleOpenNewStageDialog = () => {
    setNewStageName('');
    setStageDescription('');
    setStageType('conversation');
    
    // Set default templates if available
    setSelectedTemplates(defaultTemplates);
    
    setSelectedAgentId(agentId || ''); // Set the selected agent ID to the current agent ID
    setOpenDialog(true);
  };

  const handleCreateStage = async () => {
    if (!newStageName.trim()) {
      setError('Stage name is required');
      return;
    }
    
    setIsSubmitting(true);
    setError('');
    
    try {
      const stageData = {
        business_id: businessId,
        agent_id: selectedAgentId, // Include the selected agent ID
        stage_name: newStageName.trim(),
        stage_description: stageDescription.trim(),
        stage_type: stageType,
        stage_selection_template_id: selectedTemplates.stage_selection || null,
        data_extraction_template_id: selectedTemplates.data_extraction || null,
        response_generation_template_id: selectedTemplates.response_generation || null
      };
      
      console.log('Creating stage with data:', stageData);

      // Use the createStage function from stageService
      const result = await createStage(stageData);
      console.log('Stage created successfully:', result);
      
      showSnackbar('Stage created successfully', 'success');
      
      // Reset form
      setNewStageName('');
      
      // Refresh stages
      fetchStagesData();
      
      // Close dialog
      setOpenDialog(false);
    } catch (error) {
      console.error('Error creating stage:', error);
      showSnackbar(error.message, 'error');
    } finally {
      setIsSubmitting(false);
    }
  };

  const navigateToStageView = (stageId) => {
    // Construct the URL with query parameters
    let url = `/api/stages/${stageId}?business_id=${businessId}`;
    if (agentId) {
      url += `&agent_id=${agentId}`;
    }
    navigate(url);
  };

  const handleDeleteStage = async () => {
    if (!stageToDelete || !businessId) return;

    try {
      await deleteStage(stageToDelete.stage_id, businessId);
      await fetchStagesData();
      setOpenDeleteDialog(false);
      showSnackbar('Stage deleted successfully', 'success');
    } catch (err) {
      console.error("Error deleting stage:", err);
      showSnackbar(err.message, 'error');
    }
  };

  const handleMoveStage = async (stageId, direction) => {
    try {
      const currentIndex = stages.findIndex(s => s.stage_id === stageId);
      if (currentIndex === -1) return;
      
      // If trying to move first item up or last item down, do nothing
      if ((currentIndex === 0 && direction === 'up') || 
          (currentIndex === stages.length - 1 && direction === 'down')) {
        return;
      }
      
      const targetIndex = direction === 'up' ? currentIndex - 1 : currentIndex + 1;
      
      // Swap the order values in the stage_config
      const updatedStages = [...stages];
      const currentStage = { ...updatedStages[currentIndex] };
      const targetStage = { ...updatedStages[targetIndex] };
      
      // Update stage_config.order values
      currentStage.stage_config = { ...currentStage.stage_config, order: targetIndex + 1 };
      targetStage.stage_config = { ...targetStage.stage_config, order: currentIndex + 1 };
      
      // Update both stages in the database
      const currentUpdate = fetch(`/stages/${currentStage.stage_id}`, {
        method: 'PUT',
        headers: {
          'Content-Type': 'application/json',
        },
        credentials: 'include',
        body: JSON.stringify(currentStage),
      });
      
      const targetUpdate = fetch(`/stages/${targetStage.stage_id}`, {
        method: 'PUT',
        headers: {
          'Content-Type': 'application/json',
        },
        credentials: 'include',
        body: JSON.stringify(targetStage),
      });
      
      await Promise.all([currentUpdate, targetUpdate]);
      
      // Refresh stages
      await fetchStagesData();
      showSnackbar('Stage order updated', 'success');
    } catch (err) {
      showSnackbar(err.message, 'error');
    }
  };

  // Add a handler for agent selection
  const handleAgentChange = (event) => {
    setSelectedAgentId(event.target.value);
  };

  return (
    <Container maxWidth="lg" sx={{ mt: 4, mb: 4 }}>
      <Paper sx={{ p: 3, mb: 4 }}>
        <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>
          <IconButton onClick={handleNavigateToHome} sx={{ mr: 1 }}>
            <ArrowBackIcon />
          </IconButton>
          <Typography variant="h5" component="h1" gutterBottom sx={{ flexGrow: 1 }}>
            Stage Manager
            {businessId && <Typography variant="subtitle1" component="span" color="text.secondary">
              {` - Business ID: ${businessId}`}
              {agentId && ` - Agent: ${agentName || agentId}`}
            </Typography>}
          </Typography>
          <Button
            variant="contained"
            color="primary"
            startIcon={<AddIcon />}
            onClick={handleOpenNewStageDialog}
            sx={{ mr: 1 }}
          >
            Create Stage
          </Button>
          <Button
            variant="outlined"
            color="secondary"
            startIcon={<DescriptionIcon />}
            onClick={() => navigate('/templates')}
          >
            Manage Templates
          </Button>
        </Box>
        
        <Divider sx={{ mb: 3 }} />
        
        {error && (
          <Alert severity="error" sx={{ mb: 2 }} onClose={() => setError('')}>
            {error}
          </Alert>
        )}
        
        {success && (
          <Alert severity="success" sx={{ mb: 2 }} onClose={() => setSuccess('')}>
            {success}
          </Alert>
        )}
        
        {isLoading ? (
          <Box sx={{ display: 'flex', justifyContent: 'center', p: 4 }}>
            <CircularProgress />
          </Box>
        ) : (
          <>
            {stages.length === 0 ? (
              <Alert severity="info">
                No stages found. Create your first stage to get started.
              </Alert>
            ) : (
              <List sx={{ bgcolor: 'background.paper' }}>
                {[...stages].sort((a, b) => 
                  (a.stage_config?.order || Infinity) - (b.stage_config?.order || Infinity)
                ).map((stage) => (
                  <ListItem 
                    key={stage.stage_id}
                    sx={{ 
                      mb: 1,
                      bgcolor: 'background.paper'
                    }}
                  >
                    <ListItemText
                      primary={stage.stage_name}
                      secondary={
                        <>
                          <Typography component="span" variant="body2" color="text.primary">
                            {stage.stage_description || 'No description'}
                          </Typography>
                          {stage.stage_config && stage.stage_config.order && 
                            ` • Order: ${stage.stage_config.order}`}
                        </>
                      }
                    />
                    <ListItemSecondaryAction>
                      <Tooltip title="Move Up">
                        <IconButton 
                          edge="end" 
                          aria-label="move-up"
                          onClick={(e) => {
                            e.stopPropagation();
                            handleMoveStage(stage.stage_id, 'up');
                          }}
                          disabled={stages.indexOf(stage) === 0}
                        >
                          <ArrowUpwardIcon />
                        </IconButton>
                      </Tooltip>
                      <Tooltip title="Move Down">
                        <IconButton 
                          edge="end" 
                          aria-label="move-down"
                          onClick={(e) => {
                            e.stopPropagation();
                            handleMoveStage(stage.stage_id, 'down');
                          }}
                          disabled={stages.indexOf(stage) === stages.length - 1}
                        >
                          <ArrowDownwardIcon />
                        </IconButton>
                      </Tooltip>
                      <Tooltip title="View Stage">
                        <IconButton 
                          edge="end" 
                          aria-label="view"
                          onClick={(e) => {
                            e.stopPropagation();
                            navigateToStageView(stage.stage_id);
                          }}
                        >
                          <VisibilityIcon />
                        </IconButton>
                      </Tooltip>
                      <Tooltip title="Delete Stage">
                        <IconButton 
                          edge="end" 
                          aria-label="delete"
                          onClick={(e) => {
                            e.stopPropagation();
                            setStageToDelete(stage);
                            setOpenDeleteDialog(true);
                          }}
                        >
                          <DeleteIcon />
                        </IconButton>
                      </Tooltip>
                    </ListItemSecondaryAction>
                  </ListItem>
                ))}
              </List>
            )}
          </>
        )}
      </Paper>
      
      {/* Create Stage Dialog */}
      <Dialog 
        open={openDialog} 
        onClose={() => !isSubmitting && setOpenDialog(false)}
        maxWidth="md"
        fullWidth
      >
        <DialogTitle>
          {selectedStage ? 'Edit Stage' : 'Create New Stage'}
        </DialogTitle>
        <DialogContent>
          <Grid container spacing={2}>
            {/* Add console logs to help debug */}
            {console.log("Dialog rendering with state:", {
              selectedTemplates,
              availableTemplates,
              defaultTemplates,
              templatesInfo: {
                stageSelectionCount: availableTemplates.stage_selection.length,
                dataExtractionCount: availableTemplates.data_extraction.length,
                responseGenerationCount: availableTemplates.response_generation.length,
              }
            })}
            
            {/* Stage Name */}
            <Grid item xs={12}>
              <TextField
                fullWidth
                label="Stage Name"
                value={newStageName}
                onChange={(e) => setNewStageName(e.target.value)}
                required
              />
            </Grid>
            
            {/* Stage Description */}
            <Grid item xs={12}>
              <TextField
                fullWidth
                multiline
                rows={2}
                label="Stage Description"
                value={stageDescription}
                onChange={(e) => setStageDescription(e.target.value)}
              />
            </Grid>
            
            {/* Template Selection Dropdown - Stage Selection */}
            <Grid item xs={12}>
              <FormControl fullWidth>
                <InputLabel>Stage Selection Template</InputLabel>
                <Select
                  fullWidth
                  value={selectedTemplates.stage_selection}
                  onChange={(e) => handleTemplateChange(e, 'stage_selection')}
                >
                  <MenuItem value="">
                    <em>None</em>
                  </MenuItem>
                  {availableTemplates.stage_selection.map((template) => (
                    <MenuItem 
                      key={template.template_id} 
                      value={template.template_id}
                      sx={template.isDefault ? { 
                        backgroundColor: 'rgba(245, 0, 87, 0.04)',
                        '&:hover': {
                          backgroundColor: 'rgba(245, 0, 87, 0.08)'
                        }
                      } : {}}
                    >
                      {template.isDefault ? (
                        <Box sx={{ display: 'flex', alignItems: 'center' }}>
                          <StarIcon sx={{ mr: 1, color: 'secondary.main', fontSize: '1rem' }} />
                          {template.template_name}
                        </Box>
                      ) : template.template_name}
                    </MenuItem>
                  ))}
                </Select>
                <FormHelperText>Template for determining if this stage should handle the message</FormHelperText>
              </FormControl>
            </Grid>
            
            {/* Template Selection Dropdown - Data Extraction */}
            <Grid item xs={12}>
              <FormControl fullWidth>
                <InputLabel>Data Extraction Template</InputLabel>
                <Select
                  fullWidth
                  value={selectedTemplates.data_extraction}
                  onChange={(e) => handleTemplateChange(e, 'data_extraction')}
                >
                  <MenuItem value="">
                    <em>None</em>
                  </MenuItem>
                  {availableTemplates.data_extraction.map((template) => (
                    <MenuItem 
                      key={template.template_id} 
                      value={template.template_id}
                      sx={template.isDefault ? { 
                        backgroundColor: 'rgba(245, 0, 87, 0.04)',
                        '&:hover': {
                          backgroundColor: 'rgba(245, 0, 87, 0.08)'
                        }
                      } : {}}
                    >
                      {template.isDefault ? (
                        <Box sx={{ display: 'flex', alignItems: 'center' }}>
                          <StarIcon sx={{ mr: 1, color: 'secondary.main', fontSize: '1rem' }} />
                          {template.template_name}
                        </Box>
                      ) : template.template_name}
                    </MenuItem>
                  ))}
                </Select>
                <FormHelperText>Template for extracting data from the message</FormHelperText>
              </FormControl>
            </Grid>
            
            {/* Template Selection Dropdown - Response Generation */}
            <Grid item xs={12}>
              <FormControl fullWidth>
                <InputLabel>Response Generation Template</InputLabel>
                <Select
                  fullWidth
                  value={selectedTemplates.response_generation}
                  onChange={(e) => handleTemplateChange(e, 'response_generation')}
                >
                  <MenuItem value="">
                    <em>None</em>
                  </MenuItem>
                  {availableTemplates.response_generation.map((template) => (
                    <MenuItem 
                      key={template.template_id} 
                      value={template.template_id}
                      sx={template.isDefault ? { 
                        backgroundColor: 'rgba(245, 0, 87, 0.04)',
                        '&:hover': {
                          backgroundColor: 'rgba(245, 0, 87, 0.08)'
                        }
                      } : {}}
                    >
                      {template.isDefault ? (
                        <Box sx={{ display: 'flex', alignItems: 'center' }}>
                          <StarIcon sx={{ mr: 1, color: 'secondary.main', fontSize: '1rem' }} />
                          {template.template_name}
                        </Box>
                      ) : template.template_name}
                    </MenuItem>
                  ))}
                </Select>
                <FormHelperText>Template for generating responses</FormHelperText>
              </FormControl>
            </Grid>
            
            {/* Add Agent Selection Dropdown */}
            <FormControl fullWidth margin="normal">
              <InputLabel id="agent-select-label">Agent</InputLabel>
              <Select
                labelId="agent-select-label"
                id="agent-select"
                value={selectedAgentId}
                label="Agent"
                onChange={handleAgentChange}
                disabled={isSubmitting}
              >
                <MenuItem value="">
                  <em>None</em>
                </MenuItem>
                {agents.map((agent) => (
                  <MenuItem key={agent.agent_id} value={agent.agent_id}>
                    {agent.agent_name}
                  </MenuItem>
                ))}
              </Select>
              <FormHelperText>
                Select an agent to associate with this stage
              </FormHelperText>
            </FormControl>
          </Grid>
        </DialogContent>
        <DialogActions>
          <Button onClick={() => !isSubmitting && setOpenDialog(false)}>Cancel</Button>
          <Button 
            onClick={handleCreateStage} 
            variant="contained" 
            color="primary"
            disabled={!newStageName.trim()}
            startIcon={<SaveIcon />}
          >
            Create & Save
          </Button>
        </DialogActions>
      </Dialog>

      {/* Delete Confirmation Dialog */}
      <Dialog
        open={openDeleteDialog}
        onClose={() => setOpenDeleteDialog(false)}
      >
        <DialogTitle>Confirm Delete</DialogTitle>
        <DialogContent>
          <Typography>
            Are you sure you want to delete the stage "{stageToDelete?.stage_name}"?
            This action cannot be undone.
          </Typography>
        </DialogContent>
        <DialogActions>
          <Button onClick={() => setOpenDeleteDialog(false)}>Cancel</Button>
          <Button 
            onClick={handleDeleteStage} 
            variant="contained" 
            color="error"
          >
            Delete
          </Button>
        </DialogActions>
      </Dialog>

      {/* Snackbar for notifications */}
      <Snackbar
        open={snackbar.open}
        autoHideDuration={6000}
        onClose={handleCloseSnackbar}
      >
        <Alert severity={snackbar.severity} onClose={handleCloseSnackbar}>
          {snackbar.message}
        </Alert>
      </Snackbar>
    </Container>
  );
};

export default StageManager;

================================================================================
File: StageSection.js
Path: .\front-end\src\components\StageSection.js
Size: 5172
Modified: 2025-04-25T12:58:31.512765
Created: 2025-04-01T16:16:18.326624
Hash: 02838510b0d076342a7c7fc3451385572df11b7ce2840f4480e696a939a5d9dd
Lines: 123
================================================================================
import React, { useState } from 'react';
import {
    Typography,
    Card,
    CardContent,
    List,
    ListItem,
    ListItemText,
    CircularProgress,
    Alert,
    Button,
    Box,
    Divider,
    IconButton // For potential Edit button
} from '@mui/material';
import AddCircleOutlineIcon from '@mui/icons-material/AddCircleOutline';
import EditIcon from '@mui/icons-material/Edit'; // Example icon for Edit
import useStages from '../hooks/useStages'; // Import the hook we just created

// Define the StageSection component
function StageSection({ selectedAgentId, handleSnackbarOpen, onStageSelect }) {
    // Use the hook to get stages for the selected agent
    const { stages, isLoading, error, refreshStages } = useStages(selectedAgentId, handleSnackbarOpen);
    const [selectedStageId, setSelectedStageId] = useState(null);

    // Handler for selecting a stage
    const handleStageClick = (stageId) => {
        console.log("Selected Stage ID:", stageId);
        setSelectedStageId(stageId);
        if (onStageSelect) {
            onStageSelect(stageId); // Notify parent component
        }
    };

     // Handler for the Create New Stage button click
     const handleCreateStage = () => {
        // TODO: Implement logic to open a modal or form for creating a new stage
        console.log("Create New Stage clicked");
        handleSnackbarOpen("Create stage functionality not yet implemented.", "info");
    };

    // Handler for the Edit Stage button click
    const handleEditStage = (stageId, event) => {
        event.stopPropagation(); // Prevent triggering handleStageClick
        // TODO: Implement logic to open a modal or form for editing the stage
        console.log("Edit Stage clicked:", stageId);
        handleSnackbarOpen(`Edit stage (${stageId}) functionality not yet implemented.`, "info");
    };


    // Determine the content based on whether an agent is selected and loading/error states
    let content;
    if (!selectedAgentId) {
        content = <Typography variant="body2" sx={{ p: 2, textAlign: 'center', color: 'text.secondary' }}>Please select an agent to view stages.</Typography>;
    } else if (isLoading) {
        content = (
            <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', p: 2 }}>
                <CircularProgress size={24} />
                <Typography sx={{ ml: 1 }} variant="body2">Loading Stages...</Typography>
            </Box>
        );
    } else if (error) {
        content = <Alert severity="error">Error loading stages: {error}</Alert>;
    } else if (stages.length > 0) {
        content = (
            <List dense>
                {stages.map((stage) => (
                    <ListItem
                        key={stage.stage_id} // Assuming stage object has stage_id
                        button
                        selected={selectedStageId === stage.stage_id}
                        onClick={() => handleStageClick(stage.stage_id)}
                        secondaryAction={
                            <IconButton
                                edge="end"
                                aria-label="edit"
                                onClick={(e) => handleEditStage(stage.stage_id, e)}
                            >
                                <EditIcon />
                            </IconButton>
                        }
                    >
                        {/* Assuming stage object has stage_name and description */}
                        <ListItemText
                            primary={stage.stage_name || 'Unnamed Stage'}
                            secondary={stage.description || 'No description'}
                        />
                    </ListItem>
                ))}
            </List>
        );
    } else {
        content = <Typography variant="body2" sx={{ p: 2, textAlign: 'center' }}>No stages found for this agent.</Typography>;
    }

    return (
        <Card sx={{ mt: 2 }}>
             <CardContent>
                <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 1 }}>
                    <Typography variant="h6" gutterBottom component="div">
                        Stages
                    </Typography>
                     {/* Conditionally render Create button only if an agent is selected */}
                     {selectedAgentId && (
                        <Button
                            variant="contained"
                            size="small"
                            startIcon={<AddCircleOutlineIcon />}
                            onClick={handleCreateStage}
                            disabled={!selectedAgentId} // Disable if no agent selected (redundant due to outer check, but safe)
                        >
                            Create Stage
                        </Button>
                     )}
                </Box>
                <Divider sx={{ mb: 1 }}/>
                {content}
            </CardContent>
        </Card>
    );
}

export default StageSection;

================================================================================
File: StageView.jsx
Path: .\front-end\src\components\StageView.jsx
Size: 19372
Modified: 2025-04-25T14:19:21.547860
Created: 2025-04-08T13:23:04.954572
Hash: c5d95c7ce1f3600711f6ecdf75389dbadc64292cc0d1e9675afd43e9f5ced04c
Lines: 473
================================================================================
import React, { useState, useEffect } from 'react';
import { useParams, useNavigate } from 'react-router-dom';
import {
    Box,
    Paper,
    Typography,
    Divider,
    CircularProgress,
    Alert,
    Grid,
    Button,
    Dialog,
    DialogTitle,
    DialogContent,
    DialogActions,
    TextField,
    FormControl,
    InputLabel,
    Select,
    MenuItem
} from '@mui/material';
import { API_CONFIG } from '../config';
import EditIcon from '@mui/icons-material/Edit';
import useAgents from '../hooks/useAgents';

const StageView = () => {
    const { stageId } = useParams();
    const navigate = useNavigate();
    const [loading, setLoading] = useState(true);
    const [error, setError] = useState(null);
    const [stageData, setStageData] = useState(null);
    const [editDialogOpen, setEditDialogOpen] = useState(false);
    const [newStageName, setNewStageName] = useState('');
    const [newStageDescription, setNewStageDescription] = useState('');
    const [editLoading, setEditLoading] = useState(false);
    const [editError, setEditError] = useState(null);
    const [editType, setEditType] = useState(''); // 'name', 'description', or 'agent'
    const [selectedAgentId, setSelectedAgentId] = useState('');
    const [agents, setAgents] = useState([]);
    const [agentsLoading, setAgentsLoading] = useState(false);
    const [agentsError, setAgentsError] = useState(null);

    // Fetch agents
    useEffect(() => {
        const fetchAgents = async () => {
            setAgentsLoading(true);
            setAgentsError(null);
            
            try {
                const businessId = localStorage.getItem('businessId');
                const businessApiKey = localStorage.getItem('businessApiKey');

                if (!businessId || !businessApiKey) {
                    setAgentsError('Authentication required. Please log in.');
                    setAgentsLoading(false);
                    return;
                }

                // Corrected fetch URL using API_CONFIG
                const response = await fetch(`${API_CONFIG.BASE_URL}${API_CONFIG.ENDPOINTS.AGENTS}?business_id=${businessId}`, {
                    headers: {
                        'Accept': 'application/json',
                        'Authorization': `Bearer ${businessApiKey}`
                    }
                });

                if (!response.ok) {
                    const errorData = await response.json().catch(() => ({}));
                    throw new Error(errorData.message || `HTTP error ${response.status}`);
                }

                const data = await response.json();
                setAgents(data);
            } catch (err) {
                console.error('Error fetching agents:', err);
                setAgentsError(err.message);
            } finally {
                setAgentsLoading(false);
            }
        };

        fetchAgents();
    }, []);

    useEffect(() => {
        const fetchStageData = async () => {
            if (!stageId) {
                setLoading(false);
                return;
            }

            try {
                const businessId = localStorage.getItem('businessId');
                const businessApiKey = localStorage.getItem('businessApiKey');

                if (!businessId || !businessApiKey) {
                    setError('Authentication required. Please log in.');
                    setLoading(false);
                    return;
                }

                const response = await fetch(`${API_CONFIG.BASE_URL}${API_CONFIG.ENDPOINTS.STAGES}/${stageId}?business_id=${businessId}`, {
                    headers: {
                        'Accept': 'application/json',
                        'Authorization': `Bearer ${businessApiKey}`
                    }
                });

                if (!response.ok) {
                    const errorData = await response.json().catch(() => ({}));
                    throw new Error(errorData.message || `HTTP error ${response.status}`);
                }

                const data = await response.json();
                console.log('Stage data:', data);
                setStageData(data);
                setNewStageName(data.stage_name);
                setNewStageDescription(data.stage_description || '');
                setSelectedAgentId(data.agent_id || '');
            } catch (err) {
                console.error('Error fetching stage:', err);
                setError(err.message);
            } finally {
                setLoading(false);
            }
        };

        fetchStageData();
    }, [stageId]);

    const handleEditClick = (type) => {
        setEditType(type);
        setEditDialogOpen(true);
    };

    const handleEditClose = () => {
        setEditDialogOpen(false);
        setEditError(null);
    };

    const handleSaveEdit = async () => {
        if (editType === 'name' && !newStageName.trim()) {
            setEditError('Stage name cannot be empty');
            return;
        }

        if (editType === 'description' && !newStageDescription.trim()) {
            setEditError('Stage description cannot be empty');
            return;
        }

        setEditLoading(true);
        setEditError(null);

        try {
            const businessId = localStorage.getItem('businessId')?.trim();
            const businessApiKey = localStorage.getItem('businessApiKey');

            const response = await fetch(`${API_CONFIG.BASE_URL}${API_CONFIG.ENDPOINTS.STAGES}/${stageId}`, {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json',
                    'Accept': 'application/json',
                    'Authorization': `Bearer ${businessApiKey}`
                },
                body: JSON.stringify({
                    business_id: businessId,
                    stage_name: editType === 'name' ? newStageName.trim() : stageData.stage_name,
                    stage_description: editType === 'description' ? newStageDescription.trim() : stageData.stage_description,
                    stage_type: stageData.stage_type,
                    stage_selection_template_id: stageData.stage_selection_template_id,
                    data_extraction_template_id: stageData.data_extraction_template_id,
                    response_generation_template_id: stageData.response_generation_template_id,
                    agent_id: editType === 'agent' ? selectedAgentId : stageData.agent_id
                })
            });

            if (!response.ok) {
                const errorData = await response.json().catch(() => ({}));
                throw new Error(errorData.message || `HTTP error ${response.status}`);
            }

            // Fetch the updated stage data
            const updatedResponse = await fetch(`${API_CONFIG.BASE_URL}${API_CONFIG.ENDPOINTS.STAGES}/${stageId}?business_id=${businessId}`, {
                headers: {
                    'Accept': 'application/json',
                    'Authorization': `Bearer ${businessApiKey}`
                }
            });

            if (!updatedResponse.ok) {
                throw new Error('Failed to fetch updated stage data');
            }

            const updatedData = await updatedResponse.json();
            setStageData(updatedData);
            setEditDialogOpen(false);
        } catch (err) {
            console.error('Error updating stage:', err);
            setEditError(err.message);
        } finally {
            setEditLoading(false);
        }
    };

    const handleAgentChange = (event) => {
        setSelectedAgentId(event.target.value);
    };

    const TemplateField = ({ label, templateId }) => (
        <Box sx={{ display: 'flex', alignItems: 'center', mb: 1 }}>
            <Typography variant="body1" component="span">
                <strong>{label}:</strong> {templateId || 'Not set'}
            </Typography>
        </Box>
    );

    if (loading) {
        return (
            <Box display="flex" justifyContent="center" p={3}>
                <CircularProgress />
            </Box>
        );
    }

    if (error) {
        return (
            <Alert severity="error" sx={{ mt: 2 }}>
                {error}
            </Alert>
        );
    }

    if (!stageData) {
        return (
            <Alert severity="info" sx={{ mt: 2 }}>
                No stage data available
            </Alert>
        );
    }

    return (
        <Paper sx={{ p: 3, mt: 2 }}>
            {/* Basic Information Section */}
            <Box display="flex" justifyContent="space-between" alignItems="center" mb={2}>
                <Typography variant="h6">
                    Basic Information
                </Typography>
            </Box>
            <Divider sx={{ mb: 2 }} />
            
            <Grid container spacing={2}>
                <Grid item xs={12}>
                    <Box display="flex" justifyContent="space-between" alignItems="center">
                        <Box>
                            <Typography variant="subtitle2" color="primary">Name</Typography>
                            <Typography>{stageData.stage_name}</Typography>
                        </Box>
                        <Button
                            startIcon={<EditIcon />}
                            variant="outlined"
                            onClick={() => handleEditClick('name')}
                        >
                            Edit Stage Name
                        </Button>
                    </Box>
                </Grid>

                <Grid item xs={12}>
                    <Box display="flex" justifyContent="space-between" alignItems="center">
                        <Box>
                            <Typography variant="subtitle2" color="primary">Description</Typography>
                            <Typography>{stageData.stage_description || 'No description'}</Typography>
                        </Box>
                        <Button
                            startIcon={<EditIcon />}
                            variant="outlined"
                            onClick={() => handleEditClick('description')}
                        >
                            Edit Description
                        </Button>
                    </Box>
                </Grid>

                <Grid item xs={12}>
                    <Box display="flex" justifyContent="space-between" alignItems="center">
                        <Box>
                            <Typography variant="subtitle2" color="primary">Agent</Typography>
                            <Typography>
                                {stageData.agent_id 
                                    ? agents.find(a => a.agent_id === stageData.agent_id)?.agent_name || 'Unknown Agent' 
                                    : 'No agent assigned'}
                            </Typography>
                        </Box>
                        <Button
                            startIcon={<EditIcon />}
                            variant="outlined"
                            onClick={() => handleEditClick('agent')}
                        >
                            Assign Agent
                        </Button>
                    </Box>
                </Grid>

                <Grid item xs={12}>
                    <Typography variant="subtitle2" color="primary">Type</Typography>
                    <Typography>{stageData.stage_type}</Typography>
                </Grid>

                <Grid item xs={12} sm={6}>
                    <Typography variant="subtitle2" color="primary">Stage ID</Typography>
                    <Typography component="code">{stageData.stage_id}</Typography>
                </Grid>

                <Grid item xs={12} sm={6}>
                    <Typography variant="subtitle2" color="primary">Business ID</Typography>
                    <Typography component="code">{stageData.business_id}</Typography>
                </Grid>

                {stageData.agent_id && (
                    <Grid item xs={12} sm={6}>
                        <Typography variant="subtitle2" color="primary">Agent ID</Typography>
                        <Typography component="code">{stageData.agent_id}</Typography>
                    </Grid>
                )}
            </Grid>

            {/* Template Configuration Section */}
            <Typography variant="h6" sx={{ mt: 4, mb: 2 }}>
                Template Configuration
            </Typography>
            <Divider sx={{ mb: 2 }} />
            
            <Grid container spacing={2}>
                <Grid item xs={12}>
                    <Typography variant="subtitle2" color="primary">Stage Selection Template</Typography>
                    <Box display="flex" justifyContent="space-between" alignItems="center">
                        <TemplateField 
                            label="Stage Selection Template"
                            templateId={stageData.stage_selection_template_id}
                        />
                        <Button
                            variant="outlined"
                            size="small"
                            onClick={() => navigate(`/template-editor/${stageData.stage_selection_template_id}`)}
                        >
                            Edit Template
                        </Button>
                    </Box>
                </Grid>

                <Grid item xs={12}>
                    <Typography variant="subtitle2" color="primary">Data Extraction Template</Typography>
                    <Box display="flex" justifyContent="space-between" alignItems="center">
                        <TemplateField 
                            label="Data Extraction Template"
                            templateId={stageData.data_extraction_template_id}
                        />
                        <Button
                            variant="outlined"
                            size="small"
                            onClick={() => navigate(`/template-editor/${stageData.data_extraction_template_id}`)}
                        >
                            Edit Template
                        </Button>
                    </Box>
                </Grid>

                <Grid item xs={12}>
                    <Typography variant="subtitle2" color="primary">Response Generation Template</Typography>
                    <Box display="flex" justifyContent="space-between" alignItems="center">
                        <TemplateField 
                            label="Response Generation Template"
                            templateId={stageData.response_generation_template_id}
                        />
                        <Button
                            variant="outlined"
                            size="small"
                            onClick={() => navigate(`/template-editor/${stageData.response_generation_template_id}`)}
                        >
                            Edit Template
                        </Button>
                    </Box>
                </Grid>
            </Grid>

            {/* Creation Date */}
            {stageData.created_at && (
                <Box mt={4}>
                    <Divider />
                    <Typography variant="caption" color="text.secondary" sx={{ mt: 2, display: 'block' }}>
                        Created: {new Date(stageData.created_at).toLocaleString()}
                    </Typography>
                </Box>
            )}

            {/* Edit Dialog */}
            <Dialog open={editDialogOpen} onClose={handleEditClose}>
                <DialogTitle>
                    {editType === 'name' ? 'Edit Stage Name' : 
                     editType === 'description' ? 'Edit Stage Description' : 
                     'Assign Agent'}
                </DialogTitle>
                <DialogContent>
                    {editType === 'name' ? (
                        <TextField
                            autoFocus
                            margin="dense"
                            label="Stage Name"
                            type="text"
                            fullWidth
                            value={newStageName}
                            onChange={(e) => setNewStageName(e.target.value)}
                            error={!!editError}
                            helperText={editError}
                        />
                    ) : editType === 'description' ? (
                        <TextField
                            autoFocus
                            margin="dense"
                            label="Stage Description"
                            type="text"
                            fullWidth
                            multiline
                            rows={4}
                            value={newStageDescription}
                            onChange={(e) => setNewStageDescription(e.target.value)}
                            error={!!editError}
                            helperText={editError}
                        />
                    ) : (
                        <FormControl fullWidth margin="dense">
                            <InputLabel id="agent-select-label">Select Agent</InputLabel>
                            <Select
                                labelId="agent-select-label"
                                id="agent-select"
                                value={selectedAgentId}
                                label="Select Agent"
                                onChange={handleAgentChange}
                            >
                                <MenuItem value="">
                                    <em>None</em>
                                </MenuItem>
                                {agents.map((agent) => (
                                    <MenuItem key={agent.agent_id} value={agent.agent_id}>
                                        {agent.agent_name}
                                    </MenuItem>
                                ))}
                            </Select>
                            {editError && (
                                <Typography color="error" variant="caption">
                                    {editError}
                                </Typography>
                            )}
                        </FormControl>
                    )}
                </DialogContent>
                <DialogActions>
                    <Button onClick={handleEditClose}>Cancel</Button>
                    <Button 
                        onClick={handleSaveEdit} 
                        variant="contained" 
                        disabled={editLoading}
                    >
                        {editLoading ? <CircularProgress size={24} /> : 'Save'}
                    </Button>
                </DialogActions>
            </Dialog>
        </Paper>
    );
}

export default StageView;

================================================================================
File: TemplateEditor.js
Path: .\front-end\src\components\TemplateEditor.js
Size: 24240
Modified: 2025-04-25T14:45:41.000845
Created: 2025-04-01T23:30:45.145332
Hash: 491562e058ffd81807ad0fce2dd71ee5c36ac25716acc14edde42fcc6f060835
Lines: 694
================================================================================
import React, { useState, useEffect, useCallback } from 'react';
import { useParams, useNavigate, useLocation } from 'react-router-dom';
import {
  Box,
  Paper,
  Typography,
  TextField,
  Button,
  FormControl,
  InputLabel,
  MenuItem,
  Select,
  CircularProgress,
  Grid,
  Alert,
  Divider,
  Chip,
  IconButton,
  Tooltip,
  Dialog,
  DialogTitle,
  DialogContent,
  DialogActions,
  Snackbar,
  ListSubheader
} from '@mui/material';
import SaveIcon from '@mui/icons-material/Save';
import PreviewIcon from '@mui/icons-material/Preview';
import ArrowBackIcon from '@mui/icons-material/ArrowBack';
import HelpOutlineIcon from '@mui/icons-material/HelpOutline';
import VisibilityIcon from '@mui/icons-material/Visibility';
import { API_CONFIG } from '../config';
import { normalizeUUID } from '../hooks/useConfig';
import apiService from '../services/api';

const TemplateEditor = () => {
  const { templateId } = useParams();
  const navigate = useNavigate();
  const location = useLocation();
  
  // Parse query parameters
  const queryParams = new URLSearchParams(location.search);
  const queryBusinessId = queryParams.get('business_id');
  const queryAgentId = queryParams.get('agent_id');
  
  // Get stored business ID and API key from localStorage
  const storedBusinessId = localStorage.getItem('businessId');
  const storedApiKey = localStorage.getItem('businessApiKey');
  const storedAgentId = localStorage.getItem('agentId');
  
  // State for template data
  const [template, setTemplate] = useState({
    template_id: templateId === 'new' ? '' : templateId,
    template_name: '',
    content: '',
    system_prompt: '',
    template_type: 'stage_selection',
    variables: [],
    agent_id: ''
  });
  
  // State for UI
  const [businessId, setBusinessId] = useState(queryBusinessId || storedBusinessId || '');
  const [businessApiKey, setBusinessApiKey] = useState(storedApiKey || '');
  const [agentId, setAgentId] = useState(queryAgentId || storedAgentId || '');
  const [showBusinessIdInput, setShowBusinessIdInput] = useState(!businessId || !businessApiKey);
  const [showAgentIdInput, setShowAgentIdInput] = useState(!agentId);
  const [isLoading, setIsLoading] = useState(false);
  const [error, setError] = useState('');
  const [success, setSuccess] = useState('');
  const [previewData, setPreviewData] = useState(null);
  const [showPreview, setShowPreview] = useState(false);
  const [snackbar, setSnackbar] = useState({
    open: false,
    message: '',
    severity: 'success'
  });
  
  // Add state for template types array
  const templateTypes = [
    { value: 'stage_selection', label: 'Stage Selection', group: 'Regular' },
    { value: 'data_extraction', label: 'Data Extraction', group: 'Regular' },
    { value: 'response_generation', label: 'Response Generation', group: 'Regular' },
    { value: 'default_stage_selection', label: 'Default Stage Selection', group: 'Default' },
    { value: 'default_data_extraction', label: 'Default Data Extraction', group: 'Default' },
    { value: 'default_response_generation', label: 'Default Response Generation', group: 'Default' }
  ];
  
  // Extract variables from template content
  const extractVariables = (text) => {
    if (!text) return [];
    const matches = text.match(/\{([^}]+)\}/g) || [];
    return matches.map(match => match.slice(1, -1));
  };
  
  // Update variables whenever template content changes
  useEffect(() => {
    const variables = extractVariables(template.content);
    setTemplate(prev => ({
      ...prev,
      variables
    }));
  }, [template.content]);
  
  // Update template's agent_id when agentId changes
  useEffect(() => {
    if (agentId) {
      setTemplate(prev => ({
        ...prev,
        agent_id: agentId
      }));
    }
  }, [agentId]);
  
  // Fetch template data if editing an existing template
  useEffect(() => {
    const fetchTemplateData = async () => {
      // Skip fetching for new templates
      if (templateId === 'new') return;
      
      // Skip fetching if templateId is invalid/undefined
      if (!templateId || templateId === 'undefined') {
        console.error('Invalid template ID:', templateId);
        showSnackbar('Invalid template ID', 'error');
        // Redirect to template creation
        navigate('/template-editor/new');
        return;
      }
      
      if (!businessId) {
        showSnackbar('Business ID is required to fetch template', 'error');
        setShowBusinessIdInput(true);
        return;
      }
      
      if (!businessApiKey) {
        showSnackbar('Business API Key is required', 'error');
        setShowBusinessIdInput(true);
        return;
      }
      
      setIsLoading(true);
      try {
        console.log(`Fetching template with ID: ${templateId} for business: ${businessId}`);
        
        // Use apiService to fetch template details
        // Need to pass businessId separately or include it in the call if the service expects it
        // Checking apiService definition, fetchTemplateDetails only takes templateId
        // The business_id needs to be handled by the apiService internally or passed differently.
        // Let's assume apiService handles authentication via headers which include business context.
        // If not, we might need to modify apiService or pass businessId differently.
        
        // Corrected call assuming apiService uses stored credentials for business_id
        const data = await apiService.fetchTemplateDetails(templateId);

        console.log('Fetched template:', data);
        
        // Don't modify the template_type, preserve its original value
        setTemplate({
          template_id: data.template_id,
          template_name: data.template_name || '',
          content: data.content || '',
          system_prompt: data.system_prompt || '',
          template_type: data.template_type || 'stage_selection',
          variables: extractVariables(data.content),
          agent_id: data.agent_id || ''
        });
      } catch (err) {
        console.error('Error fetching template:', err);
        showSnackbar(err.message, 'error');
        // Redirect to template list on error
        navigate('/templates');
      } finally {
        setIsLoading(false);
      }
    };
    
    fetchTemplateData();
  }, [templateId, businessId, businessApiKey, navigate]);
  
  // Validate credentials
  const validateCredentials = async () => {
    if (!businessId || !businessApiKey) {
      setSnackbar({
        open: true,
        message: 'Business ID and API Key are required',
        severity: 'error'
      });
      setShowBusinessIdInput(true);
      return false;
    }
    
    try {
      // Use the correct endpoint and method
      const response = await fetch(`/businesses/validate-credentials?business_id=${businessId}&api_key=${businessApiKey}`, {
        method: 'GET',
        headers: {
          'Accept': 'application/json',
          'Authorization': `Bearer ${businessApiKey}`
        },
        credentials: 'include'
      });
      
      if (!response.ok) {
        throw new Error('Invalid business ID or API key');
      }
      
      const data = await response.json();
      if (!data.valid) {
        throw new Error(data.message || 'Credential validation failed');
      }
      
      return true;
    } catch (err) {
      console.error('Credential validation error:', err);
      setSnackbar({
        open: true,
        message: 'Failed to validate credentials: ' + err.message,
        severity: 'error'
      });
      setShowBusinessIdInput(true);
      return false;
    }
  };
  
  // Save credentials
  const saveCredentials = async () => {
    if (!businessId || !businessApiKey) {
      showSnackbar('Please enter both Business ID and API Key', 'error');
      return;
    }
    
    const isValid = await validateCredentials();
    if (isValid) {
      // Save to both localStorage and cookies
      localStorage.setItem('businessId', businessId);
      localStorage.setItem('businessApiKey', businessApiKey);
      document.cookie = `businessId=${businessId}; path=/; max-age=86400`;
      document.cookie = `businessApiKey=${businessApiKey}; path=/; max-age=86400`;
      
      setShowBusinessIdInput(false);
      showSnackbar('Business credentials validated and saved', 'success');
    }
  };
  
  // Handle template preview
  const handlePreview = async () => {
    if (!template.content.trim()) {
      showSnackbar('Template content is empty', 'error');
      return;
    }
    
    setIsLoading(true);
    try {
      // Prepare preview request
      const previewRequest = {
        template_type: template.template_type,
        template_text: template.content,
        business_id: businessId,
        agent_id: agentId,
        context: {
          conversation_history: [
            { role: "user", content: "I'm interested in your products" },
            { role: "assistant", content: "I'd be happy to tell you about our products. What type are you interested in?" }
          ],
          extracted_data: {
            customer_name: "John Doe",
            product_interest: "shoes",
            budget: "$100"
          }
        }
      };
      
      let previewSuccess = false;
      let errorMessage = '';
      
      // Try multiple possible endpoints (for compatibility)
      const endpoints = [
        '/templates/preview',
        '/templates/render',
        '/render_template',
        '/api/templates/preview'
      ];
      
      let response = null;
      for (const endpoint of endpoints) {
        try {
          console.log(`Trying to preview template with endpoint: ${endpoint}`);
          
          response = await fetch(endpoint, {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
              'Accept': 'application/json',
              'Authorization': `Bearer ${businessApiKey}`
            },
            credentials: 'include',
            body: JSON.stringify(previewRequest),
          });
          
          if (response.ok) {
            const data = await response.json();
            console.log('Preview response:', data);
            setPreviewData(data);
            setShowPreview(true);
            previewSuccess = true;
            break;
          } else {
            const errData = await response.json().catch(() => ({}));
            errorMessage = errData.message || errData.error || `Failed with status ${response.status}`;
            console.warn(`Endpoint ${endpoint} failed: ${errorMessage}`);
          }
        } catch (endpointErr) {
          console.warn(`Endpoint ${endpoint} failed:`, endpointErr);
          errorMessage = endpointErr.message;
        }
      }
      
      // If no endpoint worked, use fallback preview
      if (!previewSuccess) {
        console.log('All endpoint attempts failed, using local preview');
        
        // Simple variable replacement for demonstration
        let previewText = template.content;
        
        // Replace variables with sample values
        template.variables.forEach(variable => {
          const sampleValue = `[Sample ${variable}]`;
          previewText = previewText.replace(new RegExp(`{${variable}}`, 'g'), sampleValue);
        });
        
        setPreviewData({ 
          rendered_text: previewText,
          message: "Using client-side preview (API endpoints not available)",
          is_fallback: true
        });
        setShowPreview(true);
        
        // Show notification
        showSnackbar(`Using fallback preview. Server error: ${errorMessage}`, 'warning');
      }
    } catch (err) {
      console.error('Error generating preview:', err);
      showSnackbar(`Failed to generate preview: ${err.message}`, 'error');
    } finally {
      setIsLoading(false);
    }
  };
  
  // Save template changes
  const handleSaveTemplate = async () => {
    setIsLoading(true);
    setError('');
    setSuccess('');

    // Prepare template data for saving
    const templateData = {
      template_name: template.template_name,
      content: template.content,
      system_prompt: template.system_prompt,
      template_type: template.template_type,
      // Ensure variables are updated based on the current content
      variables: extractVariables(template.content),
      agent_id: template.agent_id // Include agent_id
    };

    try {
      let savedTemplate;
      if (templateId && templateId !== 'new') {
        // Update existing template
        console.log(`Updating template with ID: ${templateId}`, templateData);
        savedTemplate = await apiService.updateTemplate(templateId, templateData);
        showSnackbar('Template updated successfully!', 'success');
      } else {
        // Create new template
        console.log('Creating new template:', templateData);
        savedTemplate = await apiService.createTemplate(templateData);
        showSnackbar('Template created successfully!', 'success');
        // Navigate to the edit page of the newly created template
        navigate(`/template-editor/${savedTemplate.template_id}`);
      }
      console.log('Save successful:', savedTemplate);
    } catch (err) {
      console.error('Error saving template:', err);
      showSnackbar(`Failed to save template: ${err.message}`, 'error');
    } finally {
      setIsLoading(false);
    }
  };
  
  // Navigate back to templates list
  const handleCancel = () => {
    navigate('/templates');
  };
  
  // Handle template type change
  const handleTemplateTypeChange = (e) => {
    const newType = e.target.value;
    console.log('Template type changed to:', newType);
    setTemplate(prev => {
      const updated = { 
        ...prev, 
        template_type: newType
      };
      console.log('Updated template state:', updated);
      return updated;
    });
  };
  
  // Snackbar functions
  const showSnackbar = (message, severity = 'success') => {
    setSnackbar({
      open: true,
      message,
      severity
    });
  };
  
  const handleCloseSnackbar = () => {
    setSnackbar(prev => ({
      ...prev,
      open: false
    }));
  };
  
  return (
    <Paper sx={{ p: 3, mb: 3, maxWidth: 1200, mx: 'auto' }}>
      {/* Back button and title */}
      <Box sx={{ display: 'flex', alignItems: 'center', mb: 3 }}>
        <IconButton onClick={handleCancel} sx={{ mr: 1 }}>
          <ArrowBackIcon />
        </IconButton>
        <Typography variant="h5">
          {template.template_id && template.template_id !== 'new' ? 'Edit Template' : 'Create New Template'}
        </Typography>
        <Box sx={{ flexGrow: 1 }} />
        <Button
          variant="contained"
          color="primary"
          onClick={handleSaveTemplate}
          disabled={isLoading || !template.template_name.trim() || !template.content.trim()}
          startIcon={isLoading ? <CircularProgress size={24} /> : <SaveIcon />}
        >
          Save Template
        </Button>
      </Box>
      
      {/* Business ID input section */}
      {(showBusinessIdInput || !businessId || !businessApiKey) && (
        <Box sx={{ mb: 3, p: 2, border: '1px dashed', borderColor: 'warning.main', borderRadius: 1 }}>
          <Typography variant="subtitle1" color="warning.main" gutterBottom>
            Business Credentials Required
          </Typography>
          <Grid container spacing={2}>
            <Grid item xs={12} md={5}>
              <TextField
                fullWidth
                label="Business ID"
                value={businessId}
                onChange={(e) => setBusinessId(e.target.value)}
                placeholder="Enter your business ID"
                helperText="Required for saving templates"
                required
              />
            </Grid>
            <Grid item xs={12} md={5}>
              <TextField
                fullWidth
                label="Business API Key"
                value={businessApiKey}
                onChange={(e) => setBusinessApiKey(e.target.value)}
                placeholder="Enter your business API key"
                helperText="Required for authentication"
                type="password"
                required
              />
            </Grid>
            <Grid item xs={12} md={2}>
              <Button 
                variant="contained" 
                color="primary"
                onClick={saveCredentials}
                fullWidth
                sx={{ height: '56px' }}
              >
                Validate & Save
              </Button>
            </Grid>
          </Grid>
        </Box>
      )}
      
      {/* Agent ID input section */}
      {(showAgentIdInput || !agentId) && (
        <Box sx={{ mb: 3, p: 2, border: '1px dashed', borderColor: 'warning.main', borderRadius: 1 }}>
          <Typography variant="subtitle1" color="warning.main" gutterBottom>
            Agent ID Required
          </Typography>
          <Grid container spacing={2}>
            <Grid item xs={12} md={5}>
              <TextField
                fullWidth
                label="Agent ID"
                value={agentId}
                onChange={(e) => setAgentId(e.target.value)}
                placeholder="Enter your agent ID"
                helperText="Required for saving templates"
                required
              />
            </Grid>
          </Grid>
        </Box>
      )}
      
      {/* Template information section */}
      <Grid container spacing={3}>
        <Grid item xs={12} md={6}>
          <TextField
            fullWidth
            label="Template Name"
            value={template.template_name}
            onChange={(e) => setTemplate(prev => ({ ...prev, template_name: e.target.value }))}
            required
            error={!template.template_name.trim()}
            helperText={!template.template_name.trim() ? "Template name is required" : ""}
            sx={{ mb: 2 }}
          />
          
          <FormControl fullWidth sx={{ mb: 2 }}>
            <InputLabel id="template-type-label">Template Type</InputLabel>
            <Select
              labelId="template-type-label"
              value={template.template_type}
              label="Template Type"
              onChange={handleTemplateTypeChange}
            >
              <ListSubheader>Regular Templates</ListSubheader>
              {templateTypes
                .filter(type => type.group === 'Regular')
                .map((type) => (
                  <MenuItem key={type.value} value={type.value}>
                    {type.label}
                  </MenuItem>
                ))
              }
              <ListSubheader>Default Templates</ListSubheader>
              {templateTypes
                .filter(type => type.group === 'Default')
                .map((type) => (
                  <MenuItem key={type.value} value={type.value}>
                    {type.label}
                  </MenuItem>
                ))
              }
            </Select>
          </FormControl>
          
          <TextField
            fullWidth
            label="Template Description"
            value={template.template_description}
            onChange={(e) => setTemplate(prev => ({ ...prev, template_description: e.target.value }))}
            multiline
            rows={2}
            sx={{ mb: 2 }}
          />
          
          <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>
            <Typography variant="subtitle1" sx={{ mr: 2 }}>
              Detected Variables:
            </Typography>
            <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1 }}>
              {template.variables.length > 0 ? (
                template.variables.map((variable, index) => (
                  <Chip 
                    key={index} 
                    label={variable} 
                    color="primary" 
                    variant="outlined" 
                  />
                ))
              ) : (
                <Typography variant="body2" color="text.secondary">
                  No variables detected. Use {"{variable_name}"} syntax.
                </Typography>
              )}
            </Box>
          </Box>
          
          <Button
            variant="outlined"
            color="primary"
            onClick={handlePreview}
            disabled={!template.content.trim()}
            startIcon={<VisibilityIcon />}
            sx={{ mt: 2 }}
          >
            Preview Template
          </Button>
        </Grid>
        
        <Grid item xs={12} md={6}>
          <Typography variant="subtitle1" gutterBottom>
            Template Content
            <Tooltip title="Use {variable_name} syntax to create variables in your template">
              <IconButton size="small">
                <HelpOutlineIcon fontSize="small" />
              </IconButton>
            </Tooltip>
          </Typography>
          <TextField
            fullWidth
            multiline
            rows={10}
            value={template.content}
            onChange={(e) => setTemplate({ ...template, content: e.target.value })}
            placeholder="Enter your template content here with variables in {curly_braces}..."
            sx={{ 
              mb: 2, 
              fontFamily: 'monospace',
              '& .MuiInputBase-input': {
                fontFamily: 'monospace',
              }
            }}
          />
          
          <Grid item xs={12}>
            <TextField
              label="System Prompt (Optional)"
              value={template.system_prompt}
              onChange={(e) => setTemplate({ ...template, system_prompt: e.target.value })}
              fullWidth
              multiline
              rows={4}
              margin="normal"
              variant="outlined"
              placeholder="Enter optional system prompt for the model..."
            />
          </Grid>
        </Grid>
      </Grid>
      
      {/* Preview Dialog */}
      <Dialog 
        open={showPreview} 
        onClose={() => setShowPreview(false)}
        maxWidth="md"
        fullWidth
      >
        <DialogTitle>Template Preview</DialogTitle>
        <DialogContent>
          <Typography variant="subtitle1" gutterBottom>
            Template: {template.template_name}
          </Typography>
          <Typography variant="subtitle2" color="text.secondary" gutterBottom>
            Type: {template.template_type}
          </Typography>
          <Divider sx={{ my: 2 }} />
          <Box sx={{ 
            bgcolor: 'background.paper', 
            p: 2, 
            borderRadius: 1,
            border: '1px solid',
            borderColor: 'divider',
            maxHeight: '500px',
            overflow: 'auto',
            fontFamily: 'monospace',
            whiteSpace: 'pre-wrap',
            wordBreak: 'break-word'
          }}>
            {previewData?.rendered_text || previewData?.content || 'No preview data available'}
          </Box>
        </DialogContent>
        <DialogActions>
          <Button onClick={() => setShowPreview(false)}>Close</Button>
        </DialogActions>
      </Dialog>
      
      {/* Snackbar for notifications */}
      <Snackbar
        open={snackbar.open}
        autoHideDuration={6000}
        onClose={handleCloseSnackbar}
        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}
      >
        <Alert onClose={handleCloseSnackbar} severity={snackbar.severity} sx={{ width: '100%' }}>
          {snackbar.message}
        </Alert>
      </Snackbar>
    </Paper>
  );
};

export default TemplateEditor;

================================================================================
File: TemplateManagement.js
Path: .\front-end\src\components\TemplateManagement.js
Size: 43685
Modified: 2025-04-25T15:18:16.775865
Created: 2025-03-28T21:48:41.261517
Hash: 494f09a2326a4e836eb5d745a55b2ae9d280fca21c3f8c496fedba957702a3fa
Lines: 893
================================================================================
import React, { useState, useEffect, useCallback } from 'react';
import { useNavigate, useLocation } from 'react-router-dom';
import {
    TextField, Button, Typography, Card, CardContent, Box, TextareaAutosize,
    Select, MenuItem, InputLabel, FormControl, Grid, Paper, Divider, Tab, Tabs, Alert, List, ListItem, ListItemText, ListItemSecondaryAction, IconButton, Chip, Dialog, DialogTitle, DialogContent, DialogActions, CircularProgress, Snackbar, Container, Tooltip, ListSubheader
} from '@mui/material';
import DeleteIcon from '@mui/icons-material/Delete';
import EditIcon from '@mui/icons-material/Edit';
import ContentCopyIcon from '@mui/icons-material/ContentCopy';
import SaveIcon from '@mui/icons-material/Save';
import RefreshIcon from '@mui/icons-material/Refresh';
import ArrowBackIcon from '@mui/icons-material/ArrowBack';
import TemplateSection from './TemplateSection';
import AddIcon from '@mui/icons-material/Add';
import FilterListIcon from '@mui/icons-material/FilterList';
import StarIcon from '@mui/icons-material/Star';
import { normalizeUUID } from '../hooks/useConfig';
import apiService from '../services/api';

function TemplateManagement({ templateID, setTemplateID, availableVariable = [], setAvailableVariable, selectedVariable, setSelectedVariable, handleTemplateSelection, handleVariableSelection, addVariableToTemplate, templateName, setTemplateName, templateContent, setTemplateContent, templateSystemPrompt, setTemplateSystemPrompt, templateOutput, createTemplate, fetchTemplates, handleSnackbarOpen, handleSaveDefaultTemplate, apiKey, setTemplateOutput }) {
    const navigate = useNavigate();
    const location = useLocation();
    const [templates, setTemplates] = useState([]);
    const [selectedTemplate, setSelectedTemplate] = useState(null);
    const [templateType, setTemplateType] = useState('');
    const [errorMessage, setErrorMessage] = useState('');
    const [successMessage, setSuccessMessage] = useState('');
    const [activeTab, setActiveTab] = useState(0);
    const [isLoading, setIsLoading] = useState(false);
    const [editDialogOpen, setEditDialogOpen] = useState(false);
    const [editingTemplate, setEditingTemplate] = useState({
        template_id: '',
        template_name: '',
        content: '',
        system_prompt: '',
        template_type: '',
        variables: []
    });
    const [filterType, setFilterType] = useState('all');
    const [showBusinessIdInput, setShowBusinessIdInput] = useState(!apiKey || !templateID);
    const [businessId, setBusinessId] = useState(templateID || '');
    const [businessApiKey, setBusinessApiKey] = useState(apiKey || '');
    const [agentId, setAgentId] = useState('');
    const [filteredTemplates, setFilteredTemplates] = useState([]);
    const [snackbar, setSnackbar] = useState({
        open: false,
        message: '',
        severity: 'success'
    });
    const [showAgentIdInput, setShowAgentIdInput] = useState(!agentId);

    // Define template types array for dropdowns and filtering
    const templateTypes = [
        { value: 'stage_selection', label: 'Stage Selection', group: 'Regular' },
        { value: 'data_extraction', label: 'Data Extraction', group: 'Regular' },
        { value: 'response_generation', label: 'Response Generation', group: 'Regular' },
        { value: 'default_stage_selection', label: 'Default Stage Selection', group: 'Default' },
        { value: 'default_data_extraction', label: 'Default Data Extraction', group: 'Default' },
        { value: 'default_response_generation', label: 'Default Response Generation', group: 'Default' }
    ];

    // Parse query parameters if any
    const queryParams = new URLSearchParams(window.location.search);
    const queryBusinessId = queryParams.get('business_id');
    const queryAgentId = queryParams.get('agent_id');
    
    // Get stored credentials from localStorage
    const storedBusinessId = localStorage.getItem('businessId');
    const storedApiKey = localStorage.getItem('businessApiKey');
    const storedAgentId = localStorage.getItem('agentId');
    
    // Update state with query params and localStorage values
    useEffect(() => {
        // Update businessId if query param or localStorage has a value
        if (queryBusinessId || storedBusinessId) {
            setBusinessId(queryBusinessId || storedBusinessId);
        }
        
        // Update businessApiKey if localStorage has a value
        if (storedApiKey) {
            setBusinessApiKey(storedApiKey);
        }
        
        // Update agentId if query param or localStorage has a value
        if (queryAgentId || storedAgentId) {
            setAgentId(queryAgentId || storedAgentId);
        }
        
        // Update visibility of input fields
        setShowBusinessIdInput(!businessId || !businessApiKey);
        setShowAgentIdInput(!agentId);
    }, [queryBusinessId, storedBusinessId, storedApiKey, queryAgentId, storedAgentId]);
    
    // Initialize filteredTemplates when templates change
    useEffect(() => {
        setFilteredTemplates(templates);
    }, [templates]);
    
    // Effect to fetch templates on mount
    useEffect(() => {
        if (businessId && agentId) {
            console.log("TemplateManagement.js - Fetching templates with:", { businessId, agentId });
            if (typeof fetchTemplates === 'function') {
                fetchTemplates();
            } else {
                // If fetchTemplates is not a prop, use the internal implementation
                fetchTemplatesInternal();
            }
        }
    }, [businessId, agentId, fetchTemplates]);
    
    // Internal implementation of fetchTemplates
    const fetchTemplatesInternal = async () => {
        if (!businessId) {
            showSnackbar('Business ID is required to fetch templates', 'error');
            setShowBusinessIdInput(true);
            setIsLoading(false);
            return;
        }
        
        if (!agentId) {
            showSnackbar('Agent ID is required to fetch templates', 'error');
            setShowAgentIdInput(true);
            setIsLoading(false);
            return;
        }
        
        if (!businessApiKey) {
            showSnackbar('Business API Key is required to fetch templates', 'error');
            setShowBusinessIdInput(true);
            setIsLoading(false);
            return;
        }
        
        setIsLoading(true);
        try {
            // Use apiService.fetchTemplates
            const data = await apiService.fetchTemplates(businessId, agentId);
            console.log('Fetched templates (raw):', data);
            
            // Normalize the templates data to ensure all needed fields exist
            const normalizedTemplates = Array.isArray(data) ? data.map(template => ({
                template_id: template.template_id || template.id || `temp-${Math.random().toString(36).substring(2, 9)}`,
                template_name: template.template_name || 'Unnamed Template',
                content: template.content || '',
                system_prompt: template.system_prompt || '',
                template_type: template.template_type || 'Unknown Type',
                variables: extractVariablesFromContent(template.content || '')
            })) : [];
            
            console.log('Normalized templates:', normalizedTemplates);
            
            setTemplates(normalizedTemplates);
            setFilteredTemplates(normalizedTemplates);
            
            // Show message about number of templates loaded
            showSnackbar(`${normalizedTemplates.length} templates loaded successfully`, 'success');
        } catch (err) {
            console.error('Error fetching templates:', err);
            showSnackbar(err.message, 'error');
        } finally {
            setIsLoading(false);
        }
    };

    useEffect(() => {
        // TODO: Implement API endpoint to retrieve available variables
        const mockVariables = ['variable1', 'variable2', 'variable3'];
        if (typeof setAvailableVariable === 'function') {
            setAvailableVariable(mockVariables);
        }
    }, [setAvailableVariable]);

    const handleCreateTemplate = async () => {
        try {
            if (!templateName || !templateContent || !templateType) {
                setErrorMessage('Template name, content, and type are required');
                return;
            }
            
            const templateData = {
                template_name: templateName,
                content: templateContent,
                system_prompt: templateSystemPrompt || '',
                template_type: templateType,
                // business_id and agent_id will be added by apiService.createTemplate
                // agent_id: agentId // Ensure agent_id is included if required by backend but not automatically added by apiService
            };
            
            // Use apiService.createTemplate
            await apiService.createTemplate(templateData);
            
            // Reset form
            setTemplateName('');
            setTemplateContent('');
            setTemplateType('');
            
            // Refresh templates
            fetchTemplates();
            
            setSuccessMessage('Template created successfully');
            
            // Clear success message after 3 seconds
            setTimeout(() => {
                setSuccessMessage('');
            }, 3000);
        } catch (error) {
            setErrorMessage(error.message);
        }
    };

    const handleUpdateTemplate = async () => {
        try {
            if (!editingTemplate) return;
            
            const templateData = {
                template_name: editingTemplate.template_name,
                content: editingTemplate.content,
                system_prompt: editingTemplate.system_prompt || '',
                template_type: editingTemplate.template_type,
                // agent_id: editingTemplate.agent_id // Ensure agent_id is included if required and present
                // business_id will be added by apiService.updateTemplate
            };
            
            // Use apiService.updateTemplate
            await apiService.updateTemplate(editingTemplate.template_id, templateData);
            
            setEditDialogOpen(false);
            fetchTemplates();
            
            // Show success message
            showSnackbar('Template updated successfully', 'success');
        } catch (error) {
            console.error('Error updating template:', error);
            showSnackbar(`Failed to update template: ${error.message}`, 'error');
        }
    };

    const handleDeleteTemplate = async (templateId) => {
        if (!window.confirm('Are you sure you want to delete this template?')) {
            return;
        }
        setIsLoading(true);
        try {
            // Use apiService.deleteTemplate - no need to pass businessId explicitly anymore
            await apiService.deleteTemplate(templateId);
            // Refresh templates list after successful deletion
            fetchTemplates();
            showSnackbar('Template deleted successfully', 'success');
        } catch (error) {
            console.error('Failed to delete template:', error);
            showSnackbar(`Failed to delete template: ${error.message}`, 'error');
        } finally {
            setIsLoading(false);
        }
    };

    const handleDuplicateTemplate = async (template) => {
        try {
            setIsLoading(true);
            
            // Use apiService.duplicateTemplate - pass the ID of the template to duplicate
            await apiService.duplicateTemplate(template.template_id);
            
            showSnackbar('Template duplicated successfully', 'success');
            
            // Refresh templates list after duplication
            fetchTemplatesInternal();
            
        } catch (error) {
            console.error('Error duplicating template:', error);
            showSnackbar(`Failed to duplicate template: ${error.message}`, 'error');
        } finally {
            setIsLoading(false);
        }
    };

    const handleEditTemplate = (template) => {
        setEditingTemplate(template);
        setEditDialogOpen(true);
    };

    const handleAddVariable = (variable) => {
        setTemplateContent((prev) => `${prev} {${variable}}`);
    };

    const handleTabChange = (event, newValue) => {
        setActiveTab(newValue);
    };

    const getFilteredTemplates = () => {
        // If searching by text instead of filtering by type
        if (typeof filterType === 'string' && filterType.length > 0 && !templateTypes.some(t => t.value === filterType)) {
            // This is a text search, not a type filter
            const searchTerm = filterType.toLowerCase();
            return templates.filter(template => 
                (template.template_name && template.template_name.toLowerCase().includes(searchTerm)) ||
                (template.template_description && template.template_description.toLowerCase().includes(searchTerm)) ||
                (template.template_id && template.template_id.toLowerCase().includes(searchTerm)) ||
                (template.template_type && template.template_type.toLowerCase().includes(searchTerm))
            );
        }
        
        // Regular type filtering
        if (filterType === 'all') {
            return templates;
        }
        
        return templates.filter(template => {
            const type = template.template_type;
            // Handle the case where type might be undefined or not a string
            if (!type || typeof type !== 'string') return false;
            return type === filterType;
        });
    };

    const isDefaultTemplate = (type) => {
        return type && typeof type === 'string' && type.startsWith('default_');
    };

    const getTemplateTypeLabel = (type) => {
        if (!type) return 'Unknown Type';
        const found = templateTypes.find(t => t.value === type);
        return found ? found.label : type;
    };

    const handleNavigateToHome = () => {
        navigate('/business');
    };

    const validateCredentials = async () => {
        if (!businessId || !businessApiKey) {
            showSnackbar('Business ID and API Key are required', 'error');
            setShowBusinessIdInput(true);
            return false;
        }
        
        try {
            // Use the correct endpoint and method
            const response = await fetch(`/businesses/validate-credentials?business_id=${businessId}&api_key=${businessApiKey}`, {
                method: 'GET',
                headers: {
                    'Accept': 'application/json',
                    'Authorization': `Bearer ${businessApiKey}`
                },
                credentials: 'include'
            });
            
            if (!response.ok) {
                throw new Error('Invalid business ID or API key');
            }
            
            const data = await response.json();
            if (!data.valid) {
                throw new Error(data.message || 'Credential validation failed');
            }
            
            return true;
        } catch (err) {
            console.error('Credential validation error:', err);
            showSnackbar('Failed to validate credentials: ' + err.message, 'error');
            setShowBusinessIdInput(true);
            return false;
        }
    };

    const saveCredentials = async () => {
        if (!businessId || !businessApiKey) {
            showSnackbar('Please enter both Business ID and API Key', 'error');
            return;
        }
        
        const isValid = await validateCredentials();
        if (isValid) {
            // Save to both localStorage and cookies
            localStorage.setItem('businessId', businessId);
            localStorage.setItem('businessApiKey', businessApiKey);
            document.cookie = `businessId=${businessId}; path=/; max-age=86400`;
            document.cookie = `businessApiKey=${businessApiKey}; path=/; max-age=86400`;
            
            setShowBusinessIdInput(false);
            showSnackbar('Business credentials validated and saved', 'success');
            
            // Refresh templates
            fetchTemplatesInternal();
        }
    };

    const showSnackbar = (message, severity = 'success') => {
        setSnackbar({
            open: true,
            message,
            severity
        });
    };

    const handleCloseSnackbar = () => {
        setSnackbar(prev => ({
            ...prev,
            open: false
        }));
    };

    const handleCreateNewTemplate = () => {
        let url = `/template-editor/new?business_id=${businessId}`;
        if (agentId) {
            url += `&agent_id=${agentId}`;
        }
        navigate(url);
    };
    
    const handleEditExistingTemplate = (templateId) => {
        // Check for invalid template ID
        if (!templateId || templateId === 'undefined') {
            console.error('Invalid template ID:', templateId);
            showSnackbar('Cannot edit template: Invalid template ID', 'error');
            return;
        }
        
        let url = `/template-editor/${templateId}?business_id=${businessId}`;
        if (agentId) {
            url += `&agent_id=${agentId}`;
        }
        console.log(`Navigating to edit template: ${url}`);
        navigate(url);
    };

    // Effect to check if we need to refresh templates (coming from template editor)
    useEffect(() => {
        const templateUpdated = localStorage.getItem('template_updated');
        const refreshParam = queryParams.get('refresh');
        
        if (templateUpdated === 'true' || refreshParam) {
            // Clear the flag
            localStorage.removeItem('template_updated');
            
            // If we have both business ID and agent ID, fetch templates
            if (businessId && agentId && businessApiKey) {
                console.log("Template was just updated, refreshing templates list");
                setTimeout(() => {
                    fetchTemplatesInternal();
                }, 500); // Small delay to ensure backend has processed
            }
        }
    }, [location, businessId, agentId, businessApiKey]);

    // Effect to extract variables from template text
    useEffect(() => {
        if (editingTemplate.content) {
            const matches = editingTemplate.content.match(/\{([^}]+)\}/g) || [];
            const extractedVariables = matches.map(match => match.substring(1, match.length - 1));
            setEditingTemplate(prev => ({
                ...prev,
                variables: Array.from(new Set(extractedVariables))
            }));
        }
    }, [editingTemplate.content]);

    // Helper to extract variables from content
    const extractVariablesFromContent = (content) => {
        if (!content) return [];
        const matches = content.match(/\{([^}]+)\}/g) || [];
        return matches.map(match => match.slice(1, -1));
    };

    // Handle template selection for variable insertion
    const handleChooseTemplate = (template) => {
        if (setTemplateName && typeof setTemplateName === 'function') {
            setTemplateName(template.template_name);
        }
        if (setTemplateContent && typeof setTemplateContent === 'function') {
            setTemplateContent(template.content);
        }
        if (setTemplateSystemPrompt && typeof setTemplateSystemPrompt === 'function') {
            setTemplateSystemPrompt(template.system_prompt || '');
        }
        if (templateID !== undefined && setTemplateID && typeof setTemplateID === 'function') {
            setTemplateID(template.template_id);
        }
        // Fire template selection handler if provided
        if (handleTemplateSelection && typeof handleTemplateSelection === 'function') {
            handleTemplateSelection(template);
        }
        showSnackbar(`Template "${template.template_name}" selected`, 'success');
    };

    // Function to open the Edit Dialog for template editing
    const openEditDialog = (template) => {
        setEditingTemplate({
            template_id: template.template_id,
            template_name: template.template_name,
            content: template.content,
            system_prompt: template.system_prompt || '',
            template_type: template.template_type,
            variables: extractVariablesFromContent(template.content)
        });
        setEditDialogOpen(true);
    };

    return (
        <Container maxWidth="lg" sx={{ mt: 4, mb: 4 }}>
            <Paper sx={{ p: 3, mb: 4 }}>
                <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>
                    <IconButton onClick={handleNavigateToHome} sx={{ mr: 1 }}>
                        <ArrowBackIcon />
                    </IconButton>
                    <Typography variant="h5" component="h1" gutterBottom sx={{ flexGrow: 1 }}>
                        Template Management
                    </Typography>
                    <Button
                        variant="outlined"
                        color="primary"
                        onClick={() => fetchTemplatesInternal()}
                        startIcon={<RefreshIcon />}
                        sx={{ mr: 2 }}
                    >
                        Refresh Templates
                    </Button>
                    <Button
                        variant="contained"
                        color="primary"
                        onClick={handleCreateNewTemplate}
                        startIcon={<AddIcon />}
                    >
                        Create Template
                    </Button>
                </Box>
                
                <Divider sx={{ mb: 3 }} />
                
                {/* Business ID input section */}
                {(showBusinessIdInput || !businessId || !businessApiKey) && (
                    <Box sx={{ mb: 3, p: 2, border: '1px dashed', borderColor: 'warning.main', borderRadius: 1 }}>
                        <Typography variant="subtitle1" color="warning.main" gutterBottom>
                            Business Credentials Required
                        </Typography>
                        <Grid container spacing={2}>
                            <Grid item xs={12} md={5}>
                                <TextField
                                    fullWidth
                                    label="Business ID"
                                    value={businessId}
                                    onChange={(e) => setBusinessId(e.target.value)}
                                    placeholder="Enter your business ID"
                                    helperText="Required for managing templates"
                                    required
                                />
                            </Grid>
                            <Grid item xs={12} md={5}>
                                <TextField
                                    fullWidth
                                    label="Business API Key"
                                    value={businessApiKey}
                                    onChange={(e) => setBusinessApiKey(e.target.value)}
                                    placeholder="Enter your business API key"
                                    helperText="Required for authentication"
                                    type="password"
                                    required
                                />
                            </Grid>
                            <Grid item xs={12} md={2}>
                                <Button 
                                    variant="contained" 
                                    color="primary"
                                    onClick={saveCredentials}
                                    fullWidth
                                    sx={{ height: '56px' }}
                                >
                                    Validate & Save
                                </Button>
                            </Grid>
                        </Grid>
                    </Box>
                )}
                
                {/* Agent ID input section */}
                {(showAgentIdInput || !agentId) && (
                    <Box sx={{ mb: 3, p: 2, border: '1px dashed', borderColor: 'warning.main', borderRadius: 1 }}>
                        <Typography variant="subtitle1" color="warning.main" gutterBottom>
                            Agent ID Required
                        </Typography>
                        <Grid container spacing={2}>
                            <Grid item xs={12} md={9}>
                                <TextField
                                    fullWidth
                                    label="Agent ID"
                                    value={agentId}
                                    onChange={(e) => setAgentId(e.target.value)}
                                    placeholder="Enter an agent ID"
                                    helperText="Required for managing templates"
                                    required
                                />
                            </Grid>
                            <Grid item xs={12} md={3}>
                                <Button 
                                    variant="contained" 
                                    color="primary"
                                    onClick={() => {
                                        if (agentId) {
                                            // Save to localStorage
                                            localStorage.setItem('agentId', agentId);
                                            setShowAgentIdInput(false);
                                            showSnackbar('Agent ID saved', 'success');
                                            // Fetch templates for this agent
                                            fetchTemplatesInternal();
                                        } else {
                                            showSnackbar('Please enter an Agent ID', 'error');
                                        }
                                    }}
                                    fullWidth
                                    sx={{ height: '56px' }}
                                >
                                    Save & Use
                                </Button>
                            </Grid>
                            <Grid item xs={12} mt={2}>
                                <Typography variant="body2" color="text.secondary">
                                    After saving or changing the agent ID, click the button below to load templates:
                                </Typography>
                                <Button 
                                    variant="outlined" 
                                    fullWidth
                                    onClick={fetchTemplatesInternal}
                                    startIcon={<RefreshIcon />}
                                    sx={{ mt: 1 }}
                                >
                                    Load Templates for this Agent
                                </Button>
                            </Grid>
                        </Grid>
                    </Box>
                )}
                
                {/* Template filter */}
                <Box sx={{ mb: 3 }}>
                    <Grid container spacing={2} alignItems="center">
                        <Grid item xs={12} md={4}>
                            <TextField
                                fullWidth
                                label="Search Templates"
                                value={filterType}
                                onChange={(e) => setFilterType(e.target.value)}
                                placeholder="Search by type"
                            />
                        </Grid>
                        <Grid item xs={12} md={3}>
                            <FormControl fullWidth>
                                <InputLabel id="filter-type-label">Filter by Type</InputLabel>
                                <Select
                                    labelId="filter-type-label"
                                    value={filterType}
                                    onChange={(e) => setFilterType(e.target.value)}
                                    label="Filter by Type"
                                >
                                    <MenuItem value="all">All Templates</MenuItem>
                                    <ListSubheader>Regular Templates</ListSubheader>
                                    {templateTypes
                                        .filter(type => type.group === 'Regular')
                                        .map((type) => (
                                            <MenuItem key={type.value} value={type.value}>
                                                {type.label}
                                            </MenuItem>
                                        ))
                                    }
                                    <ListSubheader>Default Templates</ListSubheader>
                                    {templateTypes
                                        .filter(type => type.group === 'Default')
                                        .map((type) => (
                                            <MenuItem key={type.value} value={type.value}>
                                                {type.label}
                                            </MenuItem>
                                        ))
                                    }
                                </Select>
                            </FormControl>
                        </Grid>
                        <Grid item xs={12} md={4}>
                            <Button
                                variant="outlined"
                                startIcon={<RefreshIcon />}
                                onClick={() => {
                                    // Use the internal implementation if fetchTemplates is not a function
                                    if (typeof fetchTemplates === 'function') {
                                        fetchTemplates();
                                    } else {
                                        fetchTemplatesInternal();
                                    }
                                }}
                            >
                                Refresh
                            </Button>
                        </Grid>
                    </Grid>
                </Box>
                
                {isLoading ? (
                    <Box sx={{ display: 'flex', justifyContent: 'center', p: 4 }}>
                        <CircularProgress />
                    </Box>
                ) : (
                    <>
                        {filteredTemplates.length === 0 ? (
                            <Alert severity="info">
                                No templates found. Create your first template to get started.
                            </Alert>
                        ) : (
                            <List sx={{ bgcolor: 'background.paper' }}>
                                {filteredTemplates.map((template) => (
                                    <ListItem
                                        key={template.template_id}
                                        button
                                        onClick={() => handleEditExistingTemplate(template.template_id)}
                                        sx={{ 
                                            mb: 1,
                                            borderLeft: isDefaultTemplate(template.template_type) ? '4px solid #f50057' : 'none',
                                            bgcolor: isDefaultTemplate(template.template_type) ? 'rgba(245, 0, 87, 0.04)' : 'background.paper'
                                        }}
                                    >
                                        <ListItemText
                                            primary={
                                                <Box sx={{ display: 'flex', alignItems: 'center' }}>
                                                    {isDefaultTemplate(template.template_type) && (
                                                        <Tooltip title="Default Template">
                                                            <StarIcon sx={{ mr: 1, color: 'secondary.main', fontSize: '1rem' }} />
                                                        </Tooltip>
                                                    )}
                                                    <Typography variant="subtitle1">
                                                        {template.template_name || 'Unnamed Template'}
                                                    </Typography>
                                                    <Chip 
                                                        size="small" 
                                                        label={getTemplateTypeLabel(template.template_type)} 
                                                        sx={{ ml: 1 }}
                                                        color={isDefaultTemplate(template.template_type) ? 'secondary' : 'primary'}
                                                        variant={isDefaultTemplate(template.template_type) ? 'filled' : 'outlined'}
                                                    />
                                                </Box>
                                            }
                                            secondary={
                                                <>
                                                    <Typography component="span" variant="body2" color="text.secondary">
                                                        {template.template_description || 'No description'}
                                                    </Typography>
                                                    <Typography component="span" variant="caption" color="text.secondary" sx={{ display: 'block' }}>
                                                        ID: {template.template_id}
                                                    </Typography>
                                                </>
                                            }
                                        />
                                        <ListItemSecondaryAction>
                                            <Tooltip title="Edit Template">
                                                <IconButton 
                                                    edge="end" 
                                                    aria-label="edit"
                                                    onClick={(e) => {
                                                        e.stopPropagation();
                                                        handleEditExistingTemplate(template.template_id);
                                                    }}
                                                >
                                                    <EditIcon />
                                                </IconButton>
                                            </Tooltip>
                                            <Tooltip title="Duplicate Template">
                                                <IconButton 
                                                    edge="end" 
                                                    aria-label="duplicate"
                                                    onClick={(e) => {
                                                        e.stopPropagation();
                                                        handleDuplicateTemplate(template);
                                                    }}
                                                >
                                                    <ContentCopyIcon />
                                                </IconButton>
                                            </Tooltip>
                                            <Tooltip title="Delete Template">
                                                <IconButton 
                                                    edge="end" 
                                                    aria-label="delete"
                                                    onClick={(e) => {
                                                        e.stopPropagation();
                                                        handleDeleteTemplate(template.template_id);
                                                    }}
                                                >
                                                    <DeleteIcon />
                                                </IconButton>
                                            </Tooltip>
                                        </ListItemSecondaryAction>
                                    </ListItem>
                                ))}
                            </List>
                        )}
                    </>
                )}
                
                {/* Edit Template Dialog */}
                <Dialog open={editDialogOpen} onClose={() => setEditDialogOpen(false)} maxWidth="md" fullWidth>
                    <DialogTitle>Edit Template: {editingTemplate.template_name}</DialogTitle>
                    <DialogContent>
                        <Grid container spacing={2}>
                            <Grid item xs={12}>
                                <TextField
                                    label="Template Name" 
                                    value={editingTemplate.template_name}
                                    onChange={(e) => setEditingTemplate({...editingTemplate, template_name: e.target.value})}
                                    fullWidth
                                    margin="normal"
                                />
                            </Grid>
                            <Grid item xs={12}>
                                <FormControl fullWidth margin="normal">
                                    <InputLabel>Template Type</InputLabel>
                                    <Select
                                        value={editingTemplate.template_type}
                                        onChange={(e) => setEditingTemplate({...editingTemplate, template_type: e.target.value})}
                                        label="Template Type"
                                    >
                                        {templateTypes.map((type) => (
                                            <MenuItem key={type.value} value={type.value}>
                                                {type.label}
                                            </MenuItem>
                                        ))}
                                    </Select>
                                </FormControl>
                            </Grid>
                            <Grid item xs={12}>
                                <TextField
                                    label="Template Content"
                                    value={editingTemplate.content}
                                    onChange={(e) => setEditingTemplate({...editingTemplate, content: e.target.value})}
                                    fullWidth
                                    multiline
                                    rows={6}
                                    margin="normal"
                                />
                            </Grid>
                            <Grid item xs={12}>
                                <TextField
                                    label="System Prompt (Optional)"
                                    value={editingTemplate.system_prompt}
                                    onChange={(e) => setEditingTemplate({...editingTemplate, system_prompt: e.target.value})}
                                    fullWidth
                                    multiline
                                    rows={3}
                                    margin="normal"
                                />
                            </Grid>
                            <Grid item xs={12}>
                                <Box sx={{ mt: 1 }}>
                                    <Typography variant="subtitle2">Variables detected:</Typography>
                                    <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1, mt: 1 }}>
                                        {editingTemplate.variables.map((variable, idx) => (
                                            <Chip key={idx} label={variable} size="small" />
                                        ))}
                                        {editingTemplate.variables.length === 0 && (
                                            <Typography variant="body2" color="text.secondary">
                                                No variables detected. Use {'{variable_name}'} syntax to create variables.
                                            </Typography>
                                        )}
                                    </Box>
                                </Box>
                            </Grid>
                        </Grid>
                    </DialogContent>
                    <DialogActions>
                        <Button onClick={() => setEditDialogOpen(false)}>Cancel</Button>
                        <Button 
                            onClick={handleUpdateTemplate}
                            color="primary" 
                            variant="contained"
                            disabled={!editingTemplate.template_name || !editingTemplate.content}
                        >
                            Save Changes
                        </Button>
                    </DialogActions>
                </Dialog>
                
                {/* Snackbar for notifications */}
                <Snackbar
                    open={snackbar.open}
                    autoHideDuration={6000}
                    onClose={handleCloseSnackbar}
                    anchorOrigin={{ vertical: 'top', horizontal: 'right' }}
                >
                    <Alert onClose={handleCloseSnackbar} severity={snackbar.severity} sx={{ width: '100%' }}>
                        {snackbar.message}
                    </Alert>
                </Snackbar>
            </Paper>
        </Container>
    );
}

export default TemplateManagement;

================================================================================
File: TemplateSection.js
Path: .\front-end\src\components\TemplateSection.js
Size: 4595
Modified: 2025-04-25T12:58:31.516269
Created: 2025-04-25T12:58:31.516269
Hash: 87aaf8a1e84147b5d0db3a304aac689b9f1b3e5b7d140b469723ab21a3107cf9
Lines: 159
================================================================================
import React, { useState } from 'react';
import {
  Card,
  CardContent,
  Typography,
  TextField,
  Button,
  Box,
  FormControl,
  InputLabel,
  Select,
  MenuItem,
  Grid,
  Alert
} from '@mui/material';

const TemplateSection = ({
  templateId,
  templateName,
  templateContent,
  templateSystemPrompt,
  templateType,
  setTemplateId,
  setTemplateName,
  setTemplateContent,
  setTemplateSystemPrompt,
  setTemplateType,
  createTemplate,
  errorMessage
}) => {
  const [isCreating, setIsCreating] = useState(false);

  const templateTypes = [
    { value: 'stage_selection', label: 'Stage Selection' },
    { value: 'data_extraction', label: 'Data Extraction' },
    { value: 'response_generation', label: 'Response Generation' },
    { value: 'default_stage_selection', label: 'Default Stage Selection' },
    { value: 'default_data_extraction', label: 'Default Data Extraction' },
    { value: 'default_response_generation', label: 'Default Response Generation' }
  ];

  const handleCreateTemplate = async () => {
    setIsCreating(true);
    try {
      await createTemplate();
    } finally {
      setIsCreating(false);
    }
  };

  return (
    <Card>
      <CardContent>
        <Typography variant="h6" gutterBottom>
          Create Template
        </Typography>

        <Grid container spacing={2}>
          <Grid item xs={12}>
            <TextField
              fullWidth
              label="Template ID"
              value={templateId}
              onChange={(e) => setTemplateId(e.target.value)}
              margin="normal"
              disabled
              helperText="Template ID will be auto-generated"
            />
          </Grid>

          <Grid item xs={12}>
            <TextField
              fullWidth
              required
              label="Template Name"
              value={templateName}
              onChange={(e) => setTemplateName(e.target.value)}
              margin="normal"
              placeholder="Enter a descriptive name"
            />
          </Grid>

          <Grid item xs={12}>
            <FormControl fullWidth margin="normal">
              <InputLabel id="template-type-label">Template Type</InputLabel>
              <Select
                labelId="template-type-label"
                value={templateType}
                onChange={(e) => setTemplateType(e.target.value)}
                label="Template Type"
              >
                {templateTypes.map((type) => (
                  <MenuItem key={type.value} value={type.value}>
                    {type.label}
                  </MenuItem>
                ))}
              </Select>
            </FormControl>
          </Grid>

          <Grid item xs={12}>
            <TextField
              fullWidth
              required
              label="Template Content"
              value={templateContent}
              onChange={(e) => setTemplateContent(e.target.value)}
              margin="normal"
              multiline
              rows={6}
              placeholder="Enter template content with variables in curly braces, e.g. {variable_name}"
            />
          </Grid>

          <Grid item xs={12}>
            <TextField
              fullWidth
              label="System Prompt (Optional)"
              value={templateSystemPrompt}
              onChange={(e) => setTemplateSystemPrompt(e.target.value)}
              margin="normal"
              multiline
              rows={3}
              placeholder="Enter optional system prompt for the model"
            />
          </Grid>

          {errorMessage && (
            <Grid item xs={12}>
              <Alert severity="error" sx={{ mt: 2 }}>
                {errorMessage}
              </Alert>
            </Grid>
          )}

          <Grid item xs={12}>
            <Box sx={{ mt: 2, display: 'flex', justifyContent: 'flex-end' }}>
              <Button
                variant="contained"
                color="primary"
                onClick={handleCreateTemplate}
                disabled={
                  isCreating || 
                  !templateName.trim() || 
                  !templateContent.trim() || 
                  !templateType
                }
              >
                {isCreating ? 'Creating...' : 'Create Template'}
              </Button>
            </Box>
          </Grid>
        </Grid>
      </CardContent>
    </Card>
  );
};

export default TemplateSection;

================================================================================
File: useConfig.js
Path: .\front-end\src\components\useConfig.js
Size: 1539
Modified: 2025-04-17T01:19:09.008858
Created: 2025-03-31T00:14:31.239602
Hash: dee485e40e8b56412b2eb01edfcf2d53e533a9032bf5c21bf18b53677cc66719
Lines: 46
================================================================================
import { useState, useEffect, useCallback } from 'react';

const useConfig = () => {
    const [apiKey, setApiKey] = useState(localStorage.getItem('icmpApiKey') || '');
    const [userId, setUserId] = useState('');
    const [businessId, setBusinessId] = useState('');
    const [validationError, setValidationError] = useState('');
    const [configOutput, setConfigOutput] = useState('');
    const [businessApiKey, setBusinessApiKey] = useState('');
    const [validationStatus, setValidationStatus] = useState(null);
    const [displayUserId, setDisplayUserId] = useState('');
    const [displayBusinessId, setDisplayBusinessId] = useState('');
    const [displayApiKey, setDisplayApiKey] = useState('');
    const [displayBusinessApiKey, setDisplayBusinessApiKey] = useState('');

    const memoizedSetApiKey = useCallback((newApiKey) => {
        setApiKey(newApiKey);
    }, []);

    return {
        apiKey,
        setApiKey: memoizedSetApiKey,
        userId,
        setUserId,
        businessId,
        setBusinessId,
        validationError,
        setValidationError,
        configOutput,
        setConfigOutput,
        businessApiKey,
        setBusinessApiKey,
        validationStatus,
        setValidationStatus,
        displayUserId,
        setDisplayUserId,
        displayBusinessId,
        setDisplayBusinessId,
        displayApiKey,
        setDisplayApiKey,
        displayBusinessApiKey,
        setDisplayBusinessApiKey
    };
};

export default useConfig;

================================================================================
File: UserManagement.js
Path: .\front-end\src\components\UserManagement.js
Size: 1215
Modified: 2025-04-17T01:19:09.059726
Created: 2025-03-28T21:39:45.797558
Hash: 992e02a25d05c087dd6ea1f6b09cfe873533f43e7e8a6cb4726c19fb8e62f4c1
Lines: 22
================================================================================
// src/components/UserManagement.js
import React from 'react';
import { TextField, Button, Typography, Card, CardContent, Box } from '@mui/material';

function UserManagement({ firstName, setFirstName, lastName, setLastName, email, setEmail, userOutput, createUser, handleSnackbarOpen }) {
    return (
        <Card sx={{ mt: 2 }}>
            <CardContent>
                <Typography variant="h6" gutterBottom>User Management</Typography>
                <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2, mt: 2 }}>
                    <TextField label="First Name" variant="outlined" value={firstName} onChange={(e) => setFirstName(e.target.value)} />
                    <TextField label="Last Name" variant="outlined" value={lastName} onChange={(e) => setLastName(e.target.value)} />
                    <TextField label="Email" variant="outlined" value={email} onChange={(e) => setEmail(e.target.value)} />
                    <Button variant="contained" onClick={createUser}>Create User</Button>
                    <Typography variant="body1">{userOutput}</Typography>
                </Box>
            </CardContent>
        </Card>
    );
}

export default UserManagement;

================================================================================
File: UserSection.js
Path: .\front-end\src\components\UserSection.js
Size: 710
Modified: 2025-04-17T01:19:09.114576
Created: 2025-04-01T07:22:13.665206
Hash: 1187313be8cb9bb89bb2b508dc268874292adc8c9c69f3acd90341c3c2d3adf2
Lines: 22
================================================================================
import React from 'react';
import { Typography } from '@mui/material';
import UserManagement from './UserManagement';

function UserSection({ firstName, setFirstName, lastName, setLastName, email, setEmail, createUser, userOutput }) {
    return (
        <div>
            <UserManagement
                firstName={firstName}
                setFirstName={setFirstName}
                lastName={lastName}
                setLastName={setLastName}
                email={email}
                setEmail={setEmail}
                createUser={createUser}
            />
            <Typography variant="body1">{userOutput}</Typography>
        </div>
    );
}

export default UserSection;

================================================================================
File: useStageManagement.js
Path: .\front-end\src\components\useStageManagement.js
Size: 3332
Modified: 2025-04-17T01:19:09.160461
Created: 2025-03-31T00:15:22.352391
Hash: d4a5622cfcf944a22fdaadf59f94641b8566c257274913e90ec5e288d8d55d59
Lines: 87
================================================================================
// src/hooks/useStageManagement.js
import { useState } from 'react';
import { fetchStages as fetchStagesApi, createStage as createStageApi} from '../services/testService';

const useStageManagement = (apiKey, businessId, handleSnackbarOpen) => {
    const [stageId, setStageId] = useState('');
    const [stageName, setStageName] = useState('');
    const [stageDescription, setStageDescription] = useState('');
    const [stageType, setStageType] = useState('');
    const [selectionTemplateId, setSelectionTemplateId] = useState('');
    const [selectionCustomPrompt, setSelectionCustomPrompt] = useState('');
    const [extractionTemplateId, setExtractionTemplateId] = useState('');
    const [extractionCustomPrompt, setExtractionCustomPrompt] = useState('');
    const [responseTemplateId, setResponseTemplateId] = useState('');
    const [responseCustomPrompt, setResponseCustomPrompt] = useState('');
    const [stageOutput, setStageOutput] = useState('');

    const fetchStages = async () => {
        if (!businessId) {
            setStageOutput("Please enter a Business ID.");
            handleSnackbarOpen("Please enter a Business ID.", "warning");
            return;
        }
        try {
            const data = await fetchStagesApi(businessId, apiKey)
            setStageOutput(JSON.stringify(data, null, 2));
            handleSnackbarOpen("Stages Fetched!", "success")

        } catch (error) {
            setStageOutput(`Error: ${error.message}`);
            handleSnackbarOpen(error.message, "error")
        }
    };

    const createStage = async () => {
        const stageData = {
            business_id: businessId,
            stage_name: stageName,
            stage_description: stageDescription,
            stage_type: stageType,
            selection_template_id: selectionTemplateId || null,
            selection_custom_prompt: selectionCustomPrompt || null,
            extraction_template_id: extractionTemplateId || null,
            extraction_custom_prompt: extractionCustomPrompt || null,
            response_template_id: responseTemplateId || null,
            response_custom_prompt: responseCustomPrompt || null
        };

        try {
            const data = await createStageApi(stageData, apiKey)
            setStageOutput(`Stage Created: ${data.stage_id}`);
            handleSnackbarOpen(`Stage Created: ${data.stage_id}`, "success")
        } catch (error) {
            setStageOutput(`Error: ${error.message}`);
            handleSnackbarOpen(error.message, "error")
        }
    };

    return {
        stageId,
        setStageId,
        stageName,
        setStageName,
        stageDescription,
        setStageDescription,
        stageType,
        setStageType,
        selectionTemplateId,
        setSelectionTemplateId,
        selectionCustomPrompt,
        setSelectionCustomPrompt,
        extractionTemplateId,
        setExtractionTemplateId,
        extractionCustomPrompt,
        setExtractionCustomPrompt,
        responseTemplateId,
        setResponseTemplateId,
        responseCustomPrompt,
        setResponseCustomPrompt,
        stageOutput,
        setStageOutput,
        fetchStages,
        createStage
    };
};

export default useStageManagement;

================================================================================
File: useTemplateManagement.js
Path: .\front-end\src\components\useTemplateManagement.js
Size: 2552
Modified: 2025-04-17T01:19:09.213311
Created: 2025-03-31T00:15:59.027115
Hash: bcdac65834c7be65be1b5b7924c8fa55a149e06469e95e87bd50296d1e3bbd68
Lines: 69
================================================================================
// src/hooks/useTemplateManagement.js
import { useState, useCallback } from 'react';
import { fetchTemplates as fetchTemplatesApi } from '../services/testService';

const useTemplateManagement = (apiKey, handleSnackbarOpen) => {
    const [templateID, setTemplateID] = useState('');
    const [templateName, setTemplateName] = useState('');
    const [templateText, setTemplateText] = useState('');
    const [templateOutput, setTemplateOutput] = useState('');
    const [availableVariable, setAvailableVariable] = useState([]);
    const [selectedVariable, setSelectedVariable] = useState('');
    const [defaultTemplates, setDefaultTemplates] = useState([]);

    const loadTemplates = useCallback(async () => {
        try {
            const templates = await fetchTemplatesApi(apiKey);
            setDefaultTemplates(templates);
            setTemplateOutput("Templates Fetched!");
            handleSnackbarOpen("Templates Fetched!", "success");
        } catch (error) {
            setTemplateOutput(`Error fetching templates: ${error.message}`);
            handleSnackbarOpen(`Error fetching templates: ${error.message}`, "error");
        }
    }, [apiKey, handleSnackbarOpen]);

    const handleTemplateSelection = (event) => {
        const selectedTemplateId = event.target.value;
        setTemplateID(selectedTemplateId);
        const selectedTemplate = defaultTemplates.find(template => template.template_id === selectedTemplateId);

        if (selectedTemplate) {
            setTemplateText(selectedTemplate.template_text);
        } else {
            setTemplateText('');
        }
    };

    const handleVariableSelection = (event) => {
        setSelectedVariable(event.target.value);
    };

    const addVariableToTemplate = () => {
        let newTemplateText = templateText + "{" + selectedVariable + "}";
        setTemplateText(newTemplateText);
    };

    // useEffect to load templates when the component mounts
    // Add logic createTemplate and saveDefaultTemplate
    return {
        templateID,
        setTemplateID,
        templateName,
        setTemplateName,
        templateText,
        setTemplateText,
        templateOutput,
        setTemplateOutput,
        availableVariable,
        setAvailableVariable,
        selectedVariable,
        setSelectedVariable,
        addVariableToTemplate,
        handleTemplateSelection,
        handleVariableSelection,
        loadTemplates
    };
};

export default useTemplateManagement;

================================================================================
File: useUser.js
Path: .\front-end\src\components\useUser.js
Size: 507
Modified: 2025-04-17T01:19:09.280139
Created: 2025-03-31T00:13:57.201933
Hash: ffe7a63d773406580e492f94e9d286a3649ed8a55a7fbd837ba3fdb363ad021d
Lines: 22
================================================================================
// src/hooks/useUser.js
import { useState } from 'react';

const useUser = () => {
    const [firstName, setFirstName] = useState('');
    const [lastName, setLastName] = useState('');
    const [email, setEmail] = useState('');
    const [userOutput, setUserOutput] = useState('');

    return {
        firstName,
        setFirstName,
        lastName,
        setLastName,
        email,
        setEmail,
        userOutput,
        setUserOutput
    };
};

export default useUser;

================================================================================
File: AddEditStageForm.jsx
Path: .\front-end\src\components\AddEditStageForm\AddEditStageForm.jsx
Size: 18568
Modified: 2025-04-17T01:19:09.326008
Created: 2025-04-02T20:45:25.679523
Hash: 14d9124721636e0b1802977edfdb76dd87ad84fee6444240bedd6b77ee523e6a
Lines: 414
================================================================================
import React, { useState, useEffect } from 'react';
import { useLocation, useNavigate } from 'react-router-dom';
import { API_CONFIG } from '../../config';
import {
  Box,
  Paper,
  Typography,
  TextField,
  Button,
  FormControl,
  InputLabel,
  Select,
  MenuItem,
  Grid,
  Alert,
  CircularProgress,
  Divider
} from '@mui/material';

function AddStageForm() {
    // --- Routing & Context ---
    const location = useLocation();
    const queryParams = new URLSearchParams(location.search);
    const agentIdParam = queryParams.get('agent_id'); // Get agent context ('uuid' or 'null')
    const navigate = useNavigate();

    // --- State ---
    const [formData, setFormData] = useState({
        stage_name: '',
        stage_description: 'Default description',
        stage_type: 'conversation',
        stage_selection_template_id: '',
        data_extraction_template_id: '',
        response_generation_template_id: ''
    });
    const [availableTemplates, setAvailableTemplates] = useState({ selection: [], extraction: [], generation: [] });
    const [isLoading, setIsLoading] = useState(true);
    const [isSaving, setIsSaving] = useState(false);
    const [error, setError] = useState(null);
    const [contextAgentName, setContextAgentName] = useState('General');

    // Get stored credentials
    const getStoredCredentials = () => {
        return {
            businessId: localStorage.getItem('businessId') || '',
            businessApiKey: localStorage.getItem('businessApiKey') || ''
        };
    };

    // --- Effects ---
    // 1. Determine context agent name
    useEffect(() => {
        setContextAgentName(agentIdParam === 'null' ? 'General' : `Agent ${agentIdParam}`);
    }, [agentIdParam]);

    // 2. Fetch available templates
    useEffect(() => {
        const fetchTemplates = async () => {
            setError(null);
            setIsLoading(true);
            console.log("Fetching available templates...");
            
            const { businessId, businessApiKey } = getStoredCredentials();
            
            if (!businessId || !businessApiKey) {
                setError('Authentication required. Please log in.');
                setIsLoading(false);
                return;
            }
            
            // Organize templates by type for dropdowns
            const organized = { 
                selection: [], 
                extraction: [], 
                generation: [] 
            };
            
            try {
                // Step 1: Fetch regular templates first
                const regularResponse = await fetch(`${API_CONFIG.BASE_URL}${API_CONFIG.ENDPOINTS.TEMPLATES}?business_id=${businessId}`, {
                    method: 'GET',
                    headers: { 
                        'Accept': 'application/json',
                        'Authorization': `Bearer ${businessApiKey}`
                    }
                });
                
                if (!regularResponse.ok) {
                    const errorData = await regularResponse.json().catch(() => ({}));
                    throw new Error(`HTTP error ${regularResponse.status}: ${errorData.message || 'Failed to fetch templates'}`);
                }
                
                const regularTemplates = await regularResponse.json();
                console.log("Regular templates fetched:", regularTemplates);
                
                // Process regular templates
                regularTemplates.forEach(template => {
                    if (template.template_type === 'selection') {
                        organized.selection.push(template);
                    } else if (template.template_type === 'extraction') {
                        organized.extraction.push(template);
                    } else if (template.template_type === 'generation') {
                        organized.generation.push(template);
                    }
                });
                
                // Step 2: Now fetch default templates
                const defaultResponse = await fetch(`${API_CONFIG.BASE_URL}/api/templates/default-templates?business_id=${businessId}`, {
                    method: 'GET',
                    headers: { 
                        'Accept': 'application/json',
                        'Authorization': `Bearer ${businessApiKey}`
                    }
                });
                
                if (!defaultResponse.ok) {
                    const errorData = await defaultResponse.json().catch(() => ({}));
                    throw new Error(`HTTP error ${defaultResponse.status}: ${errorData.message || 'Failed to fetch default templates'}`);
                }
                
                const defaultTemplates = await defaultResponse.json();
                console.log("Default templates fetched:", defaultTemplates);
                
                // Process default templates
                defaultTemplates.forEach(template => {
                    if (template.template_type === 'selection') {
                        organized.selection.push(template);
                    } else if (template.template_type === 'extraction') {
                        organized.extraction.push(template);
                    } else if (template.template_type === 'generation') {
                        organized.generation.push(template);
                    }
                });
                
                // Sort templates by name
                organized.selection.sort((a, b) => a.template_name.localeCompare(b.template_name));
                organized.extraction.sort((a, b) => a.template_name.localeCompare(b.template_name));
                organized.generation.sort((a, b) => a.template_name.localeCompare(b.template_name));
                
                console.log("Organized templates:", organized);
                setAvailableTemplates(organized);
                
                // Set default templates if available
                const defaultSelection = organized.selection.find(t => t.template_name.toLowerCase().includes('default'));
                const defaultExtraction = organized.extraction.find(t => t.template_name.toLowerCase().includes('default'));
                const defaultGeneration = organized.generation.find(t => t.template_name.toLowerCase().includes('default'));
                
                if (defaultSelection || defaultExtraction || defaultGeneration) {
                    setFormData(prev => ({
                        ...prev,
                        stage_selection_template_id: defaultSelection ? defaultSelection.template_id : '',
                        data_extraction_template_id: defaultExtraction ? defaultExtraction.template_id : '',
                        response_generation_template_id: defaultGeneration ? defaultGeneration.template_id : ''
                    }));
                }
                
            } catch (err) {
                console.error("Error fetching templates:", err);
                setError(err.message || "Failed to load templates. Please try again later.");
            } finally {
                setIsLoading(false);
            }
        };
        
        fetchTemplates();
    }, []);

    // --- Handlers ---
    const handleInputChange = (e) => {
        const { name, value } = e.target;
        console.log(`Field ${name} changed to: ${value}`);
        setFormData(prev => ({ ...prev, [name]: value }));
    };

    const handleSubmit = async (e) => {
        e.preventDefault();
        setIsSaving(true);
        setError(null);
        
        const { businessId, businessApiKey } = getStoredCredentials();
        
        if (!businessId || !businessApiKey) {
            setError('Authentication required. Please log in.');
            setIsSaving(false);
            return;
        }
        
        // Log the form state to verify values
        console.log("Form state before submission:", formData);
        
        try {
            const url = `${API_CONFIG.BASE_URL}${API_CONFIG.ENDPOINTS.STAGES}?business_id=${businessId}`;
            const method = 'POST';
            
            console.log(`Submitting stage data to ${url} using ${method}`);
            
            const response = await fetch(url, {
                method: method,
                headers: {
                    'Content-Type': 'application/json',
                    'Authorization': `Bearer ${businessApiKey}`
                },
                body: JSON.stringify(formData)
            });
            
            if (!response.ok) {
                const errorData = await response.json().catch(() => ({}));
                throw new Error(`HTTP error ${response.status}: ${errorData.message || 'Failed to save stage'}`);
            }
            
            const result = await response.json();
            console.log(`Stage created successfully:`, result);
            
            // Navigate to the stage management page
            navigate('/stage-management');
            
        } catch (err) {
            console.error(`Error creating stage:`, err);
            setError(err.message || `An unexpected error occurred while creating the stage.`);
        } finally {
            setIsSaving(false);
        }
    };

    const handleCancel = () => {
        navigate('/stage-management');
    };

    // --- Render ---
    if (isLoading) {
        return (
            <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', minHeight: '200px' }}>
                <CircularProgress />
            </Box>
        );
    }

    return (
        <Box component="form" onSubmit={handleSubmit} noValidate>
            <Paper sx={{ p: 3, mb: 3 }}>
                <Typography variant="h6" gutterBottom>
                    Add New Stage
                </Typography>
                
                {error && (
                    <Alert severity="error" sx={{ mb: 2 }}>
                        {error}
                    </Alert>
                )}
                
                <Grid container spacing={3}>
                    {/* Basic Information */}
                    <Grid item xs={12}>
                        <Typography variant="subtitle1" gutterBottom>
                            Basic Information
                        </Typography>
                        <Divider sx={{ mb: 2 }} />
                    </Grid>
                    
                    <Grid item xs={12} md={6}>
                        <TextField
                            required
                            fullWidth
                            id="stage_name"
                            name="stage_name"
                            label="Stage Name"
                            value={formData.stage_name}
                            onChange={handleInputChange}
                            error={!formData.stage_name}
                            helperText={!formData.stage_name ? "Stage name is required" : ""}
                        />
                    </Grid>
                    
                    <Grid item xs={12} md={6}>
                        <FormControl fullWidth>
                            <InputLabel id="stage_type_label">Stage Type</InputLabel>
                            <Select
                                labelId="stage_type_label"
                                id="stage_type"
                                name="stage_type"
                                value={formData.stage_type}
                                onChange={handleInputChange}
                                label="Stage Type"
                            >
                                <MenuItem value="conversation">Conversation</MenuItem>
                                <MenuItem value="response">Response</MenuItem>
                                <MenuItem value="form">Form</MenuItem>
                            </Select>
                        </FormControl>
                    </Grid>
                    
                    <Grid item xs={12}>
                        <TextField
                            fullWidth
                            id="stage_description"
                            name="stage_description"
                            label="Stage Description"
                            multiline
                            rows={3}
                            value={formData.stage_description}
                            onChange={handleInputChange}
                        />
                    </Grid>
                    
                    {/* Template Selection */}
                    <Grid item xs={12}>
                        <Typography variant="subtitle1" gutterBottom>
                            Template Selection
                        </Typography>
                        <Divider sx={{ mb: 2 }} />
                    </Grid>
                    
                    <Grid item xs={12}>
                        <FormControl fullWidth>
                            <InputLabel id="stage_selection_template_label">Stage Selection Template</InputLabel>
                            <Select
                                labelId="stage_selection_template_label"
                                id="stage_selection_template_id"
                                name="stage_selection_template_id"
                                value={formData.stage_selection_template_id}
                                onChange={handleInputChange}
                                label="Stage Selection Template"
                            >
                                {availableTemplates.selection.length === 0 ? (
                                    <MenuItem value="">
                                        <em>No templates available</em>
                                    </MenuItem>
                                ) : (
                                    availableTemplates.selection.map(template => (
                                        <MenuItem key={template.template_id} value={template.template_id}>
                                            {template.template_name}
                                        </MenuItem>
                                    ))
                                )}
                            </Select>
                        </FormControl>
                    </Grid>
                    
                    <Grid item xs={12}>
                        <FormControl fullWidth>
                            <InputLabel id="data_extraction_template_label">Data Extraction Template</InputLabel>
                            <Select
                                labelId="data_extraction_template_label"
                                id="data_extraction_template_id"
                                name="data_extraction_template_id"
                                value={formData.data_extraction_template_id}
                                onChange={handleInputChange}
                                label="Data Extraction Template"
                            >
                                {availableTemplates.extraction.length === 0 ? (
                                    <MenuItem value="">
                                        <em>No templates available</em>
                                    </MenuItem>
                                ) : (
                                    availableTemplates.extraction.map(template => (
                                        <MenuItem key={template.template_id} value={template.template_id}>
                                            {template.template_name}
                                        </MenuItem>
                                    ))
                                )}
                            </Select>
                        </FormControl>
                    </Grid>
                    
                    <Grid item xs={12}>
                        <FormControl fullWidth>
                            <InputLabel id="response_generation_template_label">Response Generation Template</InputLabel>
                            <Select
                                labelId="response_generation_template_label"
                                id="response_generation_template_id"
                                name="response_generation_template_id"
                                value={formData.response_generation_template_id}
                                onChange={handleInputChange}
                                label="Response Generation Template"
                            >
                                {availableTemplates.generation.length === 0 ? (
                                    <MenuItem value="">
                                        <em>No templates available</em>
                                    </MenuItem>
                                ) : (
                                    availableTemplates.generation.map(template => (
                                        <MenuItem key={template.template_id} value={template.template_id}>
                                            {template.template_name}
                                        </MenuItem>
                                    ))
                                )}
                            </Select>
                        </FormControl>
                    </Grid>
                </Grid>
                
                <Box sx={{ mt: 3, display: 'flex', justifyContent: 'flex-end' }}>
                    <Button
                        variant="outlined"
                        onClick={handleCancel}
                        sx={{ mr: 2 }}
                    >
                        Cancel
                    </Button>
                    <Button
                        type="submit"
                        variant="contained"
                        color="primary"
                        disabled={isSaving || !formData.stage_name || !formData.stage_description}
                    >
                        {isSaving ? 'Saving...' : 'Create Stage'}
                    </Button>
                </Box>
            </Paper>
        </Box>
    );
}

export default AddStageForm;

================================================================================
File: AgentsListView.jsx
Path: .\front-end\src\components\AgentsListView\AgentsListView.jsx
Size: 5944
Modified: 2025-04-25T12:58:31.498997
Created: 2025-04-02T20:39:48.196776
Hash: 23d512f225452f9ebb993b77d9f38c7f1a666181b360bbe8907ba2dfd9d0021a
Lines: 149
================================================================================
import React, { useState, useEffect } from 'react';
// Import useNavigate from react-router-dom
import { useNavigate } from 'react-router-dom';

// Define your backend API base URL
const API_BASE_URL = 'http://localhost:5000';

function AgentsListView() {
    const [agents, setAgents] = useState([]);
    const [isLoading, setIsLoading] = useState(true);
    const [error, setError] = useState(null);
    // Initialize useNavigate hook
    const navigate = useNavigate();

    // TODO: Replace with actual business ID from context/props/state management
    const businessId = '7ae167a0-d864-43b9-bdaf-fcba35b33f27'; // Replace with a REAL ID for testing

    useEffect(() => {
        const fetchAgents = async () => {
            if (!businessId || businessId === 'YOUR_BUSINESS_ID_HERE') {
                setError("Business ID not available.");
                setIsLoading(false);
                return;
            }
            setIsLoading(true);
            setError(null);
            console.log(`Fetching agents for business ID: ${businessId}`);

            try {
                const response = await fetch(`${API_BASE_URL}/agents?business_id=${businessId}`, {
                    method: 'GET',
                    credentials: 'include', // Send cookies
                    headers: {
                        'Accept': 'application/json',
                    },
                });

                if (!response.ok) {
                    const errorData = await response.json().catch(() => ({}));
                    throw new Error(`HTTP error ${response.status}: ${errorData.message || 'Failed to fetch agents'}`);
                }

                const fetchedAgents = await response.json();
                setAgents(fetchedAgents);

            } catch (err) {
                console.error("Error fetching agents:", err);
                setError(err.message || "An unexpected error occurred while fetching agents.");
                setAgents([]);
            } finally {
                setIsLoading(false);
            }
        };

        fetchAgents();

    }, [businessId]);

    // Implement navigation to stages view with agent_id parameter
    const handleManageStages = (agentId) => {
        console.log(`Navigate to manage stages for agent: ${agentId === null ? 'General' : agentId}`);
        // Navigate to the StageManager with agent_id and business_id query parameters
        navigate(`/stages?business_id=${businessId}&agent_id=${agentId === null ? '' : agentId}`);
    };

    // Add function to delete an agent
    const handleDeleteAgent = async (agentId, agentName) => {
        if (!window.confirm(`Are you sure you want to delete agent "${agentName}"?`)) {
            return;
        }

        try {
            const response = await fetch(`${API_BASE_URL}/agents/${agentId}?business_id=${businessId}`, {
                method: 'DELETE',
                credentials: 'include',
                headers: {
                    'Accept': 'application/json',
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ business_id: businessId })
            });

            if (!response.ok) {
                const errorData = await response.json().catch(() => ({}));
                throw new Error(`HTTP error ${response.status}: ${errorData.message || 'Failed to delete agent'}`);
            }

            // Success! Remove the agent from the list
            setAgents(prevAgents => prevAgents.filter(agent => agent.agent_id !== agentId));
            alert(`Agent "${agentName}" deleted successfully.`);
        } catch (err) {
            console.error("Error deleting agent:", err);
            alert(`Error deleting agent: ${err.message}`);
        }
    };

    if (isLoading) {
        return <div>Loading agents...</div>;
    }

    if (error) {
        return <div style={{ color: 'red' }}>Error: {error}</div>;
    }

    return (
        <div>
            <h2>Manage Agents & Stages</h2>
            <p>Select an agent or manage general stages.</p>
             {/* TODO: Add button/link to create new agents later */}

            {/* General Stages Option */}
            <div style={{ border: '1px solid #ccc', padding: '10px', marginBottom: '10px' }}>
                <h3>General Stages</h3>
                <p>Manage stages that apply to all agents.</p>
                <button onClick={() => handleManageStages(null)}>
                    Manage General Stages
                </button>
            </div>

            <hr />

             <h3>Specific Agents</h3>
            {agents.length > 0 ? (
                agents.map(agent => (
                    <div key={agent.agent_id} style={{ border: '1px solid #eee', padding: '10px', marginBottom: '10px' }}>
                        <h4>{agent.agent_name}</h4>
                        <p>Role: {agent.agent_role || 'N/A'}</p>
                        <p>ID: {agent.agent_id}</p>
                        <div style={{ display: 'flex', gap: '10px' }}>
                            <button onClick={() => handleManageStages(agent.agent_id)}>
                                Manage Stages for {agent.agent_name}
                            </button>
                            <button 
                                onClick={() => handleDeleteAgent(agent.agent_id, agent.agent_name)}
                                style={{ backgroundColor: '#f44336', color: 'white' }}
                            >
                                Delete Agent
                            </button>
                        </div>
                    </div>
                ))
            ) : (
                <p>No specific agents found for this business.</p>
            )}
        </div>
    );
}

export default AgentsListView;

================================================================================
File: BusinessDetailsView.jsx
Path: .\front-end\src\components\BusinessDetailsView\BusinessDetailsView.jsx
Size: 21196
Modified: 2025-04-25T12:58:31.507192
Created: 2025-04-02T20:28:12.052402
Hash: f1b6524bd1ed65da99126d4bfb0c74dd675a2b03716cfa1c564923ad4dd6ecbd
Lines: 579
================================================================================
import React, { useState, useEffect, useCallback } from 'react';
import { useNavigate } from 'react-router-dom';
import AgentSection from '../AgentSection';
import { 
  Snackbar, 
  Alert, 
  Box, 
  IconButton, 
  Typography, 
  Container, 
  Paper,
  Button,
  TextField,
  List,
  ListItem,
  ListItemText,
  ListItemSecondaryAction,
  Dialog,
  DialogTitle,
  DialogContent,
  DialogActions,
  Select,
  MenuItem,
  FormControl,
  InputLabel,
  CircularProgress
} from '@mui/material';
import ArrowBackIcon from '@mui/icons-material/ArrowBack';
import EditIcon from '@mui/icons-material/Edit';
import DescriptionIcon from '@mui/icons-material/Description';
import LogoutIcon from '@mui/icons-material/Logout';
import DeleteIcon from '@mui/icons-material/Delete';
import AddIcon from '@mui/icons-material/Add';

// Import services FIRST
import {
    getBusiness, 
    updateBusiness, 
    setDefaultStage 
} from '../../services/businessService'; 

import { 
    fetchStages 
} from '../../services/stageService';

import {
    fetchAgents, 
    createAgent, 
    updateAgent, 
    deleteAgent 
} from '../../services/agentService'; 

// Define your backend API base URL AFTER imports
const API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://localhost:5000';

function BusinessDetailsView() {
  const navigate = useNavigate();
  const [businessData, setBusinessData] = useState(null);
  const [editFormData, setEditFormData] = useState({}); // State for form data
  const [agents, setAgents] = useState([]);
  const [isLoading, setIsLoading] = useState(true);
  const [isSaving, setIsSaving] = useState(false); // Added saving state
  const [error, setError] = useState(null);
  const [isEditing, setIsEditing] = useState(false);
  const [snackbar, setSnackbar] = useState({ open: false, message: '', severity: 'success' });
  const [isEditingAgent, setIsEditingAgent] = useState(false);
  const [editingAgent, setEditingAgent] = useState(null);
  const [newAgentData, setNewAgentData] = useState({
    agent_name: '',
    agent_description: ''
  });

  // State for default stage selection
  const [availableStages, setAvailableStages] = useState([]); 
  const [selectedStageId, setSelectedStageId] = useState(''); 

  // Get the business ID from localStorage instead of hardcoding
  const businessId = localStorage.getItem('businessId');

  const handleSnackbarOpen = useCallback((message, severity = 'success') => {
    setSnackbar({
      open: true,
      message,
      severity
    });
  }, []);

  const handleSnackbarClose = () => {
    setSnackbar({ ...snackbar, open: false });
  };

  const handleNavigateToLogin = () => {
    navigate('/login');
  };

  const handleLogout = useCallback(() => {
    // Clear localStorage
    localStorage.removeItem('userId');
    localStorage.removeItem('businessId');
    localStorage.removeItem('businessApiKey');
    
    // Show logout message
    handleSnackbarOpen('Logged out successfully', 'success');
    
    // Navigate to login page
    navigate('/login');
  }, [navigate, handleSnackbarOpen]);

  // Navigate to stage management for a specific agent
  const navigateToStageManagement = useCallback((agentId, agentName) => {
    console.log(`Navigating to stages for agent: ${agentName} (${agentId})`);
    
    // Store agent ID in localStorage for persistence
    localStorage.setItem('agentId', agentId);
    
    // Navigate to stages with proper URL format
    navigate(`/stages?business_id=${businessId}&agent_id=${agentId}`);
  }, [navigate, businessId]);

  // Fetch business data, stages, and agents
  const fetchData = useCallback(async () => {
    if (!businessId) {
      setError("Business ID not found. Please login again.");
      setIsLoading(false);
      return;
    }
    setIsLoading(true);
    setError(null); // Clear previous errors
    console.log(`Fetching data for business ID: ${businessId}`);

    try {
      // Fetch Business Details (ensure service includes first_stage_id)
      // Use await Promise.all for concurrent fetching
      const [fetchedBusinessData, fetchedStages, fetchedAgents] = await Promise.all([
        getBusiness(businessId),
        fetchStages(businessId),
        fetchAgents(businessId)
      ]);

      console.log('Fetched business data:', fetchedBusinessData);
      setBusinessData(fetchedBusinessData);
      setEditFormData(fetchedBusinessData); // Initialize form data with current values
      setSelectedStageId(fetchedBusinessData.first_stage_id || ''); // Set initial dropdown value
      
      console.log('Fetched stages:', fetchedStages);
      setAvailableStages(fetchedStages || []);

      console.log('Fetched agents:', fetchedAgents);
      setAgents(fetchedAgents || []);
      
    } catch (err) {
      console.error('Error fetching data:', err);
      setError(`Failed to load data: ${err.message}`);
      handleSnackbarOpen(`Error loading data: ${err.message}`, 'error');
    } finally {
      setIsLoading(false);
    }
  }, [businessId, handleSnackbarOpen]);

  useEffect(() => {
    fetchData();
  }, [fetchData]); // Run fetchData when component mounts or fetchData changes

  const handleInputChange = (e) => {
    const { name, value } = e.target;
    setEditFormData(prevData => ({
      ...prevData,
      [name]: value
    }));
  };

  const handleEditToggle = () => {
    if (!isEditing && businessData) {
      setEditFormData({
        business_name: businessData.business_name || '',
        business_description: businessData.business_description || '',
        address: businessData.address || '',
        phone_number: businessData.phone_number || '',
        website: businessData.website || ''
      });
    }
    setIsEditing(!isEditing);
    setError(null); // Clear errors when toggling mode
  };

  const handleSaveChanges = async (e) => {
    e.preventDefault(); // Prevent default form submission
    setIsSaving(true); // Indicate saving process
    setError(null);
    console.log("Saving business changes:", editFormData);

    try {
      // Extract only updatable fields
      const dataToUpdate = { 
        business_name: editFormData.business_name, 
        business_description: editFormData.business_description,
        address: editFormData.address,
        phone_number: editFormData.phone_number,
        website: editFormData.website
      }; 
      await updateBusiness(businessId, dataToUpdate);

      // Update the main business data state after successful save
      setBusinessData(prev => ({ ...prev, ...dataToUpdate })); 
      setIsEditing(false); // Exit edit mode
      handleSnackbarOpen('Business details updated successfully!', 'success');
    } catch (err) {
      console.error('Error saving business details:', err);
      setError(`Save failed: ${err.message}`);
      handleSnackbarOpen(`Error saving details: ${err.message}`, 'error');
    } finally {
      setIsSaving(false);
    }
  };

  // --- Default Stage Logic ---
  const handleStageSelectChange = (event) => {
    setSelectedStageId(event.target.value);
  };

  const handleSaveDefaultStage = async () => {
    if (!businessId) return;
    setIsSaving(true);
    setError(null);
    try {
      const stageIdToSave = selectedStageId === '' ? null : selectedStageId;
      await setDefaultStage(businessId, stageIdToSave);
      // Update local state optimistically or refetch
      setBusinessData(prev => ({ ...prev, first_stage_id: stageIdToSave })); 
      handleSnackbarOpen('Default starting stage updated successfully!', 'success');
    } catch (err) {
      console.error('Error saving default stage:', err);
      setError(`Failed to save default stage: ${err.message}`);
      handleSnackbarOpen(`Error saving default stage: ${err.message}`, 'error');
    } finally {
      setIsSaving(false);
    }
  };

  // Handle edit agent
  const handleEditAgent = (agent) => {
    setEditingAgent(agent);
    setIsEditingAgent(true);
  };

  // Handle delete agent
  const handleDeleteAgent = async (agentId) => {
    if (!window.confirm('Are you sure you want to delete this agent?')) {
      return;
    }
    
    setIsLoading(true);
    try {
      await deleteAgent(businessId, agentId);
      setAgents(prev => prev.filter(agent => agent.agent_id !== agentId));
      handleSnackbarOpen('Agent deleted successfully', 'success');
    } catch (error) {
      console.error('Error deleting agent:', error);
      handleSnackbarOpen(`Error deleting agent: ${error.message}`, 'error');
    } finally {
      setIsLoading(false);
    }
  };

  const handleAgentDialogClose = () => {
    setIsEditingAgent(false);
    setEditingAgent(null);
    setNewAgentData({ agent_name: '', agent_description: '' }); // Reset form
  };

  const handleAgentFormChange = (event) => {
    const { name, value } = event.target;
    if (editingAgent) {
      setEditingAgent(prev => ({ ...prev, [name]: value }));
    } else {
      setNewAgentData(prev => ({ ...prev, [name]: value }));
    }
  };

  const handleAgentFormSubmit = async (event) => {
    event.preventDefault();
    const agentData = editingAgent || newAgentData;
    if (!agentData.agent_name?.trim()) {
      handleSnackbarOpen('Agent name cannot be empty', 'warning');
      return;
    }

    setIsSaving(true); // Use general saving indicator
    try {
      let savedAgent;
      if (editingAgent) {
        savedAgent = await updateAgent(editingAgent.agent_id, agentData);
        setAgents(prev => prev.map(a => a.agent_id === savedAgent.agent_id ? savedAgent : a));
      } else {
        savedAgent = await createAgent(agentData);
        setAgents(prev => [...prev, savedAgent]);
      }
      handleSnackbarOpen(editingAgent ? 'Agent updated' : 'Agent created', 'success');
      handleAgentDialogClose();
    } catch (error) {
      console.error('Error saving agent:', error);
      handleSnackbarOpen(`Error saving agent: ${error.message}`, 'error');
    } finally {
      setIsSaving(false);
    }
  };

  if (isLoading) {
    return <Container><Box display="flex" justifyContent="center" mt={5}><CircularProgress /></Box></Container>;
  }

  // Show login prompt if no businessId (e.g., localStorage cleared)
  if (!businessId) {
    return (
      <Container>
        <Alert severity="warning" sx={{ mt: 2 }}>
          Business ID not found. Please log in or configure your application.
        </Alert>
        <Button onClick={() => navigate('/login')} sx={{ mt: 1 }}>Go to Login</Button>
      </Container>
    );
  }

  // Show error if data fetching failed (and not just loading)
  if (error && !businessData) { // Only show main error if data failed completely
    return <Container><Alert severity="error" sx={{ mt: 2 }}>{error}</Alert></Container>;
  }

  // Should ideally not happen if businessId exists, but good fallback
  if (!businessData) { 
    return <Container><Alert severity="info" sx={{ mt: 2 }}>No business data loaded.</Alert></Container>;
  }

  return (
    <Container maxWidth="lg">
      <Paper elevation={3} sx={{ p: 3, mt: 2 }}>
        <Box display="flex" justifyContent="space-between" alignItems="center" mb={2}>
          <IconButton onClick={() => navigate(-1)}> {/* Go back */} 
            <ArrowBackIcon />
          </IconButton>
          <Typography variant="h4" component="h1">
            Business Dashboard
          </Typography>
          <Button 
            variant="outlined" 
            startIcon={<LogoutIcon />} 
            onClick={handleLogout}
          >
            Logout
          </Button>
        </Box>

        {/* Display any general saving error */} 
        {error && <Alert severity="error" sx={{ mb: 2 }}>{error}</Alert>}

        {/* --- Business Details Section --- */} 
        <Box mb={4}>
          <Typography variant="h5" gutterBottom>Business Details</Typography>
          {!isEditing ? (
            <Box>
              <Typography><strong>Name:</strong> {businessData.business_name}</Typography>
              <Typography><strong>Description:</strong> {businessData.business_description || 'N/A'}</Typography>
              <Typography><strong>Address:</strong> {businessData.address || 'N/A'}</Typography>
              <Typography><strong>Phone:</strong> {businessData.phone_number || 'N/A'}</Typography>
              <Typography><strong>Website:</strong> {businessData.website ? <a href={businessData.website} target="_blank" rel="noopener noreferrer">{businessData.website}</a> : 'N/A'}</Typography>
              <Typography><strong>Business ID:</strong> {businessData.business_id}</Typography>
              <Typography><strong>Owner ID:</strong> {businessData.owner_id}</Typography>
              <Button 
                variant="contained" 
                startIcon={<EditIcon />} 
                onClick={handleEditToggle} 
                sx={{ mt: 2 }}
              >
                Edit Details
              </Button>
            </Box>
          ) : (
            <Box component="form" onSubmit={handleSaveChanges} noValidate autoComplete="off">
              <TextField 
                label="Business Name"
                name="business_name"
                value={editFormData.business_name || ''}
                onChange={handleInputChange}
                fullWidth 
                margin="normal"
                required
                disabled={isSaving}
              />
              <TextField 
                label="Description"
                name="business_description"
                value={editFormData.business_description || ''}
                onChange={handleInputChange}
                fullWidth 
                margin="normal"
                multiline
                rows={3}
                disabled={isSaving}
              />
              <TextField 
                label="Address"
                name="address"
                value={editFormData.address || ''}
                onChange={handleInputChange}
                fullWidth 
                margin="normal"
                disabled={isSaving}
              />
              <TextField 
                label="Phone Number"
                name="phone_number"
                value={editFormData.phone_number || ''}
                onChange={handleInputChange}
                fullWidth 
                margin="normal"
                disabled={isSaving}
              />
              <TextField 
                label="Website"
                name="website"
                value={editFormData.website || ''}
                onChange={handleInputChange}
                fullWidth 
                margin="normal"
                type="url"
                disabled={isSaving}
              />
              <Box sx={{ mt: 2 }}>
                <Button 
                  type="submit" 
                  variant="contained" 
                  disabled={isSaving}
                  sx={{ mr: 1 }}
                >
                  {isSaving ? <CircularProgress size={24} /> : 'Save Changes'}
                </Button>
                <Button variant="outlined" onClick={handleEditToggle} disabled={isSaving}>
                  Cancel
                </Button>
              </Box>
            </Box>
          )}
        </Box>

        <hr />

        {/* --- Default Stage Selection Section --- */} 
        <Box mt={4} mb={4}>
          <Typography variant="h6" gutterBottom>Conversation Settings</Typography>
          <FormControl fullWidth margin="normal">
            <InputLabel id="default-stage-label">Default Starting Stage</InputLabel>
            <Select
              labelId="default-stage-label"
              id="default-stage-select"
              value={selectedStageId} // Bind to state
              label="Default Starting Stage"
              onChange={handleStageSelectChange} // Handle change
              disabled={isSaving || isLoading} // Disable while loading/saving
            >
              {/* "None" option */}
              <MenuItem value="">
                <em>None (System will pick first available)</em>
              </MenuItem>
              {/* Map available stages */} 
              {availableStages.length > 0 ? (
                availableStages.map((stage) => {
                  // --- DEBUGGING LOG --- 
                  console.log("Rendering stage:", stage);
                  // ---------------------
                  
                  // Find the agent name using the stage's agent_id
                  // Ensure agents state is populated before trying to find
                  const linkedAgent = agents && agents.find(agent => agent.agent_id === stage.agent_id);
                  const agentNameDisplay = linkedAgent ? ` (Agent: ${linkedAgent.agent_name})` : ''; // Display agent name if found
                  const displayText = `${stage.stage_name}${agentNameDisplay}`;

                  // --- DEBUGGING LOG --- 
                  console.log("Display text:", displayText);
                  // ---------------------
                  
                  return (
                    <MenuItem key={stage.stage_id} value={stage.stage_id}>
                      {/* Display Stage Name and potentially Agent Name */} 
                      {displayText}
                    </MenuItem>
                  );
                })
              ) : (
                <MenuItem disabled>No stages available for this business</MenuItem>
              )}
            </Select>
          </FormControl>
          <Button 
            variant="contained" 
            onClick={handleSaveDefaultStage} // Save handler
            disabled={isSaving || isLoading || selectedStageId === (businessData.first_stage_id || '')} // Disable if no change
            sx={{ mt: 2 }}
          >
            {isSaving ? <CircularProgress size={24} /> : 'Save Default Stage'}
          </Button>
        </Box>
        
        <hr />

        {/* --- Agent Section --- */} 
        {/* Pass necessary props and handlers to AgentSection */}
        <AgentSection 
          agents={agents}
          isLoading={isLoading} // Pass loading state if needed by AgentSection
          isSaving={isSaving} // Pass saving state
          businessId={businessId}
          onEditAgent={handleEditAgent} 
          onDeleteAgent={handleDeleteAgent}
          onNavigateToStages={navigateToStageManagement} 
          onAddAgent={() => { setEditingAgent(null); setIsEditingAgent(true); }} // Open dialog for new agent
          handleSnackbarOpen={handleSnackbarOpen} // Pass snackbar handler
        />

        {/* --- Dialog for Adding/Editing Agent --- */} 
        <Dialog open={isEditingAgent} onClose={handleAgentDialogClose} fullWidth maxWidth="sm">
          <DialogTitle>{editingAgent ? 'Edit Agent' : 'Add New Agent'}</DialogTitle>
          <DialogContent>
            <TextField
              autoFocus
              margin="dense"
              name="agent_name"
              label="Agent Name"
              type="text"
              fullWidth
              variant="standard"
              value={editingAgent ? editingAgent.agent_name : newAgentData.agent_name}
              onChange={handleAgentFormChange}
              required
              disabled={isSaving}
            />
            <TextField
              margin="dense"
              name="agent_description"
              label="Agent Description"
              type="text"
              fullWidth
              variant="standard"
              multiline
              rows={3}
              value={editingAgent ? editingAgent.agent_description : newAgentData.agent_description}
              onChange={handleAgentFormChange}
              disabled={isSaving}
            />
          </DialogContent>
          <DialogActions>
            <Button onClick={handleAgentDialogClose} disabled={isSaving}>Cancel</Button>
            <Button 
              onClick={handleAgentFormSubmit} 
              variant="contained" 
              disabled={isSaving || !(editingAgent || newAgentData).agent_name?.trim()} // Disable if name empty
            >
              {isSaving ? <CircularProgress size={24} /> : (editingAgent ? 'Save Changes' : 'Create Agent')}
            </Button>
          </DialogActions>
        </Dialog>

      </Paper>

      <Snackbar 
        open={snackbar.open} 
        autoHideDuration={6000} 
        onClose={handleSnackbarClose}
        anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}
      >
        <Alert onClose={handleSnackbarClose} severity={snackbar.severity} sx={{ width: '100%' }}>
          {snackbar.message}
        </Alert>
      </Snackbar>

    </Container>
  );
}

export default BusinessDetailsView;

================================================================================
File: FilteredStageListView.jsx
Path: .\front-end\src\components\FilteredStageListView\FilteredStageListView.jsx
Size: 10381
Modified: 2025-04-17T01:19:09.492235
Created: 2025-04-02T20:42:36.371776
Hash: 5103f437af77683d2d6cf6a393071b09420e496c024412f7ad3511e850d33b0d
Lines: 245
================================================================================
import React, { useState, useEffect } from 'react';
// Import routing hooks
import { useLocation, useNavigate } from 'react-router-dom';

// Define your backend API base URL
const API_BASE_URL = 'http://localhost:5000';

function FilteredStageListView() {
    const [stages, setStages] = useState([]);
    const [isLoading, setIsLoading] = useState(true);
    const [error, setError] = useState(null);
    const [contextAgentId, setContextAgentId] = useState(null); // agent_id or 'null' for general
    const [contextAgentName, setContextAgentName] = useState('General'); // For display
    const navigate = useNavigate();
    const location = useLocation();

    // Get business and agent ID from query params
    const queryParams = new URLSearchParams(location.search);
    const businessId = queryParams.get('business_id') || localStorage.getItem('businessId');
    const agentIdParam = queryParams.get('agent_id') || '';
    
    // Fetch agent details when agent_id is available
    useEffect(() => {
        const fetchAgentDetails = async () => {
            if (!agentIdParam || agentIdParam === 'null' || agentIdParam === '') {
                setContextAgentId('');
                setContextAgentName('General');
                return;
            }
            
            try {
                const response = await fetch(`${API_BASE_URL}/agents/${agentIdParam}?business_id=${businessId}`, {
                    credentials: 'include'
                });
                
                if (!response.ok) {
                    throw new Error('Failed to fetch agent details');
                }
                
                const agentData = await response.json();
                setContextAgentId(agentIdParam);
                setContextAgentName(agentData.agent_name || `Agent ${agentIdParam}`);
            } catch (err) {
                console.error("Error fetching agent details:", err);
                setContextAgentId(agentIdParam);
                setContextAgentName(`Agent ${agentIdParam}`); // Fallback
            }
        };
        
        fetchAgentDetails();
    }, [agentIdParam, businessId]);

    // Fetch stages when businessId or contextAgentId is determined
    useEffect(() => {
        const fetchStages = async () => {
            if (!businessId) { 
                 setError("Business ID not available.");
                 setIsLoading(false);
                 return;
            }

            setIsLoading(true);
            setError(null);
            console.log(`Fetching stages for business ID: ${businessId}, Agent Context: ${contextAgentId || 'General'}`);

            // Construct the URL with the agent_id filter
            let url = `${API_BASE_URL}/stages?business_id=${businessId}`;
            if (contextAgentId) {
                url += `&agent_id=${contextAgentId}`;
            }

            try {
                const response = await fetch(url, {
                    method: 'GET',
                    credentials: 'include', // Send cookies
                    headers: {
                        'Accept': 'application/json',
                    },
                });

                if (!response.ok) {
                    const errorData = await response.json().catch(() => ({}));
                    throw new Error(`HTTP error ${response.status}: ${errorData.message || 'Failed to fetch stages'}`);
                }

                const fetchedStages = await response.json();
                setStages(fetchedStages);

            } catch (err) {
                console.error("Error fetching stages:", err);
                setError(err.message || "An unexpected error occurred while fetching stages.");
                setStages([]);
            } finally {
                setIsLoading(false);
            }
        };

        if (businessId) {
            fetchStages();
        }

    }, [businessId, contextAgentId]); // Refetch if business or agent context changes

    const handleAddStage = () => {
        console.log(`Navigate to Add Stage form for agent context: ${contextAgentId}`);
         // TODO: Use navigate to go to the Add/Edit Stage form, passing context
         // Example: navigate(`/stages/new?agent_id=${contextAgentId}`);
    };

    const handleEditStage = (stageId) => {
        console.log(`Navigate to Edit Stage form for stage: ${stageId}, agent context: ${contextAgentId}`);
        // TODO: Use navigate
        // Example: navigate(`/stages/edit/${stageId}?agent_id=${contextAgentId}`);
    };

    const handleDeleteStage = async (stageId, stageName) => {
        if (!window.confirm(`Are you sure you want to delete the stage "${stageName}"?`)) {
            return;
        }

        console.log(`Deleting stage: ${stageId} with businessId: ${businessId}`);
        setError(null); // Clear previous errors

        try {
             // Make sure we have a business ID
             if (!businessId) {
                 throw new Error("Business ID is required for deletion");
             }
             
             // Get the business API key from localStorage for authorization
             const businessApiKey = localStorage.getItem('businessApiKey');
             if (!businessApiKey) {
                 throw new Error("Business API Key is required for deletion");
             }
             
             // Note: DELETE request needs business_id in query args or body for the backend endpoint
             const deleteUrl = `${API_BASE_URL}/stages/${stageId}?business_id=${businessId}`;
             console.log(`Making DELETE request to: ${deleteUrl}`);
             
             const response = await fetch(deleteUrl, {
                 method: 'DELETE',
                 credentials: 'include',
                 headers: {
                    'Accept': 'application/json',
                    'Authorization': `Bearer ${businessApiKey}`
                 }
             });

             console.log(`Delete response status: ${response.status}`);
             
             // Handle response based on status code
             if (response.status === 204) {
                // 204 No Content is a success response for DELETE
                console.log(`Stage ${stageId} deleted successfully with 204 response.`);
                // Remove stage from local state
                setStages(prevStages => prevStages.filter(s => s.stage_id !== stageId));
                return; // Exit successfully
             } else if (response.status === 200) {
                // Some APIs return 200 OK for successful DELETE
                console.log(`Stage ${stageId} deleted successfully with 200 response.`);
                // Remove stage from local state
                setStages(prevStages => prevStages.filter(s => s.stage_id !== stageId));
                return; // Exit successfully
             } else if (!response.ok) {
                // Try to get error details from response body
                const errorText = await response.text();
                console.error(`Failed to delete stage. Status: ${response.status}, Response: ${errorText}`);
                
                try {
                    const errorData = JSON.parse(errorText);
                    throw new Error(`Failed to delete stage: ${errorData.error || errorData.message || 'Unknown error'}`);
                } catch (parseError) {
                    throw new Error(`Failed to delete stage: HTTP error ${response.status}`);
                }
             }

        } catch (err) {
             console.error("Error deleting stage:", err);
             setError(err.message || "An unexpected error occurred while deleting the stage.");
        }
    };


    if (isLoading) {
        return <div>Loading stages for {contextAgentName}...</div>;
    }

    // Display error prominently
    if (error) {
        return <div style={{ color: 'red' }}>Error: {error}</div>;
    }

    return (
        <div>
            {/* Display which agent context we are viewing */}
            <h2>Manage Stages for: {contextAgentName}</h2>

            {/* Add New Stage Button */}
            {/* TODO: Use Link or navigate onClick */}
            <button onClick={handleAddStage} style={{ marginBottom: '15px' }}>
                Add New Stage
            </button>

             {/* TODO: Improve table styling */}
            <table border="1" style={{ width: '100%', borderCollapse: 'collapse' }}>
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Type</th>
                        <th>Description</th>
                        <th>Created At</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    {stages.length > 0 ? (
                        stages.map(stage => (
                            <tr key={stage.stage_id}>
                                <td>{stage.stage_name}</td>
                                <td>{stage.stage_type}</td>
                                <td>{stage.stage_description}</td>
                                <td>{new Date(stage.created_at).toLocaleString()}</td>
                                <td>
                                     {/* TODO: Use Link or navigate onClick */}
                                    <button onClick={() => handleEditStage(stage.stage_id)} style={{ marginRight: '5px' }}>
                                        Edit
                                    </button>
                                    <button onClick={() => handleDeleteStage(stage.stage_id, stage.stage_name)}>
                                        Delete
                                    </button>
                                </td>
                            </tr>
                        ))
                    ) : (
                        <tr>
                            <td colSpan="5" style={{ textAlign: 'center' }}>No stages found for this context.</td>
                        </tr>
                    )}
                </tbody>
            </table>
        </div>
    );
}

export default FilteredStageListView;

================================================================================
File: BusinessSection.js
Path: .\front-end\src\components\teste\BusinessSection.js
Size: 1258
Modified: 2025-04-17T01:19:09.557059
Created: 2025-04-02T01:33:55.058997
Hash: 94e197cc7a83518d6bb995c676d194c70cbad3d1075df5955c665b6bc3a3bc19
Lines: 46
================================================================================
import React from 'react';
import useBusiness from '../../hooks/useBusiness';
import { Box, Typography, Paper } from '@mui/material';

const BusinessSection = ({ handleSnackbarOpen }) => {
  const { businessDetails, isLoading, error } = useBusiness(handleSnackbarOpen);

  if (isLoading) {
    return (
      <Paper elevation={1} sx={{ p: 2, my: 2 }}>
        <Typography>Loading Business Details...</Typography>
      </Paper>
    );
  }

  if (error) {
    return (
      <Paper elevation={1} sx={{ p: 2, my: 2 }}>
        <Typography color="error">Error loading business details</Typography>
      </Paper>
    );
  }

  if (!businessDetails) {
    return (
      <Paper elevation={1} sx={{ p: 2, my: 2 }}>
        <Typography>Business details will load here</Typography>
      </Paper>
    );
  }

  return (
    <Paper elevation={1} sx={{ p: 2, my: 2 }}>
      <Box>
        <Typography variant="h6" gutterBottom>
          {businessDetails.name}
        </Typography>
        <Typography>{businessDetails.address}</Typography>
        <Typography>{businessDetails.phone}</Typography>
        <Typography>{businessDetails.email}</Typography>
      </Box>
    </Paper>
  );
};

export default BusinessSection;

================================================================================
File: BusinessSection.test.js
Path: .\front-end\src\components\teste\BusinessSection.test.js
Size: 4705
Modified: 2025-04-17T01:19:09.612913
Created: 2025-04-01T07:16:45.900497
Hash: 81e890efe59be20a364a7eeb04652224002407f425587f9306320f480e3a7bcc
Lines: 145
================================================================================
import React from 'react';
import { screen, waitFor, fireEvent } from '@testing-library/react';
import { render } from '../../test-utils';
import '@testing-library/jest-dom';
import BusinessSection from '../BusinessSection';

// Mock the useBusiness hook
jest.mock('../../hooks/useBusiness', () => ({
  __esModule: true,
  default: jest.fn()
}));

describe('BusinessSection', () => {
  const mockHandleSnackbarOpen = jest.fn();

  beforeEach(() => {
    jest.clearAllMocks();
    
    // Mock localStorage
    Object.defineProperty(window, 'localStorage', {
      value: {
        getItem: jest.fn(),
        setItem: jest.fn(),
        removeItem: jest.fn(),
        clear: jest.fn()
      },
      writable: true
    });
    
    // Mock localStorage to return a valid business ID
    window.localStorage.getItem.mockImplementation((key) => {
      if (key === 'businessId') return 'test-business-id';
      if (key === 'businessApiKey') return 'test-api-key';
      return null;
    });
    
    // Clear cookies
    document.cookie = '';
  });

  it('displays loading state initially', async () => {
    require('../../hooks/useBusiness').default.mockImplementation(() => ({
      businessDetails: null,
      isLoading: true,
      error: null
    }));

    render(<BusinessSection handleSnackbarOpen={mockHandleSnackbarOpen} />);
    await screen.findByTestId('loading-state');
  });

  it('renders business details when loaded', async () => {
    const mockBusinessDetails = {
      business_name: 'Test Business',
      address: '123 Test St',
      phone: '123-456-7890',
      email: 'test@business.com'
    };

    require('../../hooks/useBusiness').default.mockImplementation(() => ({
      businessDetails: mockBusinessDetails,
      isLoading: false,
      error: null
    }));

    render(<BusinessSection handleSnackbarOpen={mockHandleSnackbarOpen} />);
    await screen.findByTestId('business-details');
    expect(screen.getByText(mockBusinessDetails.business_name)).toBeInTheDocument();
  });

  it('renders error state', async () => {
    const errorMessage = 'Failed to load business details';
    require('../../hooks/useBusiness').default.mockImplementation(() => ({
      businessDetails: null,
      isLoading: false,
      error: errorMessage
    }));

    render(<BusinessSection handleSnackbarOpen={mockHandleSnackbarOpen} />);
    await screen.findByTestId('error-state');
    expect(screen.getByText(new RegExp(errorMessage))).toBeInTheDocument();
  });

  it('renders empty state when no details available', async () => {
    require('../../hooks/useBusiness').default.mockImplementation(() => ({
      businessDetails: null,
      isLoading: false,
      error: null
    }));

    render(<BusinessSection handleSnackbarOpen={mockHandleSnackbarOpen} />);
    await screen.findByTestId('empty-state');
  });
  
  it('passes business ID from localStorage to useBusiness hook', async () => {
    // Spy on the useBusiness hook
    const useBusiness = require('../../hooks/useBusiness').default;
    
    render(<BusinessSection handleSnackbarOpen={mockHandleSnackbarOpen} />);
    
    // Verify hook was called with business ID from localStorage
    expect(useBusiness).toHaveBeenCalledWith('test-business-id');
  });
  
  it('shows credential error when business ID is missing', async () => {
    // Mock localStorage to return no business ID
    window.localStorage.getItem.mockImplementation(() => null);
    
    require('../../hooks/useBusiness').default.mockImplementation(() => ({
      businessDetails: null,
      isLoading: false,
      error: 'Business ID is required'
    }));
    
    render(<BusinessSection handleSnackbarOpen={mockHandleSnackbarOpen} />);
    
    // Verify error message
    await waitFor(() => {
      expect(mockHandleSnackbarOpen).toHaveBeenCalledWith(
        'Business ID is required. Please check your configuration.',
        'error'
      );
    });
  });
  
  it('handles refresh button click', async () => {
    const mockRefresh = jest.fn();
    
    require('../../hooks/useBusiness').default.mockImplementation(() => ({
      businessDetails: null,
      isLoading: false,
      error: 'Failed to load',
      refreshBusinessDetails: mockRefresh
    }));
    
    render(<BusinessSection handleSnackbarOpen={mockHandleSnackbarOpen} />);
    
    // Find and click refresh button
    const refreshButton = await screen.findByTestId('refresh-button');
    fireEvent.click(refreshButton);
    
    // Verify refresh function was called
    expect(mockRefresh).toHaveBeenCalled();
  });
});

================================================================================
File: TemplateSection.test.js
Path: .\front-end\src\components\teste\TemplateSection.test.js
Size: 5366
Modified: 2025-04-17T01:19:09.676346
Created: 2025-04-01T07:11:44.512485
Hash: b70bb862e4dbc97b9deb0c95b17deec5ecd0c6edc18c713b88289b10c97c6565
Lines: 164
================================================================================
import React from 'react';
import { screen, fireEvent, waitFor } from '@testing-library/react';
import { render } from '../../test-utils';
import '@testing-library/jest-dom';
import TemplateSection from '../TemplateSection';

// Mock console.log to suppress useEffect logs
const originalConsoleLog = console.log;
beforeAll(() => {
  console.log = jest.fn();
});

afterAll(() => {
  console.log = originalConsoleLog;
});

// Mock API calls
jest.mock('../../services/api', () => ({
  createTemplate: jest.fn(),
  fetchTemplateDetails: jest.fn(),
}));

describe('TemplateSection', () => {
  const mockSetTemplateID = jest.fn();
  const mockSetTemplateName = jest.fn();
  const mockSetTemplateText = jest.fn();
  const mockCreateTemplate = jest.fn();

  beforeEach(() => {
    jest.clearAllMocks();
    
    // Mock localStorage
    Object.defineProperty(window, 'localStorage', {
      value: {
        getItem: jest.fn(),
        setItem: jest.fn(),
        removeItem: jest.fn(),
        clear: jest.fn()
      },
      writable: true
    });
    
    // Mock localStorage to return a valid business ID
    window.localStorage.getItem.mockImplementation((key) => {
      if (key === 'businessId') return 'test-business-id';
      if (key === 'businessApiKey') return 'test-api-key';
      return null;
    });
    
    // Clear cookies
    document.cookie = '';
  });

  const renderComponent = (props = {}) => {
    return render(
      <TemplateSection
        templateID=""
        setTemplateID={mockSetTemplateID}
        templateName=""
        setTemplateName={mockSetTemplateName}
        templateText=""
        setTemplateText={mockSetTemplateText}
        createTemplate={mockCreateTemplate}
        businessId="test-business-id"
        {...props}
      />
    );
  };

  it('renders template section with correct title', async () => {
    renderComponent();
    expect(await screen.findByTestId('template-section-title')).toHaveTextContent('Template Management');
  });

  it('renders template ID input field', async () => {
    renderComponent();
    expect(await screen.findByTestId('template-id-input')).toBeInTheDocument();
  });

  it('updates template ID when input changes', async () => {
    renderComponent();
    const input = await screen.findByTestId('template-id-input');
    const inputElement = input.querySelector('input');
    await waitFor(() => {
      fireEvent.change(inputElement, { target: { value: 'test-template' } });
    });
    expect(mockSetTemplateID).toHaveBeenCalledWith('test-template');
  });

  it('renders template text textarea', async () => {
    renderComponent();
    expect(await screen.findByTestId('template-text-input')).toBeInTheDocument();
  });

  it('updates template content when textarea changes', async () => {
    renderComponent();
    const textareaContainer = await screen.findByTestId('template-text-input');
    const textareaElement = textareaContainer.querySelector('textarea');
    await waitFor(() => {
      fireEvent.change(textareaElement, { target: { value: 'Test content' } });
    });
    expect(mockSetTemplateText).toHaveBeenCalledWith('Test content');
  });

  it('renders create template button', async () => {
    renderComponent();
    expect(await screen.findByTestId('create-template-button')).toHaveTextContent('Create Template');
  });

  it('calls createTemplate when create button is clicked', async () => {
    renderComponent();
    const button = await screen.findByTestId('create-template-button');
    fireEvent.click(button);
    expect(mockCreateTemplate).toHaveBeenCalled();
  });
  
  it('checks for business ID in localStorage before template operations', async () => {
    // Mock localStorage to return no business ID
    window.localStorage.getItem.mockImplementation(() => null);
    
    const component = renderComponent();
    const button = await screen.findByTestId('create-template-button');
    
    // Create a spy on the console.error method
    const consoleSpy = jest.spyOn(console, 'error');
    
    // Click create button without a business ID
    fireEvent.click(button);
    
    // Verify error is logged
    expect(consoleSpy).toHaveBeenCalledWith(expect.stringContaining('Business ID is required'));
    
    // Clean up
    consoleSpy.mockRestore();
  });
  
  it('includes business ID from props when creating template', async () => {
    renderComponent({ businessId: 'custom-business-id' });
    const button = await screen.findByTestId('create-template-button');
    
    fireEvent.click(button);
    
    // Verify createTemplate was called with business ID
    expect(mockCreateTemplate).toHaveBeenCalledWith(
      expect.objectContaining({
        business_id: 'custom-business-id'
      })
    );
  });
  
  it('falls back to localStorage business ID when not in props', async () => {
    renderComponent({ businessId: undefined });
    const button = await screen.findByTestId('create-template-button');
    
    fireEvent.click(button);
    
    // Verify createTemplate was called with business ID from localStorage
    expect(mockCreateTemplate).toHaveBeenCalledWith(
      expect.objectContaining({
        business_id: 'test-business-id'
      })
    );
  });
});

================================================================================
File: UserSection.test.js
Path: .\front-end\src\components\teste\UserSection.test.js
Size: 5824
Modified: 2025-04-17T01:19:09.743193
Created: 2025-04-01T07:13:01.577311
Hash: 1b81e28937a4cc3ae9ca620ffaebea66eb7f534f36c302c13ac91ac4d8386736
Lines: 185
================================================================================
import React from 'react';
import { screen, fireEvent, waitFor } from '@testing-library/react';
import { render } from '../../test-utils';
import '@testing-library/jest-dom';
import UserSection from '../UserSection';

describe('UserSection', () => {
  const mockSetFirstName = jest.fn();
  const mockSetLastName = jest.fn();
  const mockSetEmail = jest.fn();
  const mockSetPhone = jest.fn();
  const mockCreateUser = jest.fn();

  beforeEach(() => {
    jest.clearAllMocks();
    
    // Mock localStorage
    Object.defineProperty(window, 'localStorage', {
      value: {
        getItem: jest.fn(),
        setItem: jest.fn(),
        removeItem: jest.fn(),
        clear: jest.fn()
      },
      writable: true
    });
    
    // Mock localStorage to return a valid business ID
    window.localStorage.getItem.mockImplementation((key) => {
      if (key === 'businessId') return 'test-business-id';
      if (key === 'businessApiKey') return 'test-api-key';
      if (key === 'userId') return 'test-user-id';
      return null;
    });
    
    // Clear cookies
    document.cookie = '';
    
    // Mock fetch API
    global.fetch = jest.fn();
  });
  
  afterEach(() => {
    jest.resetAllMocks();
  });

  const renderComponent = (props = {}) => {
    return render(
      <UserSection
        firstName=""
        setFirstName={mockSetFirstName}
        lastName=""
        setLastName={mockSetLastName}
        email=""
        setEmail={mockSetEmail}
        phone=""
        setPhone={mockSetPhone}
        createUser={mockCreateUser}
        businessId="test-business-id"
        {...props}
      />
    );
  };

  it('renders user section with correct title', () => {
    renderComponent();
    expect(screen.getByText('User Management')).toBeInTheDocument();
  });

  it('updates first name on input change', () => {
    renderComponent();
    const input = screen.getByLabelText('First Name');
    fireEvent.change(input, { target: { value: 'John' } });
    expect(mockSetFirstName).toHaveBeenCalledWith('John');
  });

  it('renders create user button', () => {
    renderComponent();
    expect(screen.getByRole('button', { name: 'Create User' })).toBeInTheDocument();
  });
  
  it('includes business ID when creating a user', async () => {
    renderComponent();
    
    // Fill form fields
    fireEvent.change(screen.getByLabelText('First Name'), { target: { value: 'John' } });
    fireEvent.change(screen.getByLabelText('Last Name'), { target: { value: 'Doe' } });
    fireEvent.change(screen.getByLabelText('Email'), { target: { value: 'john@example.com' } });
    fireEvent.change(screen.getByLabelText('Phone'), { target: { value: '555-1234' } });
    
    // Mock successful API response
    global.fetch.mockImplementationOnce(() => 
      Promise.resolve({
        ok: true,
        json: () => Promise.resolve({ user_id: 'new-user-id' })
      })
    );
    
    // Click create button
    fireEvent.click(screen.getByRole('button', { name: 'Create User' }));
    
    // Verify createUser was called with business ID
    await waitFor(() => {
      expect(mockCreateUser).toHaveBeenCalledWith(
        expect.objectContaining({
          business_id: 'test-business-id'
        })
      );
    });
  });
  
  it('falls back to localStorage business ID when not in props', async () => {
    renderComponent({ businessId: undefined });
    
    // Fill form fields
    fireEvent.change(screen.getByLabelText('First Name'), { target: { value: 'John' } });
    fireEvent.change(screen.getByLabelText('Last Name'), { target: { value: 'Doe' } });
    
    // Click create button
    fireEvent.click(screen.getByRole('button', { name: 'Create User' }));
    
    // Verify createUser was called with business ID from localStorage
    await waitFor(() => {
      expect(mockCreateUser).toHaveBeenCalledWith(
        expect.objectContaining({
          business_id: 'test-business-id'
        })
      );
    });
  });
  
  it('shows error when no business ID is available', async () => {
    // Mock localStorage to return no business ID
    window.localStorage.getItem.mockImplementation(() => null);
    
    const consoleSpy = jest.spyOn(console, 'error').mockImplementation(() => {});
    
    renderComponent({ businessId: undefined });
    
    // Click create button without a business ID
    fireEvent.click(screen.getByRole('button', { name: 'Create User' }));
    
    // Verify error is logged
    await waitFor(() => {
      expect(consoleSpy).toHaveBeenCalledWith(expect.stringContaining('Business ID is required'));
    });
    
    // Clean up
    consoleSpy.mockRestore();
  });
  
  it('loads user info when userId is available', async () => {
    // Mock API response
    global.fetch.mockImplementationOnce(() => 
      Promise.resolve({
        ok: true,
        json: () => Promise.resolve({ 
          first_name: 'John',
          last_name: 'Doe',
          email: 'john@example.com',
          phone: '555-1234'
        })
      })
    );
    
    renderComponent();
    
    // Verify user info is fetched and state is updated
    await waitFor(() => {
      expect(global.fetch).toHaveBeenCalledWith(
        expect.stringContaining('/users/test-user-id'),
        expect.objectContaining({
          headers: expect.objectContaining({
            'Authorization': 'test-api-key'
          })
        })
      );
      
      expect(mockSetFirstName).toHaveBeenCalledWith('John');
      expect(mockSetLastName).toHaveBeenCalledWith('Doe');
      expect(mockSetEmail).toHaveBeenCalledWith('john@example.com');
      expect(mockSetPhone).toHaveBeenCalledWith('555-1234');
    });
  });
});

================================================================================
File: Configuration.test.js
Path: .\front-end\src\components\__tests__\Configuration.test.js
Size: 5612
Modified: 2025-04-17T01:19:09.814870
Created: 2025-04-02T00:08:43.250034
Hash: c70dfc913fa032d5f9a4bc14699d3b504790af0daed3d57a764e8b59d7bc74cd
Lines: 181
================================================================================
import React from 'react';
import { screen, fireEvent, waitFor } from '@testing-library/react';
import { render } from '../../test-utils';
import '@testing-library/jest-dom';
import Configuration from '../Configuration';

const mockNavigate = jest.fn();
jest.mock('react-router-dom', () => ({
  ...jest.requireActual('react-router-dom'),
  useNavigate: () => mockNavigate
}));

describe('Configuration Component', () => {
  let mockProps;
  
  beforeEach(() => {
    mockProps = {
      userId: '',
      setUserId: jest.fn(),
      businessId: '',
      setBusinessId: jest.fn(),
      businessApiKey: '',
      setBusinessApiKey: jest.fn(),
      handleSnackbarOpen: jest.fn(),
      handleLogout: jest.fn()
    };
    jest.clearAllMocks();
    global.fetch = jest.fn();
    
    // Mock localStorage
    Object.defineProperty(window, 'localStorage', {
      value: {
        getItem: jest.fn(),
        setItem: jest.fn(),
        removeItem: jest.fn(),
        clear: jest.fn()
      },
      writable: true
    });
    
    // Clear cookies
    document.cookie = '';
  });

  afterEach(() => {
    jest.resetAllMocks();
  });

  const renderWithProps = (props = mockProps) => {
    return render(<Configuration {...props} />);
  };

  it('renders remaining input fields', async () => {
    renderWithProps();

    const businessKeyInput = await screen.findByTestId('business-api-key-input');
    const userIdInput = await screen.findByTestId('user-id-input');
    const businessIdInput = await screen.findByTestId('business-id-input');

    expect(businessKeyInput).toBeInTheDocument();
    expect(userIdInput).toBeInTheDocument();
    expect(businessIdInput).toBeInTheDocument();
  });

  it('shows validation errors for empty fields', async () => {
    renderWithProps();

    await waitFor(() => {
      fireEvent.click(screen.getByText(/Save Config/i));
    });

    expect(mockProps.handleSnackbarOpen).toHaveBeenCalledWith(
      'Please enter all the configuration values',
      'warning'
    );
  });

  it('handles successful configuration validation', async () => {
    const mockResponse = { ok: true, json: () => Promise.resolve({ success: true }) };
    global.fetch.mockImplementationOnce(() => Promise.resolve(mockResponse));

    const filledProps = {
      ...mockProps,
      userId: 'test_user',
      businessId: 'test_business',
      businessApiKey: 'test_business_key'
    };

    renderWithProps(filledProps);

    await waitFor(() => {
      fireEvent.click(screen.getByText(/Save Config/i));
    });

    expect(global.fetch).toHaveBeenCalledWith('/api/save-config', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Accept': 'application/json',
      },
      credentials: 'include',
      body: JSON.stringify({
        userId: 'test_user',
        businessId: 'test_business',
        businessApiKey: 'test_business_key'
      })
    });

    expect(mockProps.handleSnackbarOpen).toHaveBeenCalledWith(
      'Configuration saved successfully',
      'success'
    );
    expect(mockNavigate).toHaveBeenCalledWith('/business');
    
    // Verify credentials are stored in localStorage
    await waitFor(() => {
      expect(window.localStorage.setItem).toHaveBeenCalledWith('businessId', 'test_business');
      expect(window.localStorage.setItem).toHaveBeenCalledWith('businessApiKey', 'test_business_key');
      expect(window.localStorage.setItem).toHaveBeenCalledWith('userId', 'test_user');
    });
  });

  it('handles configuration validation error', async () => {
    const mockResponse = { ok: false, json: () => Promise.resolve({ message: 'Invalid credentials' }) };
    global.fetch.mockImplementationOnce(() => Promise.resolve(mockResponse));

    const filledProps = {
      ...mockProps,
      userId: 'test_user',
      businessId: 'test_business',
      businessApiKey: 'test_business_key'
    };

    renderWithProps(filledProps);

    await waitFor(() => {
      fireEvent.click(screen.getByText(/Save Config/i));
    });

    expect(mockProps.handleSnackbarOpen).toHaveBeenCalledWith(
      'Invalid credentials',
      'error'
    );
    
    // Ensure localStorage is not called when validation fails
    expect(window.localStorage.setItem).not.toHaveBeenCalled();
  });

  it('handles logout correctly', async () => {
    renderWithProps();

    await waitFor(() => {
      fireEvent.click(screen.getByText(/Logout/i));
    });

    expect(mockProps.handleLogout).toHaveBeenCalled();
    expect(mockNavigate).toHaveBeenCalledWith('/login');
    
    // Ensure logout clears credentials from localStorage
    expect(window.localStorage.removeItem).toHaveBeenCalledTimes(3);
  });
  
  it('loads saved credentials from localStorage on mount', async () => {
    // Mock localStorage to return saved credentials
    window.localStorage.getItem.mockImplementation((key) => {
      if (key === 'businessId') return 'saved_business_id';
      if (key === 'businessApiKey') return 'saved_api_key';
      if (key === 'userId') return 'saved_user_id';
      return null;
    });
    
    renderWithProps();
    
    // Verify props are updated with stored values
    await waitFor(() => {
      expect(mockProps.setBusinessId).toHaveBeenCalledWith('saved_business_id');
      expect(mockProps.setBusinessApiKey).toHaveBeenCalledWith('saved_api_key');
      expect(mockProps.setUserId).toHaveBeenCalledWith('saved_user_id');
    });
  });
});

================================================================================
File: StageEditor.test.js
Path: .\front-end\src\components\__tests__\StageEditor.test.js
Size: 11492
Modified: 2025-04-17T01:19:09.869770
Created: 2025-04-05T02:44:55.712826
Hash: 353c8e99e1ee0c87fea72b59417a92a33d31f4201eec17a7d9b7cc8469dacdd5
Lines: 352
================================================================================
import React from 'react';
import { screen, fireEvent, waitFor } from '@testing-library/react';
import { render } from '../../test-utils';
import '@testing-library/jest-dom';
import StageEditor from '../StageEditor';

// Mock useNavigate and useParams
const mockNavigate = jest.fn();
jest.mock('react-router-dom', () => ({
  ...jest.requireActual('react-router-dom'),
  useNavigate: () => mockNavigate,
  useParams: () => ({ stageId: 'new' }),
  useLocation: () => ({
    search: '?business_id=test-business-id',
    state: {
      businessId: 'test-business-id',
      agentId: 'test-agent-id',
      isNewStage: true
    }
  })
}));

// Mock the API service
jest.mock('../../services/api', () => ({
  createTemplate: jest.fn(),
  fetchTemplateDetails: jest.fn(),
  apiService: {
    getStages: jest.fn(),
    createStage: jest.fn(),
    getBusinessDetails: jest.fn()
  },
  handleApiResponse: jest.fn()
}));

// Mock the cachedFetch utility
jest.mock('../../utils/fetchUtils', () => ({
  cachedFetch: jest.fn().mockImplementation((url, options) => {
    // Mock different responses based on the URL
    if (url.includes('/templates')) {
      return Promise.resolve({
        ok: true,
        json: () => Promise.resolve([
          {
            template_id: 'template1',
            template_name: 'Test Template',
            template_type: 'stage_selection',
            template_text: 'Test template text'
          }
        ])
      });
    }
    return Promise.resolve({
      ok: true,
      json: () => Promise.resolve([])
    });
  })
}));

// Mock the fetch API
global.fetch = jest.fn();

// Helper to setup successful response
const mockSuccessResponse = (data) => {
  global.fetch.mockImplementationOnce(() => 
    Promise.resolve({
      ok: true,
      json: () => Promise.resolve(data)
    })
  );
};

// Helper to setup failed response
const mockFailedResponse = (errorMessage) => {
  global.fetch.mockImplementationOnce(() => 
    Promise.resolve({
      ok: false,
      json: () => Promise.resolve({ message: errorMessage })
    })
  );
};

describe('StageEditor Component', () => {
  beforeEach(() => {
    jest.clearAllMocks();
    // Mock localStorage and cookies
    Object.defineProperty(window, 'localStorage', {
      value: {
        getItem: jest.fn(),
        setItem: jest.fn(),
        removeItem: jest.fn(),
        clear: jest.fn()
      },
      writable: true
    });
    
    document.cookie = '';
  });

  afterEach(() => {
    jest.resetAllMocks();
  });

  it('displays business credentials form when credentials are missing', async () => {
    // Mock localStorage to return no credentials
    window.localStorage.getItem.mockImplementation(() => null);
    
    await render(<StageEditor />);
    
    expect(screen.getByText('Business Credentials Required')).toBeInTheDocument();
    
    // Use getByPlaceholderText instead of getByLabelText for Material-UI inputs
    expect(screen.getByPlaceholderText('Enter your business ID')).toBeInTheDocument();
    expect(screen.getByPlaceholderText('Enter your business API key')).toBeInTheDocument();
  });

  it('validates credentials before proceeding', async () => {
    // Mock localStorage to return no credentials
    window.localStorage.getItem.mockImplementation(() => null);
    
    await render(<StageEditor />);
    
    // Fill in credentials using placeholder text
    fireEvent.change(screen.getByPlaceholderText('Enter your business ID'), { 
      target: { value: 'test-business-id' } 
    });
    
    fireEvent.change(screen.getByPlaceholderText('Enter your business API key'), { 
      target: { value: 'test-api-key' } 
    });
    
    // Mock the validation response
    mockSuccessResponse({ business_id: 'test-business-id' });
    
    // Click validate button
    fireEvent.click(screen.getByText('Validate & Save Credentials'));
    
    // Expect localStorage and cookie to be set
    await waitFor(() => {
      expect(window.localStorage.setItem).toHaveBeenCalledWith('businessId', 'test-business-id');
      expect(window.localStorage.setItem).toHaveBeenCalledWith('businessApiKey', 'test-api-key');
    });
  });

  it('shows appropriate error when validation fails', async () => {
    // Mock localStorage to return no credentials
    window.localStorage.getItem.mockImplementation(() => null);
    
    // Mock the validation response to fail
    mockFailedResponse('Invalid business ID or API key');
    
    await render(<StageEditor />);
    
    // Wait for the component to initialize
    await waitFor(() => {
      expect(screen.getByText('Business Credentials Required')).toBeInTheDocument();
    });
    
    // Fill in credentials using placeholder text
    fireEvent.change(screen.getByPlaceholderText('Enter your business ID'), { 
      target: { value: 'test-business-id' } 
    });
    
    fireEvent.change(screen.getByPlaceholderText('Enter your business API key'), { 
      target: { value: 'invalid-api-key' } 
    });
    
    // Click validate button
    fireEvent.click(screen.getByText('Validate & Save Credentials'));
    
    // Expect error message
    await waitFor(() => {
      expect(screen.getByText(/Failed to validate credentials/)).toBeInTheDocument();
    });
  });

  it('loads templates when credentials are valid', async () => {
    // Mock localStorage to return valid credentials
    window.localStorage.getItem.mockImplementation((key) => {
      if (key === 'businessId') return 'test-business-id';
      if (key === 'businessApiKey') return 'test-api-key';
      return null;
    });
    
    // Mock successful validation
    mockSuccessResponse({ business_id: 'test-business-id' });
    
    await render(<StageEditor />);
    
    // Check that templates are loaded
    await waitFor(() => {
      expect(screen.getByText('Stage Information')).toBeInTheDocument();
    });
  });

  it('handles template selection and saving', async () => {
    // Mock localStorage to return valid credentials
    window.localStorage.getItem.mockImplementation((key) => {
      if (key === 'businessId') return 'test-business-id';
      if (key === 'businessApiKey') return 'test-api-key';
      return null;
    });
    
    // Mock successful validation
    mockSuccessResponse({ business_id: 'test-business-id' });
    
    await render(<StageEditor />);
    
    // Wait for component to initialize
    await waitFor(() => {
      expect(screen.getByText('Stage Information')).toBeInTheDocument();
    });
    
    // Select a template type using the tab
    const stageSelectionTab = screen.getByText('Stage Selection');
    fireEvent.click(stageSelectionTab);
    
    // Check if template options are displayed - use getAllByText and check the first one
    await waitFor(() => {
      const templateElements = screen.getAllByText('Template');
      expect(templateElements.length).toBeGreaterThan(0);
    });
  });

  it('shows appropriate error when template loading fails', async () => {
    // Mock localStorage to return valid credentials
    window.localStorage.getItem.mockImplementation((key) => {
      if (key === 'businessId') return 'test-business-id';
      if (key === 'businessApiKey') return 'test-api-key';
      return null;
    });
    
    // Mock successful validation but failed template loading
    mockSuccessResponse({ business_id: 'test-business-id' });
    
    // Override the cachedFetch mock for this test
    jest.spyOn(require('../../utils/fetchUtils'), 'cachedFetch')
      .mockImplementationOnce(() => Promise.reject(new Error('Failed to load templates')));
    
    await render(<StageEditor />);
    
    // Check for error message
    await waitFor(() => {
      expect(screen.getByText(/Failed to fetch templates/)).toBeInTheDocument();
    });
  });

  it('saves a template successfully', async () => {
    // Mock localStorage to return valid credentials
    window.localStorage.getItem.mockImplementation((key) => {
      if (key === 'businessId') return 'test-business-id';
      if (key === 'businessApiKey') return 'test-api-key';
      return null;
    });
    
    // Mock successful validation
    mockSuccessResponse({ business_id: 'test-business-id' });
    
    // Mock templates fetch
    mockSuccessResponse([]);
    
    await render(<StageEditor />);
    
    // Wait for component to initialize
    await waitFor(() => {
      expect(screen.getByText('Stage Selection')).toBeInTheDocument();
    });
    
    // Enter template text
    fireEvent.change(screen.getByPlaceholderText('Enter template text with variables in {curly_braces}'), {
      target: { value: 'Test template content' }
    });
    
    // Mock successful template save
    mockSuccessResponse({ template_id: 'new-template-id' });
    
    // Click save template
    fireEvent.click(screen.getByText('Save Template'));
    
    // Confirm in dialog
    await waitFor(() => {
      expect(screen.getByText(/Are you sure you want to create a new/)).toBeInTheDocument();
    });
    
    fireEvent.click(screen.getByText('Save'));
    
    // Check success message appears
    await waitFor(() => {
      expect(screen.getByText(/template saved successfully/)).toBeInTheDocument();
    });
  });

  it('creates a stage successfully', async () => {
    // Mock localStorage to return valid credentials
    window.localStorage.getItem.mockImplementation((key) => {
      if (key === 'businessId') return 'test-business-id';
      if (key === 'businessApiKey') return 'test-api-key';
      return null;
    });
    
    // Mock successful validation
    mockSuccessResponse({ business_id: 'test-business-id' });
    
    // Mock templates fetch
    mockSuccessResponse([]);
    
    await render(<StageEditor />);
    
    // Wait for component to initialize
    await waitFor(() => {
      expect(screen.getByText('Stage Information')).toBeInTheDocument();
    });
    
    // Find the stage name input by its ID pattern
    const stageNameInput = screen.getByRole('textbox', { name: /stage name/i });
    fireEvent.change(stageNameInput, {
      target: { value: 'Test Stage' }
    });
    
    // Find the stage description input by its role
    const stageDescriptionInput = screen.getByRole('textbox', { name: /stage description/i });
    fireEvent.change(stageDescriptionInput, {
      target: { value: 'Test stage description' }
    });
    
    // Mock successful stage creation
    mockSuccessResponse({ stage_id: 'new-stage-id' });
    
    // Click create stage
    fireEvent.click(screen.getByText('Create Stage'));
    
    // Check that the API was called with correct data
    await waitFor(() => {
      expect(global.fetch).toHaveBeenCalledWith(
        expect.stringContaining('/stages?business_id=test-business-id'),
        expect.objectContaining({
          method: 'POST',
          body: expect.stringContaining('Test Stage')
        })
      );
    });
    
    // Check success message appears
    await waitFor(() => {
      expect(screen.getByText('Stage created successfully')).toBeInTheDocument();
    });
    
    // Check navigation occurs
    await waitFor(() => {
      expect(mockNavigate).toHaveBeenCalled();
    });
  });
});

================================================================================
File: AuthContext.js
Path: .\front-end\src\contexts\AuthContext.js
Size: 1491
Modified: 2025-04-20T10:52:36.070912
Created: 2025-04-12T15:34:52.039520
Hash: 9fc75654a29c1a0eb69cd7d2458a769c5fc0c44ba04f00556c9b0cedd098a5bb
Lines: 53
================================================================================
import React, { createContext, useContext, useState, useEffect } from 'react';
import { isLoggedIn, getStoredCredentials, logout } from '../services/authService';

const AuthContext = createContext(null);

export const AuthProvider = ({ children }) => {
  const [isAuthenticated, setIsAuthenticated] = useState(false);
  const [userId, setUserId] = useState('');
  const [businessId, setBusinessId] = useState('');
  const [businessApiKey, setBusinessApiKey] = useState('');

  useEffect(() => {
    // Check if user is logged in on component mount
    const loggedIn = isLoggedIn();
    if (loggedIn) {
      const { userId, businessId, businessApiKey } = getStoredCredentials();
      setUserId(userId);
      setBusinessId(businessId);
      setBusinessApiKey(businessApiKey);
      setIsAuthenticated(true);
    }
  }, []);

  const handleLogout = () => {
    logout();
    setUserId('');
    setBusinessId('');
    setBusinessApiKey('');
    setIsAuthenticated(false);
  };

  const value = {
    isAuthenticated,
    userId,
    businessId,
    businessApiKey,
    setUserId,
    setBusinessId,
    setBusinessApiKey,
    setIsAuthenticated,
    handleLogout
  };

  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;
};

export const useAuth = () => {
  const context = useContext(AuthContext);
  if (!context) {
    throw new Error('useAuth must be used within an AuthProvider');
  }
  return context;
};

================================================================================
File: useAgents.js
Path: .\front-end\src\hooks\useAgents.js
Size: 2440
Modified: 2025-04-17T01:19:09.983847
Created: 2025-04-01T16:07:22.238485
Hash: f37412b411783d71c9bbb1b1d88d0d49f245c2a78ab98e37bc23cac6f3457c1b
Lines: 58
================================================================================
import { useState, useEffect, useCallback } from 'react';
// Assuming an agentService.js file will export fetchAgents
// We might need to create/update this service file later
import { fetchAgents } from '../services/agentService';
import useConfig from './useConfig';
import { normalizeUUID } from './useConfig';

const useAgents = (handleSnackbarOpen) => {
    const [agents, setAgents] = useState([]); // Initialize as empty array
    const [isLoading, setIsLoading] = useState(false);
    const [error, setError] = useState(null);
    const { businessId } = useConfig(); // Get businessId from config
    const normalizedBusinessId = normalizeUUID(businessId);

    const fetchAgentsData = useCallback(async () => {
        if (!normalizedBusinessId) {
            setAgents([]); // Clear agents if no businessId
            return;
        }

        setIsLoading(true);
        setError(null);
        console.log(`Fetching agents for business ID: ${normalizedBusinessId}`);

        try {
            // Fetch agents from the API
            const data = await fetchAgents(normalizedBusinessId);
            console.log("Fetched agents:", data);
            // Ensure data is always an array, even if API returns null/undefined
            setAgents(Array.isArray(data) ? data : []);
        } catch (err) {
            console.error("Error fetching agents:", err);
            const errorMessage = err.message || 'Failed to fetch agents';
            setError(errorMessage);
            setAgents([]); // Clear agents on error
             if (handleSnackbarOpen) {
                // Use the extracted error message for the snackbar
                handleSnackbarOpen(`Error fetching agents: ${errorMessage}`, "error");
            }
        } finally {
            setIsLoading(false);
        }
    }, [normalizedBusinessId, handleSnackbarOpen]);

    // useEffect to trigger fetch when businessId changes
    useEffect(() => {
        fetchAgentsData();
    }, [fetchAgentsData]); // Dependency array includes fetchAgents (memoized via useCallback)

    return {
        agents,          // The array of agent objects
        isLoading,       // Boolean indicating if fetch is in progress
        error,           // Error object/message if fetch failed
        refreshAgents: fetchAgentsData // Function to manually trigger a refresh
    };
};

export default useAgents;

================================================================================
File: useBusiness.js
Path: .\front-end\src\hooks\useBusiness.js
Size: 1062
Modified: 2025-04-17T01:19:10.050266
Created: 2025-03-31T00:12:51.044906
Hash: ea67c3e6eb56e214d2681e16005362d65d36ad240b7a44100e34e0dc8b129ad8
Lines: 33
================================================================================
// src/hooks/useBusiness.js
import { useState, useEffect } from 'react';
import axios from 'axios';

const useBusiness = (handleSnackbarOpen) => {
    const [businessDetails, setBusinessDetails] = useState(null);
    const [isLoading, setIsLoading] = useState(false);
    const [error, setError] = useState(null);

    useEffect(() => {
        const fetchBusinessDetails = async () => {
            setIsLoading(true);
            try {
                const response = await axios.get('/api/business');
                setBusinessDetails(response.data);
                setError(null);
            } catch (err) {
                setError(err.message);
                if (handleSnackbarOpen) {
                    handleSnackbarOpen('Failed to load business details', 'error');
                }
            } finally {
                setIsLoading(false);
            }
        };

        fetchBusinessDetails();
    }, [handleSnackbarOpen]);

    return { businessDetails, isLoading, error };
};

export default useBusiness;

================================================================================
File: useConfig.js
Path: .\front-end\src\hooks\useConfig.js
Size: 2651
Modified: 2025-04-17T01:19:10.099178
Created: 2025-03-31T00:34:35.705822
Hash: 08ca0578bd0b9e1b0c22bf0a045d2f0b4ab393fefc02b8973434606da689b7b7
Lines: 71
================================================================================
// src/hooks/useConfig.js
import { useState, useEffect, useCallback } from 'react';
import { API_CONFIG, AUTH_CONFIG } from '../config';

// Normalize UUID to ensure it passes backend validation
export const normalizeUUID = (uuid) => {
  if (!uuid) return null;
  
  try {
    // Convert to lowercase and trim whitespace
    const normalizedUUID = uuid.toLowerCase().trim();
    // Check if it's a valid UUID format
    const uuidRegex = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/;
    
    if (uuidRegex.test(normalizedUUID)) {
      return normalizedUUID;
    }
    
    // Try to add dashes if missing but the uuid has the right length
    if (normalizedUUID.length === 32 && /^[0-9a-f]{32}$/.test(normalizedUUID)) {
      const formatted = `${normalizedUUID.slice(0, 8)}-${normalizedUUID.slice(8, 12)}-${normalizedUUID.slice(12, 16)}-${normalizedUUID.slice(16, 20)}-${normalizedUUID.slice(20)}`;
      if (uuidRegex.test(formatted)) {
        console.log(`Reformatted UUID from ${normalizedUUID} to ${formatted}`);
        return formatted;
      }
    }
    
    console.warn('Invalid UUID format:', uuid);
    return uuid; // Return original if not matching pattern
  } catch (error) {
    console.error('Error normalizing UUID:', error);
    return uuid; // Return original on error
  }
};

const useConfig = () => {
    // API keys should not be stored in localStorage. Initialize as empty.
    // They will be handled via httpOnly cookies set by the backend.
    const [apiKey, setApiKey] = useState(''); 
    const [userId, setUserId] = useState(localStorage.getItem('userId') || '');
    const [businessId, setBusinessId] = useState(localStorage.getItem('businessId') || '');
    // Business API key should also not be stored in localStorage.
    const [businessApiKey, setBusinessApiKey] = useState(''); 

    // No need to memoize simple setters like this unless performance profiling proves it necessary.
    // const memoizedSetApiKey = useCallback((newApiKey) => {
    //     setApiKey(newApiKey);
    // }, []);

    // Persist userId and businessId to localStorage when they change
    useEffect(() => {
        localStorage.setItem('userId', userId);
    }, [userId]);

    useEffect(() => {
        localStorage.setItem('businessId', businessId);
    }, [businessId]);

    return {
        apiKey,
        setApiKey, // Return the direct setter
        userId,
        setUserId,
        businessId,
        setBusinessId,
        businessApiKey,
        setBusinessApiKey, // Return the direct setter
    };
};

export default useConfig;

================================================================================
File: useStageDetails.js
Path: .\front-end\src\hooks\useStageDetails.js
Size: 2378
Modified: 2025-04-17T01:19:10.111138
Created: 2025-04-01T16:19:01.654128
Hash: dc201b91a87a0587142b33751edab42c63b2330bbf5a6907a1f907ca0b011cb4
Lines: 58
================================================================================
import { useState, useEffect, useCallback } from 'react';
// Assuming a stageService.js file will export fetchStageDetails
// We might need to create/update this service file later
import { fetchStageDetails as fetchStageDetailsApi } from '../services/stageService';

// This hook takes the stageId to fetch details for
const useStageDetails = (stageId, handleSnackbarOpen) => {
    const [stageDetails, setStageDetails] = useState(null); // Initialize as null
    const [isLoading, setIsLoading] = useState(false);
    const [error, setError] = useState(null);

    const fetchDetails = useCallback(async () => {
        // Only fetch if a stage ID is provided
        if (!stageId) {
            setStageDetails(null); // Clear details if no stageId
            return;
        }

        setIsLoading(true);
        setError(null);
        console.log(`Fetching details for stage ID: ${stageId}`);

        try {
            // API key relies on httpOnly cookie
            const data = await fetchStageDetailsApi(stageId);
            console.log("Fetched stage details:", data);
            setStageDetails(data); // Store the fetched object
            // Optional: Snackbar notification
            // if (handleSnackbarOpen) {
            //      handleSnackbarOpen("Stage details loaded!", "info");
            // }
        } catch (err) {
            console.error("Error fetching stage details:", err);
            const errorMessage = err.message || 'Failed to fetch stage details';
            setError(errorMessage);
            setStageDetails(null); // Clear details on error
             if (handleSnackbarOpen) {
                handleSnackbarOpen(`Error fetching stage details: ${errorMessage}`, "error");
            }
        } finally {
            setIsLoading(false);
        }
    }, [stageId, handleSnackbarOpen]); // Depend on stageId

    // useEffect to trigger fetch when stageId changes
    useEffect(() => {
        fetchDetails();
    }, [fetchDetails]);

    return {
        stageDetails,    // The stage detail object (or null)
        isLoading,       // Boolean indicating if fetch is in progress
        error,           // Error object/message if fetch failed
        refreshDetails: fetchDetails // Function to manually trigger a refresh
    };
};

export default useStageDetails;

================================================================================
File: useStages.js
Path: .\front-end\src\hooks\useStages.js
Size: 2499
Modified: 2025-04-25T12:58:31.516269
Created: 2025-04-01T16:12:45.002605
Hash: 786d3723b9c263a84a8c127e791d4f5731b54f37c0de97765ca6d945aae29259
Lines: 60
================================================================================
// src/hooks/useStages.js
import { useState, useEffect, useCallback } from 'react';
// Assuming a stageService.js file will export fetchStages
// We might need to create/update this service file later
import { fetchStages as fetchStagesApi } from '../services/stageService';

// This hook takes the selectedAgentId as an argument
const useStages = (selectedAgentId, handleSnackbarOpen) => {
    const [stages, setStages] = useState([]); // Initialize as empty array
    const [isLoading, setIsLoading] = useState(false);
    const [error, setError] = useState(null);

    const fetchStages = useCallback(async () => {
        // Only fetch if an agent is selected
        if (!selectedAgentId) {
            setStages([]); // Clear stages if no agent is selected
            return;
        }

        setIsLoading(true);
        setError(null);
        console.log(`Fetching stages for agent ID: ${selectedAgentId}`);

        try {
            // API key relies on httpOnly cookie sent automatically by browser
            const data = await fetchStagesApi(selectedAgentId);
            console.log("Fetched stages:", data);
            // Ensure data is always an array
            setStages(Array.isArray(data) ? data : []);
            // Optional: Snackbar notification
            // if (handleSnackbarOpen) {
            //      handleSnackbarOpen("Stages loaded!", "info");
            // }
        } catch (err) {
            console.error("Error fetching stages:", err);
            const errorMessage = err.message || 'Failed to fetch stages';
            setError(errorMessage);
            setStages([]); // Clear stages on error
             if (handleSnackbarOpen) {
                handleSnackbarOpen(`Error fetching stages: ${errorMessage}`, "error");
            }
        } finally {
            setIsLoading(false);
        }
    }, [selectedAgentId, handleSnackbarOpen]); // Depend on selectedAgentId

    // useEffect to trigger fetch when selectedAgentId changes
    useEffect(() => {
        fetchStages();
    }, [fetchStages]); // Dependency array includes fetchStages (memoized by useCallback)

    return {
        stages,          // The array of stage objects
        isLoading,       // Boolean indicating if fetch is in progress
        error,           // Error object/message if fetch failed
        refreshStages: fetchStages // Function to manually trigger a refresh
    };
};

export default useStages;

================================================================================
File: useTemplates.js
Path: .\front-end\src\hooks\useTemplates.js
Size: 2576
Modified: 2025-04-25T12:58:31.533828
Created: 2025-04-11T21:54:51.823815
Hash: 31322325d8dbf2c1846a98ba212a37c361d3c69644f77d398ee53537cc692f31
Lines: 57
================================================================================
import { useState, useEffect, useCallback } from 'react';
import { fetchTemplates } from '../services/templateService';
import useConfig from './useConfig';
import { normalizeUUID } from './useConfig';

const useTemplates = (handleSnackbarOpen, agentId) => {
    const [templates, setTemplates] = useState([]); // Initialize as empty array
    const [isLoading, setIsLoading] = useState(false);
    const [error, setError] = useState(null);
    const { businessId } = useConfig(); // Get businessId from config
    const normalizedBusinessId = normalizeUUID(businessId);
    const normalizedAgentId = normalizeUUID(agentId);

    const fetchTemplatesData = useCallback(async () => {
        if (!normalizedBusinessId || !normalizedAgentId) {
            setTemplates([]); // Clear templates if no businessId or agentId
            return;
        }

        setIsLoading(true);
        setError(null);
        console.log(`Fetching templates for business ID: ${normalizedBusinessId}, agent ID: ${normalizedAgentId}`);

        try {
            // Fetch templates from the API
            const data = await fetchTemplates(normalizedBusinessId, normalizedAgentId);
            console.log("Fetched templates:", data);
            // Ensure data is always an array, even if API returns null/undefined
            setTemplates(Array.isArray(data) ? data : []);
        } catch (err) {
            console.error("Error fetching templates:", err);
            const errorMessage = err.message || 'Failed to fetch templates';
            setError(errorMessage);
            setTemplates([]); // Clear templates on error
            if (handleSnackbarOpen) {
                // Use the extracted error message for the snackbar
                handleSnackbarOpen(`Error fetching templates: ${errorMessage}`, "error");
            }
        } finally {
            setIsLoading(false);
        }
    }, [normalizedBusinessId, normalizedAgentId, handleSnackbarOpen]);

    // useEffect to trigger fetch when businessId or agentId changes
    useEffect(() => {
        fetchTemplatesData();
    }, [fetchTemplatesData]); // Dependency array includes fetchTemplatesData (memoized via useCallback)

    return {
        templates,       // The array of template objects
        isLoading,       // Boolean indicating if fetch is in progress
        error,           // Error object/message if fetch failed
        refreshTemplates: fetchTemplatesData // Function to manually trigger a refresh
    };
};

export default useTemplates;

================================================================================
File: MessageDebugPage.js
Path: .\front-end\src\pages\MessageDebugPage.js
Size: 6751
Modified: 2025-04-17T01:19:10.269848
Created: 2025-04-08T22:36:25.630930
Hash: 58d817dcc6ea602f4403d30b6bdc7a48e556b32143025f3ca6a07c13f01a6219
Lines: 167
================================================================================
import React, { useState, useEffect } from 'react';
import { useParams } from 'react-router-dom';
import { Box, Paper, Typography, Grid, CircularProgress, Divider } from '@mui/material';
import { debugService } from '../services/debugService';

// Component to display prompt details
const PromptDisplay = ({ title, prompt, response }) => (
    <Paper sx={{ p: 2, mb: 2 }}>
        <Typography variant="h6" gutterBottom>{title}</Typography>
        <Box sx={{ bgcolor: 'grey.100', p: 2, mb: 2, borderRadius: 1 }}>
            <Typography variant="subtitle2" color="text.secondary">Prompt:</Typography>
            <Typography component="pre" sx={{ whiteSpace: 'pre-wrap', fontFamily: 'monospace' }}>
                {prompt}
            </Typography>
        </Box>
        <Box sx={{ bgcolor: 'grey.100', p: 2, borderRadius: 1 }}>
            <Typography variant="subtitle2" color="text.secondary">Response:</Typography>
            <Typography component="pre" sx={{ whiteSpace: 'pre-wrap', fontFamily: 'monospace' }}>
                {response}
            </Typography>
        </Box>
    </Paper>
);

// Component to display stage navigation
const StageNavigation = ({ stages }) => (
    <Paper sx={{ p: 2, mb: 2 }}>
        <Typography variant="h6" gutterBottom>Stage Navigation</Typography>
        <Box sx={{ display: 'flex', overflowX: 'auto', pb: 1 }}>
            {stages.map((stage, index) => (
                <React.Fragment key={stage.id}>
                    <Box sx={{ 
                        p: 1, 
                        bgcolor: stage.current ? 'primary.main' : 'grey.100',
                        color: stage.current ? 'white' : 'text.primary',
                        borderRadius: 1,
                        minWidth: 'fit-content'
                    }}>
                        <Typography variant="body2">{stage.name}</Typography>
                        <Typography variant="caption" display="block">
                            Confidence: {stage.confidence}
                        </Typography>
                    </Box>
                    {index < stages.length - 1 && (
                        <Box sx={{ display: 'flex', alignItems: 'center', px: 1 }}>→</Box>
                    )}
                </React.Fragment>
            ))}
        </Box>
    </Paper>
);

// Component to display extracted data
const DataExtraction = ({ data }) => (
    <Paper sx={{ p: 2, mb: 2 }}>
        <Typography variant="h6" gutterBottom>Extracted Data</Typography>
        <Box component="pre" sx={{ 
            bgcolor: 'grey.100', 
            p: 2, 
            borderRadius: 1,
            whiteSpace: 'pre-wrap',
            fontFamily: 'monospace'
        }}>
            {JSON.stringify(data, null, 2)}
        </Box>
    </Paper>
);

// Main debug page component
const MessageDebugPage = () => {
    const { conversationId } = useParams();
    const [loading, setLoading] = useState(true);
    const [error, setError] = useState(null);
    const [debugData, setDebugData] = useState(null);
    const [realTimeEvents, setRealTimeEvents] = useState([]);

    useEffect(() => {
        const loadDebugData = async () => {
            try {
                const data = await debugService.getConversationDebug(conversationId);
                setDebugData(data);
            } catch (err) {
                setError(err.message);
            } finally {
                setLoading(false);
            }
        };

        // Subscribe to real-time events
        const cleanup = debugService.subscribeToDebugEvents(conversationId, (event) => {
            setRealTimeEvents(prev => [...prev, event]);
        });

        loadDebugData();
        return cleanup; // Cleanup subscription on unmount
    }, [conversationId]);

    if (loading) return <CircularProgress />;
    if (error) return <Typography color="error">{error}</Typography>;
    if (!debugData) return <Typography>No debug data available</Typography>;

    return (
        <Box sx={{ p: 3 }}>
            <Typography variant="h4" gutterBottom>
                Message Processing Debug View
            </Typography>
            <Typography variant="subtitle1" gutterBottom>
                Conversation ID: {conversationId}
            </Typography>
            
            <Grid container spacing={3}>
                <Grid item xs={12}>
                    <StageNavigation stages={debugData.stages} />
                </Grid>

                <Grid item xs={12}>
                    <PromptDisplay 
                        title="Stage Selection"
                        prompt={debugData.stageSelection.prompt}
                        response={debugData.stageSelection.response}
                    />
                </Grid>

                <Grid item xs={12}>
                    <PromptDisplay 
                        title="Data Extraction"
                        prompt={debugData.dataExtraction.prompt}
                        response={debugData.dataExtraction.response}
                    />
                </Grid>

                <Grid item xs={12}>
                    <DataExtraction data={debugData.extractedData} />
                </Grid>

                <Grid item xs={12}>
                    <PromptDisplay 
                        title="Response Generation"
                        prompt={debugData.responseGeneration.prompt}
                        response={debugData.responseGeneration.response}
                    />
                </Grid>

                {realTimeEvents.length > 0 && (
                    <Grid item xs={12}>
                        <Paper sx={{ p: 2 }}>
                            <Typography variant="h6" gutterBottom>Real-time Events</Typography>
                            <Box sx={{ maxHeight: 200, overflow: 'auto' }}>
                                {realTimeEvents.map((event, index) => (
                                    <Box key={index} sx={{ mb: 1 }}>
                                        <Typography variant="caption" color="text.secondary">
                                            {new Date(event.timestamp).toLocaleTimeString()}
                                        </Typography>
                                        <Typography>{event.message}</Typography>
                                        <Divider sx={{ my: 1 }} />
                                    </Box>
                                ))}
                            </Box>
                        </Paper>
                    </Grid>
                )}
            </Grid>
        </Box>
    );
};

export default MessageDebugPage;

================================================================================
File: StageEditorPage.js
Path: .\front-end\src\pages\StageEditorPage.js
Size: 3594
Modified: 2025-04-17T01:19:10.328649
Created: 2025-04-07T00:33:05.136332
Hash: 4c9d80324428aaec2ddb93c67533d0592dd0e288d2ef706891e64a59291b9fa3
Lines: 124
================================================================================
import React, { useState, useEffect } from 'react';
import { useParams, useNavigate } from 'react-router-dom';
import { 
  Box, 
  Typography, 
  Paper, 
  Breadcrumbs, 
  Link, 
  Container,
  CircularProgress,
  Alert
} from '@mui/material';
import AddEditStageForm from '../components/AddEditStageForm/AddEditStageForm';
import { getStoredCredentials } from '../utils/authUtils';

const StageEditorPage = () => {
  const { stageId } = useParams();
  const navigate = useNavigate();
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);
  const [stageName, setStageName] = useState('');
  
  // Get stored credentials
  const { businessId, businessApiKey } = getStoredCredentials();
  
  useEffect(() => {
    // Check if we have the required credentials
    if (!businessId || !businessApiKey) {
      setError('Authentication required. Please log in.');
      setLoading(false);
      return;
    }
    
    // If we're creating a new stage, no need to fetch stage data
    if (stageId === 'new') {
      setLoading(false);
      return;
    }
    
    // Fetch stage data to get the name for the breadcrumb
    const fetchStageData = async () => {
      try {
        setLoading(true);
        const response = await fetch(`/stages/${stageId}?business_id=${businessId}`, {
          headers: {
            'Authorization': `Bearer ${businessApiKey}`
          }
        });
        
        if (!response.ok) {
          throw new Error(`Failed to fetch stage: ${response.status}`);
        }
        
        const data = await response.json();
        setStageName(data.stage_name || 'Unnamed Stage');
      } catch (err) {
        console.error('Error fetching stage:', err);
        setError(`Failed to load stage: ${err.message}`);
      } finally {
        setLoading(false);
      }
    };
    
    fetchStageData();
  }, [stageId, businessId, businessApiKey]);
  
  const handleNavigateBack = () => {
    navigate('/stage-management');
  };
  
  if (loading) {
    return (
      <Container maxWidth="lg" sx={{ mt: 4, mb: 4 }}>
        <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '50vh' }}>
          <CircularProgress />
        </Box>
      </Container>
    );
  }
  
  if (error) {
    return (
      <Container maxWidth="lg" sx={{ mt: 4, mb: 4 }}>
        <Alert severity="error" sx={{ mb: 2 }}>
          {error}
        </Alert>
        <Box sx={{ mt: 2 }}>
          <Link component="button" variant="body1" onClick={handleNavigateBack}>
            Return to Stage Management
          </Link>
        </Box>
      </Container>
    );
  }
  
  return (
    <Container maxWidth="lg" sx={{ mt: 4, mb: 4 }}>
      <Paper sx={{ p: 3, mb: 3 }}>
        <Breadcrumbs aria-label="breadcrumb" sx={{ mb: 2 }}>
          <Link 
            component="button" 
            variant="body1" 
            onClick={handleNavigateBack}
            color="inherit"
            underline="hover"
          >
            Stage Management
          </Link>
          <Typography color="text.primary">
            {stageId === 'new' ? 'Create New Stage' : stageName}
          </Typography>
        </Breadcrumbs>
        
        <Typography variant="h4" component="h1" gutterBottom>
          {stageId === 'new' ? 'Create New Stage' : `Edit Stage: ${stageName}`}
        </Typography>
      </Paper>
      
      <AddEditStageForm />
    </Container>
  );
};

export default StageEditorPage;

================================================================================
File: StageViewPage.jsx
Path: .\front-end\src\pages\StageViewPage.jsx
Size: 1158
Modified: 2025-04-25T12:58:31.537815
Created: 2025-04-08T13:28:27.184806
Hash: 3b7782afa0bdc5712b2b12e0bb3d487f57492245373e6dc8db58de033f045f41
Lines: 33
================================================================================
import React from 'react';
import { useParams, Link } from 'react-router-dom';
import { Box, Breadcrumbs, Typography, Button } from '@mui/material';
import ArrowBackIcon from '@mui/icons-material/ArrowBack';
import StageView from '../components/StageView';

function StageViewPage() {
    const { stageId } = useParams();

    return (
        <Box>
            <Box mb={3} display="flex" justifyContent="space-between" alignItems="center">
                <Breadcrumbs aria-label="breadcrumb">
                    <Link to="/stages" style={{ textDecoration: 'none', color: 'inherit' }}>
                        Stage Management
                    </Link>
                    <Typography color="text.primary">View Stage</Typography>
                </Breadcrumbs>
                <Button
                    variant="outlined"
                    startIcon={<ArrowBackIcon />}
                    component={Link}
                    to="/stages"
                >
                    Back to Stages
                </Button>
            </Box>
            <StageView />
        </Box>
    );
}

export default StageViewPage;

================================================================================
File: agentService.js
Path: .\front-end\src\services\agentService.js
Size: 4097
Modified: 2025-04-17T01:19:10.427009
Created: 2025-04-01T16:29:07.252629
Hash: 0eb907294a6206e0a2538a86a668e3afdb143886b10e3444d2e011fa7dc93262
Lines: 132
================================================================================
// src/services/agentService.js
import { API_CONFIG } from '../config';
import { getAuthHeaders } from '../services/authService';
import { normalizeUUID } from '../hooks/useConfig';

// Fetch agents for a business
export const fetchAgents = async (businessId) => {
  try {
    const normalizedBusinessId = normalizeUUID(businessId);
    console.log(`Fetching agents for business: ${normalizedBusinessId}`);
    const response = await fetch(`${API_CONFIG.BASE_URL}/agents?business_id=${normalizedBusinessId}`, {
      method: 'GET',
      credentials: 'include',
      headers: getAuthHeaders()
    });
    
    if (!response.ok) {
      const errorData = await response.json();
      throw new Error(errorData.message || 'Failed to fetch agents');
    }

    return await response.json();
  } catch (error) {
    console.error('Error in fetchAgents:', error);
    throw error;
  }
};

// Create a new agent
export const createAgent = async (agentData) => {
  try {
    // Make sure business_id is normalized
    const normalizedData = {
      ...agentData,
      business_id: normalizeUUID(agentData.business_id)
    };
    
    console.log('Creating agent:', normalizedData);
    const response = await fetch(`${API_CONFIG.BASE_URL}/agents`, {
      method: 'POST',
      credentials: 'include',
      headers: getAuthHeaders(),
      body: JSON.stringify(normalizedData)
    });
    
    if (!response.ok) {
      const errorData = await response.json();
      throw new Error(errorData.message || 'Failed to create agent');
    }

    return await response.json();
  } catch (error) {
    console.error('Error in createAgent:', error);
    throw error;
  }
};

// Update an existing agent
export const updateAgent = async (agentId, agentData) => {
  try {
    // Make sure business_id is normalized
    const normalizedData = {
      ...agentData,
      business_id: normalizeUUID(agentData.business_id)
    };
    
    console.log(`Updating agent ${agentId}:`, normalizedData);
    const response = await fetch(`${API_CONFIG.BASE_URL}/agents/${agentId}`, {
      method: 'PUT',
      credentials: 'include',
      headers: getAuthHeaders(),
      body: JSON.stringify(normalizedData)
    });
    
    if (!response.ok) {
      const errorData = await response.json();
      throw new Error(errorData.message || 'Failed to update agent');
    }

    return await response.json();
  } catch (error) {
    console.error('Error in updateAgent:', error);
    throw error;
  }
};

// Delete an agent
export const deleteAgent = async (agentId, businessId) => {
  try {
    const normalizedBusinessId = normalizeUUID(businessId);
    console.log(`Deleting agent ${agentId} for business ${normalizedBusinessId}`);
    const response = await fetch(`${API_CONFIG.BASE_URL}/agents/${agentId}?business_id=${normalizedBusinessId}`, {
      method: 'DELETE',
      credentials: 'include',
      headers: getAuthHeaders(),
      body: JSON.stringify({ business_id: normalizedBusinessId })
    });
    
    if (!response.ok) {
      const errorData = await response.json();
      throw new Error(errorData.message || 'Failed to delete agent');
    }

    return true;
  } catch (error) {
    console.error('Error in deleteAgent:', error);
    throw error;
  }
};

// Get a specific agent
export const getAgent = async (agentId, businessId) => {
  try {
    const normalizedBusinessId = normalizeUUID(businessId);
    console.log(`Fetching agent ${agentId} for business ${normalizedBusinessId}`);
    const response = await fetch(`${API_CONFIG.BASE_URL}/agents/${agentId}?business_id=${normalizedBusinessId}`, {
      method: 'GET',
      credentials: 'include',
      headers: getAuthHeaders()
    });
    
    if (!response.ok) {
      const errorData = await response.json();
      throw new Error(errorData.message || 'Failed to fetch agent');
    }

    return await response.json();
  } catch (error) {
    console.error('Error in getAgent:', error);
    throw error;
  }
};

================================================================================
File: api.js
Path: .\front-end\src\services\api.js
Size: 5796
Modified: 2025-04-25T15:19:00.709054
Created: 2025-04-01T13:51:20.886389
Hash: b391f3b716ef5e257aac38ead3c643180b397542b2a19352697b2716faaf038f
Lines: 179
================================================================================
import { API_CONFIG } from '../config';
import { getAuthHeaders, getStoredCredentials } from './authService';

/**
 * Standardized handler for API responses
 * @param {Response} response - The fetch Response object
 * @returns {Promise<any>} - The parsed response data
 * @throws {Error} - Throws an error with details from the response if not ok
 */
export const handleApiResponse = async (response) => {
  // Handle non-OK responses
  if (!response.ok) {
    // Try to get detailed error from response
    try {
      const errorData = await response.json();
      throw new Error(errorData.message || errorData.error || `API error: ${response.status}`);
    } catch (jsonError) {
      // If response isn't valid JSON, use status text
      throw new Error(`API error: ${response.status} ${response.statusText}`);
    }
  }
  
  // For successful responses, parse JSON or return empty object
  try {
    return await response.json();
  } catch (error) {
    // Some successful responses may not have a body (e.g., 204 No Content)
    return {};
  }
};

/**
 * Make an API request with authentication
 * @param {string} endpoint - API endpoint
 * @param {Object} options - Request options
 * @returns {Promise<any>} - Response data
 */
const apiRequest = async (endpoint, options = {}) => {
  const url = `${API_CONFIG.BASE_URL}${endpoint}`;
  const defaultOptions = {
    credentials: 'include',
  };

  const requestOptions = {
    ...defaultOptions,
    ...options,
    headers: {
      ...getAuthHeaders(),
      ...(options.headers || {}),
    },
  };

  const response = await fetch(url, requestOptions);
  return handleApiResponse(response);
};

export const apiService = {
  // Businesses
  getBusinessDetails: async (businessId) => {
    return apiRequest(`${API_CONFIG.ENDPOINTS.BUSINESSES}/${businessId}`);
  },
  
  // Stages
  getStages: async (businessId) => {
    return apiRequest(`${API_CONFIG.ENDPOINTS.STAGES}?business_id=${businessId}`);
  },
  
  createStage: async (stageData) => {
    return apiRequest(API_CONFIG.ENDPOINTS.STAGES, {
      method: 'POST',
      body: JSON.stringify(stageData),
    });
  },
  
  // Authentication
  saveConfig: async (config) => {
    return apiRequest(API_CONFIG.ENDPOINTS.LOGIN, {
      method: 'POST',
      body: JSON.stringify(config),
    });
  },
  
  // Templates
  createTemplate: async (templateData) => {
    const { businessId } = getStoredCredentials();
    if (!businessId) {
      throw new Error("Business ID not found. Please log in.");
    }
    const dataToSend = { ...templateData, business_id: businessId };
    return apiRequest(API_CONFIG.ENDPOINTS.TEMPLATES, {
      method: 'POST',
      body: JSON.stringify(dataToSend),
    });
  },
  
  fetchTemplateDetails: async (templateId) => {
    const { businessId } = getStoredCredentials();
    if (!businessId) {
      throw new Error("Business ID not found. Please log in.");
    }
    const endpoint = `${API_CONFIG.ENDPOINTS.TEMPLATES}/${templateId}?business_id=${businessId}`;
    return apiRequest(endpoint);
  },
  
  updateTemplate: async (templateId, templateData) => {
    const { businessId } = getStoredCredentials();
    if (!businessId) {
      throw new Error("Business ID not found. Please log in.");
    }
    const dataToSend = { ...templateData, business_id: businessId };
    const endpoint = `${API_CONFIG.ENDPOINTS.TEMPLATES}/${templateId}`;
    return apiRequest(endpoint, {
      method: 'PUT',
      body: JSON.stringify(dataToSend),
    });
  },
  
  deleteTemplate: async (templateId) => {
    const { businessId } = getStoredCredentials();
    if (!businessId) {
      throw new Error("Business ID not found. Please log in.");
    }
    const endpoint = `${API_CONFIG.ENDPOINTS.TEMPLATES}/${templateId}?business_id=${businessId}`;
    return apiRequest(endpoint, {
      method: 'DELETE',
    });
  },
  
  // Messages
  sendMessage: async (messageData) => {
    return apiRequest(API_CONFIG.ENDPOINTS.MESSAGE, {
      method: 'POST',
      body: JSON.stringify(messageData),
    });
  },
  
  // Conversations
  getConversations: async (userId, businessId) => {
    return apiRequest(`${API_CONFIG.ENDPOINTS.CONVERSATIONS}/${userId}?business_id=${businessId}`);
  },
  
  // Debug
  getDebugInfo: async (conversationId) => {
    return apiRequest(`${API_CONFIG.ENDPOINTS.DEBUG}/conversation/${conversationId}`);
  },

  // Add fetchTemplates method
  fetchTemplates: async (businessId, agentId) => {
    if (!businessId) {
      throw new Error("Business ID is required to fetch templates.");
    }
    if (!agentId) {
        throw new Error("Agent ID is required to fetch templates.");
    }
    // Assuming the endpoint requires both business_id and agent_id as query params
    const endpoint = `${API_CONFIG.ENDPOINTS.TEMPLATES}?business_id=${businessId}&agent_id=${agentId}`;
    return apiRequest(endpoint);
  },

  // Add duplicateTemplate method
  duplicateTemplate: async (templateIdToDuplicate) => {
    // 1. Fetch the original template details
    const originalTemplate = await apiService.fetchTemplateDetails(templateIdToDuplicate); // fetchTemplateDetails already includes businessId

    // 2. Prepare data for the new template
    const newTemplateData = {
      ...originalTemplate,
      template_name: `${originalTemplate.template_name} (Copy)`, // Modify name
      // Remove original ID, the backend will assign a new one
      template_id: undefined,
    };
     // business_id will be added by createTemplate

    // 3. Create the new template
    return apiService.createTemplate(newTemplateData);
  },
};

export default apiService;

================================================================================
File: authService.js
Path: .\front-end\src\services\authService.js
Size: 6094
Modified: 2025-04-25T23:10:25.425367
Created: 2025-04-09T12:42:39.783767
Hash: a2cc58076eca8c79ab074c57a366713eb7f568fb29c92dfadb01289d2916fdb6
Lines: 171
================================================================================
// Authentication service for handling login, logout, and session management
import { API_CONFIG, AUTH_CONFIG } from '../config';

/**
 * Handles API responses and throws errors for non-OK responses
 * @param {Response} response - The fetch Response object
 * @returns {Promise<any>} - The parsed response data
 * @throws {Error} - Throws an error with details from the response if not ok
 */
const handleApiResponse = async (response) => {
  console.log('API Response Status:', response.status, response.statusText);
  console.log('Response Headers:', Object.fromEntries(response.headers.entries()));
  
  // Clone the response so we can try both JSON and text parsing if needed
  const responseClone = response.clone();
  
  // Handle non-OK responses
  if (!response.ok) {
    // Try to get detailed error from response
    try {
      const errorData = await response.json();
      console.error('Error response data:', errorData);
      throw new Error(errorData.message || errorData.error || `API error: ${response.status}`);
    } catch (jsonError) {
      // If response isn't valid JSON, use status text
      console.error('Error parsing response:', jsonError);
      try {
        const errorText = await responseClone.text();
        console.error('Response text:', errorText);
        throw new Error(`API error: ${response.status} ${response.statusText} - ${errorText}`);
      } catch (textError) {
        // If both JSON and text parsing fail, just use the status
        throw new Error(`API error: ${response.status} ${response.statusText}`);
      }
    }
  }
  
  // For successful responses, parse JSON or return empty object
  try {
    const data = await response.json();
    console.log('API Response Data:', data);
    return data;
  } catch (error) {
    // Some successful responses may not have a body (e.g., 204 No Content)
    console.log('No JSON in successful response');
    return {};
  }
};

/**
 * Login with business and user credentials
 * @param {string} userId - User ID
 * @param {string} businessId - Business ID
 * @param {string} businessApiKey - Business API Key
 * @returns {Promise<Object>} - Login response data
 */
export const login = async (userId, businessId, businessApiKey) => {
  try {
    // Trim whitespace from all inputs
    const trimmedUserId = userId.trim();
    const trimmedBusinessId = businessId.trim();
    const trimmedBusinessApiKey = businessApiKey.trim();
    
    console.log('Login attempt with:', { 
      userId: trimmedUserId, 
      businessId: trimmedBusinessId, 
      businessApiKey: '***' 
    });
    console.log('Login URL:', `${API_CONFIG.BASE_URL}${API_CONFIG.ENDPOINTS.LOGIN}`);
    
    const response = await fetch(`${API_CONFIG.BASE_URL}${API_CONFIG.ENDPOINTS.LOGIN}`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Accept': 'application/json'
      },
      credentials: 'include',
      body: JSON.stringify({
        userId: trimmedUserId,
        businessId: trimmedBusinessId,
        businessApiKey: trimmedBusinessApiKey
      })
    });

    const data = await handleApiResponse(response);
    
    // Check if the response indicates success
    if (data.success || data.message === 'Configuration saved successfully') {
      console.log('Login successful, storing credentials');
      // Store credentials in localStorage for persistent login
      localStorage.setItem(AUTH_CONFIG.STORAGE_KEYS.USER_ID, trimmedUserId);
      localStorage.setItem(AUTH_CONFIG.STORAGE_KEYS.BUSINESS_ID, trimmedBusinessId);
      localStorage.setItem(AUTH_CONFIG.STORAGE_KEYS.BUSINESS_API_KEY, trimmedBusinessApiKey);
      
      // Return a standardized success response
      return { success: true, message: 'Login successful' };
    } else {
      console.error('Login response indicates failure:', data);
      return { success: false, message: data.error || 'Login failed' };
    }
  } catch (error) {
    console.error('Login error:', error);
    return { success: false, message: error.message || 'Login failed' };
  }
};

/**
 * Logout and clear stored credentials
 */
export const logout = () => {
  // Clear stored credentials
  localStorage.removeItem(AUTH_CONFIG.STORAGE_KEYS.USER_ID);
  localStorage.removeItem(AUTH_CONFIG.STORAGE_KEYS.BUSINESS_ID);
  localStorage.removeItem(AUTH_CONFIG.STORAGE_KEYS.BUSINESS_API_KEY);
  
  return { success: true, message: 'Logged out successfully' };
};

/**
 * Check if user is logged in
 * @returns {boolean} - True if user is logged in
 */
export const isLoggedIn = () => {
  const userId = localStorage.getItem(AUTH_CONFIG.STORAGE_KEYS.USER_ID);
  const businessId = localStorage.getItem(AUTH_CONFIG.STORAGE_KEYS.BUSINESS_ID);
  const businessApiKey = localStorage.getItem(AUTH_CONFIG.STORAGE_KEYS.BUSINESS_API_KEY);
  
  return !!(userId && businessId && businessApiKey);
};

/**
 * Get stored credentials
 * @returns {Object} - Stored credentials
 */
export const getStoredCredentials = () => {
  return {
    userId: localStorage.getItem(AUTH_CONFIG.STORAGE_KEYS.USER_ID) || '',
    businessId: localStorage.getItem(AUTH_CONFIG.STORAGE_KEYS.BUSINESS_ID) || '',
    businessApiKey: localStorage.getItem(AUTH_CONFIG.STORAGE_KEYS.BUSINESS_API_KEY) || ''
  };
};

/**
 * Get authentication headers for API requests
 * @returns {Object} - Headers object with authentication
 */
export const getAuthHeaders = () => {
  const businessApiKey = localStorage.getItem(AUTH_CONFIG.STORAGE_KEYS.BUSINESS_API_KEY);
  
  if (!businessApiKey) {
    throw new Error('No API key found. Please log in first.');
  }
  
  return {
    'Content-Type': 'application/json',
    'Accept': 'application/json',
    'businessapikey': businessApiKey,
    'Authorization': `Bearer ${businessApiKey}`
  };
};

// Create a named export object
const authService = {
  login,
  logout,
  isLoggedIn,
  getStoredCredentials,
  getAuthHeaders
};

export default authService;

================================================================================
File: businessService.js
Path: .\front-end\src\services\businessService.js
Size: 1907
Modified: 2025-04-25T12:58:31.543799
Created: 2025-04-08T21:21:51.870072
Hash: 4faf639123b51fbaba67d3e1a4e76ef9391cf27fe81c4bab1a928705ece4edb1
Lines: 50
================================================================================
import { API_CONFIG } from '../config';
import { getAuthHeaders } from '../services/authService';

// Helper to handle API responses (can be moved to a shared api.js)
const handleApiResponse = async (response) => {
  if (!response.ok) {
    const errorData = await response.json().catch(() => ({})); // Try to parse error, fallback
    throw new Error(errorData.message || errorData.error || `HTTP error ${response.status}`);
  }
  // Handle 204 No Content
  if (response.status === 204) {
      return null; 
  }
  return response.json();
};

// Fetch business details by ID
export const getBusiness = async (businessId) => {
  console.log(`[Service] Fetching business details for ID: ${businessId}`);
  const response = await fetch(`${API_CONFIG.BASE_URL}/businesses/${businessId}`, {
    method: 'GET',
    credentials: 'include', // Send cookies
    headers: getAuthHeaders()
  });
  return handleApiResponse(response);
};

// Update business details
export const updateBusiness = async (businessId, businessData) => {
  console.log(`[Service] Updating business ${businessId} with:`, businessData);
  const response = await fetch(`${API_CONFIG.BASE_URL}/businesses/${businessId}`, {
    method: 'PUT',
    credentials: 'include',
    headers: getAuthHeaders(),
    body: JSON.stringify(businessData),
  });
  return handleApiResponse(response);
};

// Set the default starting stage for a business
export const setDefaultStage = async (businessId, stageId) => {
  console.log(`[Service] Setting default stage for business ${businessId} to: ${stageId}`);
  const response = await fetch(`${API_CONFIG.BASE_URL}/businesses/${businessId}/default-stage`, {
    method: 'PUT',
    credentials: 'include',
    headers: getAuthHeaders(),
    body: JSON.stringify({ stage_id: stageId }), // Send stage_id in the body
  });
  return handleApiResponse(response);
};

================================================================================
File: debugService.js
Path: .\front-end\src\services\debugService.js
Size: 3586
Modified: 2025-04-17T01:19:10.665256
Created: 2025-04-08T22:35:58.819367
Hash: be49b38c4959199b679c27e1294e8da5ee295a7c9f714c04f84c3cb44adbe9ce
Lines: 103
================================================================================
// Debug service for message handling diagnostics
import { API_CONFIG } from '../config';
import { getAuthHeaders } from './authService';

/**
 * Handles API responses and throws errors for non-OK responses
 * @param {Response} response - The fetch Response object
 * @returns {Promise<any>} - The parsed response data
 * @throws {Error} - Throws an error with details from the response if not ok
 */
const handleApiResponse = async (response) => {
    // Handle non-OK responses
    if (!response.ok) {
        // Try to get detailed error from response
        try {
            const errorData = await response.json();
            throw new Error(errorData.message || errorData.error || `API error: ${response.status}`);
        } catch (jsonError) {
            // If response isn't valid JSON, use status text
            throw new Error(`API error: ${response.status} ${response.statusText}`);
        }
    }
    
    // For successful responses, parse JSON or return empty object
    try {
        return await response.json();
    } catch (error) {
        // Some successful responses may not have a body (e.g., 204 No Content)
        return {};
    }
};

/**
 * Make an API request with authentication
 * @param {string} endpoint - API endpoint
 * @param {Object} options - Request options
 * @returns {Promise<any>} - Response data
 */
const apiRequest = async (endpoint, options = {}) => {
    const url = `${endpoint}`;
    const defaultOptions = {
        headers: getAuthHeaders(),
        credentials: 'include',
    };

    const response = await fetch(url, { ...defaultOptions, ...options });
    return handleApiResponse(response);
};

export const debugService = {
    // Get debug information for a specific conversation
    getConversationDebug: (conversationId) => {
        return apiRequest(`${API_CONFIG.ENDPOINTS.DEBUG}/conversation/${conversationId}`);
    },

    // Get real-time message processing debug info
    getMessageProcessingDebug: (messageId) => {
        return apiRequest(`${API_CONFIG.ENDPOINTS.DEBUG}/message/${messageId}`);
    },

    // Get stage navigation history
    getStageNavigationDebug: (conversationId) => {
        return apiRequest(`${API_CONFIG.ENDPOINTS.DEBUG}/stages/${conversationId}`);
    },

    // Get prompt generation details
    getPromptGenerationDebug: (messageId) => {
        return apiRequest(`${API_CONFIG.ENDPOINTS.DEBUG}/prompts/${messageId}`);
    },

    // Get data extraction results
    getDataExtractionDebug: (messageId) => {
        return apiRequest(`${API_CONFIG.ENDPOINTS.DEBUG}/extraction/${messageId}`);
    },

    // Subscribe to real-time debug events for a conversation
    subscribeToDebugEvents: (conversationId, callback) => {
        const eventSource = new EventSource(`${API_CONFIG.ENDPOINTS.DEBUG}/events/${conversationId}`);
        
        eventSource.onmessage = (event) => {
            try {
                const data = JSON.parse(event.data);
                callback(data);
            } catch (error) {
                console.error('Error parsing event data:', error);
            }
        };
        
        eventSource.onerror = (error) => {
            console.error('EventSource error:', error);
            eventSource.close();
        };

        // Return cleanup function
        return () => {
            if (eventSource.readyState !== EventSource.CLOSED) {
                eventSource.close();
            }
        };
    }
};

export default debugService;

================================================================================
File: messageService.js
Path: .\front-end\src\services\messageService.js
Size: 3548
Modified: 2025-04-17T01:19:10.721102
Created: 2025-04-09T12:43:00.851293
Hash: 76575dce24fa6a1e86ca7ef6a6db5a4febfd2cc7d076976ffdd533562141aa32
Lines: 121
================================================================================
// Message service for handling message sending and conversation history
import { API_CONFIG } from '../config';
import { getAuthHeaders, getStoredCredentials } from './authService';

/**
 * Handles API responses and throws errors for non-OK responses
 * @param {Response} response - The fetch Response object
 * @returns {Promise<any>} - The parsed response data
 * @throws {Error} - Throws an error with details from the response if not ok
 */
const handleApiResponse = async (response) => {
  // Handle non-OK responses
  if (!response.ok) {
    // Try to get detailed error from response
    try {
      const errorData = await response.json();
      throw new Error(errorData.message || errorData.error || `API error: ${response.status}`);
    } catch (jsonError) {
      // If response isn't valid JSON, use status text
      throw new Error(`API error: ${response.status} ${response.statusText}`);
    }
  }
  
  // For successful responses, parse JSON or return empty object
  try {
    return await response.json();
  } catch (error) {
    // Some successful responses may not have a body (e.g., 204 No Content)
    return {};
  }
};

/**
 * Send a message to the API
 * @param {string} message - Message content
 * @param {Object} options - Additional options
 * @param {string} options.conversationId - Optional conversation ID
 * @param {string} options.agentId - Optional agent ID
 * @returns {Promise<Object>} - Response data
 */
export const sendMessage = async (message, options = {}) => {
  try {
    const { userId, businessId } = getStoredCredentials();
    
    const requestData = {
      business_id: businessId,
      user_id: userId,
      message: message
    };
    
    // Add optional fields if provided
    if (options.conversationId) {
      requestData.conversation_id = options.conversationId;
    }
    
    if (options.agentId) {
      requestData.agent_id = options.agentId;
    }
    
    const response = await fetch(`${API_CONFIG.ENDPOINTS.MESSAGE}`, {
      method: 'POST',
      headers: getAuthHeaders(),
      credentials: 'include',
      body: JSON.stringify(requestData)
    });
    
    return await handleApiResponse(response);
  } catch (error) {
    console.error('Send message error:', error);
    throw error;
  }
};

/**
 * Fetch conversation history for a user
 * @returns {Promise<Array>} - Conversation history
 */
export const fetchConversationHistory = async () => {
  try {
    const { userId, businessId } = getStoredCredentials();
    
    const response = await fetch(
      `${API_CONFIG.ENDPOINTS.CONVERSATIONS}/${userId}?business_id=${businessId}`,
      {
        method: 'GET',
        headers: getAuthHeaders(),
        credentials: 'include'
      }
    );
    
    return await handleApiResponse(response);
  } catch (error) {
    console.error('Fetch conversation history error:', error);
    throw error;
  }
};

/**
 * Test backend connection
 * @returns {Promise<Object>} - Connection test result
 */
export const testConnection = async () => {
  try {
    const response = await fetch(`/`, {
      method: 'GET',
      credentials: 'include'
    });
    
    const text = await response.text();
    return { success: true, message: text };
  } catch (error) {
    console.error('Connection test error:', error);
    return { success: false, message: error.message };
  }
};

export default {
  sendMessage,
  fetchConversationHistory,
  testConnection
};

================================================================================
File: stageService.js
Path: .\front-end\src\services\stageService.js
Size: 6035
Modified: 2025-04-26T00:05:26.532115
Created: 2025-04-01T16:29:34.419987
Hash: 8becaea81280d1520f95a1e6369fab8c912a85a8f27c568e21b21091b1b6b594
Lines: 174
================================================================================
// src/services/stageService.js

import { API_CONFIG } from '../config';
import { getAuthHeaders } from '../services/authService';

// Helper to handle API responses (reuse or import)
const handleApiResponse = async (response) => {
  if (!response.ok) {
    const errorData = await response.json().catch(() => ({})); 
    throw new Error(errorData.message || errorData.error || `HTTP error ${response.status}`);
  }
  if (response.status === 204) {
      return null; 
  }
  // Assume the response is JSON if OK and not 204
  return response.json(); 
};

// Fetch all stages for a given business
export const fetchStages = async (businessId) => {
  if (!businessId) {
    console.error("[Service Error] fetchStages requires a businessId.");
    throw new Error("Business ID is required to fetch stages.");
  }
  console.log(`[Service] Fetching stages for business: ${businessId}`);
  
  // Log the headers for debugging
  const headers = getAuthHeaders();
  console.log("[Service] Using headers:", headers);
  
  const response = await fetch(`${API_CONFIG.BASE_URL}/api/stages?business_id=${businessId}`, {
    method: 'GET',
    credentials: 'include', // Send cookies
    headers: headers
  });
  
  // Log the response status for debugging
  console.log(`[Service] Response status: ${response.status}`);
  
  return handleApiResponse(response);
};

// Create a new stage
export const createStage = async (stageData) => {
  if (!stageData.business_id) {
    console.error("[Service Error] createStage requires a business_id.");
    throw new Error("Business ID is required to create a stage.");
  }
  
  console.log(`[Service] Creating stage for business: ${stageData.business_id}`);
  console.log(`[Service] Stage data:`, stageData);
  
  const headers = getAuthHeaders();
  console.log("[Service] Using headers:", headers);
  
  try {
    const response = await fetch(`${API_CONFIG.BASE_URL}/api/stages`, {
      method: 'POST',
      credentials: 'include',
      headers: {
        ...headers,
        'Content-Type': 'application/json'
      },
      body: JSON.stringify(stageData)
    });
    
    console.log(`[Service] Response status: ${response.status}`);
    
    if (!response.ok) {
      const errorData = await response.json().catch(() => ({}));
      console.error("[Service Error] createStage failed:", errorData);
      throw new Error(errorData.error || errorData.message || `Failed to create stage (HTTP ${response.status})`);
    }
    
    return await response.json();
  } catch (error) {
    console.error("[Service Error] createStage failed:", error);
    throw error;
  }
};

// Fetch details for a specific stage
export const fetchStageDetails = async (stageId) => {
    try {
        const businessId = localStorage.getItem('businessId');
        if (!businessId || !stageId) {
            throw new Error('Missing required parameters: ' + 
                (!businessId ? 'businessId ' : '') + 
                (!stageId ? 'stageId' : ''));
        }

        console.log(`[Service] Fetching stage details for stage ${stageId} and business ${businessId}`);
        
        // Log the headers for debugging
        const headers = getAuthHeaders();
        console.log("[Service] Using headers:", headers);
        
        const response = await fetch(`${API_CONFIG.BASE_URL}/api/stages/${stageId}?business_id=${businessId}`, {
            method: 'GET',
            credentials: 'include',
            headers: headers
        });

        // Log the response status for debugging
        console.log(`[Service] Response status: ${response.status}`);
        
        if (!response.ok) {
            const errorData = await response.json().catch(() => ({}));
            console.error('Error response:', errorData);
            throw new Error(errorData.error || `Failed to fetch stage details (HTTP ${response.status})`);
        }

        const data = await response.json();
        console.log('Received stage details:', data);
        
        if (!data || typeof data !== 'object') {
            throw new Error('Invalid response format from server');
        }

        return data;
    } catch (error) {
        console.error('Error fetching stage details:', error);
        throw error;
    }
};

// Update an existing stage
export const updateStage = async (stageId, stageData) => {
    if (!stageId || !stageData.business_id) {
        throw new Error('Missing required parameters: stageId and business_id');
    }
    
    console.log(`[Service] Updating stage ${stageId} for business ${stageData.business_id}`);
    
    // Log the headers for debugging
    const headers = getAuthHeaders();
    console.log("[Service] Using headers:", headers);
    
    const response = await fetch(`${API_CONFIG.BASE_URL}/api/stages/${stageId}`, {
        method: 'PUT',
        credentials: 'include',
        headers: headers,
        body: JSON.stringify(stageData)
    });
    
    // Log the response status for debugging
    console.log(`[Service] Response status: ${response.status}`);
    
    return handleApiResponse(response);
};

// Delete a stage
export const deleteStage = async (stageId, businessId) => {
    if (!stageId || !businessId) {
        throw new Error('Missing required parameters: stageId and businessId');
    }
    
    console.log(`[Service] Deleting stage ${stageId} for business ${businessId}`);
    
    // Log the headers for debugging
    const headers = getAuthHeaders();
    console.log("[Service] Using headers:", headers);
    
    const response = await fetch(`${API_CONFIG.BASE_URL}/api/stages/${stageId}?business_id=${businessId}`, {
        method: 'DELETE',
        credentials: 'include',
        headers: headers
    });
    
    // Log the response status for debugging
    console.log(`[Service] Response status: ${response.status}`);
    
    return handleApiResponse(response);
};

================================================================================
File: templateService.js
Path: .\front-end\src\services\templateService.js
Size: 5384
Modified: 2025-04-17T01:19:10.836805
Created: 2025-04-11T21:53:51.783794
Hash: c2b26c41020ddf2b16f7bee05f84dce4d788d8e0ec56feb089bac11dfac3d49f
Lines: 165
================================================================================
import { API_CONFIG } from '../config';
import { getAuthHeaders } from './authService';
import { normalizeUUID } from '../hooks/useConfig';

// Fetch templates
export const fetchTemplates = async (businessId, agentId) => {
  try {
    const normalizedBusinessId = normalizeUUID(businessId);
    const normalizedAgentId = normalizeUUID(agentId);

    console.log(`Fetching templates for business: ${normalizedBusinessId}, agent: ${normalizedAgentId}`);
    const response = await fetch(`${API_CONFIG.BASE_URL}/templates?business_id=${normalizedBusinessId}&agent_id=${normalizedAgentId}`, {
      method: 'GET',
      credentials: 'include',
      headers: getAuthHeaders()
    });
    
    if (!response.ok) {
      const errorData = await response.json();
      throw new Error(errorData.message || 'Failed to fetch templates');
    }

    return await response.json();
  } catch (error) {
    console.error('Error in fetchTemplates:', error);
    throw error;
  }
};

// Get a template by ID
export const getTemplate = async (templateId, businessId) => {
  try {
    const normalizedBusinessId = normalizeUUID(businessId);
    
    console.log(`Fetching template ${templateId} for business: ${normalizedBusinessId}`);
    const response = await fetch(`${API_CONFIG.BASE_URL}/templates/${templateId}?business_id=${normalizedBusinessId}`, {
      method: 'GET',
      credentials: 'include',
      headers: getAuthHeaders()
    });
    
    if (!response.ok) {
      const errorData = await response.json();
      throw new Error(errorData.message || 'Failed to fetch template');
    }

    return await response.json();
  } catch (error) {
    console.error('Error in getTemplate:', error);
    throw error;
  }
};

// Create a new template
export const createTemplate = async (templateData) => {
  try {
    // Make sure business_id and agent_id are normalized
    const normalizedData = {
      ...templateData,
      business_id: normalizeUUID(templateData.business_id),
      agent_id: templateData.agent_id ? normalizeUUID(templateData.agent_id) : null
    };
    
    // Log the normalized data for debugging
    console.log('Creating template with data:', {
      original: templateData.business_id,
      normalized: normalizedData.business_id
    });
    
    const response = await fetch(`${API_CONFIG.BASE_URL}${API_CONFIG.ENDPOINTS.TEMPLATES}`, {
      method: 'POST',
      credentials: 'include',
      headers: getAuthHeaders(),
      body: JSON.stringify(normalizedData)
    });
    
    if (!response.ok) {
      const errorData = await response.json();
      throw new Error(errorData.message || 'Failed to create template');
    }

    return await response.json();
  } catch (error) {
    console.error('Error in createTemplate:', error);
    throw error;
  }
};

// Update an existing template
export const updateTemplate = async (templateId, templateData) => {
  try {
    // Make sure business_id and agent_id are normalized
    const normalizedData = {
      ...templateData,
      business_id: normalizeUUID(templateData.business_id),
      agent_id: templateData.agent_id ? normalizeUUID(templateData.agent_id) : null
    };
    
    // Log the normalized data for debugging
    console.log(`Updating template ${templateId}:`, {
      original: templateData.business_id,
      normalized: normalizedData.business_id
    });
    
    const response = await fetch(`${API_CONFIG.BASE_URL}${API_CONFIG.ENDPOINTS.TEMPLATES}/${templateId}`, {
      method: 'PUT',
      credentials: 'include',
      headers: getAuthHeaders(),
      body: JSON.stringify(normalizedData)
    });
    
    if (!response.ok) {
      const errorData = await response.json();
      throw new Error(errorData.message || 'Failed to update template');
    }

    return await response.json();
  } catch (error) {
    console.error('Error in updateTemplate:', error);
    throw error;
  }
};

// Delete a template
export const deleteTemplate = async (templateId, businessId) => {
  try {
    const normalizedBusinessId = normalizeUUID(businessId);
    
    console.log(`Deleting template ${templateId} for business: ${normalizedBusinessId}`);
    const response = await fetch(`${API_CONFIG.BASE_URL}/templates/${templateId}?business_id=${normalizedBusinessId}`, {
      method: 'DELETE',
      credentials: 'include',
      headers: getAuthHeaders()
    });
    
    if (!response.ok) {
      const errorData = await response.json();
      throw new Error(errorData.message || 'Failed to delete template');
    }

    return true;
  } catch (error) {
    console.error('Error in deleteTemplate:', error);
    throw error;
  }
};

// Duplicate a template
export const duplicateTemplate = async (templateData) => {
  try {
    // Make sure business_id and agent_id are normalized
    const normalizedData = {
      ...templateData,
      business_id: normalizeUUID(templateData.business_id),
      agent_id: normalizeUUID(templateData.agent_id),
      template_name: `${templateData.template_name} (Copy)`
    };
    
    console.log('Duplicating template as:', normalizedData);
    return await createTemplate(normalizedData);
  } catch (error) {
    console.error('Error in duplicateTemplate:', error);
    throw error;
  }
};

================================================================================
File: testService.js
Path: .\front-end\src\services\testService.js
Size: 5724
Modified: 2025-04-25T12:58:31.547873
Created: 2025-03-29T03:02:43.663042
Hash: c196366a0b99d25ced8e25c99f80b6d34cfe3eb400bc2cb0b4ef26d7fa52af3c
Lines: 170
================================================================================
// File: src/services/testService.js
// Last Modified: 2026-03-29
import axios from 'axios';
import { API_CONFIG } from '../config';
import { getAuthHeaders } from './authService';

// Helper function to handle API calls and error responses
const handleApiCall = async (url, method, data = null) => {
    const headers = {
        'Content-Type': 'application/json',
        ...getAuthHeaders()
    };

    try {
        const response = await axios({
            method: method,
            url: url,
            headers: headers,
            data: data,
            withCredentials: true
        });

        if (response.status >= 200 && response.status < 300) {
            return response.data;
        } else {
            console.error("API call failed:", response);
            throw new Error(`API call failed with status ${response.status}`);
        }
    } catch (error) {
        console.error("API call failed:", error);
        throw error; // Re-throw the error for the component to handle
    }
};

// --------------------------------------------------------
// Configuration Service (Saving to localStorage - Insecure)
// --------------------------------------------------------
export const saveConfig = async (apiKey, userId, businessId, businessApiKey) => {
    // This function doesn't actually call an API. It only saves to localStorage.
    return new Promise((resolve) => {
        localStorage.setItem('icmpApiKey', apiKey);
        localStorage.setItem('userId', userId);
        localStorage.setItem('businessId', businessId);
        localStorage.setItem('businessApiKey', businessApiKey);
        resolve({ success: true, message: 'Configuration saved to localStorage' });
    });
};

// --------------------------------------------------------
// User Management Service (Simulated)
// --------------------------------------------------------
export const createUser = async (firstName, lastName, email) => {
    try {
        return await handleApiCall(`/users`, 'POST', {
            firstName,
            lastName,
            email
        });
    } catch (error) {
        console.error("createUser API call failed:", error);
        throw error;
    }
};

// --------------------------------------------------------
// Business Management Service
// --------------------------------------------------------
export const fetchBusinessDetails = async (businessId) => {
    try {
        return await handleApiCall(`/businesses/${businessId}`, 'GET');
    } catch (error) {
        console.error("fetchBusinessDetails API call failed:", error);
        throw error;
    }
};

// --------------------------------------------------------
// Template Management Service
// --------------------------------------------------------
export const createTemplate = async (templateData) => {
    try {
        return await handleApiCall(`/templates`, 'POST', templateData);
    } catch (error) {
        console.error("createTemplate API call failed:", error);
        throw error;
    }
};

export const fetchTemplates = async () => {
    try {
        return await handleApiCall(`/templates/defaultTemplates`, 'GET');
    } catch (error) {
        console.error("fetchTemplates API call failed:", error);
        throw error;
    }
};

// --------------------------------------------------------
// Stage Management Service
// --------------------------------------------------------
export const createStage = async (stageData) => {
    try {
        const API_ENDPOINT = `/stages`;
        return await handleApiCall(API_ENDPOINT, 'POST', stageData);
    } catch (error) {
        console.error("createStage API call failed:", error);
        throw error;
    }
};

export const fetchStages = async (businessId) => {
    try {
        const API_ENDPOINT = `/stages`;
        return await handleApiCall(API_ENDPOINT, 'GET');
    } catch (error) {
        console.error("fetchStages API call failed:", error);
        throw error;
    }
};

// --------------------------------------------------------
// Message Handling Service
// --------------------------------------------------------
export const processMessage = async (messageData) => {
    try {
        return await handleApiCall(`/message`, 'POST', messageData);
    } catch (error) {
        console.error("processMessage API call failed:", error);
        throw error;
    }
};

// --------------------------------------------------------
// defaultTemplates Management Service
// --------------------------------------------------------
export const getDefaultTemplates = async () => {
    try {
        return await handleApiCall(`/templates/defaultTemplates`, 'GET');
    } catch (error) {
        console.error("getDefaultTemplates API call failed:", error);
        throw error;
    }
};

export const saveDefaultTemplate = async (templateData) => {
    try {
        return await handleApiCall(`/templates/defaultTemplates`, 'POST', templateData);
    } catch (error) {
        console.error("saveDefaultTemplate API call failed:", error);
        throw error;
    }
};

export const getStage = async (stageId) => {
    try {
        return await handleApiCall(`/stage/${stageId}`, 'GET');
    } catch (error) {
        console.error("getStage API call failed:", error);
        throw error;
    }
};

export const updateStage = async (stageId, stageData) => {
    try {
        return await handleApiCall(`/stage/${stageId}`, 'PUT', stageData);
    } catch (error) {
        console.error("updateStage API call failed:", error);
        throw error;
    }
};

================================================================================
File: apiTest.js
Path: .\front-end\src\utils\apiTest.js
Size: 10059
Modified: 2025-04-17T01:19:10.954733
Created: 2025-04-06T12:16:49.624524
Hash: cdef83e0e15c9ac050f098a6eb2fe40dbbe5b4d980f194f0ccb79252b2bc6c3b
Lines: 326
================================================================================
// API Test Utility
// This file contains functions to test API connectivity and authentication

import { getStoredCredentials } from './fetchUtils';

/**
 * Test API key authentication
 * @param {string} [businessId] - The business ID (optional, will use stored credentials if not provided)
 * @param {string} [apiKey] - The API key (optional, will use stored credentials if not provided)
 * @returns {Promise<Object>} - The test result
 */
export const testApiKeyAuth = async (businessId, apiKey) => {
  console.log('Testing API key authentication...');
  
  try {
    // If businessId or apiKey is not provided, try to get them from stored credentials
    if (!businessId || !apiKey) {
      const storedCredentials = getStoredCredentials();
      businessId = businessId || storedCredentials.businessId;
      apiKey = apiKey || storedCredentials.businessApiKey;
      
      if (!businessId || !apiKey) {
        return {
          success: false,
          error: 'Business ID and API Key are required'
        };
      }
    }
    
    // Test with different authentication methods
    const authMethods = [
      // Method 1: API key as query parameter
      {
        url: `/businesses/validate-credentials?business_id=${businessId}&api_key=${apiKey}`,
        headers: {
          'Content-Type': 'application/json',
          'Accept': 'application/json'
        }
      },
      // Method 2: API key in X-API-Key header
      {
        url: `/businesses/validate-credentials?business_id=${businessId}`,
        headers: {
          'Content-Type': 'application/json',
          'Accept': 'application/json',
          'X-API-Key': apiKey
        }
      },
      // Method 3: API key in Authorization header as Bearer token
      {
        url: `/businesses/validate-credentials?business_id=${businessId}`,
        headers: {
          'Content-Type': 'application/json',
          'Accept': 'application/json',
          'Authorization': `Bearer ${apiKey}`
        }
      }
    ];
    
    const results = [];
    
    for (const method of authMethods) {
      try {
        console.log(`Testing with URL: ${method.url} and headers:`, method.headers);
        
        const response = await fetch(method.url, {
          method: 'GET',
          headers: method.headers,
          credentials: 'include'
        });
        
        const status = response.status;
        const data = await response.json().catch(() => ({}));
        
        results.push({
          method: Object.keys(method.headers).find(h => h.includes('API') || h.includes('Authorization')) || 'query',
          status,
          data,
          success: response.ok
        });
        
        // If any method succeeds, we can stop testing
        if (response.ok) {
          break;
        }
      } catch (err) {
        console.error(`Error testing authentication method:`, err);
        results.push({
          method: Object.keys(method.headers).find(h => h.includes('API') || h.includes('Authorization')) || 'query',
          error: err.message,
          success: false
        });
      }
    }
    
    // Check if any method succeeded
    const successfulResult = results.find(r => r.success);
    
    return {
      success: !!successfulResult,
      results,
      message: successfulResult ? 'Authentication successful' : 'All authentication methods failed'
    };
  } catch (err) {
    console.error('Error in testApiKeyAuth:', err);
    return {
      success: false,
      error: err.message
    };
  }
};

/**
 * Test template operations
 * @param {string} [businessId] - The business ID (optional, will use stored credentials if not provided)
 * @param {string} [apiKey] - The API key (optional, will use stored credentials if not provided)
 * @returns {Promise<Object>} - The test result
 */
export const testTemplateOperations = async (businessId, apiKey) => {
  console.log('Testing template operations...');
  
  try {
    // If businessId or apiKey is not provided, try to get them from stored credentials
    if (!businessId || !apiKey) {
      const storedCredentials = getStoredCredentials();
      businessId = businessId || storedCredentials.businessId;
      apiKey = apiKey || storedCredentials.businessApiKey;
      
      if (!businessId || !apiKey) {
        return {
          success: false,
          error: 'Business ID and API Key are required'
        };
      }
    }
    
    // Test fetching templates
    const fetchResult = await testFetchTemplates(businessId, apiKey);
    
    // Test creating a template
    const createResult = await testCreateTemplate(businessId, apiKey);
    
    return {
      success: fetchResult.success && createResult.success,
      fetchResult,
      createResult
    };
  } catch (err) {
    console.error('Template operations test error:', err);
    return {
      success: false,
      error: err.message
    };
  }
};

/**
 * Test fetching templates
 * @param {string} businessId - The business ID
 * @param {string} apiKey - The API key
 * @returns {Promise<Object>} - The test result
 */
const testFetchTemplates = async (businessId, apiKey) => {
  console.log('Testing fetching templates...');
  
  try {
    // Try both methods: GET with params and POST with body
    const methods = [
      // Method 1: GET request with business_id as query parameter
      {
        method: 'GET',
        url: `/templates?business_id=${businessId}`,
        headers: {
          'Content-Type': 'application/json',
          'Accept': 'application/json',
          'Authorization': `Bearer ${apiKey}`,
          'X-API-Key': apiKey
        },
        body: null
      },
      // Method 2: POST request with business_id in body
      {
        method: 'POST',
        url: '/templates',
        headers: {
          'Content-Type': 'application/json',
          'Accept': 'application/json',
          'Authorization': `Bearer ${apiKey}`,
          'X-API-Key': apiKey
        },
        body: JSON.stringify({ business_id: businessId })
      }
    ];
    
    // Try each method until one succeeds
    for (const method of methods) {
      try {
        console.log(`Trying to fetch templates with ${method.method} request:`, method);
        
        const response = await fetch(method.url, {
          method: method.method,
          headers: method.headers,
          body: method.body,
          credentials: 'include'
        });
        
        const status = response.status;
        const data = await response.json().catch(() => ({}));
        
        console.log(`${method.method} templates result:`, { status, data });
        
        if (response.ok) {
          return {
            success: true,
            status,
            data,
            method: method.method
          };
        }
      } catch (err) {
        console.error(`Error with ${method.method} templates request:`, err);
      }
    }
    
    return {
      success: false,
      error: "All template fetch methods failed"
    };
  } catch (err) {
    console.error('Fetch templates error:', err);
    return {
      success: false,
      error: err.message
    };
  }
};

/**
 * Test creating a template
 * @param {string} businessId - The business ID
 * @param {string} apiKey - The API key
 * @returns {Promise<Object>} - The test result
 */
const testCreateTemplate = async (businessId, apiKey) => {
  console.log('Testing creating a template...');
  
  try {
    const templateData = {
      template_name: `Test Template ${Date.now()}`,
      template_text: 'This is a test template with {variable1} and {variable2}.',
      template_type: 'test_template',
      business_id: businessId,
      variables: ['variable1', 'variable2'],
      template_description: 'A test template for API testing'
    };
    
    const response = await fetch('/templates/', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Accept': 'application/json',
        'Authorization': `Bearer ${apiKey}`
      },
      credentials: 'include',
      body: JSON.stringify(templateData)
    });
    
    const status = response.status;
    const data = await response.json().catch(() => ({}));
    
    console.log('Create template result:', { status, data });
    
    return {
      success: response.ok,
      status,
      data
    };
  } catch (err) {
    console.error('Create template error:', err);
    return {
      success: false,
      error: err.message
    };
  }
};

/**
 * Run all API tests
 * @param {string} [businessId] - The business ID (optional, will use stored credentials if not provided)
 * @param {string} [apiKey] - The API key (optional, will use stored credentials if not provided)
 * @returns {Promise<Object>} - The test results
 */
export const runAllApiTests = async (businessId, apiKey) => {
  console.log('Running all API tests...');
  
  try {
    // If businessId or apiKey is not provided, try to get them from stored credentials
    if (!businessId || !apiKey) {
      const storedCredentials = getStoredCredentials();
      businessId = businessId || storedCredentials.businessId;
      apiKey = apiKey || storedCredentials.businessApiKey;
      
      if (!businessId || !apiKey) {
        return {
          success: false,
          error: 'Business ID and API Key are required'
        };
      }
    }
    
    const authResult = await testApiKeyAuth(businessId, apiKey);
    const templateResult = await testTemplateOperations(businessId, apiKey);
    
    return {
      success: authResult.success && templateResult.success,
      authResult,
      templateResult
    };
  } catch (err) {
    console.error('API tests error:', err);
    return {
      success: false,
      error: err.message
    };
  }
};

================================================================================
File: authUtils.js
Path: .\front-end\src\utils\authUtils.js
Size: 1205
Modified: 2025-04-17T01:19:11.014150
Created: 2025-04-07T00:33:20.219294
Hash: a3d938237879c2845cb4c5cb31e2f9c7650d283477bd5c578f364b294c970147
Lines: 44
================================================================================
/**
 * Authentication utility functions
 */

/**
 * Get stored credentials from localStorage
 * @returns {Object} Object containing businessId and businessApiKey
 */
export const getStoredCredentials = () => {
  const businessId = localStorage.getItem('businessId');
  const businessApiKey = localStorage.getItem('businessApiKey');
  
  return {
    businessId,
    businessApiKey
  };
};

/**
 * Check if user is authenticated
 * @returns {boolean} True if user is authenticated, false otherwise
 */
export const isAuthenticated = () => {
  const { businessId, businessApiKey } = getStoredCredentials();
  return !!(businessId && businessApiKey);
};

/**
 * Store credentials in localStorage
 * @param {string} businessId - The business ID
 * @param {string} businessApiKey - The business API key
 */
export const storeCredentials = (businessId, businessApiKey) => {
  localStorage.setItem('businessId', businessId);
  localStorage.setItem('businessApiKey', businessApiKey);
};

/**
 * Clear stored credentials from localStorage
 */
export const clearCredentials = () => {
  localStorage.removeItem('businessId');
  localStorage.removeItem('businessApiKey');
};

================================================================================
File: fetchUtils.js
Path: .\front-end\src\utils\fetchUtils.js
Size: 3336
Modified: 2025-04-17T01:19:11.073989
Created: 2025-04-06T00:27:44.942986
Hash: 6df9ce5cd7c00987b34eaf1bacf87f3e8a23662f48a37d15ea16df687bfc4c3c
Lines: 109
================================================================================
// Global request cache to prevent duplicate API calls
const apiCache = {
  cache: {},
  get: function(url) {
    return this.cache[url]?.data;
  },
  set: function(url, data, ttl = 60000) { // Default TTL: 1 minute
    this.cache[url] = {
      data,
      expiry: Date.now() + ttl
    };
  },
  isValid: function(url) {
    const item = this.cache[url];
    return item && item.expiry > Date.now();
  },
  clear: function() {
    this.cache = {};
  }
};

/**
 * Get stored credentials from localStorage
 * @returns {Object} Object containing businessId and businessApiKey
 */
export const getStoredCredentials = () => {
  const businessId = localStorage.getItem('businessId');
  const businessApiKey = localStorage.getItem('businessApiKey');
  return { businessId, businessApiKey };
};

/**
 * Fetches data with caching support
 * @param {string} url - The URL to fetch
 * @param {Object} options - Fetch options
 * @returns {Promise<Response>} - The fetch response
 */
export const cachedFetch = async (url, options = {}) => {
  // Ensure URL ends with trailing slash for POST/PUT requests
  if ((options.method === 'POST' || options.method === 'PUT') && !url.endsWith('/')) {
    url = `${url}/`;
  }
  
  // Add business_id to URL if not already present
  const urlObj = new URL(url, window.location.origin);
  if (!urlObj.searchParams.has('business_id')) {
    const businessId = localStorage.getItem('businessId');
    if (businessId) {
      urlObj.searchParams.append('business_id', businessId);
      url = urlObj.toString();
    }
  }
  
  // Create cache key
  const cacheKey = `${url}-${options.method || 'GET'}-${JSON.stringify(options.body || {})}`;
  
  // Check cache for GET requests
  if (options.method === 'GET' || !options.method) {
    const cachedData = apiCache.get(cacheKey);
    if (cachedData && apiCache.isValid(cacheKey)) {
      console.log(`Using cached data for ${url}`);
      return new Response(JSON.stringify(cachedData), {
        status: 200,
        headers: { 'Content-Type': 'application/json' }
      });
    }
  }
  
  // Prepare headers
  const headers = {
    'Content-Type': 'application/json',
    'Accept': 'application/json',
    ...options.headers
  };
  
  // Add API key in both headers for redundancy
  const apiKey = localStorage.getItem('businessApiKey');
  if (apiKey) {
    // Use both X-API-Key and Authorization header to maximize compatibility
    headers['X-API-Key'] = apiKey;
    headers['Authorization'] = `Bearer ${apiKey}`;
  }
  
  // Prepare fetch options
  const fetchOptions = {
    ...options,
    headers,
    credentials: 'include' // Important: Send cookies with request
  };
  
  // Stringify body if it's an object
  if (fetchOptions.body && typeof fetchOptions.body === 'object') {
    fetchOptions.body = JSON.stringify(fetchOptions.body);
  }
  
  // Make the fetch request
  console.log(`Fetching ${url} with options:`, fetchOptions);
  const response = await fetch(url, fetchOptions);
  
  // Cache successful GET responses
  if ((options.method === 'GET' || !options.method) && response.ok) {
    const data = await response.clone().json().catch(() => null);
    if (data) {
      apiCache.set(cacheKey, data);
    }
  }
  
  return response;
};

================================================================================
File: fileMock.js
Path: .\front-end\__mocks__\fileMock.js
Size: 34
Modified: 2025-04-17T01:19:11.135049
Created: 2025-04-02T01:04:18.492098
Hash: 9511e7bc24a9e0589f73af6ec1dd8b8fb1f6fb388decfdcb80a827860181226b
Lines: 1
================================================================================
module.exports = 'test-file-stub';

================================================================================
File: config.js
Path: .\old-_archive_files\front-end\src\config.js
Size: 1393
Modified: 2025-04-25T13:07:15.296911
Created: 2025-04-25T13:07:15.296911
Hash: 540aa1b8a786d3b1020026f4d975240ff3fefeece906944fa0fc2b3352098900
Lines: 62
================================================================================
// Configuration settings for the application

// API Configuration
const API_CONFIG = {
  // Base URL for API requests
  BASE_URL: process.env.REACT_APP_API_BASE_URL || 'http://localhost:5000',
  
  // API endpoints
  ENDPOINTS: {
    LOGIN: '/api/save-config',
    MESSAGE: '/api/message',
    CONVERSATIONS: '/conversations',
    BUSINESSES: '/businesses',
    STAGES: '/stages',
    TEMPLATES: '/api/templates',
    DEBUG: '/debug'
  },
  
  // Default values
  DEFAULTS: {
    BUSINESS_ID: '1c8cde77-0306-42dd-a0b6-c366a07651ad',
    API_KEY: 'default_api_key',
    USER_ID: '00000000-0000-0000-0000-000000000000'
  }
};

// Log API configuration for debugging
console.log('API Configuration:', {
  baseUrl: API_CONFIG.BASE_URL,
  endpoints: API_CONFIG.ENDPOINTS
});

// Authentication settings
const AUTH_CONFIG = {
  // Cookie names
  COOKIES: {
    BUSINESS_API_KEY: 'businessApiKey'
  },
  
  // Local storage keys
  STORAGE_KEYS: {
    USER_ID: 'userId',
    BUSINESS_ID: 'businessId',
    BUSINESS_API_KEY: 'businessApiKey'
  }
};

// UI Configuration
const UI_CONFIG = {
  // Snackbar settings
  SNACKBAR: {
    AUTO_HIDE_DURATION: 6000,
    POSITION: { vertical: 'top', horizontal: 'center' }
  },
  
  // Debug panel settings
  DEBUG_PANEL: {
    ID: 'debugPanel'
  }
};

export { API_CONFIG, AUTH_CONFIG, UI_CONFIG };

================================================================================
File: StageManager.js
Path: .\old-_archive_files\front-end\src\components\StageManager.js
Size: 29928
Modified: 2025-04-25T13:07:16.544485
Created: 2025-04-25T13:07:16.544485
Hash: 235d0627ba8a4f84fd3958d3e23552a8a832e90c39cd1464c1ffde94c89aa46b
Lines: 861
================================================================================
import React, { useState, useEffect, useCallback } from 'react';
import { useParams, useNavigate, useLocation } from 'react-router-dom';
import {
  Container,
  Typography,
  Paper,
  Button,
  Dialog,
  DialogTitle,
  DialogContent,
  DialogActions,
  TextField,
  CircularProgress,
  Grid,
  Box,
  IconButton,
  Divider,
  Alert,
  Snackbar,
  List,
  ListItem,
  ListItemText,
  ListItemSecondaryAction,
  Tooltip,
  FormControl,
  InputLabel,
  MenuItem,
  Select,
  Card,
  CardContent,
  FormHelperText,
  ListSubheader
} from '@mui/material';
import AddIcon from '@mui/icons-material/Add';
import DeleteIcon from '@mui/icons-material/Delete';
import ArrowUpwardIcon from '@mui/icons-material/ArrowUpward';
import ArrowDownwardIcon from '@mui/icons-material/ArrowDownward';
import ArrowBackIcon from '@mui/icons-material/ArrowBack';
import SaveIcon from '@mui/icons-material/Save';
import DescriptionIcon from '@mui/icons-material/Description';
import VisibilityIcon from '@mui/icons-material/Visibility';
import StarIcon from '@mui/icons-material/Star';
import { fetchStages, createStage, updateStage, deleteStage } from '../services/stageService';
import { getAuthHeaders } from '../services/authService';
import useAgents from '../hooks/useAgents';

const StageManager = () => {
  // Get parameters from URL and location
  const { businessId: paramBusinessId, agentId: paramAgentId } = useParams();
  const location = useLocation();
  const navigate = useNavigate();
  
  // Extract query parameters if not using path params
  const queryParams = new URLSearchParams(location.search);
  const queryBusinessId = queryParams.get('business_id');
  const queryAgentId = queryParams.get('agent_id');
  
  // Use params or query params, then fallback to localStorage
  const businessId = paramBusinessId || queryBusinessId || localStorage.getItem('businessId');
  const agentId = paramAgentId || queryAgentId || localStorage.getItem('agentId');
  
  // States for stages and templates
  const [stages, setStages] = useState([]);
  const [selectedStage, setSelectedStage] = useState(null);
  const [isLoading, setIsLoading] = useState(true);
  const [error, setError] = useState('');
  const [success, setSuccess] = useState('');
  const [openDialog, setOpenDialog] = useState(false);
  const [openDeleteDialog, setOpenDeleteDialog] = useState(false);
  const [stageToDelete, setStageToDelete] = useState(null);
  const [newStageName, setNewStageName] = useState('');
  const [stageDescription, setStageDescription] = useState('');
  const [stageType, setStageType] = useState('conversation');
  const [availableTemplates, setAvailableTemplates] = useState({
    stage_selection: [],
    data_extraction: [],
    response_generation: []
  });
  const [selectedTemplates, setSelectedTemplates] = useState({
    stage_selection: '',
    data_extraction: '',
    response_generation: ''
  });
  const [defaultTemplates, setDefaultTemplates] = useState({
    stage_selection: '',
    data_extraction: '',
    response_generation: ''
  });
  const [snackbar, setSnackbar] = useState({
    open: false,
    message: '',
    severity: 'success'
  });
  const [agentName, setAgentName] = useState('');
  const [isSubmitting, setIsSubmitting] = useState(false);
  const { agents, isLoading: agentsLoading, error: agentsError, refreshAgents } = useAgents();
  const [selectedAgentId, setSelectedAgentId] = useState('');

  // Store current values in localStorage for persistence
  useEffect(() => {
    if (businessId) {
      localStorage.setItem('businessId', businessId);
    }
    if (agentId) {
      localStorage.setItem('agentId', agentId);
    }
  }, [businessId, agentId]);

  // Logging for debugging
  useEffect(() => {
    console.log("StageManager - Current params:", { 
      paramBusinessId, 
      paramAgentId,
      queryBusinessId,
      queryAgentId,
      resolvedBusinessId: businessId,
      resolvedAgentId: agentId
    });
  }, [
    paramBusinessId, 
    paramAgentId, 
    queryBusinessId, 
    queryAgentId, 
    businessId, 
    agentId
  ]);

  // Fetch templates for this business
  const fetchTemplates = async () => {
    try {
      const headers = getAuthHeaders();
      
      // Add business_id to the URL as a query parameter
      const response = await fetch(`/api/templates/?business_id=${businessId}`, { 
        headers,
        credentials: 'include'
      });
      
      if (!response.ok) {
        console.error('Template fetch error:', response.status, response.statusText);
        throw new Error('Failed to fetch templates');
      }
      
      const templates = await response.json();
      console.log('Fetched templates:', templates);
      
      // Initialize template categories
      const templatesByType = {
        stage_selection: [],
        data_extraction: [],
        response_generation: []
      };

      // Process and categorize templates
      templates.forEach(template => {
        // Add isDefault flag to identify default templates
        const normalizedTemplate = {
          ...template,
          isDefault: template.template_type.startsWith('default_')
        };

        // Map template types to categories
        const typeMapping = {
          'stage_selection': 'stage_selection',
          'default_stage_selection': 'stage_selection',
          'data_extraction': 'data_extraction',
          'default_data_extraction': 'data_extraction',
          'response_generation': 'response_generation',
          'default_response_generation': 'response_generation'
        };

        const category = typeMapping[template.template_type];
        if (category) {
          templatesByType[category].push(normalizedTemplate);
        }
      });

      // Sort templates within each category
      Object.keys(templatesByType).forEach(category => {
        templatesByType[category].sort((a, b) => {
          // Sort by isDefault first (default templates first)
          if (a.isDefault !== b.isDefault) {
            return a.isDefault ? -1 : 1;
          }
          // Then sort by name
          return a.template_name.localeCompare(b.template_name);
        });
      });

      setAvailableTemplates(templatesByType);
      
      // Set default templates if available
      const defaultTemplates = {
        stage_selection: '',
        data_extraction: '',
        response_generation: ''
      };
      
      // Find default templates in each category
      Object.keys(templatesByType).forEach(category => {
        const defaultTemplate = templatesByType[category].find(t => t.isDefault);
        if (defaultTemplate) {
          defaultTemplates[category] = defaultTemplate.template_id;
        }
      });
      
      setDefaultTemplates(defaultTemplates);
      
      // If we're opening the dialog, pre-select default templates
      if (openDialog) {
        setSelectedTemplates(defaultTemplates);
      }
      
    } catch (error) {
      console.error('Error fetching templates:', error);
      setError('Failed to load templates. Please try again.');
    }
  };

  // Handle template selection change
  const handleTemplateChange = (event, templateType) => {
    const templateId = event.target.value;
    console.log(`Template changed for ${templateType}: ${templateId}`);
    
    setSelectedTemplates(prev => ({
      ...prev,
      [templateType]: templateId
    }));
  };

  // Fetch stages based on business ID and agent ID
  const fetchStagesData = useCallback(async () => {
    if (!businessId) {
      console.error("No business ID available for fetching stages");
      setIsLoading(false);
      return;
    }
    
    setIsLoading(true);
    try {
      console.log("Fetching stages for business:", businessId);
      const stagesData = await fetchStages(businessId);
      console.log("Fetched stages:", stagesData);
      setStages(stagesData);
    } catch (err) {
      console.error("Error fetching stages:", err);
      showSnackbar(err.message, 'error');
    } finally {
      setIsLoading(false);
    }
  }, [businessId]);

  // Fetch agent details
  const fetchAgentDetails = useCallback(async () => {
    if (!businessId || !agentId) {
      return;
    }

    try {
      const response = await fetch(`/agents/${agentId}?business_id=${businessId}`, {
        credentials: 'include'
      });
      
      if (!response.ok) {
        throw new Error('Failed to fetch agent details');
      }
      
      const agentData = await response.json();
      setAgentName(agentData.agent_name || `Agent ${agentId}`);
    } catch (err) {
      console.error("Error fetching agent details:", err);
      setAgentName(`Agent ${agentId}`); // Fallback
    }
  }, [businessId, agentId]);

  // Initial data fetch
  useEffect(() => {
    if (businessId) {
      const loadData = async () => {
        setIsLoading(true);
        setError('');
        
        try {
          // Load templates first
          await fetchTemplates();
          // Then load stages
          await fetchStagesData();
          
          // Set the selected agent ID if it exists in the stage data
          if (selectedStage && selectedStage.agent_id) {
            setSelectedAgentId(selectedStage.agent_id);
          } else {
            setSelectedAgentId('');
          }
        } catch (err) {
          console.error("Error in initial data load:", err);
          showSnackbar("Failed to load initial data: " + err.message, 'error');
        } finally {
          setIsLoading(false);
        }
      };
      
      loadData();
    }
  }, [businessId]);

  // Update useEffect to fetch agent details
  useEffect(() => {
    if (agentId) {
      fetchAgentDetails();
    }
  }, [agentId, fetchAgentDetails]);

  // Helper function for showing snackbar messages
  const showSnackbar = (message, severity = 'success') => {
    setSnackbar({
      open: true,
      message,
      severity
    });
  };

  const handleCloseSnackbar = () => {
    setSnackbar({
      ...snackbar,
      open: false
    });
  };

  const handleNavigateToHome = () => {
    navigate('/business');
  };

  const handleOpenNewStageDialog = () => {
    setNewStageName('');
    setStageDescription('');
    setStageType('conversation');
    
    // Set default templates if available
    setSelectedTemplates(defaultTemplates);
    
    setSelectedAgentId(agentId || ''); // Set the selected agent ID to the current agent ID
    setOpenDialog(true);
  };

  const handleCreateStage = async () => {
    if (!newStageName.trim()) {
      setError('Stage name is required');
      return;
    }
    
    setIsSubmitting(true);
    setError('');
    
    try {
      const stageData = {
        business_id: businessId,
        agent_id: selectedAgentId, // Include the selected agent ID
        stage_name: newStageName.trim(),
        stage_description: stageDescription.trim(),
        stage_type: stageType,
        stage_selection_template_id: selectedTemplates.stage_selection || null,
        data_extraction_template_id: selectedTemplates.data_extraction || null,
        response_generation_template_id: selectedTemplates.response_generation || null
      };
      
      console.log('Creating stage with data:', stageData);

      // Create the stage
      const response = await fetch('/stages', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'Accept': 'application/json',
          'Authorization': `Bearer ${localStorage.getItem('businessApiKey')}`
        },
        credentials: 'include',
        body: JSON.stringify(stageData)
      });

      if (!response.ok) {
        const errorData = await response.json();
        throw new Error(errorData.error || 'Failed to create stage');
      }

      const result = await response.json();
      console.log('Stage created successfully:', result);
      
      showSnackbar('Stage created successfully', 'success');
      
      // Reset form
      setNewStageName('');
      
      // Refresh stages
      fetchStagesData();
      
      // Close dialog
      setOpenDialog(false);
    } catch (error) {
      console.error('Error creating stage:', error);
      showSnackbar(error.message, 'error');
    } finally {
      setIsSubmitting(false);
    }
  };

  const navigateToStageView = (stageId) => {
    // Construct the URL with query parameters
    let url = `/stages/${stageId}?business_id=${businessId}`;
    if (agentId) {
      url += `&agent_id=${agentId}`;
    }
    navigate(url);
  };

  const handleDeleteStage = async () => {
    if (!stageToDelete || !businessId) return;

    try {
      await deleteStage(stageToDelete.stage_id, businessId);
      await fetchStagesData();
      setOpenDeleteDialog(false);
      showSnackbar('Stage deleted successfully', 'success');
    } catch (err) {
      console.error("Error deleting stage:", err);
      showSnackbar(err.message, 'error');
    }
  };

  const handleMoveStage = async (stageId, direction) => {
    try {
      const currentIndex = stages.findIndex(s => s.stage_id === stageId);
      if (currentIndex === -1) return;
      
      // If trying to move first item up or last item down, do nothing
      if ((currentIndex === 0 && direction === 'up') || 
          (currentIndex === stages.length - 1 && direction === 'down')) {
        return;
      }
      
      const targetIndex = direction === 'up' ? currentIndex - 1 : currentIndex + 1;
      
      // Swap the order values in the stage_config
      const updatedStages = [...stages];
      const currentStage = { ...updatedStages[currentIndex] };
      const targetStage = { ...updatedStages[targetIndex] };
      
      // Update stage_config.order values
      currentStage.stage_config = { ...currentStage.stage_config, order: targetIndex + 1 };
      targetStage.stage_config = { ...targetStage.stage_config, order: currentIndex + 1 };
      
      // Update both stages in the database
      const currentUpdate = fetch(`/stages/${currentStage.stage_id}`, {
        method: 'PUT',
        headers: {
          'Content-Type': 'application/json',
        },
        credentials: 'include',
        body: JSON.stringify(currentStage),
      });
      
      const targetUpdate = fetch(`/stages/${targetStage.stage_id}`, {
        method: 'PUT',
        headers: {
          'Content-Type': 'application/json',
        },
        credentials: 'include',
        body: JSON.stringify(targetStage),
      });
      
      await Promise.all([currentUpdate, targetUpdate]);
      
      // Refresh stages
      await fetchStagesData();
      showSnackbar('Stage order updated', 'success');
    } catch (err) {
      showSnackbar(err.message, 'error');
    }
  };

  // Add a handler for agent selection
  const handleAgentChange = (event) => {
    setSelectedAgentId(event.target.value);
  };

  return (
    <Container maxWidth="lg" sx={{ mt: 4, mb: 4 }}>
      <Paper sx={{ p: 3, mb: 4 }}>
        <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>
          <IconButton onClick={handleNavigateToHome} sx={{ mr: 1 }}>
            <ArrowBackIcon />
          </IconButton>
          <Typography variant="h5" component="h1" gutterBottom sx={{ flexGrow: 1 }}>
            Stage Manager
            {businessId && <Typography variant="subtitle1" component="span" color="text.secondary">
              {` - Business ID: ${businessId}`}
              {agentId && ` - Agent: ${agentName || agentId}`}
            </Typography>}
          </Typography>
          <Button
            variant="contained"
            color="primary"
            startIcon={<AddIcon />}
            onClick={handleOpenNewStageDialog}
            sx={{ mr: 1 }}
          >
            Create Stage
          </Button>
          <Button
            variant="outlined"
            color="secondary"
            startIcon={<DescriptionIcon />}
            onClick={() => navigate('/templates')}
          >
            Manage Templates
          </Button>
        </Box>
        
        <Divider sx={{ mb: 3 }} />
        
        {error && (
          <Alert severity="error" sx={{ mb: 2 }} onClose={() => setError('')}>
            {error}
          </Alert>
        )}
        
        {success && (
          <Alert severity="success" sx={{ mb: 2 }} onClose={() => setSuccess('')}>
            {success}
          </Alert>
        )}
        
        {isLoading ? (
          <Box sx={{ display: 'flex', justifyContent: 'center', p: 4 }}>
            <CircularProgress />
          </Box>
        ) : (
          <>
            {stages.length === 0 ? (
              <Alert severity="info">
                No stages found. Create your first stage to get started.
              </Alert>
            ) : (
              <List sx={{ bgcolor: 'background.paper' }}>
                {[...stages].sort((a, b) => 
                  (a.stage_config?.order || Infinity) - (b.stage_config?.order || Infinity)
                ).map((stage) => (
                  <ListItem 
                    key={stage.stage_id}
                    sx={{ 
                      mb: 1,
                      bgcolor: 'background.paper'
                    }}
                  >
                    <ListItemText
                      primary={stage.stage_name}
                      secondary={
                        <>
                          <Typography component="span" variant="body2" color="text.primary">
                            {stage.stage_description || 'No description'}
                          </Typography>
                          {stage.stage_config && stage.stage_config.order && 
                            ` • Order: ${stage.stage_config.order}`}
                        </>
                      }
                    />
                    <ListItemSecondaryAction>
                      <Tooltip title="Move Up">
                        <IconButton 
                          edge="end" 
                          aria-label="move-up"
                          onClick={(e) => {
                            e.stopPropagation();
                            handleMoveStage(stage.stage_id, 'up');
                          }}
                          disabled={stages.indexOf(stage) === 0}
                        >
                          <ArrowUpwardIcon />
                        </IconButton>
                      </Tooltip>
                      <Tooltip title="Move Down">
                        <IconButton 
                          edge="end" 
                          aria-label="move-down"
                          onClick={(e) => {
                            e.stopPropagation();
                            handleMoveStage(stage.stage_id, 'down');
                          }}
                          disabled={stages.indexOf(stage) === stages.length - 1}
                        >
                          <ArrowDownwardIcon />
                        </IconButton>
                      </Tooltip>
                      <Tooltip title="View Stage">
                        <IconButton 
                          edge="end" 
                          aria-label="view"
                          onClick={(e) => {
                            e.stopPropagation();
                            navigateToStageView(stage.stage_id);
                          }}
                        >
                          <VisibilityIcon />
                        </IconButton>
                      </Tooltip>
                      <Tooltip title="Delete Stage">
                        <IconButton 
                          edge="end" 
                          aria-label="delete"
                          onClick={(e) => {
                            e.stopPropagation();
                            setStageToDelete(stage);
                            setOpenDeleteDialog(true);
                          }}
                        >
                          <DeleteIcon />
                        </IconButton>
                      </Tooltip>
                    </ListItemSecondaryAction>
                  </ListItem>
                ))}
              </List>
            )}
          </>
        )}
      </Paper>
      
      {/* Create Stage Dialog */}
      <Dialog 
        open={openDialog} 
        onClose={() => !isSubmitting && setOpenDialog(false)}
        maxWidth="md"
        fullWidth
      >
        <DialogTitle>
          {selectedStage ? 'Edit Stage' : 'Create New Stage'}
        </DialogTitle>
        <DialogContent>
          <Grid container spacing={2}>
            {/* Add console logs to help debug */}
            {console.log("Dialog rendering with state:", {
              selectedTemplates,
              availableTemplates,
              defaultTemplates,
              templatesInfo: {
                stageSelectionCount: availableTemplates.stage_selection.length,
                dataExtractionCount: availableTemplates.data_extraction.length,
                responseGenerationCount: availableTemplates.response_generation.length,
              }
            })}
            
            {/* Stage Name */}
            <Grid item xs={12}>
              <TextField
                fullWidth
                label="Stage Name"
                value={newStageName}
                onChange={(e) => setNewStageName(e.target.value)}
                required
              />
            </Grid>
            
            {/* Stage Description */}
            <Grid item xs={12}>
              <TextField
                fullWidth
                multiline
                rows={2}
                label="Stage Description"
                value={stageDescription}
                onChange={(e) => setStageDescription(e.target.value)}
              />
            </Grid>
            
            {/* Template Selection Dropdown - Stage Selection */}
            <Grid item xs={12}>
              <FormControl fullWidth>
                <InputLabel>Stage Selection Template</InputLabel>
                <Select
                  fullWidth
                  value={selectedTemplates.stage_selection}
                  onChange={(e) => handleTemplateChange(e, 'stage_selection')}
                >
                  <MenuItem value="">
                    <em>None</em>
                  </MenuItem>
                  {availableTemplates.stage_selection.map((template) => (
                    <MenuItem 
                      key={template.template_id} 
                      value={template.template_id}
                      sx={template.isDefault ? { 
                        backgroundColor: 'rgba(245, 0, 87, 0.04)',
                        '&:hover': {
                          backgroundColor: 'rgba(245, 0, 87, 0.08)'
                        }
                      } : {}}
                    >
                      {template.isDefault ? (
                        <Box sx={{ display: 'flex', alignItems: 'center' }}>
                          <StarIcon sx={{ mr: 1, color: 'secondary.main', fontSize: '1rem' }} />
                          {template.template_name}
                        </Box>
                      ) : template.template_name}
                    </MenuItem>
                  ))}
                </Select>
                <FormHelperText>Template for determining if this stage should handle the message</FormHelperText>
              </FormControl>
            </Grid>
            
            {/* Template Selection Dropdown - Data Extraction */}
            <Grid item xs={12}>
              <FormControl fullWidth>
                <InputLabel>Data Extraction Template</InputLabel>
                <Select
                  fullWidth
                  value={selectedTemplates.data_extraction}
                  onChange={(e) => handleTemplateChange(e, 'data_extraction')}
                >
                  <MenuItem value="">
                    <em>None</em>
                  </MenuItem>
                  {availableTemplates.data_extraction.map((template) => (
                    <MenuItem 
                      key={template.template_id} 
                      value={template.template_id}
                      sx={template.isDefault ? { 
                        backgroundColor: 'rgba(245, 0, 87, 0.04)',
                        '&:hover': {
                          backgroundColor: 'rgba(245, 0, 87, 0.08)'
                        }
                      } : {}}
                    >
                      {template.isDefault ? (
                        <Box sx={{ display: 'flex', alignItems: 'center' }}>
                          <StarIcon sx={{ mr: 1, color: 'secondary.main', fontSize: '1rem' }} />
                          {template.template_name}
                        </Box>
                      ) : template.template_name}
                    </MenuItem>
                  ))}
                </Select>
                <FormHelperText>Template for extracting data from the message</FormHelperText>
              </FormControl>
            </Grid>
            
            {/* Template Selection Dropdown - Response Generation */}
            <Grid item xs={12}>
              <FormControl fullWidth>
                <InputLabel>Response Generation Template</InputLabel>
                <Select
                  fullWidth
                  value={selectedTemplates.response_generation}
                  onChange={(e) => handleTemplateChange(e, 'response_generation')}
                >
                  <MenuItem value="">
                    <em>None</em>
                  </MenuItem>
                  {availableTemplates.response_generation.map((template) => (
                    <MenuItem 
                      key={template.template_id} 
                      value={template.template_id}
                      sx={template.isDefault ? { 
                        backgroundColor: 'rgba(245, 0, 87, 0.04)',
                        '&:hover': {
                          backgroundColor: 'rgba(245, 0, 87, 0.08)'
                        }
                      } : {}}
                    >
                      {template.isDefault ? (
                        <Box sx={{ display: 'flex', alignItems: 'center' }}>
                          <StarIcon sx={{ mr: 1, color: 'secondary.main', fontSize: '1rem' }} />
                          {template.template_name}
                        </Box>
                      ) : template.template_name}
                    </MenuItem>
                  ))}
                </Select>
                <FormHelperText>Template for generating responses</FormHelperText>
              </FormControl>
            </Grid>
            
            {/* Add Agent Selection Dropdown */}
            <FormControl fullWidth margin="normal">
              <InputLabel id="agent-select-label">Agent</InputLabel>
              <Select
                labelId="agent-select-label"
                id="agent-select"
                value={selectedAgentId}
                label="Agent"
                onChange={handleAgentChange}
                disabled={isSubmitting}
              >
                <MenuItem value="">
                  <em>None</em>
                </MenuItem>
                {agents.map((agent) => (
                  <MenuItem key={agent.agent_id} value={agent.agent_id}>
                    {agent.agent_name}
                  </MenuItem>
                ))}
              </Select>
              <FormHelperText>
                Select an agent to associate with this stage
              </FormHelperText>
            </FormControl>
          </Grid>
        </DialogContent>
        <DialogActions>
          <Button onClick={() => !isSubmitting && setOpenDialog(false)}>Cancel</Button>
          <Button 
            onClick={handleCreateStage} 
            variant="contained" 
            color="primary"
            disabled={!newStageName.trim()}
            startIcon={<SaveIcon />}
          >
            Create & Save
          </Button>
        </DialogActions>
      </Dialog>

      {/* Delete Confirmation Dialog */}
      <Dialog
        open={openDeleteDialog}
        onClose={() => setOpenDeleteDialog(false)}
      >
        <DialogTitle>Confirm Delete</DialogTitle>
        <DialogContent>
          <Typography>
            Are you sure you want to delete the stage "{stageToDelete?.stage_name}"?
            This action cannot be undone.
          </Typography>
        </DialogContent>
        <DialogActions>
          <Button onClick={() => setOpenDeleteDialog(false)}>Cancel</Button>
          <Button 
            onClick={handleDeleteStage} 
            variant="contained" 
            color="error"
          >
            Delete
          </Button>
        </DialogActions>
      </Dialog>

      {/* Snackbar for notifications */}
      <Snackbar
        open={snackbar.open}
        autoHideDuration={6000}
        onClose={handleCloseSnackbar}
      >
        <Alert severity={snackbar.severity} onClose={handleCloseSnackbar}>
          {snackbar.message}
        </Alert>
      </Snackbar>
    </Container>
  );
};

export default StageManager;

================================================================================
File: StageView.jsx
Path: .\old-_archive_files\front-end\src\components\StageView.jsx
Size: 19315
Modified: 2025-04-25T13:07:16.653877
Created: 2025-04-25T13:07:16.653877
Hash: ff80b2252064d9f3dc536ea3a89aa2c52ba9182bbb9a9b5fbd4e812dfc15ca41
Lines: 472
================================================================================
import React, { useState, useEffect } from 'react';
import { useParams, useNavigate } from 'react-router-dom';
import {
    Box,
    Paper,
    Typography,
    Divider,
    CircularProgress,
    Alert,
    Grid,
    Button,
    Dialog,
    DialogTitle,
    DialogContent,
    DialogActions,
    TextField,
    FormControl,
    InputLabel,
    Select,
    MenuItem
} from '@mui/material';
import { API_CONFIG } from '../config';
import EditIcon from '@mui/icons-material/Edit';
import useAgents from '../hooks/useAgents';

const StageView = () => {
    const { stageId } = useParams();
    const navigate = useNavigate();
    const [loading, setLoading] = useState(true);
    const [error, setError] = useState(null);
    const [stageData, setStageData] = useState(null);
    const [editDialogOpen, setEditDialogOpen] = useState(false);
    const [newStageName, setNewStageName] = useState('');
    const [newStageDescription, setNewStageDescription] = useState('');
    const [editLoading, setEditLoading] = useState(false);
    const [editError, setEditError] = useState(null);
    const [editType, setEditType] = useState(''); // 'name', 'description', or 'agent'
    const [selectedAgentId, setSelectedAgentId] = useState('');
    const [agents, setAgents] = useState([]);
    const [agentsLoading, setAgentsLoading] = useState(false);
    const [agentsError, setAgentsError] = useState(null);

    // Fetch agents
    useEffect(() => {
        const fetchAgents = async () => {
            setAgentsLoading(true);
            setAgentsError(null);
            
            try {
                const businessId = localStorage.getItem('businessId');
                const businessApiKey = localStorage.getItem('businessApiKey');

                if (!businessId || !businessApiKey) {
                    setAgentsError('Authentication required. Please log in.');
                    setAgentsLoading(false);
                    return;
                }

                const response = await fetch(`${API_CONFIG.BASE_URL}${API_CONFIG.ENDPOINTS.AGENTS}?business_id=${businessId}`, {
                    headers: {
                        'Accept': 'application/json',
                        'Authorization': `Bearer ${businessApiKey}`
                    }
                });

                if (!response.ok) {
                    const errorData = await response.json().catch(() => ({}));
                    throw new Error(errorData.message || `HTTP error ${response.status}`);
                }

                const data = await response.json();
                setAgents(data);
            } catch (err) {
                console.error('Error fetching agents:', err);
                setAgentsError(err.message);
            } finally {
                setAgentsLoading(false);
            }
        };

        fetchAgents();
    }, []);

    useEffect(() => {
        const fetchStageData = async () => {
            if (!stageId) {
                setLoading(false);
                return;
            }

            try {
                const businessId = localStorage.getItem('businessId');
                const businessApiKey = localStorage.getItem('businessApiKey');

                if (!businessId || !businessApiKey) {
                    setError('Authentication required. Please log in.');
                    setLoading(false);
                    return;
                }

                const response = await fetch(`${API_CONFIG.BASE_URL}${API_CONFIG.ENDPOINTS.STAGES}/${stageId}?business_id=${businessId}`, {
                    headers: {
                        'Accept': 'application/json',
                        'Authorization': `Bearer ${businessApiKey}`
                    }
                });

                if (!response.ok) {
                    const errorData = await response.json().catch(() => ({}));
                    throw new Error(errorData.message || `HTTP error ${response.status}`);
                }

                const data = await response.json();
                console.log('Stage data:', data);
                setStageData(data);
                setNewStageName(data.stage_name);
                setNewStageDescription(data.stage_description || '');
                setSelectedAgentId(data.agent_id || '');
            } catch (err) {
                console.error('Error fetching stage:', err);
                setError(err.message);
            } finally {
                setLoading(false);
            }
        };

        fetchStageData();
    }, [stageId]);

    const handleEditClick = (type) => {
        setEditType(type);
        setEditDialogOpen(true);
    };

    const handleEditClose = () => {
        setEditDialogOpen(false);
        setEditError(null);
    };

    const handleSaveEdit = async () => {
        if (editType === 'name' && !newStageName.trim()) {
            setEditError('Stage name cannot be empty');
            return;
        }

        if (editType === 'description' && !newStageDescription.trim()) {
            setEditError('Stage description cannot be empty');
            return;
        }

        setEditLoading(true);
        setEditError(null);

        try {
            const businessId = localStorage.getItem('businessId')?.trim();
            const businessApiKey = localStorage.getItem('businessApiKey');

            const response = await fetch(`${API_CONFIG.BASE_URL}${API_CONFIG.ENDPOINTS.STAGES}/${stageId}`, {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json',
                    'Accept': 'application/json',
                    'Authorization': `Bearer ${businessApiKey}`
                },
                body: JSON.stringify({
                    business_id: businessId,
                    stage_name: editType === 'name' ? newStageName.trim() : stageData.stage_name,
                    stage_description: editType === 'description' ? newStageDescription.trim() : stageData.stage_description,
                    stage_type: stageData.stage_type,
                    stage_selection_template_id: stageData.stage_selection_template_id,
                    data_extraction_template_id: stageData.data_extraction_template_id,
                    response_generation_template_id: stageData.response_generation_template_id,
                    agent_id: editType === 'agent' ? selectedAgentId : stageData.agent_id
                })
            });

            if (!response.ok) {
                const errorData = await response.json().catch(() => ({}));
                throw new Error(errorData.message || `HTTP error ${response.status}`);
            }

            // Fetch the updated stage data
            const updatedResponse = await fetch(`${API_CONFIG.BASE_URL}${API_CONFIG.ENDPOINTS.STAGES}/${stageId}?business_id=${businessId}`, {
                headers: {
                    'Accept': 'application/json',
                    'Authorization': `Bearer ${businessApiKey}`
                }
            });

            if (!updatedResponse.ok) {
                throw new Error('Failed to fetch updated stage data');
            }

            const updatedData = await updatedResponse.json();
            setStageData(updatedData);
            setEditDialogOpen(false);
        } catch (err) {
            console.error('Error updating stage:', err);
            setEditError(err.message);
        } finally {
            setEditLoading(false);
        }
    };

    const handleAgentChange = (event) => {
        setSelectedAgentId(event.target.value);
    };

    const TemplateField = ({ label, templateId }) => (
        <Box sx={{ display: 'flex', alignItems: 'center', mb: 1 }}>
            <Typography variant="body1" component="span">
                <strong>{label}:</strong> {templateId || 'Not set'}
            </Typography>
        </Box>
    );

    if (loading) {
        return (
            <Box display="flex" justifyContent="center" p={3}>
                <CircularProgress />
            </Box>
        );
    }

    if (error) {
        return (
            <Alert severity="error" sx={{ mt: 2 }}>
                {error}
            </Alert>
        );
    }

    if (!stageData) {
        return (
            <Alert severity="info" sx={{ mt: 2 }}>
                No stage data available
            </Alert>
        );
    }

    return (
        <Paper sx={{ p: 3, mt: 2 }}>
            {/* Basic Information Section */}
            <Box display="flex" justifyContent="space-between" alignItems="center" mb={2}>
                <Typography variant="h6">
                    Basic Information
                </Typography>
            </Box>
            <Divider sx={{ mb: 2 }} />
            
            <Grid container spacing={2}>
                <Grid item xs={12}>
                    <Box display="flex" justifyContent="space-between" alignItems="center">
                        <Box>
                            <Typography variant="subtitle2" color="primary">Name</Typography>
                            <Typography>{stageData.stage_name}</Typography>
                        </Box>
                        <Button
                            startIcon={<EditIcon />}
                            variant="outlined"
                            onClick={() => handleEditClick('name')}
                        >
                            Edit Stage Name
                        </Button>
                    </Box>
                </Grid>

                <Grid item xs={12}>
                    <Box display="flex" justifyContent="space-between" alignItems="center">
                        <Box>
                            <Typography variant="subtitle2" color="primary">Description</Typography>
                            <Typography>{stageData.stage_description || 'No description'}</Typography>
                        </Box>
                        <Button
                            startIcon={<EditIcon />}
                            variant="outlined"
                            onClick={() => handleEditClick('description')}
                        >
                            Edit Description
                        </Button>
                    </Box>
                </Grid>

                <Grid item xs={12}>
                    <Box display="flex" justifyContent="space-between" alignItems="center">
                        <Box>
                            <Typography variant="subtitle2" color="primary">Agent</Typography>
                            <Typography>
                                {stageData.agent_id 
                                    ? agents.find(a => a.agent_id === stageData.agent_id)?.agent_name || 'Unknown Agent' 
                                    : 'No agent assigned'}
                            </Typography>
                        </Box>
                        <Button
                            startIcon={<EditIcon />}
                            variant="outlined"
                            onClick={() => handleEditClick('agent')}
                        >
                            Assign Agent
                        </Button>
                    </Box>
                </Grid>

                <Grid item xs={12}>
                    <Typography variant="subtitle2" color="primary">Type</Typography>
                    <Typography>{stageData.stage_type}</Typography>
                </Grid>

                <Grid item xs={12} sm={6}>
                    <Typography variant="subtitle2" color="primary">Stage ID</Typography>
                    <Typography component="code">{stageData.stage_id}</Typography>
                </Grid>

                <Grid item xs={12} sm={6}>
                    <Typography variant="subtitle2" color="primary">Business ID</Typography>
                    <Typography component="code">{stageData.business_id}</Typography>
                </Grid>

                {stageData.agent_id && (
                    <Grid item xs={12} sm={6}>
                        <Typography variant="subtitle2" color="primary">Agent ID</Typography>
                        <Typography component="code">{stageData.agent_id}</Typography>
                    </Grid>
                )}
            </Grid>

            {/* Template Configuration Section */}
            <Typography variant="h6" sx={{ mt: 4, mb: 2 }}>
                Template Configuration
            </Typography>
            <Divider sx={{ mb: 2 }} />
            
            <Grid container spacing={2}>
                <Grid item xs={12}>
                    <Typography variant="subtitle2" color="primary">Stage Selection Template</Typography>
                    <Box display="flex" justifyContent="space-between" alignItems="center">
                        <TemplateField 
                            label="Stage Selection Template"
                            templateId={stageData.stage_selection_template_id}
                        />
                        <Button
                            variant="outlined"
                            size="small"
                            onClick={() => navigate(`/template-editor/${stageData.stage_selection_template_id}`)}
                        >
                            Edit Template
                        </Button>
                    </Box>
                </Grid>

                <Grid item xs={12}>
                    <Typography variant="subtitle2" color="primary">Data Extraction Template</Typography>
                    <Box display="flex" justifyContent="space-between" alignItems="center">
                        <TemplateField 
                            label="Data Extraction Template"
                            templateId={stageData.data_extraction_template_id}
                        />
                        <Button
                            variant="outlined"
                            size="small"
                            onClick={() => navigate(`/template-editor/${stageData.data_extraction_template_id}`)}
                        >
                            Edit Template
                        </Button>
                    </Box>
                </Grid>

                <Grid item xs={12}>
                    <Typography variant="subtitle2" color="primary">Response Generation Template</Typography>
                    <Box display="flex" justifyContent="space-between" alignItems="center">
                        <TemplateField 
                            label="Response Generation Template"
                            templateId={stageData.response_generation_template_id}
                        />
                        <Button
                            variant="outlined"
                            size="small"
                            onClick={() => navigate(`/template-editor/${stageData.response_generation_template_id}`)}
                        >
                            Edit Template
                        </Button>
                    </Box>
                </Grid>
            </Grid>

            {/* Creation Date */}
            {stageData.created_at && (
                <Box mt={4}>
                    <Divider />
                    <Typography variant="caption" color="text.secondary" sx={{ mt: 2, display: 'block' }}>
                        Created: {new Date(stageData.created_at).toLocaleString()}
                    </Typography>
                </Box>
            )}

            {/* Edit Dialog */}
            <Dialog open={editDialogOpen} onClose={handleEditClose}>
                <DialogTitle>
                    {editType === 'name' ? 'Edit Stage Name' : 
                     editType === 'description' ? 'Edit Stage Description' : 
                     'Assign Agent'}
                </DialogTitle>
                <DialogContent>
                    {editType === 'name' ? (
                        <TextField
                            autoFocus
                            margin="dense"
                            label="Stage Name"
                            type="text"
                            fullWidth
                            value={newStageName}
                            onChange={(e) => setNewStageName(e.target.value)}
                            error={!!editError}
                            helperText={editError}
                        />
                    ) : editType === 'description' ? (
                        <TextField
                            autoFocus
                            margin="dense"
                            label="Stage Description"
                            type="text"
                            fullWidth
                            multiline
                            rows={4}
                            value={newStageDescription}
                            onChange={(e) => setNewStageDescription(e.target.value)}
                            error={!!editError}
                            helperText={editError}
                        />
                    ) : (
                        <FormControl fullWidth margin="dense">
                            <InputLabel id="agent-select-label">Select Agent</InputLabel>
                            <Select
                                labelId="agent-select-label"
                                id="agent-select"
                                value={selectedAgentId}
                                label="Select Agent"
                                onChange={handleAgentChange}
                            >
                                <MenuItem value="">
                                    <em>None</em>
                                </MenuItem>
                                {agents.map((agent) => (
                                    <MenuItem key={agent.agent_id} value={agent.agent_id}>
                                        {agent.agent_name}
                                    </MenuItem>
                                ))}
                            </Select>
                            {editError && (
                                <Typography color="error" variant="caption">
                                    {editError}
                                </Typography>
                            )}
                        </FormControl>
                    )}
                </DialogContent>
                <DialogActions>
                    <Button onClick={handleEditClose}>Cancel</Button>
                    <Button 
                        onClick={handleSaveEdit} 
                        variant="contained" 
                        disabled={editLoading}
                    >
                        {editLoading ? <CircularProgress size={24} /> : 'Save'}
                    </Button>
                </DialogActions>
            </Dialog>
        </Paper>
    );
}

export default StageView;

================================================================================
File: TemplateEditor.js
Path: .\old-_archive_files\front-end\src\components\TemplateEditor.js
Size: 26027
Modified: 2025-04-25T13:07:16.716361
Created: 2025-04-25T13:07:16.716361
Hash: 7e31bb764d0f52553b17105622e8de83feef4116b68028f6b1d9320cf2a8eddb
Lines: 756
================================================================================
import React, { useState, useEffect, useCallback } from 'react';
import { useParams, useNavigate, useLocation } from 'react-router-dom';
import {
  Box,
  Paper,
  Typography,
  TextField,
  Button,
  FormControl,
  InputLabel,
  MenuItem,
  Select,
  CircularProgress,
  Grid,
  Alert,
  Divider,
  Chip,
  IconButton,
  Tooltip,
  Dialog,
  DialogTitle,
  DialogContent,
  DialogActions,
  Snackbar,
  ListSubheader
} from '@mui/material';
import SaveIcon from '@mui/icons-material/Save';
import PreviewIcon from '@mui/icons-material/Preview';
import ArrowBackIcon from '@mui/icons-material/ArrowBack';
import HelpOutlineIcon from '@mui/icons-material/HelpOutline';
import VisibilityIcon from '@mui/icons-material/Visibility';
import { API_CONFIG } from '../config';
import { normalizeUUID } from '../hooks/useConfig';

const TemplateEditor = () => {
  const { templateId } = useParams();
  const navigate = useNavigate();
  const location = useLocation();
  
  // Parse query parameters
  const queryParams = new URLSearchParams(location.search);
  const queryBusinessId = queryParams.get('business_id');
  const queryAgentId = queryParams.get('agent_id');
  
  // Get stored business ID and API key from localStorage
  const storedBusinessId = localStorage.getItem('businessId');
  const storedApiKey = localStorage.getItem('businessApiKey');
  const storedAgentId = localStorage.getItem('agentId');
  
  // State for template data
  const [template, setTemplate] = useState({
    template_id: templateId === 'new' ? '' : templateId,
    template_name: '',
    content: '',
    system_prompt: '',
    template_type: 'stage_selection',
    variables: [],
    agent_id: ''
  });
  
  // State for UI
  const [businessId, setBusinessId] = useState(queryBusinessId || storedBusinessId || '');
  const [businessApiKey, setBusinessApiKey] = useState(storedApiKey || '');
  const [agentId, setAgentId] = useState(queryAgentId || storedAgentId || '');
  const [showBusinessIdInput, setShowBusinessIdInput] = useState(!businessId || !businessApiKey);
  const [showAgentIdInput, setShowAgentIdInput] = useState(!agentId);
  const [isLoading, setIsLoading] = useState(false);
  const [error, setError] = useState('');
  const [success, setSuccess] = useState('');
  const [previewData, setPreviewData] = useState(null);
  const [showPreview, setShowPreview] = useState(false);
  const [snackbar, setSnackbar] = useState({
    open: false,
    message: '',
    severity: 'success'
  });
  
  // Add state for template types array
  const templateTypes = [
    { value: 'stage_selection', label: 'Stage Selection', group: 'Regular' },
    { value: 'data_extraction', label: 'Data Extraction', group: 'Regular' },
    { value: 'response_generation', label: 'Response Generation', group: 'Regular' },
    { value: 'default_stage_selection', label: 'Default Stage Selection', group: 'Default' },
    { value: 'default_data_extraction', label: 'Default Data Extraction', group: 'Default' },
    { value: 'default_response_generation', label: 'Default Response Generation', group: 'Default' }
  ];
  
  // Extract variables from template content
  const extractVariables = (text) => {
    if (!text) return [];
    const matches = text.match(/\{([^}]+)\}/g) || [];
    return matches.map(match => match.slice(1, -1));
  };
  
  // Update variables whenever template content changes
  useEffect(() => {
    const variables = extractVariables(template.content);
    setTemplate(prev => ({
      ...prev,
      variables
    }));
  }, [template.content]);
  
  // Update template's agent_id when agentId changes
  useEffect(() => {
    if (agentId) {
      setTemplate(prev => ({
        ...prev,
        agent_id: agentId
      }));
    }
  }, [agentId]);
  
  // Fetch template data if editing an existing template
  useEffect(() => {
    const fetchTemplateData = async () => {
      // Skip fetching for new templates
      if (templateId === 'new') return;
      
      // Skip fetching if templateId is invalid/undefined
      if (!templateId || templateId === 'undefined') {
        console.error('Invalid template ID:', templateId);
        showSnackbar('Invalid template ID', 'error');
        // Redirect to template creation
        navigate('/template-editor/new');
        return;
      }
      
      if (!businessId) {
        showSnackbar('Business ID is required to fetch template', 'error');
        setShowBusinessIdInput(true);
        return;
      }
      
      if (!businessApiKey) {
        showSnackbar('Business API Key is required', 'error');
        setShowBusinessIdInput(true);
        return;
      }
      
      setIsLoading(true);
      try {
        console.log(`Fetching template with ID: ${templateId}`);
        const response = await fetch(`/templates/${templateId}?business_id=${businessId}`, {
          method: 'GET',
          headers: {
            'Content-Type': 'application/json',
            'Accept': 'application/json',
            'Authorization': `Bearer ${businessApiKey}`
          },
          credentials: 'include'
        });
        
        if (!response.ok) {
          const errorData = await response.json().catch(() => ({}));
          throw new Error(errorData.error || errorData.message || 'Failed to fetch template');
        }
        
        const data = await response.json();
        console.log('Fetched template:', data);
        
        // Don't modify the template_type, preserve its original value
        setTemplate({
          template_id: data.template_id,
          template_name: data.template_name || '',
          content: data.content || '',
          system_prompt: data.system_prompt || '',
          template_type: data.template_type || 'stage_selection',
          variables: extractVariables(data.content),
          agent_id: data.agent_id || ''
        });
      } catch (err) {
        console.error('Error fetching template:', err);
        showSnackbar(err.message, 'error');
        // Redirect to template list on error
        navigate('/templates');
      } finally {
        setIsLoading(false);
      }
    };
    
    fetchTemplateData();
  }, [templateId, businessId, businessApiKey, navigate]);
  
  // Validate credentials
  const validateCredentials = async () => {
    if (!businessId || !businessApiKey) {
      setSnackbar({
        open: true,
        message: 'Business ID and API Key are required',
        severity: 'error'
      });
      setShowBusinessIdInput(true);
      return false;
    }
    
    try {
      // Use the correct endpoint and method
      const response = await fetch(`/businesses/validate-credentials?business_id=${businessId}&api_key=${businessApiKey}`, {
        method: 'GET',
        headers: {
          'Accept': 'application/json',
          'Authorization': `Bearer ${businessApiKey}`
        },
        credentials: 'include'
      });
      
      if (!response.ok) {
        throw new Error('Invalid business ID or API key');
      }
      
      const data = await response.json();
      if (!data.valid) {
        throw new Error(data.message || 'Credential validation failed');
      }
      
      return true;
    } catch (err) {
      console.error('Credential validation error:', err);
      setSnackbar({
        open: true,
        message: 'Failed to validate credentials: ' + err.message,
        severity: 'error'
      });
      setShowBusinessIdInput(true);
      return false;
    }
  };
  
  // Save credentials
  const saveCredentials = async () => {
    if (!businessId || !businessApiKey) {
      showSnackbar('Please enter both Business ID and API Key', 'error');
      return;
    }
    
    const isValid = await validateCredentials();
    if (isValid) {
      // Save to both localStorage and cookies
      localStorage.setItem('businessId', businessId);
      localStorage.setItem('businessApiKey', businessApiKey);
      document.cookie = `businessId=${businessId}; path=/; max-age=86400`;
      document.cookie = `businessApiKey=${businessApiKey}; path=/; max-age=86400`;
      
      setShowBusinessIdInput(false);
      showSnackbar('Business credentials validated and saved', 'success');
    }
  };
  
  // Handle template preview
  const handlePreview = async () => {
    if (!template.content.trim()) {
      showSnackbar('Template content is empty', 'error');
      return;
    }
    
    setIsLoading(true);
    try {
      // Prepare preview request
      const previewRequest = {
        template_type: template.template_type,
        template_text: template.content,
        business_id: businessId,
        agent_id: agentId,
        context: {
          conversation_history: [
            { role: "user", content: "I'm interested in your products" },
            { role: "assistant", content: "I'd be happy to tell you about our products. What type are you interested in?" }
          ],
          extracted_data: {
            customer_name: "John Doe",
            product_interest: "shoes",
            budget: "$100"
          }
        }
      };
      
      let previewSuccess = false;
      let errorMessage = '';
      
      // Try multiple possible endpoints (for compatibility)
      const endpoints = [
        '/templates/preview',
        '/templates/render',
        '/render_template',
        '/api/templates/preview'
      ];
      
      let response = null;
      for (const endpoint of endpoints) {
        try {
          console.log(`Trying to preview template with endpoint: ${endpoint}`);
          
          response = await fetch(endpoint, {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
              'Accept': 'application/json',
              'Authorization': `Bearer ${businessApiKey}`
            },
            credentials: 'include',
            body: JSON.stringify(previewRequest),
          });
          
          if (response.ok) {
            const data = await response.json();
            console.log('Preview response:', data);
            setPreviewData(data);
            setShowPreview(true);
            previewSuccess = true;
            break;
          } else {
            const errData = await response.json().catch(() => ({}));
            errorMessage = errData.message || errData.error || `Failed with status ${response.status}`;
            console.warn(`Endpoint ${endpoint} failed: ${errorMessage}`);
          }
        } catch (endpointErr) {
          console.warn(`Endpoint ${endpoint} failed:`, endpointErr);
          errorMessage = endpointErr.message;
        }
      }
      
      // If no endpoint worked, use fallback preview
      if (!previewSuccess) {
        console.log('All endpoint attempts failed, using local preview');
        
        // Simple variable replacement for demonstration
        let previewText = template.content;
        
        // Replace variables with sample values
        template.variables.forEach(variable => {
          const sampleValue = `[Sample ${variable}]`;
          previewText = previewText.replace(new RegExp(`{${variable}}`, 'g'), sampleValue);
        });
        
        setPreviewData({ 
          rendered_text: previewText,
          message: "Using client-side preview (API endpoints not available)",
          is_fallback: true
        });
        setShowPreview(true);
        
        // Show notification
        showSnackbar(`Using fallback preview. Server error: ${errorMessage}`, 'warning');
      }
    } catch (err) {
      console.error('Error generating preview:', err);
      showSnackbar(`Failed to generate preview: ${err.message}`, 'error');
    } finally {
      setIsLoading(false);
    }
  };
  
  // Handle template save
  const handleSaveTemplate = async () => {
    if (!template.template_name || !template.content || !template.template_type) {
      showSnackbar('Template name, content, and type are required', 'error');
      return;
    }
    
    // Validate credentials if needed
    if (!businessId || !businessApiKey) {
      showSnackbar('Business ID and API Key are required', 'error');
      setShowBusinessIdInput(true);
      return;
    }
    
    setIsLoading(true);
    try {
      // Check if we're creating a new template or editing an existing one
      const isNewTemplate = templateId === 'new' || !template.template_id;
      
      // Use the API_CONFIG for consistent endpoints
      const endpoint = isNewTemplate 
        ? API_CONFIG.ENDPOINTS.TEMPLATES 
        : `${API_CONFIG.ENDPOINTS.TEMPLATES}/${template.template_id}`;
      
      const url = `${API_CONFIG.BASE_URL}${endpoint}`;
      
      console.log(`Saving template to URL: ${url}, method: ${isNewTemplate ? 'POST' : 'PUT'}`);
      
      const method = isNewTemplate ? 'POST' : 'PUT';
      
      // Prepare the request payload with the correct field names
      const payload = {
        template_name: template.template_name,
        content: template.content,
        system_prompt: template.system_prompt || '',
        template_type: template.template_type,
        business_id: normalizeUUID(businessId),
      };
      
      // Only include template_id for existing templates
      if (!isNewTemplate && template.template_id) {
        payload.template_id = template.template_id;
      }
      
      // Add agent_id if available
      if (agentId) {
        payload.agent_id = normalizeUUID(agentId);
      }
      
      console.log('Payload with normalized IDs:', payload);
      
      const response = await fetch(url, {
        method,
        headers: {
          'Content-Type': 'application/json',
          'Accept': 'application/json',
          'Authorization': `Bearer ${businessApiKey}`
        },
        credentials: 'include',
        body: JSON.stringify(payload)
      });
      
      if (!response.ok) {
        const errorData = await response.json().catch(() => ({}));
        throw new Error(errorData.error || errorData.message || `Failed to ${isNewTemplate ? 'create' : 'update'} template`);
      }
      
      const data = await response.json();
      showSnackbar(`Template ${isNewTemplate ? 'created' : 'updated'} successfully`, 'success');
      
      // If creating a new template, update the URL to edit mode
      if (isNewTemplate && data.template_id) {
        // Set a flag in localStorage to trigger a refresh on the templates list
        localStorage.setItem('template_updated', 'true');
        
        // Update the browser URL without navigating away
        window.history.replaceState(
          null, 
          '', 
          `/template-editor/${data.template_id}?business_id=${businessId}${agentId ? `&agent_id=${agentId}` : ''}`
        );
        
        // Update the template with the new ID
        setTemplate(prev => ({
          ...prev,
          template_id: data.template_id
        }));
        
        // Update the templateId state
        setTemplateId(data.template_id);
      }
    } catch (err) {
      console.error('Error saving template:', err);
      showSnackbar(err.message, 'error');
    } finally {
      setIsLoading(false);
    }
  };
  
  // Navigate back to templates list
  const handleCancel = () => {
    navigate('/templates');
  };
  
  // Handle template type change
  const handleTemplateTypeChange = (e) => {
    const newType = e.target.value;
    console.log('Template type changed to:', newType);
    setTemplate(prev => {
      const updated = { 
        ...prev, 
        template_type: newType
      };
      console.log('Updated template state:', updated);
      return updated;
    });
  };
  
  // Snackbar functions
  const showSnackbar = (message, severity = 'success') => {
    setSnackbar({
      open: true,
      message,
      severity
    });
  };
  
  const handleCloseSnackbar = () => {
    setSnackbar(prev => ({
      ...prev,
      open: false
    }));
  };
  
  return (
    <Paper sx={{ p: 3, mb: 3, maxWidth: 1200, mx: 'auto' }}>
      {/* Back button and title */}
      <Box sx={{ display: 'flex', alignItems: 'center', mb: 3 }}>
        <IconButton onClick={handleCancel} sx={{ mr: 1 }}>
          <ArrowBackIcon />
        </IconButton>
        <Typography variant="h5">
          {template.template_id && template.template_id !== 'new' ? 'Edit Template' : 'Create New Template'}
        </Typography>
        <Box sx={{ flexGrow: 1 }} />
        <Button
          variant="contained"
          color="primary"
          onClick={handleSaveTemplate}
          disabled={isLoading || !template.template_name.trim() || !template.content.trim()}
          startIcon={isLoading ? <CircularProgress size={24} /> : <SaveIcon />}
        >
          Save Template
        </Button>
      </Box>
      
      {/* Business ID input section */}
      {(showBusinessIdInput || !businessId || !businessApiKey) && (
        <Box sx={{ mb: 3, p: 2, border: '1px dashed', borderColor: 'warning.main', borderRadius: 1 }}>
          <Typography variant="subtitle1" color="warning.main" gutterBottom>
            Business Credentials Required
          </Typography>
          <Grid container spacing={2}>
            <Grid item xs={12} md={5}>
              <TextField
                fullWidth
                label="Business ID"
                value={businessId}
                onChange={(e) => setBusinessId(e.target.value)}
                placeholder="Enter your business ID"
                helperText="Required for saving templates"
                required
              />
            </Grid>
            <Grid item xs={12} md={5}>
              <TextField
                fullWidth
                label="Business API Key"
                value={businessApiKey}
                onChange={(e) => setBusinessApiKey(e.target.value)}
                placeholder="Enter your business API key"
                helperText="Required for authentication"
                type="password"
                required
              />
            </Grid>
            <Grid item xs={12} md={2}>
              <Button 
                variant="contained" 
                color="primary"
                onClick={saveCredentials}
                fullWidth
                sx={{ height: '56px' }}
              >
                Validate & Save
              </Button>
            </Grid>
          </Grid>
        </Box>
      )}
      
      {/* Agent ID input section */}
      {(showAgentIdInput || !agentId) && (
        <Box sx={{ mb: 3, p: 2, border: '1px dashed', borderColor: 'warning.main', borderRadius: 1 }}>
          <Typography variant="subtitle1" color="warning.main" gutterBottom>
            Agent ID Required
          </Typography>
          <Grid container spacing={2}>
            <Grid item xs={12} md={5}>
              <TextField
                fullWidth
                label="Agent ID"
                value={agentId}
                onChange={(e) => setAgentId(e.target.value)}
                placeholder="Enter your agent ID"
                helperText="Required for saving templates"
                required
              />
            </Grid>
          </Grid>
        </Box>
      )}
      
      {/* Template information section */}
      <Grid container spacing={3}>
        <Grid item xs={12} md={6}>
          <TextField
            fullWidth
            label="Template Name"
            value={template.template_name}
            onChange={(e) => setTemplate(prev => ({ ...prev, template_name: e.target.value }))}
            required
            error={!template.template_name.trim()}
            helperText={!template.template_name.trim() ? "Template name is required" : ""}
            sx={{ mb: 2 }}
          />
          
          <FormControl fullWidth sx={{ mb: 2 }}>
            <InputLabel id="template-type-label">Template Type</InputLabel>
            <Select
              labelId="template-type-label"
              value={template.template_type}
              label="Template Type"
              onChange={handleTemplateTypeChange}
            >
              <ListSubheader>Regular Templates</ListSubheader>
              {templateTypes
                .filter(type => type.group === 'Regular')
                .map((type) => (
                  <MenuItem key={type.value} value={type.value}>
                    {type.label}
                  </MenuItem>
                ))
              }
              <ListSubheader>Default Templates</ListSubheader>
              {templateTypes
                .filter(type => type.group === 'Default')
                .map((type) => (
                  <MenuItem key={type.value} value={type.value}>
                    {type.label}
                  </MenuItem>
                ))
              }
            </Select>
          </FormControl>
          
          <TextField
            fullWidth
            label="Template Description"
            value={template.template_description}
            onChange={(e) => setTemplate(prev => ({ ...prev, template_description: e.target.value }))}
            multiline
            rows={2}
            sx={{ mb: 2 }}
          />
          
          <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>
            <Typography variant="subtitle1" sx={{ mr: 2 }}>
              Detected Variables:
            </Typography>
            <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1 }}>
              {template.variables.length > 0 ? (
                template.variables.map((variable, index) => (
                  <Chip 
                    key={index} 
                    label={variable} 
                    color="primary" 
                    variant="outlined" 
                  />
                ))
              ) : (
                <Typography variant="body2" color="text.secondary">
                  No variables detected. Use {"{variable_name}"} syntax.
                </Typography>
              )}
            </Box>
          </Box>
          
          <Button
            variant="outlined"
            color="primary"
            onClick={handlePreview}
            disabled={!template.content.trim()}
            startIcon={<VisibilityIcon />}
            sx={{ mt: 2 }}
          >
            Preview Template
          </Button>
        </Grid>
        
        <Grid item xs={12} md={6}>
          <Typography variant="subtitle1" gutterBottom>
            Template Content
            <Tooltip title="Use {variable_name} syntax to create variables in your template">
              <IconButton size="small">
                <HelpOutlineIcon fontSize="small" />
              </IconButton>
            </Tooltip>
          </Typography>
          <TextField
            fullWidth
            multiline
            rows={10}
            value={template.content}
            onChange={(e) => setTemplate({ ...template, content: e.target.value })}
            placeholder="Enter your template content here with variables in {curly_braces}..."
            sx={{ 
              mb: 2, 
              fontFamily: 'monospace',
              '& .MuiInputBase-input': {
                fontFamily: 'monospace',
              }
            }}
          />
          
          <Grid item xs={12}>
            <TextField
              label="System Prompt (Optional)"
              value={template.system_prompt}
              onChange={(e) => setTemplate({ ...template, system_prompt: e.target.value })}
              fullWidth
              multiline
              rows={4}
              margin="normal"
              variant="outlined"
              placeholder="Enter optional system prompt for the model..."
            />
          </Grid>
        </Grid>
      </Grid>
      
      {/* Preview Dialog */}
      <Dialog 
        open={showPreview} 
        onClose={() => setShowPreview(false)}
        maxWidth="md"
        fullWidth
      >
        <DialogTitle>Template Preview</DialogTitle>
        <DialogContent>
          <Typography variant="subtitle1" gutterBottom>
            Template: {template.template_name}
          </Typography>
          <Typography variant="subtitle2" color="text.secondary" gutterBottom>
            Type: {template.template_type}
          </Typography>
          <Divider sx={{ my: 2 }} />
          <Box sx={{ 
            bgcolor: 'background.paper', 
            p: 2, 
            borderRadius: 1,
            border: '1px solid',
            borderColor: 'divider',
            maxHeight: '500px',
            overflow: 'auto',
            fontFamily: 'monospace',
            whiteSpace: 'pre-wrap',
            wordBreak: 'break-word'
          }}>
            {previewData?.rendered_text || previewData?.content || 'No preview data available'}
          </Box>
        </DialogContent>
        <DialogActions>
          <Button onClick={() => setShowPreview(false)}>Close</Button>
        </DialogActions>
      </Dialog>
      
      {/* Snackbar for notifications */}
      <Snackbar
        open={snackbar.open}
        autoHideDuration={6000}
        onClose={handleCloseSnackbar}
        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}
      >
        <Alert onClose={handleCloseSnackbar} severity={snackbar.severity} sx={{ width: '100%' }}>
          {snackbar.message}
        </Alert>
      </Snackbar>
    </Paper>
  );
};

export default TemplateEditor;

================================================================================
File: TemplateManagement.js
Path: .\old-_archive_files\front-end\src\components\TemplateManagement.js
Size: 43885
Modified: 2025-04-25T13:07:16.778836
Created: 2025-04-25T13:07:16.778836
Hash: 01540b4092654c09d9296bae6335fec85ed29fe76a4c74100d2904c60c01ddb4
Lines: 904
================================================================================
import React, { useState, useEffect, useCallback } from 'react';
import { useNavigate, useLocation } from 'react-router-dom';
import {
    TextField, Button, Typography, Card, CardContent, Box, TextareaAutosize,
    Select, MenuItem, InputLabel, FormControl, Grid, Paper, Divider, Tab, Tabs, Alert, List, ListItem, ListItemText, ListItemSecondaryAction, IconButton, Chip, Dialog, DialogTitle, DialogContent, DialogActions, CircularProgress, Snackbar, Container, Tooltip, ListSubheader
} from '@mui/material';
import DeleteIcon from '@mui/icons-material/Delete';
import EditIcon from '@mui/icons-material/Edit';
import ContentCopyIcon from '@mui/icons-material/ContentCopy';
import SaveIcon from '@mui/icons-material/Save';
import RefreshIcon from '@mui/icons-material/Refresh';
import ArrowBackIcon from '@mui/icons-material/ArrowBack';
import TemplateSection from './TemplateSection';
import AddIcon from '@mui/icons-material/Add';
import FilterListIcon from '@mui/icons-material/FilterList';
import StarIcon from '@mui/icons-material/Star';
import { normalizeUUID } from '../hooks/useConfig';
import { createTemplate, updateTemplate, deleteTemplate, fetchTemplates as fetchTemplatesService, duplicateTemplate } from '../services/templateService';

function TemplateManagement({ templateID, setTemplateID, availableVariable = [], setAvailableVariable, selectedVariable, setSelectedVariable, handleTemplateSelection, handleVariableSelection, addVariableToTemplate, templateName, setTemplateName, templateContent, setTemplateContent, templateSystemPrompt, setTemplateSystemPrompt, templateOutput, createTemplate, fetchTemplates, handleSnackbarOpen, handleSaveDefaultTemplate, apiKey, setTemplateOutput }) {
    const navigate = useNavigate();
    const location = useLocation();
    const [templates, setTemplates] = useState([]);
    const [selectedTemplate, setSelectedTemplate] = useState(null);
    const [templateType, setTemplateType] = useState('');
    const [errorMessage, setErrorMessage] = useState('');
    const [successMessage, setSuccessMessage] = useState('');
    const [activeTab, setActiveTab] = useState(0);
    const [isLoading, setIsLoading] = useState(false);
    const [editDialogOpen, setEditDialogOpen] = useState(false);
    const [editingTemplate, setEditingTemplate] = useState({
        template_id: '',
        template_name: '',
        content: '',
        system_prompt: '',
        template_type: '',
        variables: []
    });
    const [filterType, setFilterType] = useState('all');
    const [showBusinessIdInput, setShowBusinessIdInput] = useState(!apiKey || !templateID);
    const [businessId, setBusinessId] = useState(templateID || '');
    const [businessApiKey, setBusinessApiKey] = useState(apiKey || '');
    const [agentId, setAgentId] = useState('');
    const [filteredTemplates, setFilteredTemplates] = useState([]);
    const [snackbar, setSnackbar] = useState({
        open: false,
        message: '',
        severity: 'success'
    });
    const [showAgentIdInput, setShowAgentIdInput] = useState(!agentId);

    // Define template types array for dropdowns and filtering
    const templateTypes = [
        { value: 'stage_selection', label: 'Stage Selection', group: 'Regular' },
        { value: 'data_extraction', label: 'Data Extraction', group: 'Regular' },
        { value: 'response_generation', label: 'Response Generation', group: 'Regular' },
        { value: 'default_stage_selection', label: 'Default Stage Selection', group: 'Default' },
        { value: 'default_data_extraction', label: 'Default Data Extraction', group: 'Default' },
        { value: 'default_response_generation', label: 'Default Response Generation', group: 'Default' }
    ];

    // Parse query parameters if any
    const queryParams = new URLSearchParams(window.location.search);
    const queryBusinessId = queryParams.get('business_id');
    const queryAgentId = queryParams.get('agent_id');
    
    // Get stored credentials from localStorage
    const storedBusinessId = localStorage.getItem('businessId');
    const storedApiKey = localStorage.getItem('businessApiKey');
    const storedAgentId = localStorage.getItem('agentId');
    
    // Update state with query params and localStorage values
    useEffect(() => {
        // Update businessId if query param or localStorage has a value
        if (queryBusinessId || storedBusinessId) {
            setBusinessId(queryBusinessId || storedBusinessId);
        }
        
        // Update businessApiKey if localStorage has a value
        if (storedApiKey) {
            setBusinessApiKey(storedApiKey);
        }
        
        // Update agentId if query param or localStorage has a value
        if (queryAgentId || storedAgentId) {
            setAgentId(queryAgentId || storedAgentId);
        }
        
        // Update visibility of input fields
        setShowBusinessIdInput(!businessId || !businessApiKey);
        setShowAgentIdInput(!agentId);
    }, [queryBusinessId, storedBusinessId, storedApiKey, queryAgentId, storedAgentId]);
    
    // Initialize filteredTemplates when templates change
    useEffect(() => {
        setFilteredTemplates(templates);
    }, [templates]);
    
    // Effect to fetch templates on mount
    useEffect(() => {
        if (businessId && agentId) {
            console.log("TemplateManagement.js - Fetching templates with:", { businessId, agentId });
            if (typeof fetchTemplates === 'function') {
                fetchTemplates();
            } else {
                // If fetchTemplates is not a prop, use the internal implementation
                fetchTemplatesInternal();
            }
        }
    }, [businessId, agentId, fetchTemplates]);
    
    // Internal implementation of fetchTemplates
    const fetchTemplatesInternal = async () => {
        if (!businessId) {
            showSnackbar('Business ID is required to fetch templates', 'error');
            setShowBusinessIdInput(true);
            setIsLoading(false);
            return;
        }
        
        if (!agentId) {
            showSnackbar('Agent ID is required to fetch templates', 'error');
            setShowAgentIdInput(true);
            setIsLoading(false);
            return;
        }
        
        if (!businessApiKey) {
            showSnackbar('Business API Key is required to fetch templates', 'error');
            setShowBusinessIdInput(true);
            setIsLoading(false);
            return;
        }
        
        setIsLoading(true);
        try {
            // Use the template service instead of direct fetch
            const data = await fetchTemplatesService(businessId, agentId);
            console.log('Fetched templates (raw):', data);
            
            // Normalize the templates data to ensure all needed fields exist
            const normalizedTemplates = Array.isArray(data) ? data.map(template => ({
                template_id: template.template_id || template.id || `temp-${Math.random().toString(36).substring(2, 9)}`,
                template_name: template.template_name || 'Unnamed Template',
                content: template.content || '',
                system_prompt: template.system_prompt || '',
                template_type: template.template_type || 'Unknown Type',
                variables: extractVariablesFromContent(template.content || '')
            })) : [];
            
            console.log('Normalized templates:', normalizedTemplates);
            
            setTemplates(normalizedTemplates);
            setFilteredTemplates(normalizedTemplates);
            
            // Show message about number of templates loaded
            showSnackbar(`${normalizedTemplates.length} templates loaded successfully`, 'success');
        } catch (err) {
            console.error('Error fetching templates:', err);
            showSnackbar(err.message, 'error');
        } finally {
            setIsLoading(false);
        }
    };

    useEffect(() => {
        // TODO: Implement API endpoint to retrieve available variables
        const mockVariables = ['variable1', 'variable2', 'variable3'];
        if (typeof setAvailableVariable === 'function') {
            setAvailableVariable(mockVariables);
        }
    }, [setAvailableVariable]);

    const handleCreateTemplate = async () => {
        try {
            if (!templateName || !templateContent || !templateType) {
                setErrorMessage('Template name, content, and type are required');
                return;
            }
            
            // Use the template service instead of direct fetch
            const templateData = {
                template_name: templateName,
                content: templateContent,
                system_prompt: templateSystemPrompt || '',
                template_type: templateType,
                business_id: businessId,
                agent_id: agentId
            };
            
            await createTemplate(templateData);
            
            // Reset form
            setTemplateName('');
            setTemplateContent('');
            setTemplateType('');
            
            // Refresh templates
            fetchTemplates();
            
            setSuccessMessage('Template created successfully');
            
            // Clear success message after 3 seconds
            setTimeout(() => {
                setSuccessMessage('');
            }, 3000);
        } catch (error) {
            setErrorMessage(error.message);
        }
    };

    const handleUpdateTemplate = async () => {
        try {
            if (!editingTemplate) return;
            
            // Use the template service instead of direct fetch
            const templateData = {
                template_name: editingTemplate.template_name,
                content: editingTemplate.content,
                system_prompt: editingTemplate.system_prompt || '',
                template_type: editingTemplate.template_type,
                business_id: businessId,
                agent_id: agentId
            };
            
            await updateTemplate(editingTemplate.template_id, templateData);
            
            // Close dialog and refresh
            setEditDialogOpen(false);
            fetchTemplates();
            
            // Show success message
            showSnackbar('Template updated successfully', 'success');
        } catch (error) {
            console.error('Error updating template:', error);
            showSnackbar(`Failed to update template: ${error.message}`, 'error');
        }
    };

    const handleDeleteTemplate = async (templateId) => {
        if (!window.confirm('Are you sure you want to delete this template?')) {
            return;
        }
        
        try {
            // Use the template service instead of direct fetch
            await deleteTemplate(templateId, businessId);
            
            // Refresh templates
            fetchTemplates();
            
            // Show success message
            showSnackbar('Template deleted successfully', 'success');
        } catch (error) {
            console.error('Error deleting template:', error);
            showSnackbar(`Failed to delete template: ${error.message}`, 'error');
        }
    };

    const handleDuplicateTemplate = async (template) => {
        try {
            setIsLoading(true);
            
            // Use the template service instead of direct fetch
            const templateData = {
                template_name: template.template_name,
                content: template.content,
                system_prompt: template.system_prompt || '',
                template_type: template.template_type,
                business_id: businessId,
                agent_id: agentId
            };
            
            await duplicateTemplate(templateData);
            
            // Refresh templates
            fetchTemplates();
            
            // Show success message
            showSnackbar(`Template "${template.template_name} (Copy)" created successfully`, 'success');
        } catch (error) {
            console.error('Error duplicating template:', error);
            showSnackbar(`Failed to duplicate template: ${error.message}`, 'error');
        } finally {
            setIsLoading(false);
        }
    };

    const handleEditTemplate = (template) => {
        setEditingTemplate(template);
        setEditDialogOpen(true);
    };

    const handleAddVariable = (variable) => {
        setTemplateContent((prev) => `${prev} {${variable}}`);
    };

    const handleTabChange = (event, newValue) => {
        setActiveTab(newValue);
    };

    const getFilteredTemplates = () => {
        // If searching by text instead of filtering by type
        if (typeof filterType === 'string' && filterType.length > 0 && !templateTypes.some(t => t.value === filterType)) {
            // This is a text search, not a type filter
            const searchTerm = filterType.toLowerCase();
            return templates.filter(template => 
                (template.template_name && template.template_name.toLowerCase().includes(searchTerm)) ||
                (template.template_description && template.template_description.toLowerCase().includes(searchTerm)) ||
                (template.template_id && template.template_id.toLowerCase().includes(searchTerm)) ||
                (template.template_type && template.template_type.toLowerCase().includes(searchTerm))
            );
        }
        
        // Regular type filtering
        if (filterType === 'all') {
            return templates;
        }
        
        return templates.filter(template => {
            const type = template.template_type;
            // Handle the case where type might be undefined or not a string
            if (!type || typeof type !== 'string') return false;
            return type === filterType;
        });
    };

    const isDefaultTemplate = (type) => {
        return type && typeof type === 'string' && type.startsWith('default_');
    };

    const getTemplateTypeLabel = (type) => {
        if (!type) return 'Unknown Type';
        const found = templateTypes.find(t => t.value === type);
        return found ? found.label : type;
    };

    const handleNavigateToHome = () => {
        navigate('/business');
    };

    const validateCredentials = async () => {
        if (!businessId || !businessApiKey) {
            showSnackbar('Business ID and API Key are required', 'error');
            setShowBusinessIdInput(true);
            return false;
        }
        
        try {
            // Use the correct endpoint and method
            const response = await fetch(`/businesses/validate-credentials?business_id=${businessId}&api_key=${businessApiKey}`, {
                method: 'GET',
                headers: {
                    'Accept': 'application/json',
                    'Authorization': `Bearer ${businessApiKey}`
                },
                credentials: 'include'
            });
            
            if (!response.ok) {
                throw new Error('Invalid business ID or API key');
            }
            
            const data = await response.json();
            if (!data.valid) {
                throw new Error(data.message || 'Credential validation failed');
            }
            
            return true;
        } catch (err) {
            console.error('Credential validation error:', err);
            showSnackbar('Failed to validate credentials: ' + err.message, 'error');
            setShowBusinessIdInput(true);
            return false;
        }
    };

    const saveCredentials = async () => {
        if (!businessId || !businessApiKey) {
            showSnackbar('Please enter both Business ID and API Key', 'error');
            return;
        }
        
        const isValid = await validateCredentials();
        if (isValid) {
            // Save to both localStorage and cookies
            localStorage.setItem('businessId', businessId);
            localStorage.setItem('businessApiKey', businessApiKey);
            document.cookie = `businessId=${businessId}; path=/; max-age=86400`;
            document.cookie = `businessApiKey=${businessApiKey}; path=/; max-age=86400`;
            
            setShowBusinessIdInput(false);
            showSnackbar('Business credentials validated and saved', 'success');
            
            // Refresh templates
            fetchTemplatesInternal();
        }
    };

    const showSnackbar = (message, severity = 'success') => {
        setSnackbar({
            open: true,
            message,
            severity
        });
    };

    const handleCloseSnackbar = () => {
        setSnackbar(prev => ({
            ...prev,
            open: false
        }));
    };

    const handleCreateNewTemplate = () => {
        let url = `/template-editor/new?business_id=${businessId}`;
        if (agentId) {
            url += `&agent_id=${agentId}`;
        }
        navigate(url);
    };
    
    const handleEditExistingTemplate = (templateId) => {
        // Check for invalid template ID
        if (!templateId || templateId === 'undefined') {
            console.error('Invalid template ID:', templateId);
            showSnackbar('Cannot edit template: Invalid template ID', 'error');
            return;
        }
        
        let url = `/template-editor/${templateId}?business_id=${businessId}`;
        if (agentId) {
            url += `&agent_id=${agentId}`;
        }
        console.log(`Navigating to edit template: ${url}`);
        navigate(url);
    };

    // Effect to check if we need to refresh templates (coming from template editor)
    useEffect(() => {
        const templateUpdated = localStorage.getItem('template_updated');
        const refreshParam = queryParams.get('refresh');
        
        if (templateUpdated === 'true' || refreshParam) {
            // Clear the flag
            localStorage.removeItem('template_updated');
            
            // If we have both business ID and agent ID, fetch templates
            if (businessId && agentId && businessApiKey) {
                console.log("Template was just updated, refreshing templates list");
                setTimeout(() => {
                    fetchTemplatesInternal();
                }, 500); // Small delay to ensure backend has processed
            }
        }
    }, [location, businessId, agentId, businessApiKey]);

    // Effect to extract variables from template text
    useEffect(() => {
        if (editingTemplate.content) {
            const matches = editingTemplate.content.match(/\{([^}]+)\}/g) || [];
            const extractedVariables = matches.map(match => match.substring(1, match.length - 1));
            setEditingTemplate(prev => ({
                ...prev,
                variables: Array.from(new Set(extractedVariables))
            }));
        }
    }, [editingTemplate.content]);

    // Helper to extract variables from content
    const extractVariablesFromContent = (content) => {
        if (!content) return [];
        const matches = content.match(/\{([^}]+)\}/g) || [];
        return matches.map(match => match.slice(1, -1));
    };

    // Handle template selection for variable insertion
    const handleChooseTemplate = (template) => {
        if (setTemplateName && typeof setTemplateName === 'function') {
            setTemplateName(template.template_name);
        }
        if (setTemplateContent && typeof setTemplateContent === 'function') {
            setTemplateContent(template.content);
        }
        if (setTemplateSystemPrompt && typeof setTemplateSystemPrompt === 'function') {
            setTemplateSystemPrompt(template.system_prompt || '');
        }
        if (templateID !== undefined && setTemplateID && typeof setTemplateID === 'function') {
            setTemplateID(template.template_id);
        }
        // Fire template selection handler if provided
        if (handleTemplateSelection && typeof handleTemplateSelection === 'function') {
            handleTemplateSelection(template);
        }
        showSnackbar(`Template "${template.template_name}" selected`, 'success');
    };

    // Function to open the Edit Dialog for template editing
    const openEditDialog = (template) => {
        setEditingTemplate({
            template_id: template.template_id,
            template_name: template.template_name,
            content: template.content,
            system_prompt: template.system_prompt || '',
            template_type: template.template_type,
            variables: extractVariablesFromContent(template.content)
        });
        setEditDialogOpen(true);
    };

    return (
        <Container maxWidth="lg" sx={{ mt: 4, mb: 4 }}>
            <Paper sx={{ p: 3, mb: 4 }}>
                <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>
                    <IconButton onClick={handleNavigateToHome} sx={{ mr: 1 }}>
                        <ArrowBackIcon />
                    </IconButton>
                    <Typography variant="h5" component="h1" gutterBottom sx={{ flexGrow: 1 }}>
                        Template Management
                    </Typography>
                    <Button
                        variant="outlined"
                        color="primary"
                        onClick={() => fetchTemplatesInternal()}
                        startIcon={<RefreshIcon />}
                        sx={{ mr: 2 }}
                    >
                        Refresh Templates
                    </Button>
                    <Button
                        variant="contained"
                        color="primary"
                        onClick={handleCreateNewTemplate}
                        startIcon={<AddIcon />}
                    >
                        Create Template
                    </Button>
                </Box>
                
                <Divider sx={{ mb: 3 }} />
                
                {/* Business ID input section */}
                {(showBusinessIdInput || !businessId || !businessApiKey) && (
                    <Box sx={{ mb: 3, p: 2, border: '1px dashed', borderColor: 'warning.main', borderRadius: 1 }}>
                        <Typography variant="subtitle1" color="warning.main" gutterBottom>
                            Business Credentials Required
                        </Typography>
                        <Grid container spacing={2}>
                            <Grid item xs={12} md={5}>
                                <TextField
                                    fullWidth
                                    label="Business ID"
                                    value={businessId}
                                    onChange={(e) => setBusinessId(e.target.value)}
                                    placeholder="Enter your business ID"
                                    helperText="Required for managing templates"
                                    required
                                />
                            </Grid>
                            <Grid item xs={12} md={5}>
                                <TextField
                                    fullWidth
                                    label="Business API Key"
                                    value={businessApiKey}
                                    onChange={(e) => setBusinessApiKey(e.target.value)}
                                    placeholder="Enter your business API key"
                                    helperText="Required for authentication"
                                    type="password"
                                    required
                                />
                            </Grid>
                            <Grid item xs={12} md={2}>
                                <Button 
                                    variant="contained" 
                                    color="primary"
                                    onClick={saveCredentials}
                                    fullWidth
                                    sx={{ height: '56px' }}
                                >
                                    Validate & Save
                                </Button>
                            </Grid>
                        </Grid>
                    </Box>
                )}
                
                {/* Agent ID input section */}
                {(showAgentIdInput || !agentId) && (
                    <Box sx={{ mb: 3, p: 2, border: '1px dashed', borderColor: 'warning.main', borderRadius: 1 }}>
                        <Typography variant="subtitle1" color="warning.main" gutterBottom>
                            Agent ID Required
                        </Typography>
                        <Grid container spacing={2}>
                            <Grid item xs={12} md={9}>
                                <TextField
                                    fullWidth
                                    label="Agent ID"
                                    value={agentId}
                                    onChange={(e) => setAgentId(e.target.value)}
                                    placeholder="Enter an agent ID"
                                    helperText="Required for managing templates"
                                    required
                                />
                            </Grid>
                            <Grid item xs={12} md={3}>
                                <Button 
                                    variant="contained" 
                                    color="primary"
                                    onClick={() => {
                                        if (agentId) {
                                            // Save to localStorage
                                            localStorage.setItem('agentId', agentId);
                                            setShowAgentIdInput(false);
                                            showSnackbar('Agent ID saved', 'success');
                                            // Fetch templates for this agent
                                            fetchTemplatesInternal();
                                        } else {
                                            showSnackbar('Please enter an Agent ID', 'error');
                                        }
                                    }}
                                    fullWidth
                                    sx={{ height: '56px' }}
                                >
                                    Save & Use
                                </Button>
                            </Grid>
                            <Grid item xs={12} mt={2}>
                                <Typography variant="body2" color="text.secondary">
                                    After saving or changing the agent ID, click the button below to load templates:
                                </Typography>
                                <Button 
                                    variant="outlined" 
                                    fullWidth
                                    onClick={fetchTemplatesInternal}
                                    startIcon={<RefreshIcon />}
                                    sx={{ mt: 1 }}
                                >
                                    Load Templates for this Agent
                                </Button>
                            </Grid>
                        </Grid>
                    </Box>
                )}
                
                {/* Template filter */}
                <Box sx={{ mb: 3 }}>
                    <Grid container spacing={2} alignItems="center">
                        <Grid item xs={12} md={4}>
                            <TextField
                                fullWidth
                                label="Search Templates"
                                value={filterType}
                                onChange={(e) => setFilterType(e.target.value)}
                                placeholder="Search by type"
                            />
                        </Grid>
                        <Grid item xs={12} md={3}>
                            <FormControl fullWidth>
                                <InputLabel id="filter-type-label">Filter by Type</InputLabel>
                                <Select
                                    labelId="filter-type-label"
                                    value={filterType}
                                    onChange={(e) => setFilterType(e.target.value)}
                                    label="Filter by Type"
                                >
                                    <MenuItem value="all">All Templates</MenuItem>
                                    <ListSubheader>Regular Templates</ListSubheader>
                                    {templateTypes
                                        .filter(type => type.group === 'Regular')
                                        .map((type) => (
                                            <MenuItem key={type.value} value={type.value}>
                                                {type.label}
                                            </MenuItem>
                                        ))
                                    }
                                    <ListSubheader>Default Templates</ListSubheader>
                                    {templateTypes
                                        .filter(type => type.group === 'Default')
                                        .map((type) => (
                                            <MenuItem key={type.value} value={type.value}>
                                                {type.label}
                                            </MenuItem>
                                        ))
                                    }
                                </Select>
                            </FormControl>
                        </Grid>
                        <Grid item xs={12} md={4}>
                            <Button
                                variant="outlined"
                                startIcon={<RefreshIcon />}
                                onClick={() => {
                                    // Use the internal implementation if fetchTemplates is not a function
                                    if (typeof fetchTemplates === 'function') {
                                        fetchTemplates();
                                    } else {
                                        fetchTemplatesInternal();
                                    }
                                }}
                            >
                                Refresh
                            </Button>
                        </Grid>
                    </Grid>
                </Box>
                
                {isLoading ? (
                    <Box sx={{ display: 'flex', justifyContent: 'center', p: 4 }}>
                        <CircularProgress />
                    </Box>
                ) : (
                    <>
                        {filteredTemplates.length === 0 ? (
                            <Alert severity="info">
                                No templates found. Create your first template to get started.
                            </Alert>
                        ) : (
                            <List sx={{ bgcolor: 'background.paper' }}>
                                {filteredTemplates.map((template) => (
                                    <ListItem
                                        key={template.template_id}
                                        button
                                        onClick={() => handleEditExistingTemplate(template.template_id)}
                                        sx={{ 
                                            mb: 1,
                                            borderLeft: isDefaultTemplate(template.template_type) ? '4px solid #f50057' : 'none',
                                            bgcolor: isDefaultTemplate(template.template_type) ? 'rgba(245, 0, 87, 0.04)' : 'background.paper'
                                        }}
                                    >
                                        <ListItemText
                                            primary={
                                                <Box sx={{ display: 'flex', alignItems: 'center' }}>
                                                    {isDefaultTemplate(template.template_type) && (
                                                        <Tooltip title="Default Template">
                                                            <StarIcon sx={{ mr: 1, color: 'secondary.main', fontSize: '1rem' }} />
                                                        </Tooltip>
                                                    )}
                                                    <Typography variant="subtitle1">
                                                        {template.template_name || 'Unnamed Template'}
                                                    </Typography>
                                                    <Chip 
                                                        size="small" 
                                                        label={getTemplateTypeLabel(template.template_type)} 
                                                        sx={{ ml: 1 }}
                                                        color={isDefaultTemplate(template.template_type) ? 'secondary' : 'primary'}
                                                        variant={isDefaultTemplate(template.template_type) ? 'filled' : 'outlined'}
                                                    />
                                                </Box>
                                            }
                                            secondary={
                                                <>
                                                    <Typography component="span" variant="body2" color="text.secondary">
                                                        {template.template_description || 'No description'}
                                                    </Typography>
                                                    <Typography component="span" variant="caption" color="text.secondary" sx={{ display: 'block' }}>
                                                        ID: {template.template_id}
                                                    </Typography>
                                                </>
                                            }
                                        />
                                        <ListItemSecondaryAction>
                                            <Tooltip title="Edit Template">
                                                <IconButton 
                                                    edge="end" 
                                                    aria-label="edit"
                                                    onClick={(e) => {
                                                        e.stopPropagation();
                                                        handleEditExistingTemplate(template.template_id);
                                                    }}
                                                >
                                                    <EditIcon />
                                                </IconButton>
                                            </Tooltip>
                                            <Tooltip title="Duplicate Template">
                                                <IconButton 
                                                    edge="end" 
                                                    aria-label="duplicate"
                                                    onClick={(e) => {
                                                        e.stopPropagation();
                                                        handleDuplicateTemplate(template);
                                                    }}
                                                >
                                                    <ContentCopyIcon />
                                                </IconButton>
                                            </Tooltip>
                                            <Tooltip title="Delete Template">
                                                <IconButton 
                                                    edge="end" 
                                                    aria-label="delete"
                                                    onClick={(e) => {
                                                        e.stopPropagation();
                                                        handleDeleteTemplate(template.template_id);
                                                    }}
                                                >
                                                    <DeleteIcon />
                                                </IconButton>
                                            </Tooltip>
                                        </ListItemSecondaryAction>
                                    </ListItem>
                                ))}
                            </List>
                        )}
                    </>
                )}
                
                {/* Edit Template Dialog */}
                <Dialog open={editDialogOpen} onClose={() => setEditDialogOpen(false)} maxWidth="md" fullWidth>
                    <DialogTitle>Edit Template: {editingTemplate.template_name}</DialogTitle>
                    <DialogContent>
                        <Grid container spacing={2}>
                            <Grid item xs={12}>
                                <TextField
                                    label="Template Name" 
                                    value={editingTemplate.template_name}
                                    onChange={(e) => setEditingTemplate({...editingTemplate, template_name: e.target.value})}
                                    fullWidth
                                    margin="normal"
                                />
                            </Grid>
                            <Grid item xs={12}>
                                <FormControl fullWidth margin="normal">
                                    <InputLabel>Template Type</InputLabel>
                                    <Select
                                        value={editingTemplate.template_type}
                                        onChange={(e) => setEditingTemplate({...editingTemplate, template_type: e.target.value})}
                                        label="Template Type"
                                    >
                                        {templateTypes.map((type) => (
                                            <MenuItem key={type.value} value={type.value}>
                                                {type.label}
                                            </MenuItem>
                                        ))}
                                    </Select>
                                </FormControl>
                            </Grid>
                            <Grid item xs={12}>
                                <TextField
                                    label="Template Content"
                                    value={editingTemplate.content}
                                    onChange={(e) => setEditingTemplate({...editingTemplate, content: e.target.value})}
                                    fullWidth
                                    multiline
                                    rows={6}
                                    margin="normal"
                                />
                            </Grid>
                            <Grid item xs={12}>
                                <TextField
                                    label="System Prompt (Optional)"
                                    value={editingTemplate.system_prompt}
                                    onChange={(e) => setEditingTemplate({...editingTemplate, system_prompt: e.target.value})}
                                    fullWidth
                                    multiline
                                    rows={3}
                                    margin="normal"
                                />
                            </Grid>
                            <Grid item xs={12}>
                                <Box sx={{ mt: 1 }}>
                                    <Typography variant="subtitle2">Variables detected:</Typography>
                                    <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1, mt: 1 }}>
                                        {editingTemplate.variables.map((variable, idx) => (
                                            <Chip key={idx} label={variable} size="small" />
                                        ))}
                                        {editingTemplate.variables.length === 0 && (
                                            <Typography variant="body2" color="text.secondary">
                                                No variables detected. Use {'{variable_name}'} syntax to create variables.
                                            </Typography>
                                        )}
                                    </Box>
                                </Box>
                            </Grid>
                        </Grid>
                    </DialogContent>
                    <DialogActions>
                        <Button onClick={() => setEditDialogOpen(false)}>Cancel</Button>
                        <Button 
                            onClick={handleUpdateTemplate}
                            color="primary" 
                            variant="contained"
                            disabled={!editingTemplate.template_name || !editingTemplate.content}
                        >
                            Save Changes
                        </Button>
                    </DialogActions>
                </Dialog>
                
                {/* Snackbar for notifications */}
                <Snackbar
                    open={snackbar.open}
                    autoHideDuration={6000}
                    onClose={handleCloseSnackbar}
                    anchorOrigin={{ vertical: 'top', horizontal: 'right' }}
                >
                    <Alert onClose={handleCloseSnackbar} severity={snackbar.severity} sx={{ width: '100%' }}>
                        {snackbar.message}
                    </Alert>
                </Snackbar>
            </Paper>
        </Container>
    );
}

export default TemplateManagement;

================================================================================
File: api.js
Path: .\old-_archive_files\front-end\src\services\api.js
Size: 3183
Modified: 2025-04-25T13:07:18.080330
Created: 2025-04-25T13:07:18.080330
Hash: 70dcc5581356667aa664e25c7fb41fd0b2f3ba1feaa8baa81f0f279db5f1fa8a
Lines: 106
================================================================================
import { API_CONFIG } from '../config';
import { getAuthHeaders, getStoredCredentials } from './authService';

/**
 * Standardized handler for API responses
 * @param {Response} response - The fetch Response object
 * @returns {Promise<any>} - The parsed response data
 * @throws {Error} - Throws an error with details from the response if not ok
 */
export const handleApiResponse = async (response) => {
  // Handle non-OK responses
  if (!response.ok) {
    // Try to get detailed error from response
    try {
      const errorData = await response.json();
      throw new Error(errorData.message || errorData.error || `API error: ${response.status}`);
    } catch (jsonError) {
      // If response isn't valid JSON, use status text
      throw new Error(`API error: ${response.status} ${response.statusText}`);
    }
  }
  
  // For successful responses, parse JSON or return empty object
  try {
    return await response.json();
  } catch (error) {
    // Some successful responses may not have a body (e.g., 204 No Content)
    return {};
  }
};

/**
 * Make an API request with authentication
 * @param {string} endpoint - API endpoint
 * @param {Object} options - Request options
 * @returns {Promise<any>} - Response data
 */
const apiRequest = async (endpoint, options = {}) => {
  const url = `${API_CONFIG.BASE_URL}${endpoint}`;
  const defaultOptions = {
    headers: getAuthHeaders(),
    credentials: 'include',
  };

  const response = await fetch(url, { ...defaultOptions, ...options });
  return handleApiResponse(response);
};

export const apiService = {
  // Businesses
  getBusinessDetails: async (businessId) => {
    return apiRequest(`${API_CONFIG.ENDPOINTS.BUSINESSES}/${businessId}`);
  },
  
  // Stages
  getStages: async (businessId) => {
    return apiRequest(`${API_CONFIG.ENDPOINTS.STAGES}?business_id=${businessId}`);
  },
  
  createStage: async (stageData) => {
    return apiRequest(API_CONFIG.ENDPOINTS.STAGES, {
      method: 'POST',
      body: JSON.stringify(stageData),
    });
  },
  
  // Authentication
  saveConfig: async (config) => {
    return apiRequest(API_CONFIG.ENDPOINTS.LOGIN, {
      method: 'POST',
      body: JSON.stringify(config),
    });
  },
  
  // Templates
  createTemplate: async (templateData) => {
    return apiRequest(API_CONFIG.ENDPOINTS.TEMPLATES, {
      method: 'POST',
      body: JSON.stringify(templateData),
    });
  },
  
  fetchTemplateDetails: async (templateId) => {
    return apiRequest(`${API_CONFIG.ENDPOINTS.TEMPLATES}/${templateId}`);
  },
  
  // Messages
  sendMessage: async (messageData) => {
    return apiRequest(API_CONFIG.ENDPOINTS.MESSAGE, {
      method: 'POST',
      body: JSON.stringify(messageData),
    });
  },
  
  // Conversations
  getConversations: async (userId, businessId) => {
    return apiRequest(`${API_CONFIG.ENDPOINTS.CONVERSATIONS}/${userId}?business_id=${businessId}`);
  },
  
  // Debug
  getDebugInfo: async (conversationId) => {
    return apiRequest(`${API_CONFIG.ENDPOINTS.DEBUG}/conversation/${conversationId}`);
  }
};

export default apiService;

================================================================================
File: authService.js
Path: .\old-_archive_files\front-end\src\services\authService.js
Size: 6044
Modified: 2025-04-25T13:07:18.142771
Created: 2025-04-25T13:07:18.142771
Hash: c5815ca271ce97ae38edb70180296258a27a0362f7a8554b34321f3b5740f74a
Lines: 170
================================================================================
// Authentication service for handling login, logout, and session management
import { API_CONFIG, AUTH_CONFIG } from '../config';

/**
 * Handles API responses and throws errors for non-OK responses
 * @param {Response} response - The fetch Response object
 * @returns {Promise<any>} - The parsed response data
 * @throws {Error} - Throws an error with details from the response if not ok
 */
const handleApiResponse = async (response) => {
  console.log('API Response Status:', response.status, response.statusText);
  console.log('Response Headers:', Object.fromEntries(response.headers.entries()));
  
  // Clone the response so we can try both JSON and text parsing if needed
  const responseClone = response.clone();
  
  // Handle non-OK responses
  if (!response.ok) {
    // Try to get detailed error from response
    try {
      const errorData = await response.json();
      console.error('Error response data:', errorData);
      throw new Error(errorData.message || errorData.error || `API error: ${response.status}`);
    } catch (jsonError) {
      // If response isn't valid JSON, use status text
      console.error('Error parsing response:', jsonError);
      try {
        const errorText = await responseClone.text();
        console.error('Response text:', errorText);
        throw new Error(`API error: ${response.status} ${response.statusText} - ${errorText}`);
      } catch (textError) {
        // If both JSON and text parsing fail, just use the status
        throw new Error(`API error: ${response.status} ${response.statusText}`);
      }
    }
  }
  
  // For successful responses, parse JSON or return empty object
  try {
    const data = await response.json();
    console.log('API Response Data:', data);
    return data;
  } catch (error) {
    // Some successful responses may not have a body (e.g., 204 No Content)
    console.log('No JSON in successful response');
    return {};
  }
};

/**
 * Login with business and user credentials
 * @param {string} userId - User ID
 * @param {string} businessId - Business ID
 * @param {string} businessApiKey - Business API Key
 * @returns {Promise<Object>} - Login response data
 */
export const login = async (userId, businessId, businessApiKey) => {
  try {
    // Trim whitespace from all inputs
    const trimmedUserId = userId.trim();
    const trimmedBusinessId = businessId.trim();
    const trimmedBusinessApiKey = businessApiKey.trim();
    
    console.log('Login attempt with:', { 
      userId: trimmedUserId, 
      businessId: trimmedBusinessId, 
      businessApiKey: '***' 
    });
    console.log('Login URL:', `${API_CONFIG.BASE_URL}${API_CONFIG.ENDPOINTS.LOGIN}`);
    
    const response = await fetch(`${API_CONFIG.BASE_URL}${API_CONFIG.ENDPOINTS.LOGIN}`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Accept': 'application/json'
      },
      credentials: 'include',
      body: JSON.stringify({
        userId: trimmedUserId,
        businessId: trimmedBusinessId,
        businessApiKey: trimmedBusinessApiKey
      })
    });

    const data = await handleApiResponse(response);
    
    // Check if the response indicates success
    if (data.success || data.message === 'Configuration saved successfully') {
      console.log('Login successful, storing credentials');
      // Store credentials in localStorage for persistent login
      localStorage.setItem(AUTH_CONFIG.STORAGE_KEYS.USER_ID, trimmedUserId);
      localStorage.setItem(AUTH_CONFIG.STORAGE_KEYS.BUSINESS_ID, trimmedBusinessId);
      localStorage.setItem(AUTH_CONFIG.STORAGE_KEYS.BUSINESS_API_KEY, trimmedBusinessApiKey);
      
      // Return a standardized success response
      return { success: true, message: 'Login successful' };
    } else {
      console.error('Login response indicates failure:', data);
      return { success: false, message: data.error || 'Login failed' };
    }
  } catch (error) {
    console.error('Login error:', error);
    return { success: false, message: error.message || 'Login failed' };
  }
};

/**
 * Logout and clear stored credentials
 */
export const logout = () => {
  // Clear stored credentials
  localStorage.removeItem(AUTH_CONFIG.STORAGE_KEYS.USER_ID);
  localStorage.removeItem(AUTH_CONFIG.STORAGE_KEYS.BUSINESS_ID);
  localStorage.removeItem(AUTH_CONFIG.STORAGE_KEYS.BUSINESS_API_KEY);
  
  return { success: true, message: 'Logged out successfully' };
};

/**
 * Check if user is logged in
 * @returns {boolean} - True if user is logged in
 */
export const isLoggedIn = () => {
  const userId = localStorage.getItem(AUTH_CONFIG.STORAGE_KEYS.USER_ID);
  const businessId = localStorage.getItem(AUTH_CONFIG.STORAGE_KEYS.BUSINESS_ID);
  const businessApiKey = localStorage.getItem(AUTH_CONFIG.STORAGE_KEYS.BUSINESS_API_KEY);
  
  return !!(userId && businessId && businessApiKey);
};

/**
 * Get stored credentials
 * @returns {Object} - Stored credentials
 */
export const getStoredCredentials = () => {
  return {
    userId: localStorage.getItem(AUTH_CONFIG.STORAGE_KEYS.USER_ID) || '',
    businessId: localStorage.getItem(AUTH_CONFIG.STORAGE_KEYS.BUSINESS_ID) || '',
    businessApiKey: localStorage.getItem(AUTH_CONFIG.STORAGE_KEYS.BUSINESS_API_KEY) || ''
  };
};

/**
 * Get authentication headers for API requests
 * @returns {Object} - Headers object with authentication
 */
export const getAuthHeaders = () => {
  const businessApiKey = localStorage.getItem(AUTH_CONFIG.STORAGE_KEYS.BUSINESS_API_KEY);
  
  if (!businessApiKey) {
    throw new Error('No API key found. Please log in first.');
  }
  
  return {
    'Content-Type': 'application/json',
    'Accept': 'application/json',
    'businessapikey': businessApiKey
  };
};

// Create a named export object
const authService = {
  login,
  logout,
  isLoggedIn,
  getStoredCredentials,
  getAuthHeaders
};

export default authService;

================================================================================
File: stageService.js
Path: .\old-_archive_files\front-end\src\services\stageService.js
Size: 5492
Modified: 2025-04-25T13:07:18.298458
Created: 2025-04-25T13:07:18.298458
Hash: 8d95df32f0d01a839971fb017f5b2d849709945d3709b135041fe3344c8222fd
Lines: 162
================================================================================
// src/services/stageService.js

import { API_CONFIG } from '../config';
import { getAuthHeaders } from '../services/authService';

// Helper to handle API responses (reuse or import)
const handleApiResponse = async (response) => {
  if (!response.ok) {
    const errorData = await response.json().catch(() => ({})); 
    throw new Error(errorData.message || errorData.error || `HTTP error ${response.status}`);
  }
  if (response.status === 204) {
      return null; 
  }
  // Assume the response is JSON if OK and not 204
  return response.json(); 
};

// Fetch all stages for a given business
export const fetchStages = async (businessId) => {
  if (!businessId) {
    console.error("[Service Error] fetchStages requires a businessId.");
    throw new Error("Business ID is required to fetch stages.");
  }
  console.log(`[Service] Fetching stages for business: ${businessId}`);
  
  // Log the headers for debugging
  const headers = getAuthHeaders();
  console.log("[Service] Using headers:", headers);
  
  const response = await fetch(`/stages?business_id=${businessId}`, {
    method: 'GET',
    credentials: 'include', // Send cookies
    headers: headers
  });
  
  // Log the response status for debugging
  console.log(`[Service] Response status: ${response.status}`);
  
  return handleApiResponse(response);
};

// Create a new stage
export const createStage = async (stageData) => {
  if (!stageData.business_id) {
    console.error("[Service Error] createStage requires a business_id.");
    throw new Error("Business ID is required to create a stage.");
  }
  
  console.log(`[Service] Creating stage for business: ${stageData.business_id}`);
  console.log(`[Service] Stage data:`, stageData);
  
  // Log the headers for debugging
  const headers = getAuthHeaders();
  console.log("[Service] Using headers:", headers);
  
  const response = await fetch(`/stages`, {
    method: 'POST',
    credentials: 'include',
    headers: headers,
    body: JSON.stringify(stageData)
  });
  
  // Log the response status for debugging
  console.log(`[Service] Response status: ${response.status}`);
  
  return handleApiResponse(response);
};

// Fetch details for a specific stage
export const fetchStageDetails = async (stageId) => {
    try {
        const businessId = localStorage.getItem('businessId');
        if (!businessId || !stageId) {
            throw new Error('Missing required parameters: ' + 
                (!businessId ? 'businessId ' : '') + 
                (!stageId ? 'stageId' : ''));
        }

        console.log(`[Service] Fetching stage details for stage ${stageId} and business ${businessId}`);
        
        // Log the headers for debugging
        const headers = getAuthHeaders();
        console.log("[Service] Using headers:", headers);
        
        const response = await fetch(`/stages/${stageId}?business_id=${businessId}`, {
            method: 'GET',
            credentials: 'include',
            headers: headers
        });

        // Log the response status for debugging
        console.log(`[Service] Response status: ${response.status}`);
        
        if (!response.ok) {
            const errorData = await response.json().catch(() => ({}));
            console.error('Error response:', errorData);
            throw new Error(errorData.error || `Failed to fetch stage details (HTTP ${response.status})`);
        }

        const data = await response.json();
        console.log('Received stage details:', data);
        
        if (!data || typeof data !== 'object') {
            throw new Error('Invalid response format from server');
        }

        return data;
    } catch (error) {
        console.error('Error fetching stage details:', error);
        throw error;
    }
};

// Update an existing stage
export const updateStage = async (stageId, stageData) => {
    if (!stageId || !stageData.business_id) {
        throw new Error('Missing required parameters: stageId and business_id');
    }
    
    console.log(`[Service] Updating stage ${stageId} for business ${stageData.business_id}`);
    
    // Log the headers for debugging
    const headers = getAuthHeaders();
    console.log("[Service] Using headers:", headers);
    
    const response = await fetch(`/stages/${stageId}`, {
        method: 'PUT',
        credentials: 'include',
        headers: headers,
        body: JSON.stringify(stageData)
    });
    
    // Log the response status for debugging
    console.log(`[Service] Response status: ${response.status}`);
    
    return handleApiResponse(response);
};

// Delete a stage
export const deleteStage = async (stageId, businessId) => {
    if (!stageId || !businessId) {
        throw new Error('Missing required parameters: stageId and businessId');
    }
    
    console.log(`[Service] Deleting stage ${stageId} for business ${businessId}`);
    
    // Log the headers for debugging
    const headers = getAuthHeaders();
    console.log("[Service] Using headers:", headers);
    
    const response = await fetch(`/stages/${stageId}?business_id=${businessId}`, {
        method: 'DELETE',
        credentials: 'include',
        headers: headers
    });
    
    // Log the response status for debugging
    console.log(`[Service] Response status: ${response.status}`);
    
    return handleApiResponse(response);
};

