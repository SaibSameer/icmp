{"ast":null,"code":"var _jsxFileName = \"C:\\\\icmp_events_api\\\\front-end\\\\src\\\\components\\\\StageFlow.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { Box, Paper, Typography, Grid, Button, Dialog, DialogTitle, DialogContent, DialogActions, TextField, Select, MenuItem, FormControl, InputLabel, Alert, Snackbar, IconButton, Tooltip, CircularProgress } from '@mui/material';\nimport AddIcon from '@mui/icons-material/Add';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StageFlow = ({\n  stages,\n  businessId,\n  agentId\n}) => {\n  _s();\n  const [transitions, setTransitions] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [openDialog, setOpenDialog] = useState(false);\n  const [selectedTransition, setSelectedTransition] = useState(null);\n  const [newTransition, setNewTransition] = useState({\n    from_stage_id: '',\n    to_stage_id: '',\n    condition: '',\n    priority: 1\n  });\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const fetchTransitions = useCallback(async () => {\n    if (!businessId) {\n      setError('Business ID is required');\n      return;\n    }\n    setIsLoading(true);\n    setError('');\n    try {\n      // Include agent_id in the query params if it exists\n      const queryParams = new URLSearchParams({\n        business_id: businessId\n      });\n      if (agentId) {\n        queryParams.append('agent_id', agentId);\n      }\n      const response = await fetch(`/transitions?${queryParams.toString()}`, {\n        credentials: 'include'\n      });\n      if (!response.ok) throw new Error('Failed to fetch transitions');\n      const data = await response.json();\n      setTransitions(data);\n    } catch (err) {\n      setError(err.message || 'Failed to fetch transitions');\n    } finally {\n      setIsLoading(false);\n    }\n  }, [businessId, agentId]);\n  useEffect(() => {\n    fetchTransitions();\n  }, [fetchTransitions]);\n  const handleCreateTransition = async () => {\n    if (!newTransition.from_stage_id || !newTransition.to_stage_id) {\n      setError('From stage and To stage are required');\n      return;\n    }\n    setIsLoading(true);\n    try {\n      // Include agent_id in the transition data if it exists\n      const transitionData = {\n        ...newTransition,\n        business_id: businessId,\n        ...(agentId && {\n          agent_id: agentId\n        })\n      };\n      const response = await fetch('/transitions', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        body: JSON.stringify(transitionData)\n      });\n      if (!response.ok) throw new Error('Failed to create transition');\n      const data = await response.json();\n      setTransitions([...transitions, data]);\n      setOpenDialog(false);\n      setNewTransition({\n        from_stage_id: '',\n        to_stage_id: '',\n        condition: '',\n        priority: 1\n      });\n      setSuccess('Transition created successfully');\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleDeleteTransition = async transitionId => {\n    if (!window.confirm('Are you sure you want to delete this transition?')) {\n      return;\n    }\n    setIsLoading(true);\n    try {\n      const response = await fetch(`/transitions/${transitionId}`, {\n        method: 'DELETE',\n        credentials: 'include'\n      });\n      if (!response.ok) throw new Error('Failed to delete transition');\n      setTransitions(transitions.filter(t => t.transition_id !== transitionId));\n      setSuccess('Transition deleted successfully');\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const getStageNameById = stageId => {\n    const stage = stages.find(s => s.stage_id === stageId);\n    return stage ? stage.stage_name : 'Unknown Stage';\n  };\n\n  // Filter stages by agent_id if needed\n  const filteredStages = agentId ? stages.filter(stage => !stage.agent_id || stage.agent_id === agentId) : stages;\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      p: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        children: [\"Stage Transitions \", agentId ? 'for Selected Agent' : '']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: () => {\n          setSelectedTransition(null);\n          setNewTransition({\n            from_stage_id: '',\n            to_stage_id: '',\n            condition: '',\n            priority: 1\n          });\n          setOpenDialog(true);\n        },\n        disabled: filteredStages.length < 2,\n        children: \"Add Transition\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), filteredStages.length < 2 && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"info\",\n      sx: {\n        mb: 3\n      },\n      children: \"You need at least two stages to create transitions.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'center',\n        my: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      sx: {\n        my: 2\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 9\n    }, this), !isLoading && !error && transitions.length === 0 && /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        p: 3,\n        textAlign: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        children: \"No transitions defined yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 9\n    }, this), !isLoading && !error && transitions.length > 0 && /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: transitions.map(transition => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          sx: {\n            p: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              justifyContent: 'space-between',\n              mb: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              children: [getStageNameById(transition.from_stage_id), \" \\u2192 \", getStageNameById(transition.to_stage_id)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              color: \"error\",\n              size: \"small\",\n              onClick: () => handleDeleteTransition(transition.transition_id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Condition:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 19\n            }, this), \" \", transition.condition || 'Unconditional']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Priority:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 19\n            }, this), \" \", transition.priority]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 15\n        }, this)\n      }, transition.transition_id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openDialog,\n      onClose: () => setOpenDialog(false),\n      maxWidth: \"sm\",\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: selectedTransition ? 'Edit Transition' : 'Create New Transition'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          sx: {\n            mt: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            children: \"From Stage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: newTransition.from_stage_id,\n            onChange: e => setNewTransition({\n              ...newTransition,\n              from_stage_id: e.target.value\n            }),\n            label: \"From Stage\",\n            children: filteredStages.map(stage => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: stage.stage_id,\n              children: stage.stage_name\n            }, stage.stage_id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          sx: {\n            mt: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            children: \"To Stage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: newTransition.to_stage_id,\n            onChange: e => setNewTransition({\n              ...newTransition,\n              to_stage_id: e.target.value\n            }),\n            label: \"To Stage\",\n            children: filteredStages.map(stage => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: stage.stage_id,\n              children: stage.stage_name\n            }, stage.stage_id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"Condition\",\n          value: newTransition.condition,\n          onChange: e => setNewTransition({\n            ...newTransition,\n            condition: e.target.value\n          }),\n          sx: {\n            mt: 2\n          },\n          helperText: \"Enter the condition that triggers this transition (e.g., 'user_agreed', 'payment_completed')\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"dense\",\n          label: \"Priority\",\n          type: \"number\",\n          fullWidth: true,\n          value: newTransition.priority,\n          onChange: e => setNewTransition({\n            ...newTransition,\n            priority: parseInt(e.target.value) || 1\n          }),\n          sx: {\n            mt: 1\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setOpenDialog(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCreateTransition,\n          variant: \"contained\",\n          children: selectedTransition ? 'Update' : 'Create'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: !!error,\n      autoHideDuration: 6000,\n      onClose: () => setError(''),\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        onClose: () => setError(''),\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: !!success,\n      autoHideDuration: 6000,\n      onClose: () => setSuccess(''),\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"success\",\n        onClose: () => setSuccess(''),\n        children: success\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 5\n  }, this);\n};\n_s(StageFlow, \"ok+wRcKCWCsx6N+JXgZ44b54FC0=\");\n_c = StageFlow;\nexport default StageFlow;\nvar _c;\n$RefreshReg$(_c, \"StageFlow\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","Box","Paper","Typography","Grid","Button","Dialog","DialogTitle","DialogContent","DialogActions","TextField","Select","MenuItem","FormControl","InputLabel","Alert","Snackbar","IconButton","Tooltip","CircularProgress","AddIcon","DeleteIcon","EditIcon","jsxDEV","_jsxDEV","StageFlow","stages","businessId","agentId","_s","transitions","setTransitions","isLoading","setIsLoading","openDialog","setOpenDialog","selectedTransition","setSelectedTransition","newTransition","setNewTransition","from_stage_id","to_stage_id","condition","priority","error","setError","success","setSuccess","fetchTransitions","queryParams","URLSearchParams","business_id","append","response","fetch","toString","credentials","ok","Error","data","json","err","message","handleCreateTransition","transitionData","agent_id","method","headers","body","JSON","stringify","handleDeleteTransition","transitionId","window","confirm","filter","t","transition_id","getStageNameById","stageId","stage","find","s","stage_id","stage_name","filteredStages","sx","p","children","display","justifyContent","alignItems","mb","variant","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","length","severity","my","textAlign","container","spacing","map","transition","item","xs","md","color","size","open","onClose","maxWidth","fullWidth","mt","value","onChange","e","target","label","helperText","margin","type","parseInt","autoHideDuration","_c","$RefreshReg$"],"sources":["C:/icmp_events_api/front-end/src/components/StageFlow.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport {\r\n  Box,\r\n  Paper,\r\n  Typography,\r\n  Grid,\r\n  Button,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField,\r\n  Select,\r\n  MenuItem,\r\n  FormControl,\r\n  InputLabel,\r\n  Alert,\r\n  Snackbar,\r\n  IconButton,\r\n  Tooltip,\r\n  CircularProgress\r\n} from '@mui/material';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\n\r\nconst StageFlow = ({ stages, businessId, agentId }) => {\r\n  const [transitions, setTransitions] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n  const [selectedTransition, setSelectedTransition] = useState(null);\r\n  const [newTransition, setNewTransition] = useState({\r\n    from_stage_id: '',\r\n    to_stage_id: '',\r\n    condition: '',\r\n    priority: 1\r\n  });\r\n  const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState('');\r\n\r\n  const fetchTransitions = useCallback(async () => {\r\n    if (!businessId) {\r\n      setError('Business ID is required');\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n    setError('');\r\n    try {\r\n      // Include agent_id in the query params if it exists\r\n      const queryParams = new URLSearchParams({\r\n        business_id: businessId\r\n      });\r\n      \r\n      if (agentId) {\r\n        queryParams.append('agent_id', agentId);\r\n      }\r\n\r\n      const response = await fetch(`/transitions?${queryParams.toString()}`, {\r\n        credentials: 'include',\r\n      });\r\n      \r\n      if (!response.ok) throw new Error('Failed to fetch transitions');\r\n      const data = await response.json();\r\n      setTransitions(data);\r\n    } catch (err) {\r\n      setError(err.message || 'Failed to fetch transitions');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [businessId, agentId]);\r\n\r\n  useEffect(() => {\r\n    fetchTransitions();\r\n  }, [fetchTransitions]);\r\n\r\n  const handleCreateTransition = async () => {\r\n    if (!newTransition.from_stage_id || !newTransition.to_stage_id) {\r\n      setError('From stage and To stage are required');\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n    try {\r\n      // Include agent_id in the transition data if it exists\r\n      const transitionData = {\r\n        ...newTransition,\r\n        business_id: businessId,\r\n        ...(agentId && { agent_id: agentId })\r\n      };\r\n\r\n      const response = await fetch('/transitions', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify(transitionData),\r\n      });\r\n      \r\n      if (!response.ok) throw new Error('Failed to create transition');\r\n      const data = await response.json();\r\n      setTransitions([...transitions, data]);\r\n      setOpenDialog(false);\r\n      setNewTransition({\r\n        from_stage_id: '',\r\n        to_stage_id: '',\r\n        condition: '',\r\n        priority: 1\r\n      });\r\n      setSuccess('Transition created successfully');\r\n    } catch (err) {\r\n      setError(err.message);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleDeleteTransition = async (transitionId) => {\r\n    if (!window.confirm('Are you sure you want to delete this transition?')) {\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n    try {\r\n      const response = await fetch(`/transitions/${transitionId}`, {\r\n        method: 'DELETE',\r\n        credentials: 'include',\r\n      });\r\n      \r\n      if (!response.ok) throw new Error('Failed to delete transition');\r\n      setTransitions(transitions.filter(t => t.transition_id !== transitionId));\r\n      setSuccess('Transition deleted successfully');\r\n    } catch (err) {\r\n      setError(err.message);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const getStageNameById = (stageId) => {\r\n    const stage = stages.find(s => s.stage_id === stageId);\r\n    return stage ? stage.stage_name : 'Unknown Stage';\r\n  };\r\n\r\n  // Filter stages by agent_id if needed\r\n  const filteredStages = agentId \r\n    ? stages.filter(stage => !stage.agent_id || stage.agent_id === agentId)\r\n    : stages;\r\n\r\n  return (\r\n    <Box sx={{ p: 3 }}>\r\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 3 }}>\r\n        <Typography variant=\"h5\">\r\n          Stage Transitions {agentId ? 'for Selected Agent' : ''}\r\n        </Typography>\r\n        <Button\r\n          variant=\"contained\"\r\n          onClick={() => {\r\n            setSelectedTransition(null);\r\n            setNewTransition({\r\n              from_stage_id: '',\r\n              to_stage_id: '',\r\n              condition: '',\r\n              priority: 1\r\n            });\r\n            setOpenDialog(true);\r\n          }}\r\n          disabled={filteredStages.length < 2}\r\n        >\r\n          Add Transition\r\n        </Button>\r\n      </Box>\r\n\r\n      {filteredStages.length < 2 && (\r\n        <Alert severity=\"info\" sx={{ mb: 3 }}>\r\n          You need at least two stages to create transitions.\r\n        </Alert>\r\n      )}\r\n\r\n      {isLoading && (\r\n        <Box sx={{ display: 'flex', justifyContent: 'center', my: 3 }}>\r\n          <CircularProgress />\r\n        </Box>\r\n      )}\r\n      \r\n      {error && (\r\n        <Alert severity=\"error\" sx={{ my: 2 }}>\r\n          {error}\r\n        </Alert>\r\n      )}\r\n\r\n      {!isLoading && !error && transitions.length === 0 && (\r\n        <Paper sx={{ p: 3, textAlign: 'center' }}>\r\n          <Typography>No transitions defined yet.</Typography>\r\n        </Paper>\r\n      )}\r\n\r\n      {!isLoading && !error && transitions.length > 0 && (\r\n        <Grid container spacing={2}>\r\n          {transitions.map((transition) => (\r\n            <Grid item xs={12} md={6} key={transition.transition_id}>\r\n              <Paper sx={{ p: 2 }}>\r\n                <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 1 }}>\r\n                  <Typography variant=\"subtitle1\">\r\n                    {getStageNameById(transition.from_stage_id)} → {getStageNameById(transition.to_stage_id)}\r\n                  </Typography>\r\n                  <Button \r\n                    variant=\"outlined\" \r\n                    color=\"error\" \r\n                    size=\"small\"\r\n                    onClick={() => handleDeleteTransition(transition.transition_id)}\r\n                  >\r\n                    Delete\r\n                  </Button>\r\n                </Box>\r\n                <Typography variant=\"body2\">\r\n                  <strong>Condition:</strong> {transition.condition || 'Unconditional'}\r\n                </Typography>\r\n                <Typography variant=\"body2\">\r\n                  <strong>Priority:</strong> {transition.priority}\r\n                </Typography>\r\n              </Paper>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      )}\r\n\r\n      <Dialog open={openDialog} onClose={() => setOpenDialog(false)} maxWidth=\"sm\" fullWidth>\r\n        <DialogTitle>\r\n          {selectedTransition ? 'Edit Transition' : 'Create New Transition'}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <FormControl fullWidth sx={{ mt: 2 }}>\r\n            <InputLabel>From Stage</InputLabel>\r\n            <Select\r\n              value={newTransition.from_stage_id}\r\n              onChange={(e) => setNewTransition({ ...newTransition, from_stage_id: e.target.value })}\r\n              label=\"From Stage\"\r\n            >\r\n              {filteredStages.map((stage) => (\r\n                <MenuItem key={stage.stage_id} value={stage.stage_id}>\r\n                  {stage.stage_name}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n\r\n          <FormControl fullWidth sx={{ mt: 2 }}>\r\n            <InputLabel>To Stage</InputLabel>\r\n            <Select\r\n              value={newTransition.to_stage_id}\r\n              onChange={(e) => setNewTransition({ ...newTransition, to_stage_id: e.target.value })}\r\n              label=\"To Stage\"\r\n            >\r\n              {filteredStages.map((stage) => (\r\n                <MenuItem key={stage.stage_id} value={stage.stage_id}>\r\n                  {stage.stage_name}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n\r\n          <TextField\r\n            fullWidth\r\n            label=\"Condition\"\r\n            value={newTransition.condition}\r\n            onChange={(e) => setNewTransition({ ...newTransition, condition: e.target.value })}\r\n            sx={{ mt: 2 }}\r\n            helperText=\"Enter the condition that triggers this transition (e.g., 'user_agreed', 'payment_completed')\"\r\n          />\r\n\r\n          <TextField\r\n            margin=\"dense\"\r\n            label=\"Priority\"\r\n            type=\"number\"\r\n            fullWidth\r\n            value={newTransition.priority}\r\n            onChange={(e) => setNewTransition({ ...newTransition, priority: parseInt(e.target.value) || 1 })}\r\n            sx={{ mt: 1 }}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setOpenDialog(false)}>Cancel</Button>\r\n          <Button onClick={handleCreateTransition} variant=\"contained\">\r\n            {selectedTransition ? 'Update' : 'Create'}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      <Snackbar\r\n        open={!!error}\r\n        autoHideDuration={6000}\r\n        onClose={() => setError('')}\r\n      >\r\n        <Alert severity=\"error\" onClose={() => setError('')}>\r\n          {error}\r\n        </Alert>\r\n      </Snackbar>\r\n\r\n      <Snackbar\r\n        open={!!success}\r\n        autoHideDuration={6000}\r\n        onClose={() => setSuccess('')}\r\n      >\r\n        <Alert severity=\"success\" onClose={() => setSuccess('')}>\r\n          {success}\r\n        </Alert>\r\n      </Snackbar>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default StageFlow; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}