{"ast":null,"code":"/**\r\n * Authentication utility functions\r\n */\n\n/**\r\n * Get stored credentials from localStorage\r\n * @returns {Object} Object containing businessId and businessApiKey\r\n */\nexport const getStoredCredentials = () => {\n  const businessId = localStorage.getItem('businessId');\n  const businessApiKey = localStorage.getItem('businessApiKey');\n  return {\n    businessId,\n    businessApiKey\n  };\n};\n\n/**\r\n * Check if user is authenticated\r\n * @returns {boolean} True if user is authenticated, false otherwise\r\n */\nexport const isAuthenticated = () => {\n  const {\n    businessId,\n    businessApiKey\n  } = getStoredCredentials();\n  return !!(businessId && businessApiKey);\n};\n\n/**\r\n * Store credentials in localStorage\r\n * @param {string} businessId - The business ID\r\n * @param {string} businessApiKey - The business API key\r\n */\nexport const storeCredentials = (businessId, businessApiKey) => {\n  localStorage.setItem('businessId', businessId);\n  localStorage.setItem('businessApiKey', businessApiKey);\n};\n\n/**\r\n * Clear stored credentials from localStorage\r\n */\nexport const clearCredentials = () => {\n  localStorage.removeItem('businessId');\n  localStorage.removeItem('businessApiKey');\n};","map":{"version":3,"names":["getStoredCredentials","businessId","localStorage","getItem","businessApiKey","isAuthenticated","storeCredentials","setItem","clearCredentials","removeItem"],"sources":["C:/icmp_events_api/front-end/src/utils/authUtils.js"],"sourcesContent":["/**\r\n * Authentication utility functions\r\n */\r\n\r\n/**\r\n * Get stored credentials from localStorage\r\n * @returns {Object} Object containing businessId and businessApiKey\r\n */\r\nexport const getStoredCredentials = () => {\r\n  const businessId = localStorage.getItem('businessId');\r\n  const businessApiKey = localStorage.getItem('businessApiKey');\r\n  \r\n  return {\r\n    businessId,\r\n    businessApiKey\r\n  };\r\n};\r\n\r\n/**\r\n * Check if user is authenticated\r\n * @returns {boolean} True if user is authenticated, false otherwise\r\n */\r\nexport const isAuthenticated = () => {\r\n  const { businessId, businessApiKey } = getStoredCredentials();\r\n  return !!(businessId && businessApiKey);\r\n};\r\n\r\n/**\r\n * Store credentials in localStorage\r\n * @param {string} businessId - The business ID\r\n * @param {string} businessApiKey - The business API key\r\n */\r\nexport const storeCredentials = (businessId, businessApiKey) => {\r\n  localStorage.setItem('businessId', businessId);\r\n  localStorage.setItem('businessApiKey', businessApiKey);\r\n};\r\n\r\n/**\r\n * Clear stored credentials from localStorage\r\n */\r\nexport const clearCredentials = () => {\r\n  localStorage.removeItem('businessId');\r\n  localStorage.removeItem('businessApiKey');\r\n}; "],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO,MAAMA,oBAAoB,GAAGA,CAAA,KAAM;EACxC,MAAMC,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;EACrD,MAAMC,cAAc,GAAGF,YAAY,CAACC,OAAO,CAAC,gBAAgB,CAAC;EAE7D,OAAO;IACLF,UAAU;IACVG;EACF,CAAC;AACH,CAAC;;AAED;AACA;AACA;AACA;AACA,OAAO,MAAMC,eAAe,GAAGA,CAAA,KAAM;EACnC,MAAM;IAAEJ,UAAU;IAAEG;EAAe,CAAC,GAAGJ,oBAAoB,CAAC,CAAC;EAC7D,OAAO,CAAC,EAAEC,UAAU,IAAIG,cAAc,CAAC;AACzC,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,OAAO,MAAME,gBAAgB,GAAGA,CAACL,UAAU,EAAEG,cAAc,KAAK;EAC9DF,YAAY,CAACK,OAAO,CAAC,YAAY,EAAEN,UAAU,CAAC;EAC9CC,YAAY,CAACK,OAAO,CAAC,gBAAgB,EAAEH,cAAc,CAAC;AACxD,CAAC;;AAED;AACA;AACA;AACA,OAAO,MAAMI,gBAAgB,GAAGA,CAAA,KAAM;EACpCN,YAAY,CAACO,UAAU,CAAC,YAAY,CAAC;EACrCP,YAAY,CAACO,UAAU,CAAC,gBAAgB,CAAC;AAC3C,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}