{"ast":null,"code":"// src/services/stageService.js\n\n// Placeholder function - replace with actual API call\nexport const fetchStages = async agentId => {\n  console.log(`[Service Placeholder] Fetching stages for agent: ${agentId}`);\n  await new Promise(resolve => setTimeout(resolve, 500));\n  // Replace with actual fetch call to e.g., /api/agents/${agentId}/stages\n  // Example structure:\n  // return [\n  //   { stage_id: 'stage-abc', stage_name: 'Greeting', description: 'Initial user greeting' },\n  //   { stage_id: 'stage-def', stage_name: 'Order Inquiry', description: 'Handle order status requests' },\n  // ];\n  return [];\n};\n\n// Placeholder function - replace with actual API call\nexport const fetchStageDetails = async stageId => {\n  console.log(`[Service Placeholder] Fetching details for stage: ${stageId}`);\n  await new Promise(resolve => setTimeout(resolve, 500));\n  // Replace with actual fetch call to e.g., /api/stages/${stageId}\n  // Example structure:\n  // return {\n  //   stage_id: stageId,\n  //   stage_name: 'Greeting Detail',\n  //   stage_type: 'START',\n  //   description: 'The very first stage.',\n  //   selection_template_id: 'tmpl-sel-01',\n  //   extraction_template_id: 'tmpl-ext-01',\n  //   response_template_id: 'tmpl-res-01',\n  // };\n\n  // Return a minimal object for now\n  return {\n    stage_id: stageId,\n    stage_name: `Details for ${stageId}`\n  };\n};\n\n// Add other stage-related API functions here later (create, update, delete)","map":{"version":3,"names":["fetchStages","agentId","console","log","Promise","resolve","setTimeout","fetchStageDetails","stageId","stage_id","stage_name"],"sources":["C:/icmp_events_api/front-end/src/services/stageService.js"],"sourcesContent":["// src/services/stageService.js\r\n\r\n// Placeholder function - replace with actual API call\r\nexport const fetchStages = async (agentId) => {\r\n  console.log(`[Service Placeholder] Fetching stages for agent: ${agentId}`);\r\n  await new Promise(resolve => setTimeout(resolve, 500));\r\n  // Replace with actual fetch call to e.g., /api/agents/${agentId}/stages\r\n  // Example structure:\r\n  // return [\r\n  //   { stage_id: 'stage-abc', stage_name: 'Greeting', description: 'Initial user greeting' },\r\n  //   { stage_id: 'stage-def', stage_name: 'Order Inquiry', description: 'Handle order status requests' },\r\n  // ];\r\n  return [];\r\n};\r\n\r\n// Placeholder function - replace with actual API call\r\nexport const fetchStageDetails = async (stageId) => {\r\n    console.log(`[Service Placeholder] Fetching details for stage: ${stageId}`);\r\n    await new Promise(resolve => setTimeout(resolve, 500));\r\n    // Replace with actual fetch call to e.g., /api/stages/${stageId}\r\n    // Example structure:\r\n    // return {\r\n    //   stage_id: stageId,\r\n    //   stage_name: 'Greeting Detail',\r\n    //   stage_type: 'START',\r\n    //   description: 'The very first stage.',\r\n    //   selection_template_id: 'tmpl-sel-01',\r\n    //   extraction_template_id: 'tmpl-ext-01',\r\n    //   response_template_id: 'tmpl-res-01',\r\n    // };\r\n\r\n    // Return a minimal object for now\r\n    return { stage_id: stageId, stage_name: `Details for ${stageId}` };\r\n};\r\n\r\n// Add other stage-related API functions here later (create, update, delete)\r\n"],"mappings":"AAAA;;AAEA;AACA,OAAO,MAAMA,WAAW,GAAG,MAAOC,OAAO,IAAK;EAC5CC,OAAO,CAACC,GAAG,CAAC,oDAAoDF,OAAO,EAAE,CAAC;EAC1E,MAAM,IAAIG,OAAO,CAACC,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAE,GAAG,CAAC,CAAC;EACtD;EACA;EACA;EACA;EACA;EACA;EACA,OAAO,EAAE;AACX,CAAC;;AAED;AACA,OAAO,MAAME,iBAAiB,GAAG,MAAOC,OAAO,IAAK;EAChDN,OAAO,CAACC,GAAG,CAAC,qDAAqDK,OAAO,EAAE,CAAC;EAC3E,MAAM,IAAIJ,OAAO,CAACC,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAE,GAAG,CAAC,CAAC;EACtD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA,OAAO;IAAEI,QAAQ,EAAED,OAAO;IAAEE,UAAU,EAAE,eAAeF,OAAO;EAAG,CAAC;AACtE,CAAC;;AAED","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}