{"ast":null,"code":"var _jsxFileName = \"C:\\\\icmp_events_api\\\\front-end\\\\src\\\\components\\\\Configuration.js\";\nimport React from 'react';\nimport { TextField, Button, Typography, Card, CardContent, Box } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Configuration({\n  apiKey,\n  setApiKey,\n  userId,\n  setUserId,\n  businessId,\n  setBusinessId,\n  businessApiKey,\n  setBusinessApiKey,\n  handleSnackbarOpen\n}) {\n  const saveConfig = async () => {\n    // Validate local\n    if (!apiKey || !userId || !businessId || !businessApiKey) {\n      handleSnackbarOpen(\"Please enter all the configuration\", \"warning\");\n      return;\n    }\n    try {\n      const response = await fetch('/api/save-config', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        body: JSON.stringify({\n          apiKey,\n          userId,\n          businessId,\n          businessApiKey\n        })\n      });\n      if (response.ok) {\n        handleSnackbarOpen(\"Configuration Saved!\", \"success\");\n        // Clear the API keys from state after successful save\n        setApiKey('');\n        setBusinessApiKey('');\n      } else {\n        handleSnackbarOpen(\"Failed to save configuration\", \"error\");\n      }\n    } catch (error) {\n      handleSnackbarOpen(\"An error occurred while saving configuration\", \"error\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      mt: 2\n    },\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: \"Configuration\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          flexDirection: 'column',\n          gap: 2,\n          mt: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          label: \"ICMP API Key\",\n          variant: \"outlined\",\n          value: apiKey,\n          onChange: e => {\n            setApiKey(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Business API Key\",\n          variant: \"outlined\",\n          value: businessApiKey,\n          onChange: e => setBusinessApiKey(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"User ID\",\n          variant: \"outlined\",\n          value: userId,\n          onChange: e => setUserId(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Business ID\",\n          variant: \"outlined\",\n          value: businessId,\n          onChange: e => setBusinessId(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: saveConfig,\n          children: \"Save Config\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n_c = Configuration;\nexport default Configuration;\nvar _c;\n$RefreshReg$(_c, \"Configuration\");","map":{"version":3,"names":["React","TextField","Button","Typography","Card","CardContent","Box","jsxDEV","_jsxDEV","Configuration","apiKey","setApiKey","userId","setUserId","businessId","setBusinessId","businessApiKey","setBusinessApiKey","handleSnackbarOpen","saveConfig","response","fetch","method","headers","credentials","body","JSON","stringify","ok","error","sx","mt","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","display","flexDirection","gap","label","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/icmp_events_api/front-end/src/components/Configuration.js"],"sourcesContent":["import React from 'react';\r\nimport { TextField, Button, Typography, Card, CardContent, Box } from '@mui/material';\r\n\r\nfunction Configuration({\r\n    apiKey,\r\n    setApiKey,\r\n    userId,\r\n    setUserId,\r\n    businessId,\r\n    setBusinessId,\r\n    businessApiKey,\r\n    setBusinessApiKey,\r\n    handleSnackbarOpen\r\n}) {\r\n    const saveConfig = async () => {\r\n        // Validate local\r\n        if (!apiKey || !userId || !businessId || !businessApiKey) {\r\n            handleSnackbarOpen(\"Please enter all the configuration\", \"warning\");\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await fetch('/api/save-config', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                credentials: 'include',\r\n                body: JSON.stringify({\r\n                    apiKey,\r\n                    userId,\r\n                    businessId,\r\n                    businessApiKey\r\n                })\r\n            });\r\n\r\n            if (response.ok) {\r\n                handleSnackbarOpen(\"Configuration Saved!\", \"success\");\r\n                // Clear the API keys from state after successful save\r\n                setApiKey('');\r\n                setBusinessApiKey('');\r\n            } else {\r\n                handleSnackbarOpen(\"Failed to save configuration\", \"error\");\r\n            }\r\n        } catch (error) {\r\n            handleSnackbarOpen(\"An error occurred while saving configuration\", \"error\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Card sx={{ mt: 2 }}>\r\n            <CardContent>\r\n                <Typography variant=\"h6\" gutterBottom>Configuration</Typography>\r\n                <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2, mt: 2 }}>\r\n                    <TextField\r\n                        label=\"ICMP API Key\"\r\n                        variant=\"outlined\"\r\n                        value={apiKey}\r\n                        onChange={(e) => {\r\n                            setApiKey(e.target.value);\r\n                        }}\r\n                    />\r\n                    <TextField\r\n                        label=\"Business API Key\"\r\n                        variant=\"outlined\"\r\n                        value={businessApiKey}\r\n                        onChange={(e) => setBusinessApiKey(e.target.value)}\r\n                    />\r\n                    <TextField label=\"User ID\" variant=\"outlined\" value={userId}\r\n                        onChange={(e) => setUserId(e.target.value)} />\r\n                    <TextField label=\"Business ID\" variant=\"outlined\" value={businessId}\r\n                        onChange={(e) => setBusinessId(e.target.value)} />\r\n\r\n                    <Button variant=\"contained\" onClick={saveConfig}>Save Config</Button>\r\n\r\n                </Box>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default Configuration;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}