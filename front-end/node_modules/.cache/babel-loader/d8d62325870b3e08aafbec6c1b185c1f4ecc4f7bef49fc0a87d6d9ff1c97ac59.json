{"ast":null,"code":"var _jsxFileName = \"C:\\\\icmp_events_api\\\\front-end\\\\src\\\\components\\\\Configuration.js\";\n// File: src/components/Configuration.js\n// Last Modified: 2026-03-29\nimport React from 'react';\nimport { TextField, Button, Typography, Card, CardContent, Box } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Configuration({\n  apiKey,\n  setApiKey,\n  userId,\n  setUserId,\n  businessId,\n  setBusinessId,\n  configOutput,\n  saveConfig,\n  handleSnackbarOpen\n}) {\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      mt: 2\n    },\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: \"Configuration\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        color: \"error\",\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"DISCLAIMER:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 21\n        }, this), \" Storing the API Key in local storage is NOT SECURE and should never be done in a production environment. This is for demonstration purposes only!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          flexDirection: 'column',\n          gap: 2,\n          mt: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          label: \"API Key\",\n          variant: \"outlined\",\n          value: apiKey,\n          onChange: e => setApiKey(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"User ID\",\n          variant: \"outlined\",\n          value: userId,\n          onChange: e => setUserId(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Business ID\",\n          variant: \"outlined\",\n          value: businessId,\n          onChange: e => setBusinessId(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: saveConfig,\n          children: \"Save Config\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: configOutput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n}\n_c = Configuration;\nexport default Configuration;\nvar _c;\n$RefreshReg$(_c, \"Configuration\");","map":{"version":3,"names":["React","TextField","Button","Typography","Card","CardContent","Box","jsxDEV","_jsxDEV","Configuration","apiKey","setApiKey","userId","setUserId","businessId","setBusinessId","configOutput","saveConfig","handleSnackbarOpen","sx","mt","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","color","display","flexDirection","gap","label","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/icmp_events_api/front-end/src/components/Configuration.js"],"sourcesContent":["// File: src/components/Configuration.js\r\n// Last Modified: 2026-03-29\r\nimport React from 'react';\r\nimport { TextField, Button, Typography, Card, CardContent, Box } from '@mui/material';\r\n\r\nfunction Configuration({ apiKey, setApiKey, userId, setUserId, businessId, setBusinessId, configOutput, saveConfig, handleSnackbarOpen }) {\r\n    return (\r\n        <Card sx={{ mt: 2 }}>\r\n            <CardContent>\r\n                <Typography variant=\"h6\" gutterBottom>Configuration</Typography>\r\n                <Typography variant=\"body2\" color=\"error\">\r\n                    <b>DISCLAIMER:</b> Storing the API Key in local storage is NOT SECURE and should never be done in a production environment. This is for demonstration purposes only!\r\n                </Typography>\r\n                <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2, mt: 2 }}>\r\n                    <TextField label=\"API Key\" variant=\"outlined\" value={apiKey} onChange={(e) => setApiKey(e.target.value)} />\r\n                    <TextField label=\"User ID\" variant=\"outlined\" value={userId} onChange={(e) => setUserId(e.target.value)} />\r\n                    <TextField label=\"Business ID\" variant=\"outlined\" value={businessId} onChange={(e) => setBusinessId(e.target.value)} />\r\n                    <Button variant=\"contained\" onClick={saveConfig}>Save Config</Button>\r\n                    <Typography variant=\"body1\">{configOutput}</Typography>\r\n                </Box>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default Configuration;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}