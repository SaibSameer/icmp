{"ast":null,"code":"var _jsxFileName = \"C:\\\\icmp_events_api\\\\front-end\\\\src\\\\components\\\\TemplateSection.js\";\nimport React from 'react';\nimport { Typography } from '@mui/material';\nimport TemplateManagement from './TemplateManagement';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TemplateSection({\n  templateID,\n  setTemplateID,\n  templateName,\n  setTemplateName,\n  templateText,\n  setTemplateText,\n  createTemplate,\n  templateOutput\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(TemplateManagement, {\n      templateID: templateID,\n      setTemplateID: setTemplateID,\n      templateName: templateName,\n      setTemplateName: setTemplateName,\n      templateText: templateText,\n      setTemplateText: setTemplateText,\n      createTemplate: createTemplate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      children: templateOutput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n}\n_c = TemplateSection;\nexport default TemplateSection;\nvar _c;\n$RefreshReg$(_c, \"TemplateSection\");","map":{"version":3,"names":["React","Typography","TemplateManagement","jsxDEV","_jsxDEV","TemplateSection","templateID","setTemplateID","templateName","setTemplateName","templateText","setTemplateText","createTemplate","templateOutput","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","_c","$RefreshReg$"],"sources":["C:/icmp_events_api/front-end/src/components/TemplateSection.js"],"sourcesContent":["import React from 'react';\r\nimport { Typography } from '@mui/material';\r\nimport TemplateManagement from './TemplateManagement';\r\n\r\nfunction TemplateSection({ templateID, setTemplateID, templateName, setTemplateName, templateText, setTemplateText, createTemplate, templateOutput }) {\r\n    return (\r\n        <div>\r\n            <TemplateManagement\r\n                templateID={templateID}\r\n                setTemplateID={setTemplateID}\r\n                templateName={templateName}\r\n                setTemplateName={setTemplateName}\r\n                templateText={templateText}\r\n                setTemplateText={setTemplateText}\r\n                createTemplate={createTemplate}\r\n            />\r\n            <Typography variant=\"body1\">{templateOutput}</Typography>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TemplateSection; "],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,QAAQ,eAAe;AAC1C,OAAOC,kBAAkB,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,SAASC,eAAeA,CAAC;EAAEC,UAAU;EAAEC,aAAa;EAAEC,YAAY;EAAEC,eAAe;EAAEC,YAAY;EAAEC,eAAe;EAAEC,cAAc;EAAEC;AAAe,CAAC,EAAE;EAClJ,oBACIT,OAAA;IAAAU,QAAA,gBACIV,OAAA,CAACF,kBAAkB;MACfI,UAAU,EAAEA,UAAW;MACvBC,aAAa,EAAEA,aAAc;MAC7BC,YAAY,EAAEA,YAAa;MAC3BC,eAAe,EAAEA,eAAgB;MACjCC,YAAY,EAAEA,YAAa;MAC3BC,eAAe,EAAEA,eAAgB;MACjCC,cAAc,EAAEA;IAAe;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC,eACFd,OAAA,CAACH,UAAU;MAACkB,OAAO,EAAC,OAAO;MAAAL,QAAA,EAAED;IAAc;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAa,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxD,CAAC;AAEd;AAACE,EAAA,GAfQf,eAAe;AAiBxB,eAAeA,eAAe;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}