{"ast":null,"code":"var _jsxFileName = \"C:\\\\icmp_events_api\\\\front-end\\\\src\\\\components\\\\StageManager.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { Container, Typography, Paper, Button, Dialog, DialogTitle, DialogContent, DialogActions, TextField, CircularProgress, Grid, Box, IconButton, Divider, Alert, Snackbar, List, ListItem, ListItemText, ListItemSecondaryAction, Tooltip, FormControl, InputLabel, MenuItem, Select } from '@mui/material';\nimport AddIcon from '@mui/icons-material/Add';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport ArrowUpwardIcon from '@mui/icons-material/ArrowUpward';\nimport ArrowDownwardIcon from '@mui/icons-material/ArrowDownward';\nimport TemplateEditor from './TemplateEditor';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StageManager = () => {\n  _s();\n  const {\n    businessId,\n    agentId\n  } = useParams();\n  const navigate = useNavigate();\n  const [stages, setStages] = useState([]);\n  const [selectedStage, setSelectedStage] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [openDialog, setOpenDialog] = useState(false);\n  const [openTemplateEditor, setOpenTemplateEditor] = useState(false);\n  const [openDeleteDialog, setOpenDeleteDialog] = useState(false);\n  const [stageToDelete, setStageToDelete] = useState(null);\n  const [newStageName, setNewStageName] = useState('');\n  const [availableTemplates, setAvailableTemplates] = useState({\n    stage_selection: [],\n    data_extraction: [],\n    response_generation: []\n  });\n  const [defaultTemplates, setDefaultTemplates] = useState({\n    stage_selection: '',\n    data_extraction: '',\n    response_generation: ''\n  });\n\n  // Fetch templates for dropdowns\n  const fetchTemplates = useCallback(async () => {\n    try {\n      const response = await fetch('/templates', {\n        credentials: 'include'\n      });\n      if (!response.ok) throw new Error('Failed to fetch templates');\n      const templates = await response.json();\n\n      // Group templates by type\n      const templatesByType = {\n        stage_selection: [],\n        data_extraction: [],\n        response_generation: []\n      };\n      const defaultTemplateIds = {\n        stage_selection: '',\n        data_extraction: '',\n        response_generation: ''\n      };\n      templates.forEach(template => {\n        // Check if this is a regular template type\n        if (template.template_type in templatesByType) {\n          templatesByType[template.template_type].push(template);\n        }\n\n        // Check if this is a default template type\n        if (template.template_type.startsWith('default_')) {\n          // Extract the base type (e.g., from 'default_stage_selection' to 'stage_selection')\n          const baseType = template.template_type.replace('default_', '');\n          if (baseType in defaultTemplateIds) {\n            // Store the first default template's ID for each type\n            if (!defaultTemplateIds[baseType]) {\n              defaultTemplateIds[baseType] = template.template_id;\n            }\n          }\n        }\n      });\n      setAvailableTemplates(templatesByType);\n      setDefaultTemplates(defaultTemplateIds);\n    } catch (err) {\n      setError(err.message);\n    }\n  }, []);\n\n  // Fetch stages based on business ID and agent ID\n  const fetchStages = useCallback(async () => {\n    setIsLoading(true);\n    try {\n      let url = '/stages';\n      if (businessId) {\n        url += `?business_id=${businessId}`;\n        if (agentId) {\n          url += `&agent_id=${agentId}`;\n        }\n      }\n      const response = await fetch(url, {\n        credentials: 'include'\n      });\n      if (!response.ok) throw new Error('Failed to fetch stages');\n      const data = await response.json();\n      setStages(data);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [businessId, agentId]);\n  useEffect(() => {\n    fetchTemplates();\n    fetchStages();\n  }, [fetchTemplates, fetchStages]);\n  const handleCreateStage = async () => {\n    try {\n      if (!newStageName.trim()) {\n        setError('Stage name is required');\n        return;\n      }\n      const response = await fetch('/stages', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        body: JSON.stringify({\n          stage_name: newStageName,\n          business_id: businessId,\n          agent_id: agentId,\n          // Use default template IDs from our state\n          stage_selection_template_id: defaultTemplates.stage_selection || null,\n          data_extraction_template_id: defaultTemplates.data_extraction || null,\n          response_generation_template_id: defaultTemplates.response_generation || null,\n          stage_config: {\n            order: stages.length + 1\n          }\n        })\n      });\n      if (!response.ok) throw new Error('Failed to create stage');\n      await fetchStages();\n      setOpenDialog(false);\n      setNewStageName('');\n      setSuccess('Stage created successfully');\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  const handleDeleteStage = async () => {\n    if (!stageToDelete) return;\n    try {\n      const response = await fetch(`/stages/${stageToDelete.stage_id}`, {\n        method: 'DELETE',\n        credentials: 'include'\n      });\n      if (!response.ok) throw new Error('Failed to delete stage');\n      await fetchStages();\n      setOpenDeleteDialog(false);\n      setStageToDelete(null);\n      setSuccess('Stage deleted successfully');\n\n      // If this was the selected stage, clear selection\n      if (selectedStage && selectedStage.stage_id === stageToDelete.stage_id) {\n        setSelectedStage(null);\n        setOpenTemplateEditor(false);\n      }\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  const handleUpdateStage = async updatedStage => {\n    try {\n      const response = await fetch(`/stages/${updatedStage.stage_id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        body: JSON.stringify(updatedStage)\n      });\n      if (!response.ok) throw new Error('Failed to update stage');\n      await fetchStages();\n      setOpenTemplateEditor(false);\n      setSelectedStage(null);\n      setSuccess('Stage updated successfully');\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  const handleMoveStage = async (stageId, direction) => {\n    try {\n      const currentIndex = stages.findIndex(s => s.stage_id === stageId);\n      if (currentIndex === -1) return;\n\n      // If trying to move first item up or last item down, do nothing\n      if (currentIndex === 0 && direction === 'up' || currentIndex === stages.length - 1 && direction === 'down') {\n        return;\n      }\n      const targetIndex = direction === 'up' ? currentIndex - 1 : currentIndex + 1;\n\n      // Swap the order values in the stage_config\n      const updatedStages = [...stages];\n      const currentStage = {\n        ...updatedStages[currentIndex]\n      };\n      const targetStage = {\n        ...updatedStages[targetIndex]\n      };\n\n      // Update stage_config.order values\n      currentStage.stage_config = {\n        ...currentStage.stage_config,\n        order: targetIndex + 1\n      };\n      targetStage.stage_config = {\n        ...targetStage.stage_config,\n        order: currentIndex + 1\n      };\n\n      // Update both stages in the database\n      const currentUpdate = fetch(`/stages/${currentStage.stage_id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        body: JSON.stringify(currentStage)\n      });\n      const targetUpdate = fetch(`/stages/${targetStage.stage_id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        body: JSON.stringify(targetStage)\n      });\n      await Promise.all([currentUpdate, targetUpdate]);\n\n      // Refresh stages\n      await fetchStages();\n      setSuccess('Stage order updated');\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  const handleSaveTemplates = async updatedStage => {\n    await handleUpdateStage(updatedStage);\n  };\n  const handlePreviewTemplate = async templates => {\n    try {\n      const response = await fetch('/templates/preview', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        body: JSON.stringify({\n          templates,\n          context: {\n            conversation_history: [\"User: Hello, I need help.\", \"AI: How can I assist you today?\"],\n            message: \"I want to book a flight\",\n            stage_list: [\"Greeting\", \"Flight Booking\", \"Confirmation\"],\n            extracted_data: {\n              intent: \"flight_booking\"\n            }\n          }\n        })\n      });\n      if (!response.ok) throw new Error('Failed to preview template');\n      const data = await response.json();\n      return data;\n    } catch (err) {\n      setError(err.message);\n      throw err;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    sx: {\n      mt: 4,\n      mb: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        p: 3,\n        mb: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          alignItems: 'center',\n          mb: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          component: \"h1\",\n          gutterBottom: true,\n          sx: {\n            flexGrow: 1\n          },\n          children: [\"Stage Manager\", businessId && /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            component: \"span\",\n            color: \"text.secondary\",\n            children: [` - Business ID: ${businessId}`, agentId && ` - Agent ID: ${agentId}`]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 28\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 24\n          }, this),\n          onClick: () => setOpenDialog(true),\n          children: \"Create Stage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        sx: {\n          mb: 3\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 9\n      }, this), isLoading ? /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'center',\n          p: 4\n        },\n        children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: stages.length === 0 ? /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"info\",\n          children: \"No stages found. Create your first stage to get started.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(List, {\n          sx: {\n            bgcolor: 'background.paper'\n          },\n          children: [...stages].sort((a, b) => {\n            var _a$stage_config, _b$stage_config;\n            return (((_a$stage_config = a.stage_config) === null || _a$stage_config === void 0 ? void 0 : _a$stage_config.order) || Infinity) - (((_b$stage_config = b.stage_config) === null || _b$stage_config === void 0 ? void 0 : _b$stage_config.order) || Infinity);\n          }).map(stage => /*#__PURE__*/_jsxDEV(ListItem, {\n            button: true,\n            selected: (selectedStage === null || selectedStage === void 0 ? void 0 : selectedStage.stage_id) === stage.stage_id,\n            onClick: () => {\n              setSelectedStage(stage);\n              setOpenTemplateEditor(true);\n            },\n            sx: {\n              borderLeft: (selectedStage === null || selectedStage === void 0 ? void 0 : selectedStage.stage_id) === stage.stage_id ? '4px solid #1976d2' : '4px solid transparent',\n              mb: 1,\n              bgcolor: 'background.paper'\n            },\n            children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: stage.stage_name,\n              secondary: /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  component: \"span\",\n                  variant: \"body2\",\n                  color: \"text.primary\",\n                  children: `Stage ID: ${stage.stage_id}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 369,\n                  columnNumber: 27\n                }, this), stage.stage_config && stage.stage_config.order && ` • Order: ${stage.stage_config.order}`]\n              }, void 0, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n              children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n                title: \"Move Up\",\n                children: /*#__PURE__*/_jsxDEV(IconButton, {\n                  edge: \"end\",\n                  onClick: e => {\n                    e.stopPropagation();\n                    handleMoveStage(stage.stage_id, 'up');\n                  },\n                  disabled: stages.indexOf(stage) === 0,\n                  children: /*#__PURE__*/_jsxDEV(ArrowUpwardIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 387,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 379,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 378,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                title: \"Move Down\",\n                children: /*#__PURE__*/_jsxDEV(IconButton, {\n                  edge: \"end\",\n                  onClick: e => {\n                    e.stopPropagation();\n                    handleMoveStage(stage.stage_id, 'down');\n                  },\n                  disabled: stages.indexOf(stage) === stages.length - 1,\n                  children: /*#__PURE__*/_jsxDEV(ArrowDownwardIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 399,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 391,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 390,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                title: \"Edit Templates\",\n                children: /*#__PURE__*/_jsxDEV(IconButton, {\n                  edge: \"end\",\n                  onClick: e => {\n                    e.stopPropagation();\n                    setSelectedStage(stage);\n                    setOpenTemplateEditor(true);\n                  },\n                  children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 411,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 403,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 402,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                title: \"Delete Stage\",\n                children: /*#__PURE__*/_jsxDEV(IconButton, {\n                  edge: \"end\",\n                  onClick: e => {\n                    e.stopPropagation();\n                    setStageToDelete(stage);\n                    setOpenDeleteDialog(true);\n                  },\n                  children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 423,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 415,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 414,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 21\n            }, this)]\n          }, stage.stage_id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 15\n        }, this)\n      }, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openDialog,\n      onClose: () => setOpenDialog(false),\n      maxWidth: \"sm\",\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Create New Stage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          autoFocus: true,\n          margin: \"dense\",\n          id: \"name\",\n          label: \"Stage Name\",\n          type: \"text\",\n          fullWidth: true,\n          variant: \"outlined\",\n          value: newStageName,\n          onChange: e => setNewStageName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle2\",\n            gutterBottom: true,\n            children: \"Template Selection\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 452,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"text.secondary\",\n            gutterBottom: true,\n            children: \"The stage will be created with the following default templates. You can change them later.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 455,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            sx: {\n              mt: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(FormControl, {\n                fullWidth: true,\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  id: \"stage-selection-template-label\",\n                  children: \"Stage Selection Template\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 462,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  labelId: \"stage-selection-template-label\",\n                  value: defaultTemplates.stage_selection,\n                  label: \"Stage Selection Template\",\n                  onChange: e => setDefaultTemplates(prev => ({\n                    ...prev,\n                    stage_selection: e.target.value\n                  })),\n                  children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: \"\",\n                    children: /*#__PURE__*/_jsxDEV(\"em\", {\n                      children: \"None\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 472,\n                      columnNumber: 40\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 472,\n                    columnNumber: 21\n                  }, this), availableTemplates.stage_selection.map(template => /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: template.template_id,\n                    children: template.template_name\n                  }, template.template_id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 474,\n                    columnNumber: 23\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 463,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 461,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 460,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(FormControl, {\n                fullWidth: true,\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  id: \"data-extraction-template-label\",\n                  children: \"Data Extraction Template\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 484,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  labelId: \"data-extraction-template-label\",\n                  value: defaultTemplates.data_extraction,\n                  label: \"Data Extraction Template\",\n                  onChange: e => setDefaultTemplates(prev => ({\n                    ...prev,\n                    data_extraction: e.target.value\n                  })),\n                  children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: \"\",\n                    children: /*#__PURE__*/_jsxDEV(\"em\", {\n                      children: \"None\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 494,\n                      columnNumber: 40\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 494,\n                    columnNumber: 21\n                  }, this), availableTemplates.data_extraction.map(template => /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: template.template_id,\n                    children: template.template_name\n                  }, template.template_id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 496,\n                    columnNumber: 23\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 485,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 483,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 482,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(FormControl, {\n                fullWidth: true,\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  id: \"response-generation-template-label\",\n                  children: \"Response Generation Template\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 506,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  labelId: \"response-generation-template-label\",\n                  value: defaultTemplates.response_generation,\n                  label: \"Response Generation Template\",\n                  onChange: e => setDefaultTemplates(prev => ({\n                    ...prev,\n                    response_generation: e.target.value\n                  })),\n                  children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: \"\",\n                    children: /*#__PURE__*/_jsxDEV(\"em\", {\n                      children: \"None\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 516,\n                      columnNumber: 40\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 516,\n                    columnNumber: 21\n                  }, this), availableTemplates.response_generation.map(template => /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: template.template_id,\n                    children: template.template_name\n                  }, template.template_id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 518,\n                    columnNumber: 23\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 507,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 505,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 504,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 459,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setOpenDialog(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 529,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCreateStage,\n          variant: \"contained\",\n          color: \"primary\",\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 530,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 528,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openTemplateEditor && selectedStage !== null,\n      onClose: () => {\n        setOpenTemplateEditor(false);\n        setSelectedStage(null);\n      },\n      maxWidth: \"lg\",\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: [\"Edit Templates for \", selectedStage === null || selectedStage === void 0 ? void 0 : selectedStage.stage_name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 544,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: selectedStage && /*#__PURE__*/_jsxDEV(TemplateEditor, {\n          stage: selectedStage,\n          onSave: handleSaveTemplates,\n          onPreview: handlePreviewTemplate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 549,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 547,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            setOpenTemplateEditor(false);\n            setSelectedStage(null);\n          },\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 557,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 556,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 535,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openDeleteDialog,\n      onClose: () => setOpenDeleteDialog(false),\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Confirm Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 573,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"Are you sure you want to delete the stage \\\"\", stageToDelete === null || stageToDelete === void 0 ? void 0 : stageToDelete.stage_name, \"\\\"? This action cannot be undone.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 575,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 574,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setOpenDeleteDialog(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 580,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleDeleteStage,\n          color: \"error\",\n          variant: \"contained\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 581,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 579,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 569,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: !!error,\n      autoHideDuration: 6000,\n      onClose: () => setError(''),\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        onClose: () => setError(''),\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 591,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 586,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: !!success,\n      autoHideDuration: 6000,\n      onClose: () => setSuccess(''),\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"success\",\n        onClose: () => setSuccess(''),\n        children: success\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 601,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 596,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 312,\n    columnNumber: 5\n  }, this);\n};\n_s(StageManager, \"fRJT/jv1fH7xCfmtT+KODveV668=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = StageManager;\nexport default StageManager;\nvar _c;\n$RefreshReg$(_c, \"StageManager\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useParams","useNavigate","Container","Typography","Paper","Button","Dialog","DialogTitle","DialogContent","DialogActions","TextField","CircularProgress","Grid","Box","IconButton","Divider","Alert","Snackbar","List","ListItem","ListItemText","ListItemSecondaryAction","Tooltip","FormControl","InputLabel","MenuItem","Select","AddIcon","DeleteIcon","EditIcon","ArrowUpwardIcon","ArrowDownwardIcon","TemplateEditor","jsxDEV","_jsxDEV","Fragment","_Fragment","StageManager","_s","businessId","agentId","navigate","stages","setStages","selectedStage","setSelectedStage","isLoading","setIsLoading","error","setError","success","setSuccess","openDialog","setOpenDialog","openTemplateEditor","setOpenTemplateEditor","openDeleteDialog","setOpenDeleteDialog","stageToDelete","setStageToDelete","newStageName","setNewStageName","availableTemplates","setAvailableTemplates","stage_selection","data_extraction","response_generation","defaultTemplates","setDefaultTemplates","fetchTemplates","response","fetch","credentials","ok","Error","templates","json","templatesByType","defaultTemplateIds","forEach","template","template_type","push","startsWith","baseType","replace","template_id","err","message","fetchStages","url","data","handleCreateStage","trim","method","headers","body","JSON","stringify","stage_name","business_id","agent_id","stage_selection_template_id","data_extraction_template_id","response_generation_template_id","stage_config","order","length","handleDeleteStage","stage_id","handleUpdateStage","updatedStage","handleMoveStage","stageId","direction","currentIndex","findIndex","s","targetIndex","updatedStages","currentStage","targetStage","currentUpdate","targetUpdate","Promise","all","handleSaveTemplates","handlePreviewTemplate","context","conversation_history","stage_list","extracted_data","intent","maxWidth","sx","mt","mb","children","p","display","alignItems","variant","component","gutterBottom","flexGrow","color","fileName","_jsxFileName","lineNumber","columnNumber","startIcon","onClick","justifyContent","severity","bgcolor","sort","a","b","_a$stage_config","_b$stage_config","Infinity","map","stage","button","selected","borderLeft","primary","secondary","title","edge","e","stopPropagation","disabled","indexOf","open","onClose","fullWidth","autoFocus","margin","id","label","type","value","onChange","target","container","spacing","item","xs","labelId","prev","template_name","onSave","onPreview","autoHideDuration","_c","$RefreshReg$"],"sources":["C:/icmp_events_api/front-end/src/components/StageManager.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport {\r\n  Container,\r\n  Typography,\r\n  Paper,\r\n  Button,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField,\r\n  CircularProgress,\r\n  Grid,\r\n  Box,\r\n  IconButton,\r\n  Divider,\r\n  Alert,\r\n  Snackbar,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemSecondaryAction,\r\n  Tooltip,\r\n  FormControl,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select\r\n} from '@mui/material';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport ArrowUpwardIcon from '@mui/icons-material/ArrowUpward';\r\nimport ArrowDownwardIcon from '@mui/icons-material/ArrowDownward';\r\nimport TemplateEditor from './TemplateEditor';\r\n\r\nconst StageManager = () => {\r\n  const { businessId, agentId } = useParams();\r\n  const navigate = useNavigate();\r\n  const [stages, setStages] = useState([]);\r\n  const [selectedStage, setSelectedStage] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState('');\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n  const [openTemplateEditor, setOpenTemplateEditor] = useState(false);\r\n  const [openDeleteDialog, setOpenDeleteDialog] = useState(false);\r\n  const [stageToDelete, setStageToDelete] = useState(null);\r\n  const [newStageName, setNewStageName] = useState('');\r\n  const [availableTemplates, setAvailableTemplates] = useState({\r\n    stage_selection: [],\r\n    data_extraction: [],\r\n    response_generation: []\r\n  });\r\n  const [defaultTemplates, setDefaultTemplates] = useState({\r\n    stage_selection: '',\r\n    data_extraction: '',\r\n    response_generation: ''\r\n  });\r\n\r\n  // Fetch templates for dropdowns\r\n  const fetchTemplates = useCallback(async () => {\r\n    try {\r\n      const response = await fetch('/templates', {\r\n        credentials: 'include'\r\n      });\r\n      \r\n      if (!response.ok) throw new Error('Failed to fetch templates');\r\n      \r\n      const templates = await response.json();\r\n      \r\n      // Group templates by type\r\n      const templatesByType = {\r\n        stage_selection: [],\r\n        data_extraction: [],\r\n        response_generation: []\r\n      };\r\n      \r\n      const defaultTemplateIds = {\r\n        stage_selection: '',\r\n        data_extraction: '',\r\n        response_generation: ''\r\n      };\r\n      \r\n      templates.forEach(template => {\r\n        // Check if this is a regular template type\r\n        if (template.template_type in templatesByType) {\r\n          templatesByType[template.template_type].push(template);\r\n        }\r\n        \r\n        // Check if this is a default template type\r\n        if (template.template_type.startsWith('default_')) {\r\n          // Extract the base type (e.g., from 'default_stage_selection' to 'stage_selection')\r\n          const baseType = template.template_type.replace('default_', '');\r\n          if (baseType in defaultTemplateIds) {\r\n            // Store the first default template's ID for each type\r\n            if (!defaultTemplateIds[baseType]) {\r\n              defaultTemplateIds[baseType] = template.template_id;\r\n            }\r\n          }\r\n        }\r\n      });\r\n      \r\n      setAvailableTemplates(templatesByType);\r\n      setDefaultTemplates(defaultTemplateIds);\r\n    } catch (err) {\r\n      setError(err.message);\r\n    }\r\n  }, []);\r\n\r\n  // Fetch stages based on business ID and agent ID\r\n  const fetchStages = useCallback(async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      let url = '/stages';\r\n      if (businessId) {\r\n        url += `?business_id=${businessId}`;\r\n        if (agentId) {\r\n          url += `&agent_id=${agentId}`;\r\n        }\r\n      }\r\n      \r\n      const response = await fetch(url, {\r\n        credentials: 'include'\r\n      });\r\n      \r\n      if (!response.ok) throw new Error('Failed to fetch stages');\r\n      \r\n      const data = await response.json();\r\n      setStages(data);\r\n    } catch (err) {\r\n      setError(err.message);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [businessId, agentId]);\r\n\r\n  useEffect(() => {\r\n    fetchTemplates();\r\n    fetchStages();\r\n  }, [fetchTemplates, fetchStages]);\r\n\r\n  const handleCreateStage = async () => {\r\n    try {\r\n      if (!newStageName.trim()) {\r\n        setError('Stage name is required');\r\n        return;\r\n      }\r\n\r\n      const response = await fetch('/stages', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify({\r\n          stage_name: newStageName,\r\n          business_id: businessId,\r\n          agent_id: agentId,\r\n          // Use default template IDs from our state\r\n          stage_selection_template_id: defaultTemplates.stage_selection || null,\r\n          data_extraction_template_id: defaultTemplates.data_extraction || null,\r\n          response_generation_template_id: defaultTemplates.response_generation || null,\r\n          stage_config: { order: stages.length + 1 }\r\n        }),\r\n      });\r\n      \r\n      if (!response.ok) throw new Error('Failed to create stage');\r\n      \r\n      await fetchStages();\r\n      setOpenDialog(false);\r\n      setNewStageName('');\r\n      setSuccess('Stage created successfully');\r\n    } catch (err) {\r\n      setError(err.message);\r\n    }\r\n  };\r\n\r\n  const handleDeleteStage = async () => {\r\n    if (!stageToDelete) return;\r\n    \r\n    try {\r\n      const response = await fetch(`/stages/${stageToDelete.stage_id}`, {\r\n        method: 'DELETE',\r\n        credentials: 'include'\r\n      });\r\n      \r\n      if (!response.ok) throw new Error('Failed to delete stage');\r\n      \r\n      await fetchStages();\r\n      setOpenDeleteDialog(false);\r\n      setStageToDelete(null);\r\n      setSuccess('Stage deleted successfully');\r\n      \r\n      // If this was the selected stage, clear selection\r\n      if (selectedStage && selectedStage.stage_id === stageToDelete.stage_id) {\r\n        setSelectedStage(null);\r\n        setOpenTemplateEditor(false);\r\n      }\r\n    } catch (err) {\r\n      setError(err.message);\r\n    }\r\n  };\r\n\r\n  const handleUpdateStage = async (updatedStage) => {\r\n    try {\r\n      const response = await fetch(`/stages/${updatedStage.stage_id}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify(updatedStage),\r\n      });\r\n      \r\n      if (!response.ok) throw new Error('Failed to update stage');\r\n      \r\n      await fetchStages();\r\n      setOpenTemplateEditor(false);\r\n      setSelectedStage(null);\r\n      setSuccess('Stage updated successfully');\r\n    } catch (err) {\r\n      setError(err.message);\r\n    }\r\n  };\r\n\r\n  const handleMoveStage = async (stageId, direction) => {\r\n    try {\r\n      const currentIndex = stages.findIndex(s => s.stage_id === stageId);\r\n      if (currentIndex === -1) return;\r\n      \r\n      // If trying to move first item up or last item down, do nothing\r\n      if ((currentIndex === 0 && direction === 'up') || \r\n          (currentIndex === stages.length - 1 && direction === 'down')) {\r\n        return;\r\n      }\r\n      \r\n      const targetIndex = direction === 'up' ? currentIndex - 1 : currentIndex + 1;\r\n      \r\n      // Swap the order values in the stage_config\r\n      const updatedStages = [...stages];\r\n      const currentStage = { ...updatedStages[currentIndex] };\r\n      const targetStage = { ...updatedStages[targetIndex] };\r\n      \r\n      // Update stage_config.order values\r\n      currentStage.stage_config = { ...currentStage.stage_config, order: targetIndex + 1 };\r\n      targetStage.stage_config = { ...targetStage.stage_config, order: currentIndex + 1 };\r\n      \r\n      // Update both stages in the database\r\n      const currentUpdate = fetch(`/stages/${currentStage.stage_id}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify(currentStage),\r\n      });\r\n      \r\n      const targetUpdate = fetch(`/stages/${targetStage.stage_id}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify(targetStage),\r\n      });\r\n      \r\n      await Promise.all([currentUpdate, targetUpdate]);\r\n      \r\n      // Refresh stages\r\n      await fetchStages();\r\n      setSuccess('Stage order updated');\r\n    } catch (err) {\r\n      setError(err.message);\r\n    }\r\n  };\r\n\r\n  const handleSaveTemplates = async (updatedStage) => {\r\n    await handleUpdateStage(updatedStage);\r\n  };\r\n\r\n  const handlePreviewTemplate = async (templates) => {\r\n    try {\r\n      const response = await fetch('/templates/preview', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify({\r\n          templates,\r\n          context: {\r\n            conversation_history: [\"User: Hello, I need help.\", \"AI: How can I assist you today?\"],\r\n            message: \"I want to book a flight\",\r\n            stage_list: [\"Greeting\", \"Flight Booking\", \"Confirmation\"],\r\n            extracted_data: { intent: \"flight_booking\" }\r\n          }\r\n        }),\r\n      });\r\n      \r\n      if (!response.ok) throw new Error('Failed to preview template');\r\n      \r\n      const data = await response.json();\r\n      return data;\r\n    } catch (err) {\r\n      setError(err.message);\r\n      throw err;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\r\n      <Paper sx={{ p: 3, mb: 4 }}>\r\n        <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\r\n          <Typography variant=\"h5\" component=\"h1\" gutterBottom sx={{ flexGrow: 1 }}>\r\n            Stage Manager\r\n            {businessId && <Typography variant=\"subtitle1\" component=\"span\" color=\"text.secondary\">\r\n              {` - Business ID: ${businessId}`}\r\n              {agentId && ` - Agent ID: ${agentId}`}\r\n            </Typography>}\r\n          </Typography>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            startIcon={<AddIcon />}\r\n            onClick={() => setOpenDialog(true)}\r\n          >\r\n            Create Stage\r\n          </Button>\r\n        </Box>\r\n        \r\n        <Divider sx={{ mb: 3 }} />\r\n        \r\n        {isLoading ? (\r\n          <Box sx={{ display: 'flex', justifyContent: 'center', p: 4 }}>\r\n            <CircularProgress />\r\n          </Box>\r\n        ) : (\r\n          <>\r\n            {stages.length === 0 ? (\r\n              <Alert severity=\"info\">\r\n                No stages found. Create your first stage to get started.\r\n              </Alert>\r\n            ) : (\r\n              <List sx={{ bgcolor: 'background.paper' }}>\r\n                {[...stages].sort((a, b) => \r\n                  (a.stage_config?.order || Infinity) - (b.stage_config?.order || Infinity)\r\n                ).map((stage) => (\r\n                  <ListItem \r\n                    key={stage.stage_id}\r\n                    button\r\n                    selected={selectedStage?.stage_id === stage.stage_id}\r\n                    onClick={() => {\r\n                      setSelectedStage(stage);\r\n                      setOpenTemplateEditor(true);\r\n                    }}\r\n                    sx={{ \r\n                      borderLeft: selectedStage?.stage_id === stage.stage_id \r\n                        ? '4px solid #1976d2' \r\n                        : '4px solid transparent',\r\n                      mb: 1,\r\n                      bgcolor: 'background.paper'\r\n                    }}\r\n                  >\r\n                    <ListItemText\r\n                      primary={stage.stage_name}\r\n                      secondary={\r\n                        <>\r\n                          <Typography component=\"span\" variant=\"body2\" color=\"text.primary\">\r\n                            {`Stage ID: ${stage.stage_id}`}\r\n                          </Typography>\r\n                          {stage.stage_config && stage.stage_config.order && \r\n                            ` • Order: ${stage.stage_config.order}`}\r\n                        </>\r\n                      }\r\n                    />\r\n                    <ListItemSecondaryAction>\r\n                      <Tooltip title=\"Move Up\">\r\n                        <IconButton \r\n                          edge=\"end\" \r\n                          onClick={(e) => {\r\n                            e.stopPropagation();\r\n                            handleMoveStage(stage.stage_id, 'up');\r\n                          }} \r\n                          disabled={stages.indexOf(stage) === 0}\r\n                        >\r\n                          <ArrowUpwardIcon />\r\n                        </IconButton>\r\n                      </Tooltip>\r\n                      <Tooltip title=\"Move Down\">\r\n                        <IconButton \r\n                          edge=\"end\" \r\n                          onClick={(e) => {\r\n                            e.stopPropagation();\r\n                            handleMoveStage(stage.stage_id, 'down');\r\n                          }} \r\n                          disabled={stages.indexOf(stage) === stages.length - 1}\r\n                        >\r\n                          <ArrowDownwardIcon />\r\n                        </IconButton>\r\n                      </Tooltip>\r\n                      <Tooltip title=\"Edit Templates\">\r\n                        <IconButton \r\n                          edge=\"end\" \r\n                          onClick={(e) => {\r\n                            e.stopPropagation();\r\n                            setSelectedStage(stage);\r\n                            setOpenTemplateEditor(true);\r\n                          }}\r\n                        >\r\n                          <EditIcon />\r\n                        </IconButton>\r\n                      </Tooltip>\r\n                      <Tooltip title=\"Delete Stage\">\r\n                        <IconButton \r\n                          edge=\"end\" \r\n                          onClick={(e) => {\r\n                            e.stopPropagation();\r\n                            setStageToDelete(stage);\r\n                            setOpenDeleteDialog(true);\r\n                          }}\r\n                        >\r\n                          <DeleteIcon />\r\n                        </IconButton>\r\n                      </Tooltip>\r\n                    </ListItemSecondaryAction>\r\n                  </ListItem>\r\n                ))}\r\n              </List>\r\n            )}\r\n          </>\r\n        )}\r\n      </Paper>\r\n      \r\n      {/* Create Stage Dialog */}\r\n      <Dialog open={openDialog} onClose={() => setOpenDialog(false)} maxWidth=\"sm\" fullWidth>\r\n        <DialogTitle>Create New Stage</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"Stage Name\"\r\n            type=\"text\"\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            value={newStageName}\r\n            onChange={(e) => setNewStageName(e.target.value)}\r\n          />\r\n          \r\n          <Box sx={{ mt: 2 }}>\r\n            <Typography variant=\"subtitle2\" gutterBottom>\r\n              Template Selection\r\n            </Typography>\r\n            <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>\r\n              The stage will be created with the following default templates. You can change them later.\r\n            </Typography>\r\n            \r\n            <Grid container spacing={2} sx={{ mt: 1 }}>\r\n              <Grid item xs={12}>\r\n                <FormControl fullWidth>\r\n                  <InputLabel id=\"stage-selection-template-label\">Stage Selection Template</InputLabel>\r\n                  <Select\r\n                    labelId=\"stage-selection-template-label\"\r\n                    value={defaultTemplates.stage_selection}\r\n                    label=\"Stage Selection Template\"\r\n                    onChange={(e) => setDefaultTemplates(prev => ({\r\n                      ...prev,\r\n                      stage_selection: e.target.value\r\n                    }))}\r\n                  >\r\n                    <MenuItem value=\"\"><em>None</em></MenuItem>\r\n                    {availableTemplates.stage_selection.map(template => (\r\n                      <MenuItem key={template.template_id} value={template.template_id}>\r\n                        {template.template_name}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n              \r\n              <Grid item xs={12}>\r\n                <FormControl fullWidth>\r\n                  <InputLabel id=\"data-extraction-template-label\">Data Extraction Template</InputLabel>\r\n                  <Select\r\n                    labelId=\"data-extraction-template-label\"\r\n                    value={defaultTemplates.data_extraction}\r\n                    label=\"Data Extraction Template\"\r\n                    onChange={(e) => setDefaultTemplates(prev => ({\r\n                      ...prev,\r\n                      data_extraction: e.target.value\r\n                    }))}\r\n                  >\r\n                    <MenuItem value=\"\"><em>None</em></MenuItem>\r\n                    {availableTemplates.data_extraction.map(template => (\r\n                      <MenuItem key={template.template_id} value={template.template_id}>\r\n                        {template.template_name}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n              \r\n              <Grid item xs={12}>\r\n                <FormControl fullWidth>\r\n                  <InputLabel id=\"response-generation-template-label\">Response Generation Template</InputLabel>\r\n                  <Select\r\n                    labelId=\"response-generation-template-label\"\r\n                    value={defaultTemplates.response_generation}\r\n                    label=\"Response Generation Template\"\r\n                    onChange={(e) => setDefaultTemplates(prev => ({\r\n                      ...prev,\r\n                      response_generation: e.target.value\r\n                    }))}\r\n                  >\r\n                    <MenuItem value=\"\"><em>None</em></MenuItem>\r\n                    {availableTemplates.response_generation.map(template => (\r\n                      <MenuItem key={template.template_id} value={template.template_id}>\r\n                        {template.template_name}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setOpenDialog(false)}>Cancel</Button>\r\n          <Button onClick={handleCreateStage} variant=\"contained\" color=\"primary\">Create</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      \r\n      {/* Template Editor Dialog */}\r\n      <Dialog \r\n        open={openTemplateEditor && selectedStage !== null} \r\n        onClose={() => {\r\n          setOpenTemplateEditor(false);\r\n          setSelectedStage(null);\r\n        }}\r\n        maxWidth=\"lg\"\r\n        fullWidth\r\n      >\r\n        <DialogTitle>\r\n          Edit Templates for {selectedStage?.stage_name}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          {selectedStage && (\r\n            <TemplateEditor \r\n              stage={selectedStage} \r\n              onSave={handleSaveTemplates}\r\n              onPreview={handlePreviewTemplate}\r\n            />\r\n          )}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button \r\n            onClick={() => {\r\n              setOpenTemplateEditor(false);\r\n              setSelectedStage(null);\r\n            }}\r\n          >\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      \r\n      {/* Delete Confirmation Dialog */}\r\n      <Dialog\r\n        open={openDeleteDialog}\r\n        onClose={() => setOpenDeleteDialog(false)}\r\n      >\r\n        <DialogTitle>Confirm Delete</DialogTitle>\r\n        <DialogContent>\r\n          <Typography>\r\n            Are you sure you want to delete the stage \"{stageToDelete?.stage_name}\"? This action cannot be undone.\r\n          </Typography>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setOpenDeleteDialog(false)}>Cancel</Button>\r\n          <Button onClick={handleDeleteStage} color=\"error\" variant=\"contained\">Delete</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      \r\n      {/* Error and Success Snackbars */}\r\n      <Snackbar\r\n        open={!!error}\r\n        autoHideDuration={6000}\r\n        onClose={() => setError('')}\r\n      >\r\n        <Alert severity=\"error\" onClose={() => setError('')}>\r\n          {error}\r\n        </Alert>\r\n      </Snackbar>\r\n      \r\n      <Snackbar\r\n        open={!!success}\r\n        autoHideDuration={6000}\r\n        onClose={() => setSuccess('')}\r\n      >\r\n        <Alert severity=\"success\" onClose={() => setSuccess('')}>\r\n          {success}\r\n        </Alert>\r\n      </Snackbar>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default StageManager; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}