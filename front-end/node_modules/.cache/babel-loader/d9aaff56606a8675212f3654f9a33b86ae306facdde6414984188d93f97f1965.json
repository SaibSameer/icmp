{"ast":null,"code":"var _jsxFileName = \"C:\\\\icmp_events_api\\\\front-end\\\\src\\\\components\\\\StageEditor.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { useParams, useNavigate, useLocation } from 'react-router-dom';\nimport { Box, Paper, Typography, TextField, Button, Tabs, Tab, Grid, Alert, Snackbar, IconButton, Tooltip, FormControl, InputLabel, MenuItem, Select, CircularProgress, Divider, Chip, Dialog, DialogTitle, DialogContent, DialogActions } from '@mui/material';\nimport SaveIcon from '@mui/icons-material/Save';\nimport PreviewIcon from '@mui/icons-material/Preview';\nimport RestartAltIcon from '@mui/icons-material/RestartAlt';\nimport HelpOutlineIcon from '@mui/icons-material/HelpOutline';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\n\n// Global request cache to prevent duplicate API calls\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst apiCache = {\n  cache: {},\n  get: function (url) {\n    var _this$cache$url;\n    return (_this$cache$url = this.cache[url]) === null || _this$cache$url === void 0 ? void 0 : _this$cache$url.data;\n  },\n  set: function (url, data, ttl = 60000) {\n    // Default TTL: 1 minute\n    this.cache[url] = {\n      data,\n      expiry: Date.now() + ttl\n    };\n  },\n  isValid: function (url) {\n    const item = this.cache[url];\n    return item && item.expiry > Date.now();\n  },\n  clear: function () {\n    this.cache = {};\n  }\n};\n\n// Cached fetch function\nconst cachedFetch = async (url, options = {}, ttl = 60000) => {\n  const cacheKey = url + (options.body ? JSON.stringify(options.body) : '');\n\n  // Return cached data if available and not expired\n  if (!options.method || options.method === 'GET') {\n    if (apiCache.isValid(cacheKey)) {\n      console.log(`Using cached data for: ${url}`);\n      return {\n        ok: true,\n        json: async () => apiCache.get(cacheKey)\n      };\n    }\n  }\n\n  // Perform the fetch\n  const response = await fetch(url, options);\n\n  // Cache the result for GET requests\n  if (response.ok && (!options.method || options.method === 'GET')) {\n    const data = await response.json();\n    apiCache.set(cacheKey, data, ttl);\n\n    // Return an object that mimics the fetch response\n    return {\n      ok: true,\n      json: async () => data\n    };\n  }\n  return response;\n};\n\n// TabPanel component for the tabs\nfunction TabPanel(props) {\n  const {\n    children,\n    value,\n    index,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: `tabpanel-${index}`,\n    \"aria-labelledby\": `tab-${index}`,\n    ...other,\n    style: {\n      padding: '20px 0'\n    },\n    children: value === index && /*#__PURE__*/_jsxDEV(Box, {\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n_c = TabPanel;\nconst StageEditor = () => {\n  _s();\n  var _templates$templateTo, _templates$templateTo2;\n  const {\n    stageId\n  } = useParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  // Check local storage and cookies for business ID and API key\n  const getStoredValue = key => {\n    var _document$cookie$spli;\n    // Try localStorage first\n    const localStorageValue = localStorage.getItem(key);\n    if (localStorageValue) return localStorageValue;\n\n    // Then try cookies\n    return (_document$cookie$spli = document.cookie.split('; ').find(row => row.startsWith(`${key}=`))) === null || _document$cookie$spli === void 0 ? void 0 : _document$cookie$spli.split('=')[1];\n  };\n  const queryParams = new URLSearchParams(location.search);\n  const queryBusinessId = queryParams.get('business_id');\n\n  // Location state values as fallback\n  const {\n    businessId: locationBusinessId,\n    agentId: locationAgentId,\n    isNewStage\n  } = location.state || {};\n\n  // Get stored values\n  const storedBusinessId = getStoredValue('businessId');\n  const storedApiKey = getStoredValue('businessApiKey');\n\n  // Use query parameters first, then location state, then stored values\n  const [businessId, setBusinessId] = useState(queryBusinessId || locationBusinessId || storedBusinessId || '');\n  const [businessApiKey, setBusinessApiKey] = useState(storedApiKey || '');\n  const [showBusinessIdInput, setShowBusinessIdInput] = useState(!businessId || !businessApiKey);\n  const agentId = queryParams.get('agent_id') || locationAgentId;\n  const [stage, setStage] = useState(null);\n  const [stageName, setStageName] = useState('');\n  const [stageDescription, setStageDescription] = useState('');\n  const [tabValue, setTabValue] = useState(0);\n  const [templates, setTemplates] = useState({\n    stage_selection: {\n      id: '',\n      text: '',\n      type: ''\n    },\n    data_extraction: {\n      id: '',\n      text: '',\n      type: ''\n    },\n    response_generation: {\n      id: '',\n      text: '',\n      type: ''\n    }\n  });\n  const [availableTemplates, setAvailableTemplates] = useState({\n    stage_selection: [],\n    data_extraction: [],\n    response_generation: [],\n    default_stage_selection: [],\n    default_data_extraction: [],\n    default_response_generation: []\n  });\n  const [variables, setVariables] = useState({\n    stage_selection: [],\n    data_extraction: [],\n    response_generation: []\n  });\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [previewData, setPreviewData] = useState(null);\n\n  // Add template saving loading states\n  const [savingTemplates, setSavingTemplates] = useState({\n    stage_selection: false,\n    data_extraction: false,\n    response_generation: false\n  });\n\n  // Add template save confirmation dialog\n  const [showConfirmDialog, setShowConfirmDialog] = useState(false);\n  const [templateToSave, setTemplateToSave] = useState('');\n  const [saveAsDefault, setSaveAsDefault] = useState(false);\n\n  // Track if component is mounted\n  const isMounted = useRef(true);\n\n  // Clear any previous fetch timeouts on unmount\n  useEffect(() => {\n    return () => {\n      isMounted.current = false;\n    };\n  }, []);\n\n  // Function to open the confirmation dialog\n  const confirmSaveTemplate = (type, asDefault = false) => {\n    setTemplateToSave(type);\n    setSaveAsDefault(asDefault);\n    setShowConfirmDialog(true);\n  };\n\n  // Function to handle dialog confirm\n  const handleConfirmSave = async () => {\n    setShowConfirmDialog(false);\n    if (templateToSave) {\n      await saveTemplate(templateToSave, saveAsDefault);\n    }\n  };\n\n  // Add a throttled fetch for all templates with proper dependencies\n  const fetchAllTemplates = useCallback(async () => {\n    if (!businessId || !isMounted.current) return;\n    setIsLoading(true);\n    try {\n      // Use cached fetch with 5 minute TTL for templates\n      const response = await cachedFetch(`/templates?business_id=${businessId}&api_key=${businessApiKey}`, {\n        headers: {\n          'Content-Type': 'application/json',\n          'X-API-Key': businessApiKey,\n          'API-Key': businessApiKey,\n          'Authorization': businessApiKey\n        },\n        credentials: 'include'\n      }, 5 * 60 * 1000);\n      if (!response.ok) throw new Error('Failed to fetch templates');\n      const data = await response.json();\n\n      // Organize templates by type\n      const templatesByType = {\n        stage_selection: [],\n        data_extraction: [],\n        response_generation: [],\n        default_stage_selection: [],\n        default_data_extraction: [],\n        default_response_generation: []\n      };\n      data.forEach(template => {\n        if (templatesByType[template.template_type]) {\n          templatesByType[template.template_type].push(template);\n        }\n      });\n      if (isMounted.current) {\n        setAvailableTemplates(templatesByType);\n      }\n    } catch (err) {\n      if (isMounted.current) {\n        setError(err.message || 'Failed to fetch templates');\n      }\n    } finally {\n      if (isMounted.current) {\n        setIsLoading(false);\n      }\n    }\n  }, [businessId, businessApiKey]);\n\n  // Fetch stage data when the component mounts\n  useEffect(() => {\n    if (!businessId || !businessApiKey) {\n      // Don't set loading if we don't have credentials yet\n      return;\n    }\n    if (businessId) {\n      // Store businessId in both localStorage and cookie for future use\n      localStorage.setItem('businessId', businessId);\n      document.cookie = `businessId=${businessId}; path=/; max-age=86400`;\n    }\n    if (businessApiKey) {\n      // Store businessApiKey in both localStorage and cookie for future use\n      localStorage.setItem('businessApiKey', businessApiKey);\n      document.cookie = `businessApiKey=${businessApiKey}; path=/; max-age=86400`;\n    }\n    let isActive = true;\n    const loadStage = async () => {\n      try {\n        // For \"new\" stage - don't fetch, just set up the initial state\n        if (stageId === 'new' || isNewStage) {\n          if (isMounted.current) {\n            setStage({\n              stage_name: '',\n              stage_description: '',\n              business_id: businessId,\n              agent_id: agentId,\n              stage_selection_template_id: null,\n              data_extraction_template_id: null,\n              response_generation_template_id: null,\n              stage_config: {\n                order: 0\n              }\n            });\n            setIsLoading(false); // Important: reset loading state for new stage\n          }\n        } else if (stageId) {\n          // Only fetch existing stage data if not creating a new one\n          await fetchStage(stageId);\n        } else {\n          // No stage ID at all - set initial state and reset loading\n          if (isMounted.current) {\n            setIsLoading(false);\n          }\n        }\n\n        // Only fetch available templates once\n        if (isActive && businessId) {\n          fetchAllTemplates().catch(err => {\n            console.error('Error fetching templates:', err);\n            if (isMounted.current) {\n              setError('Error fetching templates. Please try refreshing the page.');\n              setIsLoading(false); // Ensure loading state is reset on error\n            }\n          });\n        }\n      } catch (err) {\n        console.error('Error in loadStage:', err);\n        if (isMounted.current) {\n          setError('Error loading stage data. Please try refreshing the page.');\n          setIsLoading(false); // Ensure loading state is reset on error\n        }\n      }\n    };\n    setIsLoading(true); // Set loading state before starting\n    loadStage();\n    return () => {\n      isActive = false;\n    };\n  }, [stageId, businessId, businessApiKey, agentId, isNewStage, fetchAllTemplates]);\n\n  // Fetch specific stage data\n  const fetchStage = async id => {\n    if (!isMounted.current || !businessId || !businessApiKey) return;\n    setIsLoading(true);\n    try {\n      const response = await cachedFetch(`/stages/${id}?business_id=${businessId}&api_key=${businessApiKey}`, {\n        headers: {\n          'Content-Type': 'application/json',\n          'X-API-Key': businessApiKey,\n          'API-Key': businessApiKey,\n          'Authorization': businessApiKey\n        },\n        credentials: 'include'\n      });\n      if (!response.ok) throw new Error('Failed to fetch stage');\n      const data = await response.json();\n      if (isMounted.current) {\n        setStage(data);\n        setStageName(data.stage_name || '');\n        setStageDescription(data.stage_description || '');\n\n        // For each template ID in the stage, fetch the template content\n        if (data.stage_selection_template_id) {\n          fetchTemplate(data.stage_selection_template_id, 'stage_selection');\n        }\n        if (data.data_extraction_template_id) {\n          fetchTemplate(data.data_extraction_template_id, 'data_extraction');\n        }\n        if (data.response_generation_template_id) {\n          fetchTemplate(data.response_generation_template_id, 'response_generation');\n        }\n      }\n    } catch (err) {\n      if (isMounted.current) {\n        setError(err.message);\n      }\n    } finally {\n      if (isMounted.current) {\n        setIsLoading(false);\n      }\n    }\n  };\n  const fetchTemplate = useCallback(async (templateId, type) => {\n    if (!isMounted.current || !businessId || !businessApiKey) return;\n    try {\n      const response = await cachedFetch(`/templates/${templateId}?business_id=${businessId}&api_key=${businessApiKey}`, {\n        headers: {\n          'Content-Type': 'application/json',\n          'X-API-Key': businessApiKey,\n          'API-Key': businessApiKey,\n          'Authorization': businessApiKey\n        },\n        credentials: 'include'\n      });\n      if (!response.ok) throw new Error(`Failed to fetch ${type} template`);\n      const data = await response.json();\n      if (isMounted.current) {\n        setTemplates(prev => ({\n          ...prev,\n          [type]: {\n            id: data.template_id,\n            text: data.template_text,\n            type: data.template_type\n          }\n        }));\n\n        // Extract variables from template\n        setVariables(prev => ({\n          ...prev,\n          [type]: extractVariables(data.template_text)\n        }));\n      }\n    } catch (err) {\n      if (isMounted.current) {\n        setError(err.message);\n      }\n    }\n  }, [businessId, businessApiKey]);\n  const extractVariables = template => {\n    if (!template) return [];\n    const matches = template.match(/\\{([^}]+)\\}/g) || [];\n    return matches.map(match => match.slice(1, -1));\n  };\n  const handleTemplateChange = (type, value) => {\n    setTemplates(prev => ({\n      ...prev,\n      [type]: {\n        ...prev[type],\n        text: value\n      }\n    }));\n    // Update variables when template changes\n    setVariables(prev => ({\n      ...prev,\n      [type]: extractVariables(value)\n    }));\n  };\n  const handleTemplateSelect = async (type, templateId) => {\n    // If selecting \"None\", clear the template\n    if (!templateId) {\n      setTemplates(prev => ({\n        ...prev,\n        [type]: {\n          id: '',\n          text: '',\n          type: ''\n        }\n      }));\n      setVariables(prev => ({\n        ...prev,\n        [type]: []\n      }));\n      return;\n    }\n\n    // Fetch the selected template\n    await fetchTemplate(templateId, type);\n  };\n  const handleApplyDefaultTemplate = async type => {\n    // Map regular types to their default counterparts\n    const defaultTypeMap = {\n      'stage_selection': 'default_stage_selection',\n      'data_extraction': 'default_data_extraction',\n      'response_generation': 'default_response_generation'\n    };\n    const defaultType = defaultTypeMap[type];\n\n    // Find default templates of the corresponding type\n    const defaultTemplates = availableTemplates[defaultType];\n    if (defaultTemplates.length === 0) {\n      setError(`No default templates available for ${type}`);\n      return;\n    }\n\n    // For simplicity, use the first default template\n    const defaultTemplate = defaultTemplates[0];\n\n    // Apply the default template text (but keep the original ID)\n    setTemplates(prev => ({\n      ...prev,\n      [type]: {\n        ...prev[type],\n        text: defaultTemplate.template_text,\n        type: type // Keep the original type, not the default type\n      }\n    }));\n\n    // Update variables\n    setVariables(prev => ({\n      ...prev,\n      [type]: extractVariables(defaultTemplate.template_text)\n    }));\n    setSuccess(`Applied default template for ${type}`);\n  };\n  const handlePreview = async templateType => {\n    try {\n      setPreviewLoading(true);\n      setPreviewError('');\n      const templateText = templates[templateType].text;\n      if (!templateText.trim()) {\n        setPreviewError('Template text is empty');\n        return;\n      }\n      if (!businessApiKey) {\n        setPreviewError('Business API key is required but was not found');\n        setShowBusinessIdInput(true);\n        return;\n      }\n\n      // Prepare preview request\n      const previewRequest = {\n        template_type: templateType,\n        template_text: templateText,\n        context: {\n          conversation_history: [{\n            role: \"user\",\n            content: \"I'm interested in your products\"\n          }, {\n            role: \"assistant\",\n            content: \"I'd be happy to tell you about our products. What type are you interested in?\"\n          }],\n          extracted_data: {\n            customer_name: \"John Doe\",\n            product_interest: \"shoes\",\n            budget: \"$100\"\n          }\n        }\n      };\n\n      // Try multiple possible endpoints (for compatibility)\n      const endpoints = ['/templates/render', '/render_template', '/api/templates/preview'];\n      let response = null;\n      for (const endpoint of endpoints) {\n        try {\n          console.log(`Trying to preview template with endpoint: ${endpoint}`);\n          response = await fetch(`${endpoint}?business_id=${businessId}&api_key=${businessApiKey}`, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n              'X-API-Key': businessApiKey,\n              'API-Key': businessApiKey,\n              'Authorization': businessApiKey // Remove Bearer prefix\n            },\n            body: JSON.stringify(previewRequest)\n          });\n          if (response.ok) break;\n        } catch (endpointErr) {\n          console.warn(`Endpoint ${endpoint} failed:`, endpointErr);\n        }\n      }\n\n      // If we got a successful response from any endpoint\n      if (response && response.ok) {\n        const data = await response.json();\n        console.log('Preview response:', data);\n        setPreviewData(data);\n        setShowPreview(true);\n      } else {\n        // Local fallback preview if no endpoint worked\n        console.log('All endpoint attempts failed, using local preview');\n\n        // Simple variable replacement for demonstration\n        let previewText = templateText;\n        const variables = extractVariables(templateText);\n\n        // Replace variables with sample values\n        variables.forEach(variable => {\n          const sampleValue = `[Sample ${variable}]`;\n          previewText = previewText.replace(new RegExp(`{{\\\\s*${variable}\\\\s*}}`, 'g'), sampleValue);\n        });\n        setPreviewData({\n          rendered_text: previewText\n        });\n        setShowPreview(true);\n      }\n    } catch (err) {\n      console.error('Error generating preview:', err);\n      setPreviewError(`Failed to generate preview: ${err.message}`);\n    } finally {\n      setPreviewLoading(false);\n    }\n  };\n\n  // Update saveTemplate function to fix API key format\n  const saveTemplate = async (type, asDefault = false) => {\n    try {\n      setSavingTemplates(prev => ({\n        ...prev,\n        [type]: true\n      }));\n      if (!businessId) {\n        setError('Business ID is required to save template');\n        return;\n      }\n      const template = templates[type];\n      if (!template.text.trim()) {\n        setError(`Template text is required for ${type}`);\n        return;\n      }\n      if (!businessApiKey) {\n        setError('Business API key is required but was not found');\n        setShowBusinessIdInput(true);\n        return;\n      }\n\n      // If there's an ID, update existing template, otherwise create new\n      const url = template.id && !asDefault ? `/templates/${template.id}` : '/templates';\n      const method = template.id && !asDefault ? 'PUT' : 'POST';\n\n      // Add query parameters with both business_id and api_key\n      const urlWithParams = `${url}?business_id=${businessId}&api_key=${businessApiKey}`;\n\n      // Map regular types to their default counterparts if saving as default\n      const templateType = asDefault ? `default_${type}` : type;\n      const templateData = {\n        template_name: `${stageName || 'New Stage'} - ${asDefault ? 'Default ' : ''}${type.replace(/_/g, ' ')}`,\n        template_text: template.text,\n        template_type: templateType,\n        business_id: businessId // Important: Include business_id\n      };\n      console.log(`Saving ${asDefault ? 'default ' : ''}${type} template:`, templateData);\n      const response = await fetch(urlWithParams, {\n        method,\n        headers: {\n          'Content-Type': 'application/json',\n          'X-API-Key': businessApiKey,\n          // Try alternate header format\n          'API-Key': businessApiKey,\n          // Try another common format\n          'Authorization': businessApiKey // Remove 'Bearer ' prefix\n        },\n        credentials: 'include',\n        body: JSON.stringify(templateData)\n      });\n      if (!response.ok) throw new Error(`Failed to save ${asDefault ? 'default ' : ''}${type} template`);\n      const data = await response.json();\n      console.log(`Template ${asDefault ? 'default ' : ''}${type} saved successfully:`, data);\n\n      // Only update the current template ID if not saving as default\n      if (!asDefault && !template.id) {\n        setTemplates(prev => ({\n          ...prev,\n          [type]: {\n            ...prev[type],\n            id: data.template_id\n          }\n        }));\n      }\n      setSuccess(`${asDefault ? 'Default ' : ''}${type} template saved successfully`);\n\n      // After successful save, refresh the available templates\n      fetchAllTemplates();\n    } catch (err) {\n      console.error(`Error saving ${type} template:`, err);\n      setError(`Error saving template: ${err.message}`);\n    } finally {\n      setSavingTemplates(prev => ({\n        ...prev,\n        [type]: false\n      }));\n    }\n  };\n\n  // Update handleSave to fix API key format\n  const handleSave = async () => {\n    if (!stage) return;\n    try {\n      // Validate stage name\n      if (!stageName.trim()) {\n        setError('Stage name is required');\n        return;\n      }\n\n      // Ensure businessId is available\n      if (!businessId) {\n        setError('Business ID is required but was not found');\n        console.error('Business ID is missing', {\n          businessId,\n          locationBusinessId,\n          queryBusinessId\n        });\n        return;\n      }\n      if (!businessApiKey) {\n        setError('Business API key is required but was not found');\n        setShowBusinessIdInput(true);\n        return;\n      }\n\n      // Check if we need to save any templates first\n      const templatesSavingNeeded = [];\n      if (templates.stage_selection.text && !templates.stage_selection.id) {\n        templatesSavingNeeded.push('stage_selection');\n      }\n      if (templates.data_extraction.text && !templates.data_extraction.id) {\n        templatesSavingNeeded.push('data_extraction');\n      }\n      if (templates.response_generation.text && !templates.response_generation.id) {\n        templatesSavingNeeded.push('response_generation');\n      }\n\n      // If any templates need saving, save them first\n      if (templatesSavingNeeded.length > 0) {\n        setSuccess(`Saving ${templatesSavingNeeded.length} template(s) first...`);\n\n        // Save templates in sequence\n        for (const type of templatesSavingNeeded) {\n          await saveTemplate(type);\n        }\n      }\n\n      // Prepare updated stage data\n      const updatedStage = {\n        ...stage,\n        stage_name: stageName,\n        stage_description: stageDescription,\n        business_id: businessId,\n        agent_id: agentId || null,\n        stage_type: 'conversation',\n        // Required field\n        stage_selection_template_id: templates.stage_selection.id || null,\n        data_extraction_template_id: templates.data_extraction.id || null,\n        response_generation_template_id: templates.response_generation.id || null\n      };\n      let response;\n      let method;\n      let url;\n\n      // Determine if this is a create or update operation\n      if (stageId === 'new' || isNewStage) {\n        method = 'POST';\n        url = '/stages';\n      } else {\n        method = 'PUT';\n        url = `/stages/${stageId}`;\n      }\n\n      // Add query parameter with business_id and api_key\n      url = `${url}?business_id=${businessId}&api_key=${businessApiKey}`;\n      console.log('Saving stage with data:', JSON.stringify(updatedStage, null, 2));\n\n      // Call the API\n      response = await fetch(url, {\n        method: method,\n        headers: {\n          'Content-Type': 'application/json',\n          'X-API-Key': businessApiKey,\n          'API-Key': businessApiKey,\n          'Authorization': businessApiKey\n        },\n        credentials: 'include',\n        // This sends cookies\n        body: JSON.stringify(updatedStage)\n      });\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({}));\n        throw new Error(errorData.error || errorData.message || (stageId === 'new' ? 'Failed to create stage' : 'Failed to update stage'));\n      }\n      const result = await response.json();\n      console.log('Stage saved successfully:', result);\n      setSuccess(stageId === 'new' ? 'Stage created successfully' : 'Stage updated successfully');\n\n      // Navigate back to stage manager after a short delay\n      setTimeout(() => {\n        let backUrl;\n        if (businessId && agentId) {\n          backUrl = `/stage-management/business_id=${businessId}/agent_id=${agentId}`;\n        } else if (businessId) {\n          backUrl = `/stage-management/business_id=${businessId}`;\n        } else {\n          backUrl = '/stage-management';\n        }\n        navigate(backUrl);\n      }, 1500);\n    } catch (err) {\n      console.error('Error saving stage:', err);\n      setError(err.message || 'Failed to save stage');\n    }\n  };\n  const handleCancel = () => {\n    // Navigate back to stage manager\n    let backUrl;\n    if (businessId && agentId) {\n      backUrl = `/stage-management/business_id=${businessId}/agent_id=${agentId}`;\n    } else if (businessId) {\n      backUrl = `/stage-management/business_id=${businessId}`;\n    } else {\n      backUrl = '/stage-management';\n    }\n    navigate(backUrl);\n  };\n  const handleTabChange = (event, newValue) => {\n    setTabValue(newValue);\n  };\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    sx: {\n      p: 3,\n      mb: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        alignItems: 'center',\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: handleCancel,\n        sx: {\n          mr: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 818,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 817,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        children: stageId && stageId !== 'new' ? 'Edit Stage' : 'Create New Stage'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 820,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 816,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      sx: {\n        mb: 2\n      },\n      onClose: () => setError(''),\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 826,\n      columnNumber: 9\n    }, this), success && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"success\",\n      sx: {\n        mb: 2\n      },\n      onClose: () => setSuccess(''),\n      children: success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 832,\n      columnNumber: 9\n    }, this), (showBusinessIdInput || !businessId || !businessApiKey) && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 3,\n        p: 2,\n        border: '1px dashed',\n        borderColor: 'warning.main',\n        borderRadius: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle1\",\n        color: \"warning.main\",\n        gutterBottom: true,\n        children: \"Business Credentials Required\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 840,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Business ID\",\n            value: businessId,\n            onChange: e => setBusinessId(e.target.value),\n            placeholder: \"Enter your business ID\",\n            helperText: \"Required for saving templates and stages\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 845,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 844,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Business API Key\",\n            value: businessApiKey,\n            onChange: e => setBusinessApiKey(e.target.value),\n            placeholder: \"Enter your business API key\",\n            helperText: \"Required for authentication\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 856,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 855,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: () => {\n              if (businessId && businessApiKey) {\n                // Save to both localStorage and cookies\n                localStorage.setItem('businessId', businessId);\n                localStorage.setItem('businessApiKey', businessApiKey);\n                document.cookie = `businessId=${businessId}; path=/; max-age=86400`;\n                document.cookie = `businessApiKey=${businessApiKey}; path=/; max-age=86400`;\n                setShowBusinessIdInput(false);\n                setSuccess('Business credentials saved');\n                fetchAllTemplates();\n              } else {\n                setError('Please enter both Business ID and API Key');\n              }\n            },\n            children: \"Save Credentials\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 867,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 866,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 843,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 839,\n      columnNumber: 9\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'center',\n        p: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 895,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 894,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mb: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: \"Stage Information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 901,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Stage Name\",\n              value: stageName,\n              onChange: e => setStageName(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 906,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 905,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Stage Description\",\n              value: stageDescription,\n              onChange: e => setStageDescription(e.target.value),\n              multiline: true,\n              rows: 2\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 915,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 914,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 904,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 900,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        sx: {\n          my: 3\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 927,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: \"Templates\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 931,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n          value: tabValue,\n          onChange: handleTabChange,\n          sx: {\n            mb: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Tab, {\n            label: \"Stage Selection\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 936,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            label: \"Data Extraction\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 937,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            label: \"Response Generation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 938,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 935,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n          value: tabValue,\n          index: 0,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              sx: {\n                mb: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                id: \"stage-selection-template-label\",\n                children: \"Template\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 945,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                labelId: \"stage-selection-template-label\",\n                value: templates.stage_selection.id || '',\n                label: \"Template\",\n                onChange: e => handleTemplateSelect('stage_selection', e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"\",\n                  children: /*#__PURE__*/_jsxDEV(\"em\", {\n                    children: \"None\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 953,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 952,\n                  columnNumber: 21\n                }, this), availableTemplates.stage_selection.map(template => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: template.template_id,\n                  children: template.template_name\n                }, template.template_id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 956,\n                  columnNumber: 23\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 946,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 944,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                justifyContent: 'space-between',\n                alignItems: 'center',\n                mb: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                color: \"text.secondary\",\n                children: templates.stage_selection.id ? `Template ID: ${templates.stage_selection.id}` : 'No template selected'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 964,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  gap: 1\n                },\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outlined\",\n                  color: \"primary\",\n                  onClick: () => confirmSaveTemplate('stage_selection'),\n                  disabled: !templates.stage_selection.text || savingTemplates.stage_selection,\n                  startIcon: savingTemplates.stage_selection ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                    size: 20\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 975,\n                    columnNumber: 68\n                  }, this) : null,\n                  children: savingTemplates.stage_selection ? 'Saving...' : 'Save Template'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 970,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outlined\",\n                  color: \"secondary\",\n                  onClick: () => confirmSaveTemplate('stage_selection', true),\n                  disabled: !templates.stage_selection.text || savingTemplates.stage_selection,\n                  children: \"Save as Default\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 979,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 969,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 963,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                gap: 1,\n                mb: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                startIcon: /*#__PURE__*/_jsxDEV(RestartAltIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 993,\n                  columnNumber: 32\n                }, this),\n                onClick: () => handleApplyDefaultTemplate('stage_selection'),\n                disabled: availableTemplates.default_stage_selection.length === 0,\n                children: \"Apply Default\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 991,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                startIcon: /*#__PURE__*/_jsxDEV(PreviewIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1001,\n                  columnNumber: 32\n                }, this),\n                onClick: () => handlePreview('stage_selection'),\n                disabled: !templates.stage_selection.text,\n                children: \"Preview\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 999,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                title: \"Variables are enclosed in curly braces like {user_name}\",\n                children: /*#__PURE__*/_jsxDEV(IconButton, {\n                  children: /*#__PURE__*/_jsxDEV(HelpOutlineIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1009,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1008,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1007,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 990,\n              columnNumber: 17\n            }, this), previewData && previewData.type === 'stage_selection' && /*#__PURE__*/_jsxDEV(Alert, {\n              severity: \"info\",\n              sx: {\n                mb: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                children: \"Preview:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1016,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                sx: {\n                  whiteSpace: 'pre-wrap'\n                },\n                children: previewData.result\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1017,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1015,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Template Text\",\n              value: templates.stage_selection.text || '',\n              onChange: e => handleTemplateChange('stage_selection', e.target.value),\n              multiline: true,\n              rows: 8,\n              placeholder: \"Enter template text with variables in {curly_braces}\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1023,\n              columnNumber: 17\n            }, this), variables.stage_selection.length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                mt: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                children: \"Variables:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1035,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  flexWrap: 'wrap',\n                  gap: 1\n                },\n                children: variables.stage_selection.map(variable => /*#__PURE__*/_jsxDEV(Chip, {\n                  label: variable,\n                  size: \"small\"\n                }, variable, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1038,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1036,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1034,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 943,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 942,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n          value: tabValue,\n          index: 1,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              sx: {\n                mb: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                id: \"data-extraction-template-label\",\n                children: \"Template\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1050,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                labelId: \"data-extraction-template-label\",\n                value: templates.data_extraction.id || '',\n                label: \"Template\",\n                onChange: e => handleTemplateSelect('data_extraction', e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"\",\n                  children: /*#__PURE__*/_jsxDEV(\"em\", {\n                    children: \"None\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1058,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1057,\n                  columnNumber: 21\n                }, this), availableTemplates.data_extraction.map(template => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: template.template_id,\n                  children: template.template_name\n                }, template.template_id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1061,\n                  columnNumber: 23\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1051,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1049,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                justifyContent: 'space-between',\n                alignItems: 'center',\n                mb: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                color: \"text.secondary\",\n                children: templates.data_extraction.id ? `Template ID: ${templates.data_extraction.id}` : 'No template selected'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1069,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  gap: 1\n                },\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outlined\",\n                  color: \"primary\",\n                  onClick: () => confirmSaveTemplate('data_extraction'),\n                  disabled: !templates.data_extraction.text || savingTemplates.data_extraction,\n                  startIcon: savingTemplates.data_extraction ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                    size: 20\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1080,\n                    columnNumber: 68\n                  }, this) : null,\n                  children: savingTemplates.data_extraction ? 'Saving...' : 'Save Template'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1075,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outlined\",\n                  color: \"secondary\",\n                  onClick: () => confirmSaveTemplate('data_extraction', true),\n                  disabled: !templates.data_extraction.text || savingTemplates.data_extraction,\n                  children: \"Save as Default\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1084,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1074,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1068,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                gap: 1,\n                mb: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                startIcon: /*#__PURE__*/_jsxDEV(RestartAltIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1098,\n                  columnNumber: 32\n                }, this),\n                onClick: () => handleApplyDefaultTemplate('data_extraction'),\n                disabled: availableTemplates.default_data_extraction.length === 0,\n                children: \"Apply Default\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1096,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                startIcon: /*#__PURE__*/_jsxDEV(PreviewIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1106,\n                  columnNumber: 32\n                }, this),\n                onClick: () => handlePreview('data_extraction'),\n                disabled: !templates.data_extraction.text,\n                children: \"Preview\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1104,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                title: \"Variables are enclosed in curly braces like {user_name}\",\n                children: /*#__PURE__*/_jsxDEV(IconButton, {\n                  children: /*#__PURE__*/_jsxDEV(HelpOutlineIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1114,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1113,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1112,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1095,\n              columnNumber: 17\n            }, this), previewData && previewData.type === 'data_extraction' && /*#__PURE__*/_jsxDEV(Alert, {\n              severity: \"info\",\n              sx: {\n                mb: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                children: \"Preview:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1121,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                sx: {\n                  whiteSpace: 'pre-wrap'\n                },\n                children: previewData.result\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1122,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1120,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Template Text\",\n              value: templates.data_extraction.text || '',\n              onChange: e => handleTemplateChange('data_extraction', e.target.value),\n              multiline: true,\n              rows: 8,\n              placeholder: \"Enter template text with variables in {curly_braces}\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1128,\n              columnNumber: 17\n            }, this), variables.data_extraction.length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                mt: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                children: \"Variables:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1140,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  flexWrap: 'wrap',\n                  gap: 1\n                },\n                children: variables.data_extraction.map(variable => /*#__PURE__*/_jsxDEV(Chip, {\n                  label: variable,\n                  size: \"small\"\n                }, variable, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1143,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1141,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1139,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1048,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1047,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n          value: tabValue,\n          index: 2,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              sx: {\n                mb: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                id: \"response-generation-template-label\",\n                children: \"Template\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1155,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                labelId: \"response-generation-template-label\",\n                value: templates.response_generation.id || '',\n                label: \"Template\",\n                onChange: e => handleTemplateSelect('response_generation', e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"\",\n                  children: /*#__PURE__*/_jsxDEV(\"em\", {\n                    children: \"None\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1163,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1162,\n                  columnNumber: 21\n                }, this), availableTemplates.response_generation.map(template => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: template.template_id,\n                  children: template.template_name\n                }, template.template_id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1166,\n                  columnNumber: 23\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1156,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1154,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                justifyContent: 'space-between',\n                alignItems: 'center',\n                mb: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                color: \"text.secondary\",\n                children: templates.response_generation.id ? `Template ID: ${templates.response_generation.id}` : 'No template selected'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1174,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  gap: 1\n                },\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outlined\",\n                  color: \"primary\",\n                  onClick: () => confirmSaveTemplate('response_generation'),\n                  disabled: !templates.response_generation.text || savingTemplates.response_generation,\n                  startIcon: savingTemplates.response_generation ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                    size: 20\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1185,\n                    columnNumber: 72\n                  }, this) : null,\n                  children: savingTemplates.response_generation ? 'Saving...' : 'Save Template'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1180,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outlined\",\n                  color: \"secondary\",\n                  onClick: () => confirmSaveTemplate('response_generation', true),\n                  disabled: !templates.response_generation.text || savingTemplates.response_generation,\n                  children: \"Save as Default\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1189,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1179,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1173,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                gap: 1,\n                mb: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                startIcon: /*#__PURE__*/_jsxDEV(RestartAltIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1203,\n                  columnNumber: 32\n                }, this),\n                onClick: () => handleApplyDefaultTemplate('response_generation'),\n                disabled: availableTemplates.default_response_generation.length === 0,\n                children: \"Apply Default\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1201,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                startIcon: /*#__PURE__*/_jsxDEV(PreviewIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1211,\n                  columnNumber: 32\n                }, this),\n                onClick: () => handlePreview('response_generation'),\n                disabled: !templates.response_generation.text,\n                children: \"Preview\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1209,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                title: \"Variables are enclosed in curly braces like {user_name}\",\n                children: /*#__PURE__*/_jsxDEV(IconButton, {\n                  children: /*#__PURE__*/_jsxDEV(HelpOutlineIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1219,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1218,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1217,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1200,\n              columnNumber: 17\n            }, this), previewData && previewData.type === 'response_generation' && /*#__PURE__*/_jsxDEV(Alert, {\n              severity: \"info\",\n              sx: {\n                mb: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                children: \"Preview:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1226,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                sx: {\n                  whiteSpace: 'pre-wrap'\n                },\n                children: previewData.result\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1227,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1225,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Template Text\",\n              value: templates.response_generation.text || '',\n              onChange: e => handleTemplateChange('response_generation', e.target.value),\n              multiline: true,\n              rows: 8,\n              placeholder: \"Enter template text with variables in {curly_braces}\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1233,\n              columnNumber: 17\n            }, this), variables.response_generation.length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                mt: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                children: \"Variables:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1245,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  flexWrap: 'wrap',\n                  gap: 1\n                },\n                children: variables.response_generation.map(variable => /*#__PURE__*/_jsxDEV(Chip, {\n                  label: variable,\n                  size: \"small\"\n                }, variable, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1248,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1246,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1244,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1153,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1152,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 930,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 3,\n          display: 'flex',\n          justifyContent: 'space-between'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          onClick: handleCancel,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1259,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          startIcon: /*#__PURE__*/_jsxDEV(SaveIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1267,\n            columnNumber: 26\n          }, this),\n          onClick: handleSave,\n          disabled: isLoading,\n          children: isLoading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n            size: 24\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1271,\n            columnNumber: 28\n          }, this) : stageId === 'new' ? 'Create Stage' : 'Save Stage'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1265,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1258,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: showConfirmDialog,\n      onClose: () => setShowConfirmDialog(false),\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Save Template\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1279,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          children: saveAsDefault ? `Are you sure you want to save this as a default ${templateToSave === null || templateToSave === void 0 ? void 0 : templateToSave.replace(/_/g, ' ')} template?` : (_templates$templateTo = templates[templateToSave]) !== null && _templates$templateTo !== void 0 && _templates$templateTo.id ? `Are you sure you want to update this ${templateToSave === null || templateToSave === void 0 ? void 0 : templateToSave.replace(/_/g, ' ')} template?` : `Are you sure you want to create a new ${templateToSave === null || templateToSave === void 0 ? void 0 : templateToSave.replace(/_/g, ' ')} template?`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1281,\n          columnNumber: 11\n        }, this), saveAsDefault && /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"text.secondary\",\n          sx: {\n            mt: 1\n          },\n          children: \"This will create a new default template that can be applied to any stage.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1289,\n          columnNumber: 13\n        }, this), !((_templates$templateTo2 = templates[templateToSave]) !== null && _templates$templateTo2 !== void 0 && _templates$templateTo2.id) && !saveAsDefault && /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"text.secondary\",\n          sx: {\n            mt: 1\n          },\n          children: \"A new template will be created in the database.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1294,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1280,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setShowConfirmDialog(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1300,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleConfirmSave,\n          color: \"primary\",\n          variant: \"contained\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1301,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1299,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1278,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 814,\n    columnNumber: 5\n  }, this);\n};\n_s(StageEditor, \"+O9OcO2zjBbxh9tSOXky6HDILt4=\", false, function () {\n  return [useParams, useNavigate, useLocation];\n});\n_c2 = StageEditor;\nexport default StageEditor;\nvar _c, _c2;\n$RefreshReg$(_c, \"TabPanel\");\n$RefreshReg$(_c2, \"StageEditor\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useRef","useParams","useNavigate","useLocation","Box","Paper","Typography","TextField","Button","Tabs","Tab","Grid","Alert","Snackbar","IconButton","Tooltip","FormControl","InputLabel","MenuItem","Select","CircularProgress","Divider","Chip","Dialog","DialogTitle","DialogContent","DialogActions","SaveIcon","PreviewIcon","RestartAltIcon","HelpOutlineIcon","ArrowBackIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","apiCache","cache","get","url","_this$cache$url","data","set","ttl","expiry","Date","now","isValid","item","clear","cachedFetch","options","cacheKey","body","JSON","stringify","method","console","log","ok","json","response","fetch","TabPanel","props","children","value","index","other","role","hidden","id","style","padding","fileName","_jsxFileName","lineNumber","columnNumber","_c","StageEditor","_s","_templates$templateTo","_templates$templateTo2","stageId","navigate","location","getStoredValue","key","_document$cookie$spli","localStorageValue","localStorage","getItem","document","cookie","split","find","row","startsWith","queryParams","URLSearchParams","search","queryBusinessId","businessId","locationBusinessId","agentId","locationAgentId","isNewStage","state","storedBusinessId","storedApiKey","setBusinessId","businessApiKey","setBusinessApiKey","showBusinessIdInput","setShowBusinessIdInput","stage","setStage","stageName","setStageName","stageDescription","setStageDescription","tabValue","setTabValue","templates","setTemplates","stage_selection","text","type","data_extraction","response_generation","availableTemplates","setAvailableTemplates","default_stage_selection","default_data_extraction","default_response_generation","variables","setVariables","error","setError","success","setSuccess","isLoading","setIsLoading","previewData","setPreviewData","savingTemplates","setSavingTemplates","showConfirmDialog","setShowConfirmDialog","templateToSave","setTemplateToSave","saveAsDefault","setSaveAsDefault","isMounted","current","confirmSaveTemplate","asDefault","handleConfirmSave","saveTemplate","fetchAllTemplates","headers","credentials","Error","templatesByType","forEach","template","template_type","push","err","message","setItem","isActive","loadStage","stage_name","stage_description","business_id","agent_id","stage_selection_template_id","data_extraction_template_id","response_generation_template_id","stage_config","order","fetchStage","catch","fetchTemplate","templateId","prev","template_id","template_text","extractVariables","matches","match","map","slice","handleTemplateChange","handleTemplateSelect","handleApplyDefaultTemplate","defaultTypeMap","defaultType","defaultTemplates","length","defaultTemplate","handlePreview","templateType","setPreviewLoading","setPreviewError","templateText","trim","previewRequest","context","conversation_history","content","extracted_data","customer_name","product_interest","budget","endpoints","endpoint","endpointErr","warn","setShowPreview","previewText","variable","sampleValue","replace","RegExp","rendered_text","urlWithParams","templateData","template_name","handleSave","templatesSavingNeeded","updatedStage","stage_type","errorData","result","setTimeout","backUrl","handleCancel","handleTabChange","event","newValue","sx","p","mb","display","alignItems","onClick","mr","variant","severity","onClose","border","borderColor","borderRadius","color","gutterBottom","container","spacing","xs","md","fullWidth","label","onChange","e","target","placeholder","helperText","required","justifyContent","multiline","rows","my","labelId","gap","disabled","startIcon","size","title","whiteSpace","mt","flexWrap","open","_c2","$RefreshReg$"],"sources":["C:/icmp_events_api/front-end/src/components/StageEditor.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react';\r\nimport { useParams, useNavigate, useLocation } from 'react-router-dom';\r\nimport {\r\n  Box,\r\n  Paper,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Tabs,\r\n  Tab,\r\n  Grid,\r\n  Alert,\r\n  Snackbar,\r\n  IconButton,\r\n  Tooltip,\r\n  FormControl,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  CircularProgress,\r\n  Divider,\r\n  Chip,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions\r\n} from '@mui/material';\r\nimport SaveIcon from '@mui/icons-material/Save';\r\nimport PreviewIcon from '@mui/icons-material/Preview';\r\nimport RestartAltIcon from '@mui/icons-material/RestartAlt';\r\nimport HelpOutlineIcon from '@mui/icons-material/HelpOutline';\r\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\r\n\r\n// Global request cache to prevent duplicate API calls\r\nconst apiCache = {\r\n  cache: {},\r\n  get: function(url) {\r\n    return this.cache[url]?.data;\r\n  },\r\n  set: function(url, data, ttl = 60000) { // Default TTL: 1 minute\r\n    this.cache[url] = {\r\n      data,\r\n      expiry: Date.now() + ttl\r\n    };\r\n  },\r\n  isValid: function(url) {\r\n    const item = this.cache[url];\r\n    return item && item.expiry > Date.now();\r\n  },\r\n  clear: function() {\r\n    this.cache = {};\r\n  }\r\n};\r\n\r\n// Cached fetch function\r\nconst cachedFetch = async (url, options = {}, ttl = 60000) => {\r\n  const cacheKey = url + (options.body ? JSON.stringify(options.body) : '');\r\n  \r\n  // Return cached data if available and not expired\r\n  if (!options.method || options.method === 'GET') {\r\n    if (apiCache.isValid(cacheKey)) {\r\n      console.log(`Using cached data for: ${url}`);\r\n      return { \r\n        ok: true,\r\n        json: async () => apiCache.get(cacheKey)\r\n      };\r\n    }\r\n  }\r\n  \r\n  // Perform the fetch\r\n  const response = await fetch(url, options);\r\n  \r\n  // Cache the result for GET requests\r\n  if (response.ok && (!options.method || options.method === 'GET')) {\r\n    const data = await response.json();\r\n    apiCache.set(cacheKey, data, ttl);\r\n    \r\n    // Return an object that mimics the fetch response\r\n    return {\r\n      ok: true,\r\n      json: async () => data\r\n    };\r\n  }\r\n  \r\n  return response;\r\n};\r\n\r\n// TabPanel component for the tabs\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`tabpanel-${index}`}\r\n      aria-labelledby={`tab-${index}`}\r\n      {...other}\r\n      style={{ padding: '20px 0' }}\r\n    >\r\n      {value === index && (\r\n        <Box>\r\n          {children}\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst StageEditor = () => {\r\n  const { stageId } = useParams();\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  \r\n  // Check local storage and cookies for business ID and API key\r\n  const getStoredValue = (key) => {\r\n    // Try localStorage first\r\n    const localStorageValue = localStorage.getItem(key);\r\n    if (localStorageValue) return localStorageValue;\r\n    \r\n    // Then try cookies\r\n    return document.cookie\r\n      .split('; ')\r\n      .find(row => row.startsWith(`${key}=`))\r\n      ?.split('=')[1];\r\n  };\r\n  \r\n  const queryParams = new URLSearchParams(location.search);\r\n  const queryBusinessId = queryParams.get('business_id');\r\n  \r\n  // Location state values as fallback\r\n  const { businessId: locationBusinessId, agentId: locationAgentId, isNewStage } = location.state || {};\r\n  \r\n  // Get stored values\r\n  const storedBusinessId = getStoredValue('businessId');\r\n  const storedApiKey = getStoredValue('businessApiKey');\r\n  \r\n  // Use query parameters first, then location state, then stored values\r\n  const [businessId, setBusinessId] = useState(queryBusinessId || locationBusinessId || storedBusinessId || '');\r\n  const [businessApiKey, setBusinessApiKey] = useState(storedApiKey || '');\r\n  const [showBusinessIdInput, setShowBusinessIdInput] = useState(!businessId || !businessApiKey);\r\n  \r\n  const agentId = queryParams.get('agent_id') || locationAgentId;\r\n  \r\n  const [stage, setStage] = useState(null);\r\n  const [stageName, setStageName] = useState('');\r\n  const [stageDescription, setStageDescription] = useState('');\r\n  const [tabValue, setTabValue] = useState(0);\r\n  const [templates, setTemplates] = useState({\r\n    stage_selection: { id: '', text: '', type: '' },\r\n    data_extraction: { id: '', text: '', type: '' },\r\n    response_generation: { id: '', text: '', type: '' }\r\n  });\r\n  const [availableTemplates, setAvailableTemplates] = useState({\r\n    stage_selection: [],\r\n    data_extraction: [],\r\n    response_generation: [],\r\n    default_stage_selection: [],\r\n    default_data_extraction: [],\r\n    default_response_generation: []\r\n  });\r\n  const [variables, setVariables] = useState({\r\n    stage_selection: [],\r\n    data_extraction: [],\r\n    response_generation: []\r\n  });\r\n  const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [previewData, setPreviewData] = useState(null);\r\n  \r\n  // Add template saving loading states\r\n  const [savingTemplates, setSavingTemplates] = useState({\r\n    stage_selection: false,\r\n    data_extraction: false,\r\n    response_generation: false\r\n  });\r\n\r\n  // Add template save confirmation dialog\r\n  const [showConfirmDialog, setShowConfirmDialog] = useState(false);\r\n  const [templateToSave, setTemplateToSave] = useState('');\r\n  const [saveAsDefault, setSaveAsDefault] = useState(false);\r\n\r\n  // Track if component is mounted\r\n  const isMounted = useRef(true);\r\n  \r\n  // Clear any previous fetch timeouts on unmount\r\n  useEffect(() => {\r\n    return () => {\r\n      isMounted.current = false;\r\n    };\r\n  }, []);\r\n\r\n  // Function to open the confirmation dialog\r\n  const confirmSaveTemplate = (type, asDefault = false) => {\r\n    setTemplateToSave(type);\r\n    setSaveAsDefault(asDefault);\r\n    setShowConfirmDialog(true);\r\n  };\r\n\r\n  // Function to handle dialog confirm\r\n  const handleConfirmSave = async () => {\r\n    setShowConfirmDialog(false);\r\n    if (templateToSave) {\r\n      await saveTemplate(templateToSave, saveAsDefault);\r\n    }\r\n  };\r\n\r\n  // Add a throttled fetch for all templates with proper dependencies\r\n  const fetchAllTemplates = useCallback(async () => {\r\n    if (!businessId || !isMounted.current) return;\r\n    \r\n    setIsLoading(true);\r\n    try {\r\n      // Use cached fetch with 5 minute TTL for templates\r\n      const response = await cachedFetch(`/templates?business_id=${businessId}&api_key=${businessApiKey}`, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'X-API-Key': businessApiKey,\r\n          'API-Key': businessApiKey,\r\n          'Authorization': businessApiKey\r\n        },\r\n        credentials: 'include'\r\n      }, 5 * 60 * 1000);\r\n      \r\n      if (!response.ok) throw new Error('Failed to fetch templates');\r\n      \r\n      const data = await response.json();\r\n      \r\n      // Organize templates by type\r\n      const templatesByType = {\r\n        stage_selection: [],\r\n        data_extraction: [],\r\n        response_generation: [],\r\n        default_stage_selection: [],\r\n        default_data_extraction: [],\r\n        default_response_generation: []\r\n      };\r\n      \r\n      data.forEach(template => {\r\n        if (templatesByType[template.template_type]) {\r\n          templatesByType[template.template_type].push(template);\r\n        }\r\n      });\r\n      \r\n      if (isMounted.current) {\r\n        setAvailableTemplates(templatesByType);\r\n      }\r\n    } catch (err) {\r\n      if (isMounted.current) {\r\n        setError(err.message || 'Failed to fetch templates');\r\n      }\r\n    } finally {\r\n      if (isMounted.current) {\r\n        setIsLoading(false);\r\n      }\r\n    }\r\n  }, [businessId, businessApiKey]);\r\n\r\n  // Fetch stage data when the component mounts\r\n  useEffect(() => {\r\n    if (!businessId || !businessApiKey) {\r\n      // Don't set loading if we don't have credentials yet\r\n      return;\r\n    }\r\n    \r\n    if (businessId) {\r\n      // Store businessId in both localStorage and cookie for future use\r\n      localStorage.setItem('businessId', businessId);\r\n      document.cookie = `businessId=${businessId}; path=/; max-age=86400`;\r\n    }\r\n    \r\n    if (businessApiKey) {\r\n      // Store businessApiKey in both localStorage and cookie for future use\r\n      localStorage.setItem('businessApiKey', businessApiKey);\r\n      document.cookie = `businessApiKey=${businessApiKey}; path=/; max-age=86400`;\r\n    }\r\n\r\n    let isActive = true;\r\n    \r\n    const loadStage = async () => {\r\n      try {\r\n        // For \"new\" stage - don't fetch, just set up the initial state\r\n        if (stageId === 'new' || isNewStage) {\r\n          if (isMounted.current) {\r\n            setStage({\r\n              stage_name: '',\r\n              stage_description: '',\r\n              business_id: businessId,\r\n              agent_id: agentId,\r\n              stage_selection_template_id: null,\r\n              data_extraction_template_id: null,\r\n              response_generation_template_id: null,\r\n              stage_config: { order: 0 }\r\n            });\r\n            setIsLoading(false); // Important: reset loading state for new stage\r\n          }\r\n        } else if (stageId) { \r\n          // Only fetch existing stage data if not creating a new one\r\n          await fetchStage(stageId);\r\n        } else {\r\n          // No stage ID at all - set initial state and reset loading\r\n          if (isMounted.current) {\r\n            setIsLoading(false);\r\n          }\r\n        }\r\n        \r\n        // Only fetch available templates once\r\n        if (isActive && businessId) {\r\n          fetchAllTemplates().catch(err => {\r\n            console.error('Error fetching templates:', err);\r\n            if (isMounted.current) {\r\n              setError('Error fetching templates. Please try refreshing the page.');\r\n              setIsLoading(false); // Ensure loading state is reset on error\r\n            }\r\n          });\r\n        }\r\n      } catch (err) {\r\n        console.error('Error in loadStage:', err);\r\n        if (isMounted.current) {\r\n          setError('Error loading stage data. Please try refreshing the page.');\r\n          setIsLoading(false); // Ensure loading state is reset on error\r\n        }\r\n      }\r\n    };\r\n    \r\n    setIsLoading(true); // Set loading state before starting\r\n    loadStage();\r\n    \r\n    return () => {\r\n      isActive = false;\r\n    };\r\n  }, [stageId, businessId, businessApiKey, agentId, isNewStage, fetchAllTemplates]);\r\n\r\n  // Fetch specific stage data\r\n  const fetchStage = async (id) => {\r\n    if (!isMounted.current || !businessId || !businessApiKey) return;\r\n    \r\n    setIsLoading(true);\r\n    try {\r\n      const response = await cachedFetch(`/stages/${id}?business_id=${businessId}&api_key=${businessApiKey}`, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'X-API-Key': businessApiKey,\r\n          'API-Key': businessApiKey,\r\n          'Authorization': businessApiKey\r\n        },\r\n        credentials: 'include'\r\n      });\r\n      \r\n      if (!response.ok) throw new Error('Failed to fetch stage');\r\n      \r\n      const data = await response.json();\r\n      \r\n      if (isMounted.current) {\r\n        setStage(data);\r\n        setStageName(data.stage_name || '');\r\n        setStageDescription(data.stage_description || '');\r\n        \r\n        // For each template ID in the stage, fetch the template content\r\n        if (data.stage_selection_template_id) {\r\n          fetchTemplate(data.stage_selection_template_id, 'stage_selection');\r\n        }\r\n        if (data.data_extraction_template_id) {\r\n          fetchTemplate(data.data_extraction_template_id, 'data_extraction');\r\n        }\r\n        if (data.response_generation_template_id) {\r\n          fetchTemplate(data.response_generation_template_id, 'response_generation');\r\n        }\r\n      }\r\n    } catch (err) {\r\n      if (isMounted.current) {\r\n        setError(err.message);\r\n      }\r\n    } finally {\r\n      if (isMounted.current) {\r\n        setIsLoading(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const fetchTemplate = useCallback(async (templateId, type) => {\r\n    if (!isMounted.current || !businessId || !businessApiKey) return;\r\n    \r\n    try {\r\n      const response = await cachedFetch(`/templates/${templateId}?business_id=${businessId}&api_key=${businessApiKey}`, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'X-API-Key': businessApiKey,\r\n          'API-Key': businessApiKey,\r\n          'Authorization': businessApiKey\r\n        },\r\n        credentials: 'include'\r\n      });\r\n      \r\n      if (!response.ok) throw new Error(`Failed to fetch ${type} template`);\r\n      \r\n      const data = await response.json();\r\n      \r\n      if (isMounted.current) {\r\n        setTemplates(prev => ({\r\n          ...prev,\r\n          [type]: {\r\n            id: data.template_id,\r\n            text: data.template_text,\r\n            type: data.template_type\r\n          }\r\n        }));\r\n        \r\n        // Extract variables from template\r\n        setVariables(prev => ({\r\n          ...prev,\r\n          [type]: extractVariables(data.template_text)\r\n        }));\r\n      }\r\n    } catch (err) {\r\n      if (isMounted.current) {\r\n        setError(err.message);\r\n      }\r\n    }\r\n  }, [businessId, businessApiKey]);\r\n\r\n  const extractVariables = (template) => {\r\n    if (!template) return [];\r\n    const matches = template.match(/\\{([^}]+)\\}/g) || [];\r\n    return matches.map(match => match.slice(1, -1));\r\n  };\r\n\r\n  const handleTemplateChange = (type, value) => {\r\n    setTemplates(prev => ({\r\n      ...prev,\r\n      [type]: {\r\n        ...prev[type],\r\n        text: value\r\n      }\r\n    }));\r\n    // Update variables when template changes\r\n    setVariables(prev => ({\r\n      ...prev,\r\n      [type]: extractVariables(value)\r\n    }));\r\n  };\r\n\r\n  const handleTemplateSelect = async (type, templateId) => {\r\n    // If selecting \"None\", clear the template\r\n    if (!templateId) {\r\n      setTemplates(prev => ({\r\n        ...prev,\r\n        [type]: { id: '', text: '', type: '' }\r\n      }));\r\n      setVariables(prev => ({\r\n        ...prev,\r\n        [type]: []\r\n      }));\r\n      return;\r\n    }\r\n    \r\n    // Fetch the selected template\r\n    await fetchTemplate(templateId, type);\r\n  };\r\n\r\n  const handleApplyDefaultTemplate = async (type) => {\r\n    // Map regular types to their default counterparts\r\n    const defaultTypeMap = {\r\n      'stage_selection': 'default_stage_selection',\r\n      'data_extraction': 'default_data_extraction',\r\n      'response_generation': 'default_response_generation'\r\n    };\r\n    \r\n    const defaultType = defaultTypeMap[type];\r\n    \r\n    // Find default templates of the corresponding type\r\n    const defaultTemplates = availableTemplates[defaultType];\r\n    \r\n    if (defaultTemplates.length === 0) {\r\n      setError(`No default templates available for ${type}`);\r\n      return;\r\n    }\r\n    \r\n    // For simplicity, use the first default template\r\n    const defaultTemplate = defaultTemplates[0];\r\n    \r\n    // Apply the default template text (but keep the original ID)\r\n    setTemplates(prev => ({\r\n      ...prev,\r\n      [type]: {\r\n        ...prev[type],\r\n        text: defaultTemplate.template_text,\r\n        type: type // Keep the original type, not the default type\r\n      }\r\n    }));\r\n    \r\n    // Update variables\r\n    setVariables(prev => ({\r\n      ...prev,\r\n      [type]: extractVariables(defaultTemplate.template_text)\r\n    }));\r\n    \r\n    setSuccess(`Applied default template for ${type}`);\r\n  };\r\n\r\n  const handlePreview = async (templateType) => {\r\n    try {\r\n      setPreviewLoading(true);\r\n      setPreviewError('');\r\n      \r\n      const templateText = templates[templateType].text;\r\n      if (!templateText.trim()) {\r\n        setPreviewError('Template text is empty');\r\n        return;\r\n      }\r\n      \r\n      if (!businessApiKey) {\r\n        setPreviewError('Business API key is required but was not found');\r\n        setShowBusinessIdInput(true);\r\n        return;\r\n      }\r\n      \r\n      // Prepare preview request\r\n      const previewRequest = {\r\n        template_type: templateType,\r\n        template_text: templateText,\r\n        context: {\r\n          conversation_history: [\r\n            { role: \"user\", content: \"I'm interested in your products\" },\r\n            { role: \"assistant\", content: \"I'd be happy to tell you about our products. What type are you interested in?\" }\r\n          ],\r\n          extracted_data: {\r\n            customer_name: \"John Doe\",\r\n            product_interest: \"shoes\",\r\n            budget: \"$100\"\r\n          }\r\n        }\r\n      };\r\n      \r\n      // Try multiple possible endpoints (for compatibility)\r\n      const endpoints = [\r\n        '/templates/render',\r\n        '/render_template',\r\n        '/api/templates/preview'\r\n      ];\r\n      \r\n      let response = null;\r\n      for (const endpoint of endpoints) {\r\n        try {\r\n          console.log(`Trying to preview template with endpoint: ${endpoint}`);\r\n          \r\n          response = await fetch(`${endpoint}?business_id=${businessId}&api_key=${businessApiKey}`, {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n              'X-API-Key': businessApiKey,\r\n              'API-Key': businessApiKey,\r\n              'Authorization': businessApiKey // Remove Bearer prefix\r\n            },\r\n            body: JSON.stringify(previewRequest)\r\n          });\r\n          \r\n          if (response.ok) break;\r\n        } catch (endpointErr) {\r\n          console.warn(`Endpoint ${endpoint} failed:`, endpointErr);\r\n        }\r\n      }\r\n      \r\n      // If we got a successful response from any endpoint\r\n      if (response && response.ok) {\r\n        const data = await response.json();\r\n        console.log('Preview response:', data);\r\n        setPreviewData(data);\r\n        setShowPreview(true);\r\n      } else {\r\n        // Local fallback preview if no endpoint worked\r\n        console.log('All endpoint attempts failed, using local preview');\r\n        \r\n        // Simple variable replacement for demonstration\r\n        let previewText = templateText;\r\n        const variables = extractVariables(templateText);\r\n        \r\n        // Replace variables with sample values\r\n        variables.forEach(variable => {\r\n          const sampleValue = `[Sample ${variable}]`;\r\n          previewText = previewText.replace(new RegExp(`{{\\\\s*${variable}\\\\s*}}`, 'g'), sampleValue);\r\n        });\r\n        \r\n        setPreviewData({ rendered_text: previewText });\r\n        setShowPreview(true);\r\n      }\r\n    } catch (err) {\r\n      console.error('Error generating preview:', err);\r\n      setPreviewError(`Failed to generate preview: ${err.message}`);\r\n    } finally {\r\n      setPreviewLoading(false);\r\n    }\r\n  };\r\n\r\n  // Update saveTemplate function to fix API key format\r\n  const saveTemplate = async (type, asDefault = false) => {\r\n    try {\r\n      setSavingTemplates(prev => ({ ...prev, [type]: true }));\r\n      \r\n      if (!businessId) {\r\n        setError('Business ID is required to save template');\r\n        return;\r\n      }\r\n\r\n      const template = templates[type];\r\n      if (!template.text.trim()) {\r\n        setError(`Template text is required for ${type}`);\r\n        return;\r\n      }\r\n\r\n      if (!businessApiKey) {\r\n        setError('Business API key is required but was not found');\r\n        setShowBusinessIdInput(true);\r\n        return;\r\n      }\r\n\r\n      // If there's an ID, update existing template, otherwise create new\r\n      const url = template.id && !asDefault ? `/templates/${template.id}` : '/templates';\r\n      const method = template.id && !asDefault ? 'PUT' : 'POST';\r\n\r\n      // Add query parameters with both business_id and api_key\r\n      const urlWithParams = `${url}?business_id=${businessId}&api_key=${businessApiKey}`;\r\n\r\n      // Map regular types to their default counterparts if saving as default\r\n      const templateType = asDefault ? `default_${type}` : type;\r\n\r\n      const templateData = {\r\n        template_name: `${stageName || 'New Stage'} - ${asDefault ? 'Default ' : ''}${type.replace(/_/g, ' ')}`,\r\n        template_text: template.text,\r\n        template_type: templateType,\r\n        business_id: businessId // Important: Include business_id\r\n      };\r\n\r\n      console.log(`Saving ${asDefault ? 'default ' : ''}${type} template:`, templateData);\r\n\r\n      const response = await fetch(urlWithParams, {\r\n        method,\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'X-API-Key': businessApiKey, // Try alternate header format\r\n          'API-Key': businessApiKey, // Try another common format\r\n          'Authorization': businessApiKey // Remove 'Bearer ' prefix\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify(templateData),\r\n      });\r\n\r\n      if (!response.ok) throw new Error(`Failed to save ${asDefault ? 'default ' : ''}${type} template`);\r\n\r\n      const data = await response.json();\r\n      console.log(`Template ${asDefault ? 'default ' : ''}${type} saved successfully:`, data);\r\n      \r\n      // Only update the current template ID if not saving as default\r\n      if (!asDefault && !template.id) {\r\n        setTemplates(prev => ({\r\n          ...prev,\r\n          [type]: {\r\n            ...prev[type],\r\n            id: data.template_id\r\n          }\r\n        }));\r\n      }\r\n\r\n      setSuccess(`${asDefault ? 'Default ' : ''}${type} template saved successfully`);\r\n      \r\n      // After successful save, refresh the available templates\r\n      fetchAllTemplates();\r\n    } catch (err) {\r\n      console.error(`Error saving ${type} template:`, err);\r\n      setError(`Error saving template: ${err.message}`);\r\n    } finally {\r\n      setSavingTemplates(prev => ({ ...prev, [type]: false }));\r\n    }\r\n  };\r\n\r\n  // Update handleSave to fix API key format\r\n  const handleSave = async () => {\r\n    if (!stage) return;\r\n    \r\n    try {\r\n      // Validate stage name\r\n      if (!stageName.trim()) {\r\n        setError('Stage name is required');\r\n        return;\r\n      }\r\n      \r\n      // Ensure businessId is available\r\n      if (!businessId) {\r\n        setError('Business ID is required but was not found');\r\n        console.error('Business ID is missing', { businessId, locationBusinessId, queryBusinessId });\r\n        return;\r\n      }\r\n      \r\n      if (!businessApiKey) {\r\n        setError('Business API key is required but was not found');\r\n        setShowBusinessIdInput(true);\r\n        return;\r\n      }\r\n      \r\n      // Check if we need to save any templates first\r\n      const templatesSavingNeeded = [];\r\n      if (templates.stage_selection.text && !templates.stage_selection.id) {\r\n        templatesSavingNeeded.push('stage_selection');\r\n      }\r\n      if (templates.data_extraction.text && !templates.data_extraction.id) {\r\n        templatesSavingNeeded.push('data_extraction');\r\n      }\r\n      if (templates.response_generation.text && !templates.response_generation.id) {\r\n        templatesSavingNeeded.push('response_generation');\r\n      }\r\n      \r\n      // If any templates need saving, save them first\r\n      if (templatesSavingNeeded.length > 0) {\r\n        setSuccess(`Saving ${templatesSavingNeeded.length} template(s) first...`);\r\n        \r\n        // Save templates in sequence\r\n        for (const type of templatesSavingNeeded) {\r\n          await saveTemplate(type);\r\n        }\r\n      }\r\n      \r\n      // Prepare updated stage data\r\n      const updatedStage = {\r\n        ...stage,\r\n        stage_name: stageName,\r\n        stage_description: stageDescription,\r\n        business_id: businessId,\r\n        agent_id: agentId || null,\r\n        stage_type: 'conversation', // Required field\r\n        stage_selection_template_id: templates.stage_selection.id || null,\r\n        data_extraction_template_id: templates.data_extraction.id || null,\r\n        response_generation_template_id: templates.response_generation.id || null\r\n      };\r\n      \r\n      let response;\r\n      let method;\r\n      let url;\r\n      \r\n      // Determine if this is a create or update operation\r\n      if (stageId === 'new' || isNewStage) {\r\n        method = 'POST';\r\n        url = '/stages';\r\n      } else {\r\n        method = 'PUT';\r\n        url = `/stages/${stageId}`;\r\n      }\r\n      \r\n      // Add query parameter with business_id and api_key\r\n      url = `${url}?business_id=${businessId}&api_key=${businessApiKey}`;\r\n      \r\n      console.log('Saving stage with data:', JSON.stringify(updatedStage, null, 2));\r\n      \r\n      // Call the API\r\n      response = await fetch(url, {\r\n        method: method,\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'X-API-Key': businessApiKey,\r\n          'API-Key': businessApiKey,\r\n          'Authorization': businessApiKey\r\n        },\r\n        credentials: 'include', // This sends cookies\r\n        body: JSON.stringify(updatedStage),\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        const errorData = await response.json().catch(() => ({}));\r\n        throw new Error(errorData.error || errorData.message || \r\n          (stageId === 'new' ? 'Failed to create stage' : 'Failed to update stage'));\r\n      }\r\n      \r\n      const result = await response.json();\r\n      console.log('Stage saved successfully:', result);\r\n      \r\n      setSuccess(stageId === 'new' ? 'Stage created successfully' : 'Stage updated successfully');\r\n      \r\n      // Navigate back to stage manager after a short delay\r\n      setTimeout(() => {\r\n        let backUrl;\r\n        if (businessId && agentId) {\r\n          backUrl = `/stage-management/business_id=${businessId}/agent_id=${agentId}`;\r\n        } else if (businessId) {\r\n          backUrl = `/stage-management/business_id=${businessId}`;\r\n        } else {\r\n          backUrl = '/stage-management';\r\n        }\r\n        navigate(backUrl);\r\n      }, 1500);\r\n    } catch (err) {\r\n      console.error('Error saving stage:', err);\r\n      setError(err.message || 'Failed to save stage');\r\n    }\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    // Navigate back to stage manager\r\n    let backUrl;\r\n    if (businessId && agentId) {\r\n      backUrl = `/stage-management/business_id=${businessId}/agent_id=${agentId}`;\r\n    } else if (businessId) {\r\n      backUrl = `/stage-management/business_id=${businessId}`;\r\n    } else {\r\n      backUrl = '/stage-management';\r\n    }\r\n    navigate(backUrl);\r\n  };\r\n\r\n  const handleTabChange = (event, newValue) => {\r\n    setTabValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <Paper sx={{ p: 3, mb: 3 }}>\r\n      {/* Back button and title */}\r\n      <Box sx={{ display: 'flex', alignItems: 'center', mb: 3 }}>\r\n        <IconButton onClick={handleCancel} sx={{ mr: 1 }}>\r\n          <ArrowBackIcon />\r\n        </IconButton>\r\n        <Typography variant=\"h5\">\r\n          {stageId && stageId !== 'new' ? 'Edit Stage' : 'Create New Stage'}\r\n        </Typography>\r\n      </Box>\r\n      \r\n      {error && (\r\n        <Alert severity=\"error\" sx={{ mb: 2 }} onClose={() => setError('')}>\r\n          {error}\r\n        </Alert>\r\n      )}\r\n      \r\n      {success && (\r\n        <Alert severity=\"success\" sx={{ mb: 2 }} onClose={() => setSuccess('')}>\r\n          {success}\r\n        </Alert>\r\n      )}\r\n      \r\n      {/* Business ID input section */}\r\n      {(showBusinessIdInput || !businessId || !businessApiKey) && (\r\n        <Box sx={{ mb: 3, p: 2, border: '1px dashed', borderColor: 'warning.main', borderRadius: 1 }}>\r\n          <Typography variant=\"subtitle1\" color=\"warning.main\" gutterBottom>\r\n            Business Credentials Required\r\n          </Typography>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} md={6}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Business ID\"\r\n                value={businessId}\r\n                onChange={(e) => setBusinessId(e.target.value)}\r\n                placeholder=\"Enter your business ID\"\r\n                helperText=\"Required for saving templates and stages\"\r\n                required\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Business API Key\"\r\n                value={businessApiKey}\r\n                onChange={(e) => setBusinessApiKey(e.target.value)}\r\n                placeholder=\"Enter your business API key\"\r\n                helperText=\"Required for authentication\"\r\n                required\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Button \r\n                variant=\"contained\" \r\n                color=\"primary\"\r\n                onClick={() => {\r\n                  if (businessId && businessApiKey) {\r\n                    // Save to both localStorage and cookies\r\n                    localStorage.setItem('businessId', businessId);\r\n                    localStorage.setItem('businessApiKey', businessApiKey);\r\n                    document.cookie = `businessId=${businessId}; path=/; max-age=86400`;\r\n                    document.cookie = `businessApiKey=${businessApiKey}; path=/; max-age=86400`;\r\n                    \r\n                    setShowBusinessIdInput(false);\r\n                    setSuccess('Business credentials saved');\r\n                    fetchAllTemplates();\r\n                  } else {\r\n                    setError('Please enter both Business ID and API Key');\r\n                  }\r\n                }}\r\n              >\r\n                Save Credentials\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n      )}\r\n      \r\n      {isLoading ? (\r\n        <Box sx={{ display: 'flex', justifyContent: 'center', p: 4 }}>\r\n          <CircularProgress />\r\n        </Box>\r\n      ) : (\r\n        <>\r\n          {/* Basic stage information */}\r\n          <Box sx={{ mb: 3 }}>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              Stage Information\r\n            </Typography>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Stage Name\"\r\n                  value={stageName}\r\n                  onChange={(e) => setStageName(e.target.value)}\r\n                  required\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Stage Description\"\r\n                  value={stageDescription}\r\n                  onChange={(e) => setStageDescription(e.target.value)}\r\n                  multiline\r\n                  rows={2}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n          \r\n          <Divider sx={{ my: 3 }} />\r\n          \r\n          {/* Template editing section */}\r\n          <Box>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              Templates\r\n            </Typography>\r\n            \r\n            <Tabs value={tabValue} onChange={handleTabChange} sx={{ mb: 2 }}>\r\n              <Tab label=\"Stage Selection\" />\r\n              <Tab label=\"Data Extraction\" />\r\n              <Tab label=\"Response Generation\" />\r\n            </Tabs>\r\n            \r\n            {/* Stage Selection Template */}\r\n            <TabPanel value={tabValue} index={0}>\r\n              <Box sx={{ mb: 2 }}>\r\n                <FormControl fullWidth sx={{ mb: 2 }}>\r\n                  <InputLabel id=\"stage-selection-template-label\">Template</InputLabel>\r\n                  <Select\r\n                    labelId=\"stage-selection-template-label\"\r\n                    value={templates.stage_selection.id || ''}\r\n                    label=\"Template\"\r\n                    onChange={(e) => handleTemplateSelect('stage_selection', e.target.value)}\r\n                  >\r\n                    <MenuItem value=\"\">\r\n                      <em>None</em>\r\n                    </MenuItem>\r\n                    {availableTemplates.stage_selection.map((template) => (\r\n                      <MenuItem key={template.template_id} value={template.template_id}>\r\n                        {template.template_name}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n                \r\n                <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\r\n                  <Typography variant=\"subtitle2\" color=\"text.secondary\">\r\n                    {templates.stage_selection.id ? \r\n                      `Template ID: ${templates.stage_selection.id}` : \r\n                      'No template selected'}\r\n                  </Typography>\r\n                  <Box sx={{ display: 'flex', gap: 1 }}>\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      color=\"primary\"\r\n                      onClick={() => confirmSaveTemplate('stage_selection')}\r\n                      disabled={!templates.stage_selection.text || savingTemplates.stage_selection}\r\n                      startIcon={savingTemplates.stage_selection ? <CircularProgress size={20} /> : null}\r\n                    >\r\n                      {savingTemplates.stage_selection ? 'Saving...' : 'Save Template'}\r\n                    </Button>\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      color=\"secondary\"\r\n                      onClick={() => confirmSaveTemplate('stage_selection', true)}\r\n                      disabled={!templates.stage_selection.text || savingTemplates.stage_selection}\r\n                    >\r\n                      Save as Default\r\n                    </Button>\r\n                  </Box>\r\n                </Box>\r\n                \r\n                <Box sx={{ display: 'flex', gap: 1, mb: 2 }}>\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    startIcon={<RestartAltIcon />}\r\n                    onClick={() => handleApplyDefaultTemplate('stage_selection')}\r\n                    disabled={availableTemplates.default_stage_selection.length === 0}\r\n                  >\r\n                    Apply Default\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    startIcon={<PreviewIcon />}\r\n                    onClick={() => handlePreview('stage_selection')}\r\n                    disabled={!templates.stage_selection.text}\r\n                  >\r\n                    Preview\r\n                  </Button>\r\n                  <Tooltip title=\"Variables are enclosed in curly braces like {user_name}\">\r\n                    <IconButton>\r\n                      <HelpOutlineIcon />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                </Box>\r\n                \r\n                {previewData && previewData.type === 'stage_selection' && (\r\n                  <Alert severity=\"info\" sx={{ mb: 2 }}>\r\n                    <Typography variant=\"subtitle2\">Preview:</Typography>\r\n                    <Typography variant=\"body2\" sx={{ whiteSpace: 'pre-wrap' }}>\r\n                      {previewData.result}\r\n                    </Typography>\r\n                  </Alert>\r\n                )}\r\n                \r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Template Text\"\r\n                  value={templates.stage_selection.text || ''}\r\n                  onChange={(e) => handleTemplateChange('stage_selection', e.target.value)}\r\n                  multiline\r\n                  rows={8}\r\n                  placeholder=\"Enter template text with variables in {curly_braces}\"\r\n                />\r\n                \r\n                {variables.stage_selection.length > 0 && (\r\n                  <Box sx={{ mt: 2 }}>\r\n                    <Typography variant=\"subtitle2\">Variables:</Typography>\r\n                    <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1 }}>\r\n                      {variables.stage_selection.map((variable) => (\r\n                        <Chip key={variable} label={variable} size=\"small\" />\r\n                      ))}\r\n                    </Box>\r\n                  </Box>\r\n                )}\r\n              </Box>\r\n            </TabPanel>\r\n            \r\n            {/* Data Extraction Template */}\r\n            <TabPanel value={tabValue} index={1}>\r\n              <Box sx={{ mb: 2 }}>\r\n                <FormControl fullWidth sx={{ mb: 2 }}>\r\n                  <InputLabel id=\"data-extraction-template-label\">Template</InputLabel>\r\n                  <Select\r\n                    labelId=\"data-extraction-template-label\"\r\n                    value={templates.data_extraction.id || ''}\r\n                    label=\"Template\"\r\n                    onChange={(e) => handleTemplateSelect('data_extraction', e.target.value)}\r\n                  >\r\n                    <MenuItem value=\"\">\r\n                      <em>None</em>\r\n                    </MenuItem>\r\n                    {availableTemplates.data_extraction.map((template) => (\r\n                      <MenuItem key={template.template_id} value={template.template_id}>\r\n                        {template.template_name}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n                \r\n                <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\r\n                  <Typography variant=\"subtitle2\" color=\"text.secondary\">\r\n                    {templates.data_extraction.id ? \r\n                      `Template ID: ${templates.data_extraction.id}` : \r\n                      'No template selected'}\r\n                  </Typography>\r\n                  <Box sx={{ display: 'flex', gap: 1 }}>\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      color=\"primary\"\r\n                      onClick={() => confirmSaveTemplate('data_extraction')}\r\n                      disabled={!templates.data_extraction.text || savingTemplates.data_extraction}\r\n                      startIcon={savingTemplates.data_extraction ? <CircularProgress size={20} /> : null}\r\n                    >\r\n                      {savingTemplates.data_extraction ? 'Saving...' : 'Save Template'}\r\n                    </Button>\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      color=\"secondary\"\r\n                      onClick={() => confirmSaveTemplate('data_extraction', true)}\r\n                      disabled={!templates.data_extraction.text || savingTemplates.data_extraction}\r\n                    >\r\n                      Save as Default\r\n                    </Button>\r\n                  </Box>\r\n                </Box>\r\n                \r\n                <Box sx={{ display: 'flex', gap: 1, mb: 2 }}>\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    startIcon={<RestartAltIcon />}\r\n                    onClick={() => handleApplyDefaultTemplate('data_extraction')}\r\n                    disabled={availableTemplates.default_data_extraction.length === 0}\r\n                  >\r\n                    Apply Default\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    startIcon={<PreviewIcon />}\r\n                    onClick={() => handlePreview('data_extraction')}\r\n                    disabled={!templates.data_extraction.text}\r\n                  >\r\n                    Preview\r\n                  </Button>\r\n                  <Tooltip title=\"Variables are enclosed in curly braces like {user_name}\">\r\n                    <IconButton>\r\n                      <HelpOutlineIcon />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                </Box>\r\n                \r\n                {previewData && previewData.type === 'data_extraction' && (\r\n                  <Alert severity=\"info\" sx={{ mb: 2 }}>\r\n                    <Typography variant=\"subtitle2\">Preview:</Typography>\r\n                    <Typography variant=\"body2\" sx={{ whiteSpace: 'pre-wrap' }}>\r\n                      {previewData.result}\r\n                    </Typography>\r\n                  </Alert>\r\n                )}\r\n                \r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Template Text\"\r\n                  value={templates.data_extraction.text || ''}\r\n                  onChange={(e) => handleTemplateChange('data_extraction', e.target.value)}\r\n                  multiline\r\n                  rows={8}\r\n                  placeholder=\"Enter template text with variables in {curly_braces}\"\r\n                />\r\n                \r\n                {variables.data_extraction.length > 0 && (\r\n                  <Box sx={{ mt: 2 }}>\r\n                    <Typography variant=\"subtitle2\">Variables:</Typography>\r\n                    <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1 }}>\r\n                      {variables.data_extraction.map((variable) => (\r\n                        <Chip key={variable} label={variable} size=\"small\" />\r\n                      ))}\r\n                    </Box>\r\n                  </Box>\r\n                )}\r\n              </Box>\r\n            </TabPanel>\r\n            \r\n            {/* Response Generation Template */}\r\n            <TabPanel value={tabValue} index={2}>\r\n              <Box sx={{ mb: 2 }}>\r\n                <FormControl fullWidth sx={{ mb: 2 }}>\r\n                  <InputLabel id=\"response-generation-template-label\">Template</InputLabel>\r\n                  <Select\r\n                    labelId=\"response-generation-template-label\"\r\n                    value={templates.response_generation.id || ''}\r\n                    label=\"Template\"\r\n                    onChange={(e) => handleTemplateSelect('response_generation', e.target.value)}\r\n                  >\r\n                    <MenuItem value=\"\">\r\n                      <em>None</em>\r\n                    </MenuItem>\r\n                    {availableTemplates.response_generation.map((template) => (\r\n                      <MenuItem key={template.template_id} value={template.template_id}>\r\n                        {template.template_name}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n                \r\n                <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\r\n                  <Typography variant=\"subtitle2\" color=\"text.secondary\">\r\n                    {templates.response_generation.id ? \r\n                      `Template ID: ${templates.response_generation.id}` : \r\n                      'No template selected'}\r\n                  </Typography>\r\n                  <Box sx={{ display: 'flex', gap: 1 }}>\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      color=\"primary\"\r\n                      onClick={() => confirmSaveTemplate('response_generation')}\r\n                      disabled={!templates.response_generation.text || savingTemplates.response_generation}\r\n                      startIcon={savingTemplates.response_generation ? <CircularProgress size={20} /> : null}\r\n                    >\r\n                      {savingTemplates.response_generation ? 'Saving...' : 'Save Template'}\r\n                    </Button>\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      color=\"secondary\"\r\n                      onClick={() => confirmSaveTemplate('response_generation', true)}\r\n                      disabled={!templates.response_generation.text || savingTemplates.response_generation}\r\n                    >\r\n                      Save as Default\r\n                    </Button>\r\n                  </Box>\r\n                </Box>\r\n                \r\n                <Box sx={{ display: 'flex', gap: 1, mb: 2 }}>\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    startIcon={<RestartAltIcon />}\r\n                    onClick={() => handleApplyDefaultTemplate('response_generation')}\r\n                    disabled={availableTemplates.default_response_generation.length === 0}\r\n                  >\r\n                    Apply Default\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    startIcon={<PreviewIcon />}\r\n                    onClick={() => handlePreview('response_generation')}\r\n                    disabled={!templates.response_generation.text}\r\n                  >\r\n                    Preview\r\n                  </Button>\r\n                  <Tooltip title=\"Variables are enclosed in curly braces like {user_name}\">\r\n                    <IconButton>\r\n                      <HelpOutlineIcon />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                </Box>\r\n                \r\n                {previewData && previewData.type === 'response_generation' && (\r\n                  <Alert severity=\"info\" sx={{ mb: 2 }}>\r\n                    <Typography variant=\"subtitle2\">Preview:</Typography>\r\n                    <Typography variant=\"body2\" sx={{ whiteSpace: 'pre-wrap' }}>\r\n                      {previewData.result}\r\n                    </Typography>\r\n                  </Alert>\r\n                )}\r\n                \r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Template Text\"\r\n                  value={templates.response_generation.text || ''}\r\n                  onChange={(e) => handleTemplateChange('response_generation', e.target.value)}\r\n                  multiline\r\n                  rows={8}\r\n                  placeholder=\"Enter template text with variables in {curly_braces}\"\r\n                />\r\n                \r\n                {variables.response_generation.length > 0 && (\r\n                  <Box sx={{ mt: 2 }}>\r\n                    <Typography variant=\"subtitle2\">Variables:</Typography>\r\n                    <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1 }}>\r\n                      {variables.response_generation.map((variable) => (\r\n                        <Chip key={variable} label={variable} size=\"small\" />\r\n                      ))}\r\n                    </Box>\r\n                  </Box>\r\n                )}\r\n              </Box>\r\n            </TabPanel>\r\n          </Box>\r\n          \r\n          {/* Save button */}\r\n          <Box sx={{ mt: 3, display: 'flex', justifyContent: 'space-between' }}>\r\n            <Button\r\n              variant=\"outlined\"\r\n              onClick={handleCancel}\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              startIcon={<SaveIcon />}\r\n              onClick={handleSave}\r\n              disabled={isLoading}\r\n            >\r\n              {isLoading ? <CircularProgress size={24} /> : (stageId === 'new' ? 'Create Stage' : 'Save Stage')}\r\n            </Button>\r\n          </Box>\r\n        </>\r\n      )}\r\n\r\n      {/* Template Save Confirmation Dialog */}\r\n      <Dialog open={showConfirmDialog} onClose={() => setShowConfirmDialog(false)}>\r\n        <DialogTitle>Save Template</DialogTitle>\r\n        <DialogContent>\r\n          <Typography>\r\n            {saveAsDefault\r\n              ? `Are you sure you want to save this as a default ${templateToSave?.replace(/_/g, ' ')} template?`\r\n              : templates[templateToSave]?.id \r\n                ? `Are you sure you want to update this ${templateToSave?.replace(/_/g, ' ')} template?` \r\n                : `Are you sure you want to create a new ${templateToSave?.replace(/_/g, ' ')} template?`}\r\n          </Typography>\r\n          {saveAsDefault && (\r\n            <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mt: 1 }}>\r\n              This will create a new default template that can be applied to any stage.\r\n            </Typography>\r\n          )}\r\n          {!templates[templateToSave]?.id && !saveAsDefault && (\r\n            <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mt: 1 }}>\r\n              A new template will be created in the database.\r\n            </Typography>\r\n          )}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setShowConfirmDialog(false)}>Cancel</Button>\r\n          <Button onClick={handleConfirmSave} color=\"primary\" variant=\"contained\">\r\n            Save\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default StageEditor; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}