{"ast":null,"code":"var _jsxFileName = \"C:\\\\icmp_events_api\\\\front-end\\\\src\\\\components\\\\Configuration.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { TextField, Button, Typography, Card, CardContent, Box } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Configuration = ({\n  apiKey,\n  setApiKey,\n  userId,\n  setUserId,\n  businessId,\n  setBusinessId,\n  businessApiKey,\n  setBusinessApiKey,\n  handleSnackbarOpen,\n  handleLogout\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const handleSave = async () => {\n    if (!apiKey || !userId || !businessId || !businessApiKey) {\n      handleSnackbarOpen('Please enter all the configuration values', 'warning');\n      return;\n    }\n    try {\n      const response = await fetch('/api/save-config', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json',\n          'Authorization': `Bearer ${apiKey}`\n        },\n        credentials: 'include',\n        body: JSON.stringify({\n          apiKey,\n          userId,\n          businessId,\n          businessApiKey\n        })\n      });\n      if (!response.ok) {\n        const data = await response.json();\n        handleSnackbarOpen(data.message || 'Invalid credentials', 'error');\n        return;\n      }\n      handleSnackbarOpen('Configuration saved successfully', 'success');\n      navigate('/business');\n    } catch (error) {\n      handleSnackbarOpen('Error saving configuration', 'error');\n    }\n  };\n  const onLogout = () => {\n    handleLogout();\n    navigate('/login');\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          mb: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"Configuration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          color: \"secondary\",\n          onClick: onLogout,\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          flexDirection: 'column',\n          gap: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          label: \"ICMP API Key\",\n          type: \"password\",\n          value: apiKey,\n          onChange: e => setApiKey(e.target.value),\n          required: true,\n          error: !apiKey,\n          helperText: !apiKey ? 'ICMP API Key is required' : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Business API Key\",\n          type: \"password\",\n          value: businessApiKey,\n          onChange: e => setBusinessApiKey(e.target.value),\n          required: true,\n          error: !businessApiKey,\n          helperText: !businessApiKey ? 'Business API Key is required' : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"User ID\",\n          value: userId,\n          onChange: e => setUserId(e.target.value),\n          required: true,\n          error: !userId,\n          helperText: !userId ? 'User ID is required' : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Business ID\",\n          value: businessId,\n          onChange: e => setBusinessId(e.target.value),\n          required: true,\n          error: !businessId,\n          helperText: !businessId ? 'Business ID is required' : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: handleSave,\n          children: \"Save Config\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n_s(Configuration, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = Configuration;\nexport default Configuration;\nvar _c;\n$RefreshReg$(_c, \"Configuration\");","map":{"version":3,"names":["React","TextField","Button","Typography","Card","CardContent","Box","useNavigate","jsxDEV","_jsxDEV","Configuration","apiKey","setApiKey","userId","setUserId","businessId","setBusinessId","businessApiKey","setBusinessApiKey","handleSnackbarOpen","handleLogout","_s","navigate","handleSave","response","fetch","method","headers","credentials","body","JSON","stringify","ok","data","json","message","error","onLogout","children","sx","display","justifyContent","alignItems","mb","variant","fileName","_jsxFileName","lineNumber","columnNumber","color","onClick","flexDirection","gap","label","type","value","onChange","e","target","required","helperText","_c","$RefreshReg$"],"sources":["C:/icmp_events_api/front-end/src/components/Configuration.js"],"sourcesContent":["import React from 'react';\r\nimport { TextField, Button, Typography, Card, CardContent, Box } from '@mui/material';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Configuration = ({\r\n    apiKey,\r\n    setApiKey,\r\n    userId,\r\n    setUserId,\r\n    businessId,\r\n    setBusinessId,\r\n    businessApiKey,\r\n    setBusinessApiKey,\r\n    handleSnackbarOpen,\r\n    handleLogout\r\n}) => {\r\n    const navigate = useNavigate();\r\n\r\n    const handleSave = async () => {\r\n        if (!apiKey || !userId || !businessId || !businessApiKey) {\r\n            handleSnackbarOpen('Please enter all the configuration values', 'warning');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await fetch('/api/save-config', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Accept': 'application/json',\r\n                    'Authorization': `Bearer ${apiKey}`\r\n                },\r\n                credentials: 'include',\r\n                body: JSON.stringify({\r\n                    apiKey,\r\n                    userId,\r\n                    businessId,\r\n                    businessApiKey\r\n                })\r\n            });\r\n\r\n            if (!response.ok) {\r\n                const data = await response.json();\r\n                handleSnackbarOpen(data.message || 'Invalid credentials', 'error');\r\n                return;\r\n            }\r\n\r\n            handleSnackbarOpen('Configuration saved successfully', 'success');\r\n            navigate('/business');\r\n        } catch (error) {\r\n            handleSnackbarOpen('Error saving configuration', 'error');\r\n        }\r\n    };\r\n\r\n    const onLogout = () => {\r\n        handleLogout();\r\n        navigate('/login');\r\n    };\r\n\r\n    return (\r\n        <Card>\r\n            <CardContent>\r\n                <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\r\n                    <Typography variant=\"h6\">Configuration</Typography>\r\n                    <Button variant=\"outlined\" color=\"secondary\" onClick={onLogout}>\r\n                        Logout\r\n                    </Button>\r\n                </Box>\r\n                <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2 }}>\r\n                    <TextField\r\n                        label=\"ICMP API Key\"\r\n                        type=\"password\"\r\n                        value={apiKey}\r\n                        onChange={(e) => setApiKey(e.target.value)}\r\n                        required\r\n                        error={!apiKey}\r\n                        helperText={!apiKey ? 'ICMP API Key is required' : ''}\r\n                    />\r\n                    <TextField\r\n                        label=\"Business API Key\"\r\n                        type=\"password\"\r\n                        value={businessApiKey}\r\n                        onChange={(e) => setBusinessApiKey(e.target.value)}\r\n                        required\r\n                        error={!businessApiKey}\r\n                        helperText={!businessApiKey ? 'Business API Key is required' : ''}\r\n                    />\r\n                    <TextField\r\n                        label=\"User ID\"\r\n                        value={userId}\r\n                        onChange={(e) => setUserId(e.target.value)}\r\n                        required\r\n                        error={!userId}\r\n                        helperText={!userId ? 'User ID is required' : ''}\r\n                    />\r\n                    <TextField\r\n                        label=\"Business ID\"\r\n                        value={businessId}\r\n                        onChange={(e) => setBusinessId(e.target.value)}\r\n                        required\r\n                        error={!businessId}\r\n                        helperText={!businessId ? 'Business ID is required' : ''}\r\n                    />\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={handleSave}>\r\n                        Save Config\r\n                    </Button>\r\n                </Box>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default Configuration;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}