{"ast":null,"code":"import { API_CONFIG } from '../config';\nimport { getAuthHeaders } from './authService';\nimport { normalizeUUID } from '../hooks/useConfig';\n\n// Fetch templates\nexport const fetchTemplates = async (businessId, agentId) => {\n  try {\n    const normalizedBusinessId = normalizeUUID(businessId);\n    const normalizedAgentId = normalizeUUID(agentId);\n    console.log(`Fetching templates for business: ${normalizedBusinessId}, agent: ${normalizedAgentId}`);\n    const response = await fetch(`${API_CONFIG.BASE_URL}/templates?business_id=${normalizedBusinessId}&agent_id=${normalizedAgentId}`, {\n      method: 'GET',\n      credentials: 'include',\n      headers: getAuthHeaders()\n    });\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.message || 'Failed to fetch templates');\n    }\n    return await response.json();\n  } catch (error) {\n    console.error('Error in fetchTemplates:', error);\n    throw error;\n  }\n};\n\n// Get a template by ID\nexport const getTemplate = async (templateId, businessId) => {\n  try {\n    const normalizedBusinessId = normalizeUUID(businessId);\n    console.log(`Fetching template ${templateId} for business: ${normalizedBusinessId}`);\n    const response = await fetch(`${API_CONFIG.BASE_URL}/templates/${templateId}?business_id=${normalizedBusinessId}`, {\n      method: 'GET',\n      credentials: 'include',\n      headers: getAuthHeaders()\n    });\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.message || 'Failed to fetch template');\n    }\n    return await response.json();\n  } catch (error) {\n    console.error('Error in getTemplate:', error);\n    throw error;\n  }\n};\n\n// Create a new template\nexport const createTemplate = async templateData => {\n  try {\n    // Make sure business_id and agent_id are normalized\n    const normalizedData = {\n      ...templateData,\n      business_id: normalizeUUID(templateData.business_id),\n      agent_id: normalizeUUID(templateData.agent_id)\n    };\n    console.log('Creating template:', normalizedData);\n    const response = await fetch(`${API_CONFIG.BASE_URL}/templates`, {\n      method: 'POST',\n      credentials: 'include',\n      headers: getAuthHeaders(),\n      body: JSON.stringify(normalizedData)\n    });\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.message || 'Failed to create template');\n    }\n    return await response.json();\n  } catch (error) {\n    console.error('Error in createTemplate:', error);\n    throw error;\n  }\n};\n\n// Update an existing template\nexport const updateTemplate = async (templateId, templateData) => {\n  try {\n    // Make sure business_id and agent_id are normalized\n    const normalizedData = {\n      ...templateData,\n      business_id: normalizeUUID(templateData.business_id),\n      agent_id: normalizeUUID(templateData.agent_id)\n    };\n    console.log(`Updating template ${templateId}:`, normalizedData);\n    const response = await fetch(`${API_CONFIG.BASE_URL}/templates/${templateId}`, {\n      method: 'PUT',\n      credentials: 'include',\n      headers: getAuthHeaders(),\n      body: JSON.stringify(normalizedData)\n    });\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.message || 'Failed to update template');\n    }\n    return await response.json();\n  } catch (error) {\n    console.error('Error in updateTemplate:', error);\n    throw error;\n  }\n};\n\n// Delete a template\nexport const deleteTemplate = async (templateId, businessId) => {\n  try {\n    const normalizedBusinessId = normalizeUUID(businessId);\n    console.log(`Deleting template ${templateId} for business: ${normalizedBusinessId}`);\n    const response = await fetch(`${API_CONFIG.BASE_URL}/templates/${templateId}?business_id=${normalizedBusinessId}`, {\n      method: 'DELETE',\n      credentials: 'include',\n      headers: getAuthHeaders()\n    });\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.message || 'Failed to delete template');\n    }\n    return true;\n  } catch (error) {\n    console.error('Error in deleteTemplate:', error);\n    throw error;\n  }\n};\n\n// Duplicate a template\nexport const duplicateTemplate = async templateData => {\n  try {\n    // Make sure business_id and agent_id are normalized\n    const normalizedData = {\n      ...templateData,\n      business_id: normalizeUUID(templateData.business_id),\n      agent_id: normalizeUUID(templateData.agent_id),\n      template_name: `${templateData.template_name} (Copy)`\n    };\n    console.log('Duplicating template as:', normalizedData);\n    return await createTemplate(normalizedData);\n  } catch (error) {\n    console.error('Error in duplicateTemplate:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["API_CONFIG","getAuthHeaders","normalizeUUID","fetchTemplates","businessId","agentId","normalizedBusinessId","normalizedAgentId","console","log","response","fetch","BASE_URL","method","credentials","headers","ok","errorData","json","Error","message","error","getTemplate","templateId","createTemplate","templateData","normalizedData","business_id","agent_id","body","JSON","stringify","updateTemplate","deleteTemplate","duplicateTemplate","template_name"],"sources":["C:/icmp_events_api/front-end/src/services/templateService.js"],"sourcesContent":["import { API_CONFIG } from '../config';\r\nimport { getAuthHeaders } from './authService';\r\nimport { normalizeUUID } from '../hooks/useConfig';\r\n\r\n// Fetch templates\r\nexport const fetchTemplates = async (businessId, agentId) => {\r\n  try {\r\n    const normalizedBusinessId = normalizeUUID(businessId);\r\n    const normalizedAgentId = normalizeUUID(agentId);\r\n\r\n    console.log(`Fetching templates for business: ${normalizedBusinessId}, agent: ${normalizedAgentId}`);\r\n    const response = await fetch(`${API_CONFIG.BASE_URL}/templates?business_id=${normalizedBusinessId}&agent_id=${normalizedAgentId}`, {\r\n      method: 'GET',\r\n      credentials: 'include',\r\n      headers: getAuthHeaders()\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      const errorData = await response.json();\r\n      throw new Error(errorData.message || 'Failed to fetch templates');\r\n    }\r\n\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('Error in fetchTemplates:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Get a template by ID\r\nexport const getTemplate = async (templateId, businessId) => {\r\n  try {\r\n    const normalizedBusinessId = normalizeUUID(businessId);\r\n    \r\n    console.log(`Fetching template ${templateId} for business: ${normalizedBusinessId}`);\r\n    const response = await fetch(`${API_CONFIG.BASE_URL}/templates/${templateId}?business_id=${normalizedBusinessId}`, {\r\n      method: 'GET',\r\n      credentials: 'include',\r\n      headers: getAuthHeaders()\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      const errorData = await response.json();\r\n      throw new Error(errorData.message || 'Failed to fetch template');\r\n    }\r\n\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('Error in getTemplate:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Create a new template\r\nexport const createTemplate = async (templateData) => {\r\n  try {\r\n    // Make sure business_id and agent_id are normalized\r\n    const normalizedData = {\r\n      ...templateData,\r\n      business_id: normalizeUUID(templateData.business_id),\r\n      agent_id: normalizeUUID(templateData.agent_id)\r\n    };\r\n    \r\n    console.log('Creating template:', normalizedData);\r\n    const response = await fetch(`${API_CONFIG.BASE_URL}/templates`, {\r\n      method: 'POST',\r\n      credentials: 'include',\r\n      headers: getAuthHeaders(),\r\n      body: JSON.stringify(normalizedData)\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      const errorData = await response.json();\r\n      throw new Error(errorData.message || 'Failed to create template');\r\n    }\r\n\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('Error in createTemplate:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Update an existing template\r\nexport const updateTemplate = async (templateId, templateData) => {\r\n  try {\r\n    // Make sure business_id and agent_id are normalized\r\n    const normalizedData = {\r\n      ...templateData,\r\n      business_id: normalizeUUID(templateData.business_id),\r\n      agent_id: normalizeUUID(templateData.agent_id)\r\n    };\r\n    \r\n    console.log(`Updating template ${templateId}:`, normalizedData);\r\n    const response = await fetch(`${API_CONFIG.BASE_URL}/templates/${templateId}`, {\r\n      method: 'PUT',\r\n      credentials: 'include',\r\n      headers: getAuthHeaders(),\r\n      body: JSON.stringify(normalizedData)\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      const errorData = await response.json();\r\n      throw new Error(errorData.message || 'Failed to update template');\r\n    }\r\n\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('Error in updateTemplate:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Delete a template\r\nexport const deleteTemplate = async (templateId, businessId) => {\r\n  try {\r\n    const normalizedBusinessId = normalizeUUID(businessId);\r\n    \r\n    console.log(`Deleting template ${templateId} for business: ${normalizedBusinessId}`);\r\n    const response = await fetch(`${API_CONFIG.BASE_URL}/templates/${templateId}?business_id=${normalizedBusinessId}`, {\r\n      method: 'DELETE',\r\n      credentials: 'include',\r\n      headers: getAuthHeaders()\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      const errorData = await response.json();\r\n      throw new Error(errorData.message || 'Failed to delete template');\r\n    }\r\n\r\n    return true;\r\n  } catch (error) {\r\n    console.error('Error in deleteTemplate:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Duplicate a template\r\nexport const duplicateTemplate = async (templateData) => {\r\n  try {\r\n    // Make sure business_id and agent_id are normalized\r\n    const normalizedData = {\r\n      ...templateData,\r\n      business_id: normalizeUUID(templateData.business_id),\r\n      agent_id: normalizeUUID(templateData.agent_id),\r\n      template_name: `${templateData.template_name} (Copy)`\r\n    };\r\n    \r\n    console.log('Duplicating template as:', normalizedData);\r\n    return await createTemplate(normalizedData);\r\n  } catch (error) {\r\n    console.error('Error in duplicateTemplate:', error);\r\n    throw error;\r\n  }\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}