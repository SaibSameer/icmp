{"ast":null,"code":"var _jsxFileName = \"C:\\\\icmp_events_api\\\\front-end\\\\src\\\\components\\\\StageEditor.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { useParams, useNavigate, useLocation } from 'react-router-dom';\nimport { cachedFetch } from '../utils/fetchUtils';\nimport { Box, Paper, Typography, TextField, Button, Tabs, Tab, Grid, Alert, Snackbar, IconButton, Tooltip, FormControl, InputLabel, MenuItem, Select, CircularProgress, Divider, Chip, Dialog, DialogTitle, DialogContent, DialogActions } from '@mui/material';\nimport SaveIcon from '@mui/icons-material/Save';\nimport PreviewIcon from '@mui/icons-material/Preview';\nimport RestartAltIcon from '@mui/icons-material/RestartAlt';\nimport HelpOutlineIcon from '@mui/icons-material/HelpOutline';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\n\n// Global request cache to prevent duplicate API calls\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst apiCache = {\n  cache: {},\n  get: function (url) {\n    var _this$cache$url;\n    return (_this$cache$url = this.cache[url]) === null || _this$cache$url === void 0 ? void 0 : _this$cache$url.data;\n  },\n  set: function (url, data, ttl = 60000) {\n    // Default TTL: 1 minute\n    this.cache[url] = {\n      data,\n      expiry: Date.now() + ttl\n    };\n  },\n  isValid: function (url) {\n    const item = this.cache[url];\n    return item && item.expiry > Date.now();\n  },\n  clear: function () {\n    this.cache = {};\n  }\n};\n\n// TabPanel component for the tabs\nfunction TabPanel(props) {\n  const {\n    children,\n    value,\n    index,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: `tabpanel-${index}`,\n    \"aria-labelledby\": `tab-${index}`,\n    ...other,\n    style: {\n      padding: '20px 0'\n    },\n    children: value === index && /*#__PURE__*/_jsxDEV(Box, {\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_c = TabPanel;\nconst StageEditor = () => {\n  _s();\n  var _templates$templateTo, _templates$templateTo2;\n  const {\n    stageId: urlStageId\n  } = useParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  // Add stageId state\n  const [stageId, setStageId] = useState(urlStageId || 'new');\n\n  // Check local storage and cookies for business ID and API key\n  const getStoredValue = key => {\n    var _document$cookie$spli;\n    // Try localStorage first\n    const localStorageValue = localStorage.getItem(key);\n    if (localStorageValue) return localStorageValue;\n\n    // Then try cookies\n    return (_document$cookie$spli = document.cookie.split('; ').find(row => row.startsWith(`${key}=`))) === null || _document$cookie$spli === void 0 ? void 0 : _document$cookie$spli.split('=')[1];\n  };\n  const queryParams = new URLSearchParams(location.search);\n  const queryBusinessId = queryParams.get('business_id');\n\n  // Location state values as fallback\n  const {\n    businessId: locationBusinessId,\n    agentId: locationAgentId,\n    isNewStage\n  } = location.state || {};\n\n  // Get stored values\n  const storedBusinessId = getStoredValue('businessId');\n  const storedApiKey = getStoredValue('businessApiKey');\n\n  // Use query parameters first, then location state, then stored values\n  const [businessId, setBusinessId] = useState(queryBusinessId || locationBusinessId || storedBusinessId || '');\n  const [businessApiKey, setBusinessApiKey] = useState(storedApiKey || '');\n  const [showBusinessIdInput, setShowBusinessIdInput] = useState(!businessId || !businessApiKey);\n  const agentId = queryParams.get('agent_id') || locationAgentId;\n  const [stage, setStage] = useState(null);\n  const [stageName, setStageName] = useState('');\n  const [stageDescription, setStageDescription] = useState('');\n  const [tabValue, setTabValue] = useState(0);\n  const [templates, setTemplates] = useState({\n    stage_selection: {\n      id: '',\n      text: '',\n      type: ''\n    },\n    data_extraction: {\n      id: '',\n      text: '',\n      type: ''\n    },\n    response_generation: {\n      id: '',\n      text: '',\n      type: ''\n    }\n  });\n  const [availableTemplates, setAvailableTemplates] = useState({\n    stage_selection: [],\n    data_extraction: [],\n    response_generation: [],\n    default_stage_selection: [],\n    default_data_extraction: [],\n    default_response_generation: []\n  });\n  const [variables, setVariables] = useState({\n    stage_selection: [],\n    data_extraction: [],\n    response_generation: []\n  });\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [previewData, setPreviewData] = useState(null);\n  const [previewLoading, setPreviewLoading] = useState(false);\n  const [previewError, setPreviewError] = useState('');\n  const [showPreview, setShowPreview] = useState(false);\n\n  // Add template saving loading states\n  const [savingTemplates, setSavingTemplates] = useState({\n    stage_selection: false,\n    data_extraction: false,\n    response_generation: false\n  });\n\n  // Add template save confirmation dialog\n  const [showConfirmDialog, setShowConfirmDialog] = useState(false);\n  const [templateToSave, setTemplateToSave] = useState('');\n  const [saveAsDefault, setSaveAsDefault] = useState(false);\n\n  // Track if component is mounted\n  const isMounted = useRef(true);\n\n  // Clear any previous fetch timeouts on unmount\n  useEffect(() => {\n    return () => {\n      isMounted.current = false;\n    };\n  }, []);\n\n  // Function to open the confirmation dialog\n  const confirmSaveTemplate = (type, asDefault = false) => {\n    setTemplateToSave(type);\n    setSaveAsDefault(asDefault);\n    setShowConfirmDialog(true);\n  };\n\n  // Function to handle dialog confirm\n  const handleConfirmSave = async () => {\n    setShowConfirmDialog(false);\n    if (templateToSave) {\n      await saveTemplate(templateToSave, saveAsDefault);\n    }\n  };\n\n  // Add validation function for credentials\n  const validateCredentials = useCallback(async () => {\n    if (!businessId || !businessApiKey) {\n      setError('Business ID and API Key are required');\n      setShowBusinessIdInput(true);\n      return false;\n    }\n    try {\n      // Test credentials with the validate-credentials endpoint\n      const response = await fetch(`/businesses/validate-credentials?business_id=${businessId}`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json',\n          'Authorization': businessApiKey,\n          'X-API-Key': businessApiKey,\n          'API-Key': businessApiKey\n        },\n        credentials: 'include'\n      });\n      if (!response.ok) {\n        throw new Error('Invalid business ID or API key');\n      }\n      return true;\n    } catch (err) {\n      console.error('Credential validation error:', err);\n      setError('Failed to validate credentials: ' + err.message);\n      setShowBusinessIdInput(true);\n      return false;\n    }\n  }, [businessId, businessApiKey]);\n\n  // Add a throttled fetch for all templates with proper dependencies\n  const fetchAllTemplates = useCallback(async () => {\n    if (!businessId || !businessApiKey || !isMounted.current) return;\n    try {\n      console.log('Fetching templates with businessId:', businessId);\n\n      // Use cached fetch with 5 minute TTL for templates\n      const response = await cachedFetch('/templates', {}, 5 * 60 * 1000, {\n        headers: {\n          'Authorization': `Bearer ${businessApiKey}`,\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({}));\n        throw new Error(errorData.message || errorData.error || 'Failed to fetch templates');\n      }\n      const data = await response.json();\n      console.log('Fetched templates:', data);\n\n      // Organize templates by type\n      const templatesByType = {\n        stage_selection: [],\n        data_extraction: [],\n        response_generation: [],\n        default_stage_selection: [],\n        default_data_extraction: [],\n        default_response_generation: []\n      };\n      data.forEach(template => {\n        if (templatesByType[template.template_type]) {\n          templatesByType[template.template_type].push(template);\n        }\n      });\n      if (isMounted.current) {\n        setAvailableTemplates(templatesByType);\n        console.log('Updated available templates:', templatesByType);\n      }\n    } catch (err) {\n      console.error('Error fetching templates:', err);\n      if (isMounted.current) {\n        setError('Failed to fetch templates: ' + err.message);\n      }\n    }\n  }, [businessId, businessApiKey]);\n  useEffect(() => {\n    let isActive = true;\n    const initializeComponent = async () => {\n      try {\n        // Start with loading state\n        setIsLoading(true);\n\n        // Check if we have the required credentials\n        if (!businessId || !businessApiKey) {\n          setShowBusinessIdInput(true);\n          setIsLoading(false);\n          return;\n        }\n\n        // Validate credentials before proceeding\n        const isValid = await validateCredentials();\n        if (!isActive) return;\n        if (!isValid) {\n          setIsLoading(false);\n          return;\n        }\n\n        // Store validated credentials\n        localStorage.setItem('businessId', businessId);\n        localStorage.setItem('businessApiKey', businessApiKey);\n        document.cookie = `businessId=${businessId}; path=/; max-age=86400`;\n        document.cookie = `businessApiKey=${businessApiKey}; path=/; max-age=86400`;\n\n        // Load stage data if needed\n        if (stageId === 'new' || isNewStage) {\n          // For new stage, just set up defaults\n          if (isActive) {\n            setStage({\n              stage_name: '',\n              stage_description: '',\n              business_id: businessId,\n              agent_id: agentId,\n              stage_selection_template_id: null,\n              data_extraction_template_id: null,\n              response_generation_template_id: null,\n              stage_config: {\n                order: 0\n              }\n            });\n          }\n        } else if (stageId) {\n          // Fetch existing stage\n          await fetchStage(stageId);\n        }\n\n        // Always fetch templates with validated credentials\n        if (isActive) {\n          await fetchAllTemplates();\n        }\n      } catch (err) {\n        console.error('Error initializing component:', err);\n        if (isActive) {\n          setError('Error initializing: ' + err.message);\n        }\n      } finally {\n        if (isActive) {\n          setIsLoading(false);\n        }\n      }\n    };\n    initializeComponent();\n    return () => {\n      isActive = false;\n    };\n  }, [stageId, businessId, businessApiKey, agentId, isNewStage, fetchAllTemplates, validateCredentials]);\n\n  // Fetch specific stage data\n  const fetchStage = async id => {\n    if (!isMounted.current || !businessId || !businessApiKey) return;\n    setIsLoading(true);\n    try {\n      const response = await cachedFetch(`/stages/${id}`);\n      if (!response.ok) throw new Error('Failed to fetch stage');\n      const data = await response.json();\n      if (isMounted.current) {\n        setStage(data);\n        setStageName(data.stage_name || '');\n        setStageDescription(data.stage_description || '');\n\n        // For each template ID in the stage, fetch the template content\n        if (data.stage_selection_template_id) {\n          fetchTemplate(data.stage_selection_template_id, 'stage_selection');\n        }\n        if (data.data_extraction_template_id) {\n          fetchTemplate(data.data_extraction_template_id, 'data_extraction');\n        }\n        if (data.response_generation_template_id) {\n          fetchTemplate(data.response_generation_template_id, 'response_generation');\n        }\n      }\n    } catch (err) {\n      if (isMounted.current) {\n        setError(err.message);\n      }\n    } finally {\n      if (isMounted.current) {\n        setIsLoading(false);\n      }\n    }\n  };\n  const fetchTemplate = useCallback(async (templateId, type) => {\n    if (!isMounted.current || !businessId || !businessApiKey) return;\n    try {\n      console.log(`Fetching template ${templateId} for type ${type}`);\n      const response = await cachedFetch(`/templates/${templateId}`);\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({}));\n        throw new Error(errorData.message || errorData.error || `Failed to fetch ${type} template`);\n      }\n      const data = await response.json();\n      console.log(`Fetched template data:`, data);\n      if (isMounted.current) {\n        setTemplates(prev => ({\n          ...prev,\n          [type]: {\n            id: data.template_id,\n            text: data.template_text,\n            type: data.template_type\n          }\n        }));\n\n        // Extract variables from template\n        setVariables(prev => ({\n          ...prev,\n          [type]: extractVariables(data.template_text)\n        }));\n      }\n    } catch (err) {\n      console.error(`Error fetching template ${templateId}:`, err);\n      if (isMounted.current) {\n        setError(err.message);\n      }\n    }\n  }, [businessId, businessApiKey]);\n  const extractVariables = template => {\n    if (!template) return [];\n    const matches = template.match(/\\{([^}]+)\\}/g) || [];\n    return matches.map(match => match.slice(1, -1));\n  };\n  const handleTemplateChange = (type, value) => {\n    setTemplates(prev => ({\n      ...prev,\n      [type]: {\n        ...prev[type],\n        text: value\n      }\n    }));\n    // Update variables when template changes\n    setVariables(prev => ({\n      ...prev,\n      [type]: extractVariables(value)\n    }));\n  };\n  const handleTemplateSelect = async (type, templateId) => {\n    // If selecting \"None\", clear the template\n    if (!templateId) {\n      setTemplates(prev => ({\n        ...prev,\n        [type]: {\n          id: '',\n          text: '',\n          type: ''\n        }\n      }));\n      setVariables(prev => ({\n        ...prev,\n        [type]: []\n      }));\n      return;\n    }\n\n    // Fetch the selected template\n    await fetchTemplate(templateId, type);\n  };\n  const handleApplyDefaultTemplate = async type => {\n    // Map regular types to their default counterparts\n    const defaultTypeMap = {\n      'stage_selection': 'default_stage_selection',\n      'data_extraction': 'default_data_extraction',\n      'response_generation': 'default_response_generation'\n    };\n    const defaultType = defaultTypeMap[type];\n\n    // Find default templates of the corresponding type\n    const defaultTemplates = availableTemplates[defaultType];\n    if (defaultTemplates.length === 0) {\n      setError(`No default templates available for ${type}`);\n      return;\n    }\n\n    // For simplicity, use the first default template\n    const defaultTemplate = defaultTemplates[0];\n\n    // Apply the default template text (but keep the original ID)\n    setTemplates(prev => ({\n      ...prev,\n      [type]: {\n        ...prev[type],\n        text: defaultTemplate.template_text,\n        type: type // Keep the original type, not the default type\n      }\n    }));\n\n    // Update variables\n    setVariables(prev => ({\n      ...prev,\n      [type]: extractVariables(defaultTemplate.template_text)\n    }));\n    setSuccess(`Applied default template for ${type}`);\n  };\n  const handlePreview = async templateType => {\n    try {\n      setPreviewLoading(true);\n      setPreviewError('');\n      const templateText = templates[templateType].text;\n      if (!templateText.trim()) {\n        setPreviewError('Template text is empty');\n        return;\n      }\n      if (!businessApiKey) {\n        setPreviewError('Business API key is required but was not found');\n        setShowBusinessIdInput(true);\n        return;\n      }\n\n      // Prepare preview request\n      const previewRequest = {\n        template_type: templateType,\n        template_text: templateText,\n        context: {\n          conversation_history: [{\n            role: \"user\",\n            content: \"I'm interested in your products\"\n          }, {\n            role: \"assistant\",\n            content: \"I'd be happy to tell you about our products. What type are you interested in?\"\n          }],\n          extracted_data: {\n            customer_name: \"John Doe\",\n            product_interest: \"shoes\",\n            budget: \"$100\"\n          }\n        }\n      };\n\n      // Try multiple possible endpoints (for compatibility)\n      const endpoints = ['/templates/render', '/render_template', '/api/templates/preview'];\n      let response = null;\n      for (const endpoint of endpoints) {\n        try {\n          console.log(`Trying to preview template with endpoint: ${endpoint}`);\n          response = await cachedFetch(endpoint, {\n            method: 'POST',\n            body: JSON.stringify(previewRequest)\n          });\n          if (response.ok) break;\n        } catch (endpointErr) {\n          console.warn(`Endpoint ${endpoint} failed:`, endpointErr);\n        }\n      }\n\n      // If we got a successful response from any endpoint\n      if (response && response.ok) {\n        const data = await response.json();\n        console.log('Preview response:', data);\n        setPreviewData(data);\n        setShowPreview(true);\n      } else {\n        // Local fallback preview if no endpoint worked\n        console.log('All endpoint attempts failed, using local preview');\n\n        // Simple variable replacement for demonstration\n        let previewText = templateText;\n        const variables = extractVariables(templateText);\n\n        // Replace variables with sample values\n        variables.forEach(variable => {\n          const sampleValue = `[Sample ${variable}]`;\n          previewText = previewText.replace(new RegExp(`{{\\\\s*${variable}\\\\s*}}`, 'g'), sampleValue);\n        });\n        setPreviewData({\n          rendered_text: previewText\n        });\n        setShowPreview(true);\n      }\n    } catch (err) {\n      console.error('Error generating preview:', err);\n      setPreviewError(`Failed to generate preview: ${err.message}`);\n    } finally {\n      setPreviewLoading(false);\n    }\n  };\n\n  // Update saveTemplate function to use cachedFetch\n  const saveTemplate = async (type, asDefault = false) => {\n    try {\n      setSavingTemplates(prev => ({\n        ...prev,\n        [type]: true\n      }));\n      if (!businessId) {\n        setError('Business ID is required to save template');\n        return;\n      }\n      const template = templates[type];\n      if (!template.text.trim()) {\n        setError(`Template text is required for ${type}`);\n        return;\n      }\n      if (!businessApiKey) {\n        setError('Business API key is required but was not found');\n        setShowBusinessIdInput(true);\n        return;\n      }\n\n      // If there's an ID, update existing template, otherwise create new\n      const url = template.id && !asDefault ? `/templates/${template.id}` : '/templates';\n      const method = template.id && !asDefault ? 'PUT' : 'POST';\n\n      // Map regular types to their default counterparts if saving as default\n      const templateType = asDefault ? `default_${type}` : type;\n\n      // Extract variables from template text\n      const variables = extractVariables(template.text);\n      const templateData = {\n        template_name: `${stageName || 'New Stage'} - ${asDefault ? 'Default ' : ''}${type.replace(/_/g, ' ')}`,\n        template_text: template.text,\n        template_type: templateType,\n        business_id: businessId,\n        variables: variables,\n        template_description: `Template for ${type.replace(/_/g, ' ')} ${asDefault ? '(Default)' : ''}`\n      };\n      console.log(`Saving ${asDefault ? 'default ' : ''}${type} template:`, templateData);\n      const response = await cachedFetch(url, {\n        method,\n        body: templateData,\n        headers: {\n          'Authorization': `Bearer ${businessApiKey}`,\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({}));\n        throw new Error(errorData.message || errorData.error || `Failed to save ${asDefault ? 'default ' : ''}${type} template`);\n      }\n      const data = await response.json();\n      console.log(`Template ${asDefault ? 'default ' : ''}${type} saved successfully:`, data);\n\n      // Only update the current template ID if not saving as default\n      if (!asDefault && !template.id) {\n        setTemplates(prev => ({\n          ...prev,\n          [type]: {\n            ...prev[type],\n            id: data.template_id\n          }\n        }));\n      }\n      setSuccess(`${asDefault ? 'Default ' : ''}${type} template saved successfully`);\n\n      // After successful save, refresh the available templates\n      fetchAllTemplates();\n      return data;\n    } catch (err) {\n      console.error(`Error saving ${type} template:`, err);\n      setError(`Error saving template: ${err.message}`);\n      throw err;\n    } finally {\n      setSavingTemplates(prev => ({\n        ...prev,\n        [type]: false\n      }));\n    }\n  };\n\n  // Update handleSave function\n  const handleSave = async () => {\n    if (!stage) return;\n    try {\n      // Validate stage name\n      if (!stageName.trim()) {\n        setError('Stage name is required');\n        return;\n      }\n\n      // Ensure businessId is available\n      if (!businessId) {\n        setError('Business ID is required but was not found');\n        console.error('Business ID is missing', {\n          businessId,\n          locationBusinessId,\n          queryBusinessId\n        });\n        return;\n      }\n      if (!businessApiKey) {\n        setError('Business API key is required but was not found');\n        setShowBusinessIdInput(true);\n        return;\n      }\n\n      // First, save all templates that have text but no ID\n      const templatePromises = [];\n      const savedTemplateIds = {};\n      if (templates.stage_selection.text && !templates.stage_selection.id) {\n        templatePromises.push(saveTemplate('stage_selection').then(response => {\n          if (response && response.template_id) {\n            savedTemplateIds.stage_selection = response.template_id;\n            setTemplates(prev => ({\n              ...prev,\n              stage_selection: {\n                ...prev.stage_selection,\n                id: response.template_id\n              }\n            }));\n            return response.template_id;\n          }\n          throw new Error('Failed to save stage selection template');\n        }));\n      }\n      if (templates.data_extraction.text && !templates.data_extraction.id) {\n        templatePromises.push(saveTemplate('data_extraction').then(response => {\n          if (response && response.template_id) {\n            savedTemplateIds.data_extraction = response.template_id;\n            setTemplates(prev => ({\n              ...prev,\n              data_extraction: {\n                ...prev.data_extraction,\n                id: response.template_id\n              }\n            }));\n            return response.template_id;\n          }\n          throw new Error('Failed to save data extraction template');\n        }));\n      }\n      if (templates.response_generation.text && !templates.response_generation.id) {\n        templatePromises.push(saveTemplate('response_generation').then(response => {\n          if (response && response.template_id) {\n            savedTemplateIds.response_generation = response.template_id;\n            setTemplates(prev => ({\n              ...prev,\n              response_generation: {\n                ...prev.response_generation,\n                id: response.template_id\n              }\n            }));\n            return response.template_id;\n          }\n          throw new Error('Failed to save response generation template');\n        }));\n      }\n\n      // Wait for all templates to be saved\n      if (templatePromises.length > 0) {\n        setSuccess(`Saving ${templatePromises.length} template(s) first...`);\n        await Promise.all(templatePromises);\n      }\n\n      // Prepare stage data with template IDs\n      const stageData = {\n        stage_name: stageName,\n        stage_description: stageDescription,\n        business_id: businessId,\n        agent_id: agentId || null,\n        stage_type: 'conversation',\n        stage_selection_template_id: savedTemplateIds.stage_selection || templates.stage_selection.id || null,\n        data_extraction_template_id: savedTemplateIds.data_extraction || templates.data_extraction.id || null,\n        response_generation_template_id: savedTemplateIds.response_generation || templates.response_generation.id || null,\n        stage_config: {\n          order: 0\n        }\n      };\n\n      // Determine if this is a create or update operation\n      const url = stageId === 'new' ? '/stages' : `/stages/${stageId}`;\n      const method = stageId === 'new' ? 'POST' : 'PUT';\n      console.log('Saving stage with data:', stageData);\n      const response = await cachedFetch(url, {\n        method,\n        body: stageData\n      });\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({}));\n        throw new Error(errorData.message || errorData.error || 'Failed to save stage');\n      }\n      const data = await response.json();\n      console.log('Stage saved successfully:', data);\n\n      // Update the stage ID if this was a new stage\n      if (stageId === 'new' && data.stage_id) {\n        setStageId(data.stage_id);\n        setStage(prev => ({\n          ...prev,\n          stage_id: data.stage_id\n        }));\n      }\n      setSuccess('Stage saved successfully');\n\n      // Navigate back to the stages list\n      navigate('/stages');\n    } catch (err) {\n      console.error('Error saving stage:', err);\n      setError(err.message || 'Failed to save stage');\n    }\n  };\n  const handleCancel = () => {\n    // Navigate back to stage manager\n    let backUrl;\n    if (businessId && agentId) {\n      backUrl = `/stage-management/business_id=${businessId}/agent_id=${agentId}`;\n    } else if (businessId) {\n      backUrl = `/stage-management/business_id=${businessId}`;\n    } else {\n      backUrl = '/stage-management';\n    }\n    navigate(backUrl);\n  };\n  const handleTabChange = (event, newValue) => {\n    setTabValue(newValue);\n  };\n\n  // Update the credentials save function\n  const saveCredentials = () => {\n    if (!businessId || !businessApiKey) {\n      setError('Please enter both Business ID and API Key');\n      return;\n    }\n\n    // Validate credentials first\n    validateCredentials().then(isValid => {\n      if (isValid) {\n        // Save to both localStorage and cookies\n        localStorage.setItem('businessId', businessId);\n        localStorage.setItem('businessApiKey', businessApiKey);\n        document.cookie = `businessId=${businessId}; path=/; max-age=86400`;\n        document.cookie = `businessApiKey=${businessApiKey}; path=/; max-age=86400`;\n        setShowBusinessIdInput(false);\n        setSuccess('Business credentials validated and saved');\n\n        // Reload templates\n        fetchAllTemplates();\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    sx: {\n      p: 3,\n      mb: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        alignItems: 'center',\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: handleCancel,\n        sx: {\n          mr: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 858,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 857,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        children: stageId && stageId !== 'new' ? 'Edit Stage' : 'Create New Stage'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 860,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 856,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      sx: {\n        mb: 2\n      },\n      onClose: () => setError(''),\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 866,\n      columnNumber: 9\n    }, this), success && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"success\",\n      sx: {\n        mb: 2\n      },\n      onClose: () => setSuccess(''),\n      children: success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 872,\n      columnNumber: 9\n    }, this), (showBusinessIdInput || !businessId || !businessApiKey) && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 3,\n        p: 2,\n        border: '1px dashed',\n        borderColor: 'warning.main',\n        borderRadius: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle1\",\n        color: \"warning.main\",\n        gutterBottom: true,\n        children: \"Business Credentials Required\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 880,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Business ID\",\n            value: businessId,\n            onChange: e => setBusinessId(e.target.value),\n            placeholder: \"Enter your business ID\",\n            helperText: \"Required for saving templates and stages\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 885,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 884,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Business API Key\",\n            value: businessApiKey,\n            onChange: e => setBusinessApiKey(e.target.value),\n            placeholder: \"Enter your business API key\",\n            helperText: \"Required for authentication\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 896,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 895,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: saveCredentials,\n            children: \"Validate & Save Credentials\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 907,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 906,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 883,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 879,\n      columnNumber: 9\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'center',\n        p: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 921,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 920,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mb: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: \"Stage Information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 927,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Stage Name\",\n              value: stageName,\n              onChange: e => setStageName(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 932,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 931,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Stage Description\",\n              value: stageDescription,\n              onChange: e => setStageDescription(e.target.value),\n              multiline: true,\n              rows: 2\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 941,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 940,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 930,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 926,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        sx: {\n          my: 3\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 953,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: \"Templates\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 957,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n          value: tabValue,\n          onChange: handleTabChange,\n          sx: {\n            mb: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Tab, {\n            label: \"Stage Selection\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 962,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            label: \"Data Extraction\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 963,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            label: \"Response Generation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 964,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 961,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n          value: tabValue,\n          index: 0,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              sx: {\n                mb: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                id: \"stage-selection-template-label\",\n                children: \"Template\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 971,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                labelId: \"stage-selection-template-label\",\n                value: templates.stage_selection.id || '',\n                label: \"Template\",\n                onChange: e => handleTemplateSelect('stage_selection', e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"\",\n                  children: /*#__PURE__*/_jsxDEV(\"em\", {\n                    children: \"None\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 979,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 978,\n                  columnNumber: 21\n                }, this), availableTemplates.stage_selection.map(template => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: template.template_id,\n                  children: template.template_name\n                }, template.template_id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 982,\n                  columnNumber: 23\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 972,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 970,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                justifyContent: 'space-between',\n                alignItems: 'center',\n                mb: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                color: \"text.secondary\",\n                children: templates.stage_selection.id ? `Template ID: ${templates.stage_selection.id}` : 'No template selected'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 990,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  gap: 1\n                },\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outlined\",\n                  color: \"primary\",\n                  onClick: () => confirmSaveTemplate('stage_selection'),\n                  disabled: !templates.stage_selection.text || savingTemplates.stage_selection,\n                  startIcon: savingTemplates.stage_selection ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                    size: 20\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1001,\n                    columnNumber: 68\n                  }, this) : null,\n                  children: savingTemplates.stage_selection ? 'Saving...' : 'Save Template'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 996,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outlined\",\n                  color: \"secondary\",\n                  onClick: () => confirmSaveTemplate('stage_selection', true),\n                  disabled: !templates.stage_selection.text || savingTemplates.stage_selection,\n                  children: \"Save as Default\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1005,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 995,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 989,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                gap: 1,\n                mb: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                startIcon: /*#__PURE__*/_jsxDEV(RestartAltIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1019,\n                  columnNumber: 32\n                }, this),\n                onClick: () => handleApplyDefaultTemplate('stage_selection'),\n                disabled: availableTemplates.default_stage_selection.length === 0,\n                children: \"Apply Default\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1017,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                startIcon: /*#__PURE__*/_jsxDEV(PreviewIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1027,\n                  columnNumber: 32\n                }, this),\n                onClick: () => handlePreview('stage_selection'),\n                disabled: !templates.stage_selection.text,\n                children: \"Preview\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1025,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                title: \"Variables are enclosed in curly braces like {user_name}\",\n                children: /*#__PURE__*/_jsxDEV(IconButton, {\n                  children: /*#__PURE__*/_jsxDEV(HelpOutlineIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1035,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1034,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1033,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1016,\n              columnNumber: 17\n            }, this), previewData && previewData.type === 'stage_selection' && /*#__PURE__*/_jsxDEV(Alert, {\n              severity: \"info\",\n              sx: {\n                mb: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                children: \"Preview:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1042,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                sx: {\n                  whiteSpace: 'pre-wrap'\n                },\n                children: previewData.result\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1043,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1041,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Template Text\",\n              value: templates.stage_selection.text || '',\n              onChange: e => handleTemplateChange('stage_selection', e.target.value),\n              multiline: true,\n              rows: 8,\n              placeholder: \"Enter template text with variables in {curly_braces}\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1049,\n              columnNumber: 17\n            }, this), variables.stage_selection.length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                mt: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                children: \"Variables:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1061,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  flexWrap: 'wrap',\n                  gap: 1\n                },\n                children: variables.stage_selection.map(variable => /*#__PURE__*/_jsxDEV(Chip, {\n                  label: variable,\n                  size: \"small\"\n                }, variable, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1064,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1062,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1060,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 969,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 968,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n          value: tabValue,\n          index: 1,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              sx: {\n                mb: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                id: \"data-extraction-template-label\",\n                children: \"Template\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1076,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                labelId: \"data-extraction-template-label\",\n                value: templates.data_extraction.id || '',\n                label: \"Template\",\n                onChange: e => handleTemplateSelect('data_extraction', e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"\",\n                  children: /*#__PURE__*/_jsxDEV(\"em\", {\n                    children: \"None\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1084,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1083,\n                  columnNumber: 21\n                }, this), availableTemplates.data_extraction.map(template => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: template.template_id,\n                  children: template.template_name\n                }, template.template_id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1087,\n                  columnNumber: 23\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1077,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1075,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                justifyContent: 'space-between',\n                alignItems: 'center',\n                mb: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                color: \"text.secondary\",\n                children: templates.data_extraction.id ? `Template ID: ${templates.data_extraction.id}` : 'No template selected'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1095,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  gap: 1\n                },\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outlined\",\n                  color: \"primary\",\n                  onClick: () => confirmSaveTemplate('data_extraction'),\n                  disabled: !templates.data_extraction.text || savingTemplates.data_extraction,\n                  startIcon: savingTemplates.data_extraction ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                    size: 20\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1106,\n                    columnNumber: 68\n                  }, this) : null,\n                  children: savingTemplates.data_extraction ? 'Saving...' : 'Save Template'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1101,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outlined\",\n                  color: \"secondary\",\n                  onClick: () => confirmSaveTemplate('data_extraction', true),\n                  disabled: !templates.data_extraction.text || savingTemplates.data_extraction,\n                  children: \"Save as Default\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1110,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1100,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1094,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                gap: 1,\n                mb: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                startIcon: /*#__PURE__*/_jsxDEV(RestartAltIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1124,\n                  columnNumber: 32\n                }, this),\n                onClick: () => handleApplyDefaultTemplate('data_extraction'),\n                disabled: availableTemplates.default_data_extraction.length === 0,\n                children: \"Apply Default\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1122,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                startIcon: /*#__PURE__*/_jsxDEV(PreviewIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1132,\n                  columnNumber: 32\n                }, this),\n                onClick: () => handlePreview('data_extraction'),\n                disabled: !templates.data_extraction.text,\n                children: \"Preview\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1130,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                title: \"Variables are enclosed in curly braces like {user_name}\",\n                children: /*#__PURE__*/_jsxDEV(IconButton, {\n                  children: /*#__PURE__*/_jsxDEV(HelpOutlineIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1140,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1139,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1138,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1121,\n              columnNumber: 17\n            }, this), previewData && previewData.type === 'data_extraction' && /*#__PURE__*/_jsxDEV(Alert, {\n              severity: \"info\",\n              sx: {\n                mb: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                children: \"Preview:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1147,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                sx: {\n                  whiteSpace: 'pre-wrap'\n                },\n                children: previewData.result\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1148,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1146,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Template Text\",\n              value: templates.data_extraction.text || '',\n              onChange: e => handleTemplateChange('data_extraction', e.target.value),\n              multiline: true,\n              rows: 8,\n              placeholder: \"Enter template text with variables in {curly_braces}\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1154,\n              columnNumber: 17\n            }, this), variables.data_extraction.length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                mt: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                children: \"Variables:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1166,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  flexWrap: 'wrap',\n                  gap: 1\n                },\n                children: variables.data_extraction.map(variable => /*#__PURE__*/_jsxDEV(Chip, {\n                  label: variable,\n                  size: \"small\"\n                }, variable, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1169,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1167,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1165,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1074,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1073,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n          value: tabValue,\n          index: 2,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              sx: {\n                mb: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                id: \"response-generation-template-label\",\n                children: \"Template\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1181,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                labelId: \"response-generation-template-label\",\n                value: templates.response_generation.id || '',\n                label: \"Template\",\n                onChange: e => handleTemplateSelect('response_generation', e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"\",\n                  children: /*#__PURE__*/_jsxDEV(\"em\", {\n                    children: \"None\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1189,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1188,\n                  columnNumber: 21\n                }, this), availableTemplates.response_generation.map(template => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: template.template_id,\n                  children: template.template_name\n                }, template.template_id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1192,\n                  columnNumber: 23\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1182,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1180,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                justifyContent: 'space-between',\n                alignItems: 'center',\n                mb: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                color: \"text.secondary\",\n                children: templates.response_generation.id ? `Template ID: ${templates.response_generation.id}` : 'No template selected'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1200,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  gap: 1\n                },\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outlined\",\n                  color: \"primary\",\n                  onClick: () => confirmSaveTemplate('response_generation'),\n                  disabled: !templates.response_generation.text || savingTemplates.response_generation,\n                  startIcon: savingTemplates.response_generation ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                    size: 20\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1211,\n                    columnNumber: 72\n                  }, this) : null,\n                  children: savingTemplates.response_generation ? 'Saving...' : 'Save Template'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1206,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outlined\",\n                  color: \"secondary\",\n                  onClick: () => confirmSaveTemplate('response_generation', true),\n                  disabled: !templates.response_generation.text || savingTemplates.response_generation,\n                  children: \"Save as Default\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1215,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1205,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1199,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                gap: 1,\n                mb: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                startIcon: /*#__PURE__*/_jsxDEV(RestartAltIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1229,\n                  columnNumber: 32\n                }, this),\n                onClick: () => handleApplyDefaultTemplate('response_generation'),\n                disabled: availableTemplates.default_response_generation.length === 0,\n                children: \"Apply Default\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1227,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                startIcon: /*#__PURE__*/_jsxDEV(PreviewIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1237,\n                  columnNumber: 32\n                }, this),\n                onClick: () => handlePreview('response_generation'),\n                disabled: !templates.response_generation.text,\n                children: \"Preview\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1235,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                title: \"Variables are enclosed in curly braces like {user_name}\",\n                children: /*#__PURE__*/_jsxDEV(IconButton, {\n                  children: /*#__PURE__*/_jsxDEV(HelpOutlineIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1245,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1244,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1243,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1226,\n              columnNumber: 17\n            }, this), previewData && previewData.type === 'response_generation' && /*#__PURE__*/_jsxDEV(Alert, {\n              severity: \"info\",\n              sx: {\n                mb: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                children: \"Preview:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1252,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                sx: {\n                  whiteSpace: 'pre-wrap'\n                },\n                children: previewData.result\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1253,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1251,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Template Text\",\n              value: templates.response_generation.text || '',\n              onChange: e => handleTemplateChange('response_generation', e.target.value),\n              multiline: true,\n              rows: 8,\n              placeholder: \"Enter template text with variables in {curly_braces}\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1259,\n              columnNumber: 17\n            }, this), variables.response_generation.length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                mt: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                children: \"Variables:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1271,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  flexWrap: 'wrap',\n                  gap: 1\n                },\n                children: variables.response_generation.map(variable => /*#__PURE__*/_jsxDEV(Chip, {\n                  label: variable,\n                  size: \"small\"\n                }, variable, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1274,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1272,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1270,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1179,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1178,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 956,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 3,\n          display: 'flex',\n          justifyContent: 'space-between'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          onClick: handleCancel,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1285,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          startIcon: /*#__PURE__*/_jsxDEV(SaveIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1293,\n            columnNumber: 26\n          }, this),\n          onClick: handleSave,\n          disabled: isLoading,\n          children: isLoading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n            size: 24\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1297,\n            columnNumber: 28\n          }, this) : stageId === 'new' ? 'Create Stage' : 'Save Stage'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1291,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1284,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: showConfirmDialog,\n      onClose: () => setShowConfirmDialog(false),\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Save Template\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1305,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          children: saveAsDefault ? `Are you sure you want to save this as a default ${templateToSave === null || templateToSave === void 0 ? void 0 : templateToSave.replace(/_/g, ' ')} template?` : (_templates$templateTo = templates[templateToSave]) !== null && _templates$templateTo !== void 0 && _templates$templateTo.id ? `Are you sure you want to update this ${templateToSave === null || templateToSave === void 0 ? void 0 : templateToSave.replace(/_/g, ' ')} template?` : `Are you sure you want to create a new ${templateToSave === null || templateToSave === void 0 ? void 0 : templateToSave.replace(/_/g, ' ')} template?`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1307,\n          columnNumber: 11\n        }, this), saveAsDefault && /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"text.secondary\",\n          sx: {\n            mt: 1\n          },\n          children: \"This will create a new default template that can be applied to any stage.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1315,\n          columnNumber: 13\n        }, this), !((_templates$templateTo2 = templates[templateToSave]) !== null && _templates$templateTo2 !== void 0 && _templates$templateTo2.id) && !saveAsDefault && /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"text.secondary\",\n          sx: {\n            mt: 1\n          },\n          children: \"A new template will be created in the database.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1320,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1306,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setShowConfirmDialog(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1326,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleConfirmSave,\n          color: \"primary\",\n          variant: \"contained\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1327,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1325,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1304,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 854,\n    columnNumber: 5\n  }, this);\n};\n_s(StageEditor, \"pVuXnXX84q+P5FOcsrY/pzChws4=\", false, function () {\n  return [useParams, useNavigate, useLocation];\n});\n_c2 = StageEditor;\nexport default StageEditor;\nvar _c, _c2;\n$RefreshReg$(_c, \"TabPanel\");\n$RefreshReg$(_c2, \"StageEditor\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useRef","useParams","useNavigate","useLocation","cachedFetch","Box","Paper","Typography","TextField","Button","Tabs","Tab","Grid","Alert","Snackbar","IconButton","Tooltip","FormControl","InputLabel","MenuItem","Select","CircularProgress","Divider","Chip","Dialog","DialogTitle","DialogContent","DialogActions","SaveIcon","PreviewIcon","RestartAltIcon","HelpOutlineIcon","ArrowBackIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","apiCache","cache","get","url","_this$cache$url","data","set","ttl","expiry","Date","now","isValid","item","clear","TabPanel","props","children","value","index","other","role","hidden","id","style","padding","fileName","_jsxFileName","lineNumber","columnNumber","_c","StageEditor","_s","_templates$templateTo","_templates$templateTo2","stageId","urlStageId","navigate","location","setStageId","getStoredValue","key","_document$cookie$spli","localStorageValue","localStorage","getItem","document","cookie","split","find","row","startsWith","queryParams","URLSearchParams","search","queryBusinessId","businessId","locationBusinessId","agentId","locationAgentId","isNewStage","state","storedBusinessId","storedApiKey","setBusinessId","businessApiKey","setBusinessApiKey","showBusinessIdInput","setShowBusinessIdInput","stage","setStage","stageName","setStageName","stageDescription","setStageDescription","tabValue","setTabValue","templates","setTemplates","stage_selection","text","type","data_extraction","response_generation","availableTemplates","setAvailableTemplates","default_stage_selection","default_data_extraction","default_response_generation","variables","setVariables","error","setError","success","setSuccess","isLoading","setIsLoading","previewData","setPreviewData","previewLoading","setPreviewLoading","previewError","setPreviewError","showPreview","setShowPreview","savingTemplates","setSavingTemplates","showConfirmDialog","setShowConfirmDialog","templateToSave","setTemplateToSave","saveAsDefault","setSaveAsDefault","isMounted","current","confirmSaveTemplate","asDefault","handleConfirmSave","saveTemplate","validateCredentials","response","fetch","method","headers","credentials","ok","Error","err","console","message","fetchAllTemplates","log","errorData","json","catch","templatesByType","forEach","template","template_type","push","isActive","initializeComponent","setItem","stage_name","stage_description","business_id","agent_id","stage_selection_template_id","data_extraction_template_id","response_generation_template_id","stage_config","order","fetchStage","fetchTemplate","templateId","prev","template_id","template_text","extractVariables","matches","match","map","slice","handleTemplateChange","handleTemplateSelect","handleApplyDefaultTemplate","defaultTypeMap","defaultType","defaultTemplates","length","defaultTemplate","handlePreview","templateType","templateText","trim","previewRequest","context","conversation_history","content","extracted_data","customer_name","product_interest","budget","endpoints","endpoint","body","JSON","stringify","endpointErr","warn","previewText","variable","sampleValue","replace","RegExp","rendered_text","templateData","template_name","template_description","handleSave","templatePromises","savedTemplateIds","then","Promise","all","stageData","stage_type","stage_id","handleCancel","backUrl","handleTabChange","event","newValue","saveCredentials","sx","p","mb","display","alignItems","onClick","mr","variant","severity","onClose","border","borderColor","borderRadius","color","gutterBottom","container","spacing","xs","md","fullWidth","label","onChange","e","target","placeholder","helperText","required","justifyContent","multiline","rows","my","labelId","gap","disabled","startIcon","size","title","whiteSpace","result","mt","flexWrap","open","_c2","$RefreshReg$"],"sources":["C:/icmp_events_api/front-end/src/components/StageEditor.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react';\r\nimport { useParams, useNavigate, useLocation } from 'react-router-dom';\r\nimport { cachedFetch } from '../utils/fetchUtils';\r\nimport {\r\n  Box,\r\n  Paper,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Tabs,\r\n  Tab,\r\n  Grid,\r\n  Alert,\r\n  Snackbar,\r\n  IconButton,\r\n  Tooltip,\r\n  FormControl,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  CircularProgress,\r\n  Divider,\r\n  Chip,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions\r\n} from '@mui/material';\r\nimport SaveIcon from '@mui/icons-material/Save';\r\nimport PreviewIcon from '@mui/icons-material/Preview';\r\nimport RestartAltIcon from '@mui/icons-material/RestartAlt';\r\nimport HelpOutlineIcon from '@mui/icons-material/HelpOutline';\r\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\r\n\r\n// Global request cache to prevent duplicate API calls\r\nconst apiCache = {\r\n  cache: {},\r\n  get: function(url) {\r\n    return this.cache[url]?.data;\r\n  },\r\n  set: function(url, data, ttl = 60000) { // Default TTL: 1 minute\r\n    this.cache[url] = {\r\n      data,\r\n      expiry: Date.now() + ttl\r\n    };\r\n  },\r\n  isValid: function(url) {\r\n    const item = this.cache[url];\r\n    return item && item.expiry > Date.now();\r\n  },\r\n  clear: function() {\r\n    this.cache = {};\r\n  }\r\n};\r\n\r\n// TabPanel component for the tabs\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`tabpanel-${index}`}\r\n      aria-labelledby={`tab-${index}`}\r\n      {...other}\r\n      style={{ padding: '20px 0' }}\r\n    >\r\n      {value === index && (\r\n        <Box>\r\n          {children}\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst StageEditor = () => {\r\n  const { stageId: urlStageId } = useParams();\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  \r\n  // Add stageId state\r\n  const [stageId, setStageId] = useState(urlStageId || 'new');\r\n  \r\n  // Check local storage and cookies for business ID and API key\r\n  const getStoredValue = (key) => {\r\n    // Try localStorage first\r\n    const localStorageValue = localStorage.getItem(key);\r\n    if (localStorageValue) return localStorageValue;\r\n    \r\n    // Then try cookies\r\n    return document.cookie\r\n      .split('; ')\r\n      .find(row => row.startsWith(`${key}=`))\r\n      ?.split('=')[1];\r\n  };\r\n  \r\n  const queryParams = new URLSearchParams(location.search);\r\n  const queryBusinessId = queryParams.get('business_id');\r\n  \r\n  // Location state values as fallback\r\n  const { businessId: locationBusinessId, agentId: locationAgentId, isNewStage } = location.state || {};\r\n  \r\n  // Get stored values\r\n  const storedBusinessId = getStoredValue('businessId');\r\n  const storedApiKey = getStoredValue('businessApiKey');\r\n  \r\n  // Use query parameters first, then location state, then stored values\r\n  const [businessId, setBusinessId] = useState(queryBusinessId || locationBusinessId || storedBusinessId || '');\r\n  const [businessApiKey, setBusinessApiKey] = useState(storedApiKey || '');\r\n  const [showBusinessIdInput, setShowBusinessIdInput] = useState(!businessId || !businessApiKey);\r\n  \r\n  const agentId = queryParams.get('agent_id') || locationAgentId;\r\n  \r\n  const [stage, setStage] = useState(null);\r\n  const [stageName, setStageName] = useState('');\r\n  const [stageDescription, setStageDescription] = useState('');\r\n  const [tabValue, setTabValue] = useState(0);\r\n  const [templates, setTemplates] = useState({\r\n    stage_selection: { id: '', text: '', type: '' },\r\n    data_extraction: { id: '', text: '', type: '' },\r\n    response_generation: { id: '', text: '', type: '' }\r\n  });\r\n  const [availableTemplates, setAvailableTemplates] = useState({\r\n    stage_selection: [],\r\n    data_extraction: [],\r\n    response_generation: [],\r\n    default_stage_selection: [],\r\n    default_data_extraction: [],\r\n    default_response_generation: []\r\n  });\r\n  const [variables, setVariables] = useState({\r\n    stage_selection: [],\r\n    data_extraction: [],\r\n    response_generation: []\r\n  });\r\n  const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [previewData, setPreviewData] = useState(null);\r\n  const [previewLoading, setPreviewLoading] = useState(false);\r\n  const [previewError, setPreviewError] = useState('');\r\n  const [showPreview, setShowPreview] = useState(false);\r\n  \r\n  // Add template saving loading states\r\n  const [savingTemplates, setSavingTemplates] = useState({\r\n    stage_selection: false,\r\n    data_extraction: false,\r\n    response_generation: false\r\n  });\r\n\r\n  // Add template save confirmation dialog\r\n  const [showConfirmDialog, setShowConfirmDialog] = useState(false);\r\n  const [templateToSave, setTemplateToSave] = useState('');\r\n  const [saveAsDefault, setSaveAsDefault] = useState(false);\r\n\r\n  // Track if component is mounted\r\n  const isMounted = useRef(true);\r\n  \r\n  // Clear any previous fetch timeouts on unmount\r\n  useEffect(() => {\r\n    return () => {\r\n      isMounted.current = false;\r\n    };\r\n  }, []);\r\n\r\n  // Function to open the confirmation dialog\r\n  const confirmSaveTemplate = (type, asDefault = false) => {\r\n    setTemplateToSave(type);\r\n    setSaveAsDefault(asDefault);\r\n    setShowConfirmDialog(true);\r\n  };\r\n\r\n  // Function to handle dialog confirm\r\n  const handleConfirmSave = async () => {\r\n    setShowConfirmDialog(false);\r\n    if (templateToSave) {\r\n      await saveTemplate(templateToSave, saveAsDefault);\r\n    }\r\n  };\r\n\r\n  // Add validation function for credentials\r\n  const validateCredentials = useCallback(async () => {\r\n    if (!businessId || !businessApiKey) {\r\n      setError('Business ID and API Key are required');\r\n      setShowBusinessIdInput(true);\r\n      return false;\r\n    }\r\n\r\n    try {\r\n      // Test credentials with the validate-credentials endpoint\r\n      const response = await fetch(`/businesses/validate-credentials?business_id=${businessId}`, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Accept': 'application/json',\r\n          'Authorization': businessApiKey,\r\n          'X-API-Key': businessApiKey,\r\n          'API-Key': businessApiKey\r\n        },\r\n        credentials: 'include'\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Invalid business ID or API key');\r\n      }\r\n\r\n      return true;\r\n    } catch (err) {\r\n      console.error('Credential validation error:', err);\r\n      setError('Failed to validate credentials: ' + err.message);\r\n      setShowBusinessIdInput(true);\r\n      return false;\r\n    }\r\n  }, [businessId, businessApiKey]);\r\n\r\n  // Add a throttled fetch for all templates with proper dependencies\r\n  const fetchAllTemplates = useCallback(async () => {\r\n    if (!businessId || !businessApiKey || !isMounted.current) return;\r\n    \r\n    try {\r\n      console.log('Fetching templates with businessId:', businessId);\r\n      \r\n      // Use cached fetch with 5 minute TTL for templates\r\n      const response = await cachedFetch('/templates', {}, 5 * 60 * 1000, {\r\n        headers: {\r\n          'Authorization': `Bearer ${businessApiKey}`,\r\n          'Content-Type': 'application/json',\r\n          'Accept': 'application/json'\r\n        }\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        const errorData = await response.json().catch(() => ({}));\r\n        throw new Error(errorData.message || errorData.error || 'Failed to fetch templates');\r\n      }\r\n      \r\n      const data = await response.json();\r\n      console.log('Fetched templates:', data);\r\n      \r\n      // Organize templates by type\r\n      const templatesByType = {\r\n        stage_selection: [],\r\n        data_extraction: [],\r\n        response_generation: [],\r\n        default_stage_selection: [],\r\n        default_data_extraction: [],\r\n        default_response_generation: []\r\n      };\r\n      \r\n      data.forEach(template => {\r\n        if (templatesByType[template.template_type]) {\r\n          templatesByType[template.template_type].push(template);\r\n        }\r\n      });\r\n      \r\n      if (isMounted.current) {\r\n        setAvailableTemplates(templatesByType);\r\n        console.log('Updated available templates:', templatesByType);\r\n      }\r\n    } catch (err) {\r\n      console.error('Error fetching templates:', err);\r\n      if (isMounted.current) {\r\n        setError('Failed to fetch templates: ' + err.message);\r\n      }\r\n    }\r\n  }, [businessId, businessApiKey]);\r\n\r\n  useEffect(() => {\r\n    let isActive = true;\r\n    \r\n    const initializeComponent = async () => {\r\n      try {\r\n        // Start with loading state\r\n        setIsLoading(true);\r\n        \r\n        // Check if we have the required credentials\r\n        if (!businessId || !businessApiKey) {\r\n          setShowBusinessIdInput(true);\r\n          setIsLoading(false);\r\n          return;\r\n        }\r\n        \r\n        // Validate credentials before proceeding\r\n        const isValid = await validateCredentials();\r\n        if (!isActive) return;\r\n        \r\n        if (!isValid) {\r\n          setIsLoading(false);\r\n          return;\r\n        }\r\n        \r\n        // Store validated credentials\r\n        localStorage.setItem('businessId', businessId);\r\n        localStorage.setItem('businessApiKey', businessApiKey);\r\n        document.cookie = `businessId=${businessId}; path=/; max-age=86400`;\r\n        document.cookie = `businessApiKey=${businessApiKey}; path=/; max-age=86400`;\r\n        \r\n        // Load stage data if needed\r\n        if (stageId === 'new' || isNewStage) {\r\n          // For new stage, just set up defaults\r\n          if (isActive) {\r\n            setStage({\r\n              stage_name: '',\r\n              stage_description: '',\r\n              business_id: businessId,\r\n              agent_id: agentId,\r\n              stage_selection_template_id: null,\r\n              data_extraction_template_id: null,\r\n              response_generation_template_id: null,\r\n              stage_config: { order: 0 }\r\n            });\r\n          }\r\n        } else if (stageId) {\r\n          // Fetch existing stage\r\n          await fetchStage(stageId);\r\n        }\r\n        \r\n        // Always fetch templates with validated credentials\r\n        if (isActive) {\r\n          await fetchAllTemplates();\r\n        }\r\n      } catch (err) {\r\n        console.error('Error initializing component:', err);\r\n        if (isActive) {\r\n          setError('Error initializing: ' + err.message);\r\n        }\r\n      } finally {\r\n        if (isActive) {\r\n          setIsLoading(false);\r\n        }\r\n      }\r\n    };\r\n    \r\n    initializeComponent();\r\n    \r\n    return () => {\r\n      isActive = false;\r\n    };\r\n  }, [stageId, businessId, businessApiKey, agentId, isNewStage, fetchAllTemplates, validateCredentials]);\r\n\r\n  // Fetch specific stage data\r\n  const fetchStage = async (id) => {\r\n    if (!isMounted.current || !businessId || !businessApiKey) return;\r\n    \r\n    setIsLoading(true);\r\n    try {\r\n      const response = await cachedFetch(`/stages/${id}`);\r\n      \r\n      if (!response.ok) throw new Error('Failed to fetch stage');\r\n      \r\n      const data = await response.json();\r\n      \r\n      if (isMounted.current) {\r\n        setStage(data);\r\n        setStageName(data.stage_name || '');\r\n        setStageDescription(data.stage_description || '');\r\n        \r\n        // For each template ID in the stage, fetch the template content\r\n        if (data.stage_selection_template_id) {\r\n          fetchTemplate(data.stage_selection_template_id, 'stage_selection');\r\n        }\r\n        if (data.data_extraction_template_id) {\r\n          fetchTemplate(data.data_extraction_template_id, 'data_extraction');\r\n        }\r\n        if (data.response_generation_template_id) {\r\n          fetchTemplate(data.response_generation_template_id, 'response_generation');\r\n        }\r\n      }\r\n    } catch (err) {\r\n      if (isMounted.current) {\r\n        setError(err.message);\r\n      }\r\n    } finally {\r\n      if (isMounted.current) {\r\n        setIsLoading(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const fetchTemplate = useCallback(async (templateId, type) => {\r\n    if (!isMounted.current || !businessId || !businessApiKey) return;\r\n    \r\n    try {\r\n      console.log(`Fetching template ${templateId} for type ${type}`);\r\n      \r\n      const response = await cachedFetch(`/templates/${templateId}`);\r\n      \r\n      if (!response.ok) {\r\n        const errorData = await response.json().catch(() => ({}));\r\n        throw new Error(errorData.message || errorData.error || `Failed to fetch ${type} template`);\r\n      }\r\n      \r\n      const data = await response.json();\r\n      console.log(`Fetched template data:`, data);\r\n      \r\n      if (isMounted.current) {\r\n        setTemplates(prev => ({\r\n          ...prev,\r\n          [type]: {\r\n            id: data.template_id,\r\n            text: data.template_text,\r\n            type: data.template_type\r\n          }\r\n        }));\r\n        \r\n        // Extract variables from template\r\n        setVariables(prev => ({\r\n          ...prev,\r\n          [type]: extractVariables(data.template_text)\r\n        }));\r\n      }\r\n    } catch (err) {\r\n      console.error(`Error fetching template ${templateId}:`, err);\r\n      if (isMounted.current) {\r\n        setError(err.message);\r\n      }\r\n    }\r\n  }, [businessId, businessApiKey]);\r\n\r\n  const extractVariables = (template) => {\r\n    if (!template) return [];\r\n    const matches = template.match(/\\{([^}]+)\\}/g) || [];\r\n    return matches.map(match => match.slice(1, -1));\r\n  };\r\n\r\n  const handleTemplateChange = (type, value) => {\r\n    setTemplates(prev => ({\r\n      ...prev,\r\n      [type]: {\r\n        ...prev[type],\r\n        text: value\r\n      }\r\n    }));\r\n    // Update variables when template changes\r\n    setVariables(prev => ({\r\n      ...prev,\r\n      [type]: extractVariables(value)\r\n    }));\r\n  };\r\n\r\n  const handleTemplateSelect = async (type, templateId) => {\r\n    // If selecting \"None\", clear the template\r\n    if (!templateId) {\r\n      setTemplates(prev => ({\r\n        ...prev,\r\n        [type]: { id: '', text: '', type: '' }\r\n      }));\r\n      setVariables(prev => ({\r\n        ...prev,\r\n        [type]: []\r\n      }));\r\n      return;\r\n    }\r\n    \r\n    // Fetch the selected template\r\n    await fetchTemplate(templateId, type);\r\n  };\r\n\r\n  const handleApplyDefaultTemplate = async (type) => {\r\n    // Map regular types to their default counterparts\r\n    const defaultTypeMap = {\r\n      'stage_selection': 'default_stage_selection',\r\n      'data_extraction': 'default_data_extraction',\r\n      'response_generation': 'default_response_generation'\r\n    };\r\n    \r\n    const defaultType = defaultTypeMap[type];\r\n    \r\n    // Find default templates of the corresponding type\r\n    const defaultTemplates = availableTemplates[defaultType];\r\n    \r\n    if (defaultTemplates.length === 0) {\r\n      setError(`No default templates available for ${type}`);\r\n      return;\r\n    }\r\n    \r\n    // For simplicity, use the first default template\r\n    const defaultTemplate = defaultTemplates[0];\r\n    \r\n    // Apply the default template text (but keep the original ID)\r\n    setTemplates(prev => ({\r\n      ...prev,\r\n      [type]: {\r\n        ...prev[type],\r\n        text: defaultTemplate.template_text,\r\n        type: type // Keep the original type, not the default type\r\n      }\r\n    }));\r\n    \r\n    // Update variables\r\n    setVariables(prev => ({\r\n      ...prev,\r\n      [type]: extractVariables(defaultTemplate.template_text)\r\n    }));\r\n    \r\n    setSuccess(`Applied default template for ${type}`);\r\n  };\r\n\r\n  const handlePreview = async (templateType) => {\r\n    try {\r\n      setPreviewLoading(true);\r\n      setPreviewError('');\r\n      \r\n      const templateText = templates[templateType].text;\r\n      if (!templateText.trim()) {\r\n        setPreviewError('Template text is empty');\r\n        return;\r\n      }\r\n      \r\n      if (!businessApiKey) {\r\n        setPreviewError('Business API key is required but was not found');\r\n        setShowBusinessIdInput(true);\r\n        return;\r\n      }\r\n      \r\n      // Prepare preview request\r\n      const previewRequest = {\r\n        template_type: templateType,\r\n        template_text: templateText,\r\n        context: {\r\n          conversation_history: [\r\n            { role: \"user\", content: \"I'm interested in your products\" },\r\n            { role: \"assistant\", content: \"I'd be happy to tell you about our products. What type are you interested in?\" }\r\n          ],\r\n          extracted_data: {\r\n            customer_name: \"John Doe\",\r\n            product_interest: \"shoes\",\r\n            budget: \"$100\"\r\n          }\r\n        }\r\n      };\r\n      \r\n      // Try multiple possible endpoints (for compatibility)\r\n      const endpoints = [\r\n        '/templates/render',\r\n        '/render_template',\r\n        '/api/templates/preview'\r\n      ];\r\n      \r\n      let response = null;\r\n      for (const endpoint of endpoints) {\r\n        try {\r\n          console.log(`Trying to preview template with endpoint: ${endpoint}`);\r\n          \r\n          response = await cachedFetch(endpoint, {\r\n            method: 'POST',\r\n            body: JSON.stringify(previewRequest)\r\n          });\r\n          \r\n          if (response.ok) break;\r\n        } catch (endpointErr) {\r\n          console.warn(`Endpoint ${endpoint} failed:`, endpointErr);\r\n        }\r\n      }\r\n      \r\n      // If we got a successful response from any endpoint\r\n      if (response && response.ok) {\r\n        const data = await response.json();\r\n        console.log('Preview response:', data);\r\n        setPreviewData(data);\r\n        setShowPreview(true);\r\n      } else {\r\n        // Local fallback preview if no endpoint worked\r\n        console.log('All endpoint attempts failed, using local preview');\r\n        \r\n        // Simple variable replacement for demonstration\r\n        let previewText = templateText;\r\n        const variables = extractVariables(templateText);\r\n        \r\n        // Replace variables with sample values\r\n        variables.forEach(variable => {\r\n          const sampleValue = `[Sample ${variable}]`;\r\n          previewText = previewText.replace(new RegExp(`{{\\\\s*${variable}\\\\s*}}`, 'g'), sampleValue);\r\n        });\r\n        \r\n        setPreviewData({ rendered_text: previewText });\r\n        setShowPreview(true);\r\n      }\r\n    } catch (err) {\r\n      console.error('Error generating preview:', err);\r\n      setPreviewError(`Failed to generate preview: ${err.message}`);\r\n    } finally {\r\n      setPreviewLoading(false);\r\n    }\r\n  };\r\n\r\n  // Update saveTemplate function to use cachedFetch\r\n  const saveTemplate = async (type, asDefault = false) => {\r\n    try {\r\n      setSavingTemplates(prev => ({ ...prev, [type]: true }));\r\n      \r\n      if (!businessId) {\r\n        setError('Business ID is required to save template');\r\n        return;\r\n      }\r\n\r\n      const template = templates[type];\r\n      if (!template.text.trim()) {\r\n        setError(`Template text is required for ${type}`);\r\n        return;\r\n      }\r\n\r\n      if (!businessApiKey) {\r\n        setError('Business API key is required but was not found');\r\n        setShowBusinessIdInput(true);\r\n        return;\r\n      }\r\n\r\n      // If there's an ID, update existing template, otherwise create new\r\n      const url = template.id && !asDefault ? `/templates/${template.id}` : '/templates';\r\n      const method = template.id && !asDefault ? 'PUT' : 'POST';\r\n\r\n      // Map regular types to their default counterparts if saving as default\r\n      const templateType = asDefault ? `default_${type}` : type;\r\n\r\n      // Extract variables from template text\r\n      const variables = extractVariables(template.text);\r\n\r\n      const templateData = {\r\n        template_name: `${stageName || 'New Stage'} - ${asDefault ? 'Default ' : ''}${type.replace(/_/g, ' ')}`,\r\n        template_text: template.text,\r\n        template_type: templateType,\r\n        business_id: businessId,\r\n        variables: variables,\r\n        template_description: `Template for ${type.replace(/_/g, ' ')} ${asDefault ? '(Default)' : ''}`\r\n      };\r\n\r\n      console.log(`Saving ${asDefault ? 'default ' : ''}${type} template:`, templateData);\r\n\r\n      const response = await cachedFetch(url, {\r\n        method,\r\n        body: templateData,\r\n        headers: {\r\n          'Authorization': `Bearer ${businessApiKey}`,\r\n          'Content-Type': 'application/json',\r\n          'Accept': 'application/json'\r\n        }\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json().catch(() => ({}));\r\n        throw new Error(errorData.message || errorData.error || `Failed to save ${asDefault ? 'default ' : ''}${type} template`);\r\n      }\r\n\r\n      const data = await response.json();\r\n      console.log(`Template ${asDefault ? 'default ' : ''}${type} saved successfully:`, data);\r\n      \r\n      // Only update the current template ID if not saving as default\r\n      if (!asDefault && !template.id) {\r\n        setTemplates(prev => ({\r\n          ...prev,\r\n          [type]: {\r\n            ...prev[type],\r\n            id: data.template_id\r\n          }\r\n        }));\r\n      }\r\n\r\n      setSuccess(`${asDefault ? 'Default ' : ''}${type} template saved successfully`);\r\n      \r\n      // After successful save, refresh the available templates\r\n      fetchAllTemplates();\r\n      \r\n      return data;\r\n    } catch (err) {\r\n      console.error(`Error saving ${type} template:`, err);\r\n      setError(`Error saving template: ${err.message}`);\r\n      throw err;\r\n    } finally {\r\n      setSavingTemplates(prev => ({ ...prev, [type]: false }));\r\n    }\r\n  };\r\n\r\n  // Update handleSave function\r\n  const handleSave = async () => {\r\n    if (!stage) return;\r\n    \r\n    try {\r\n      // Validate stage name\r\n      if (!stageName.trim()) {\r\n        setError('Stage name is required');\r\n        return;\r\n      }\r\n      \r\n      // Ensure businessId is available\r\n      if (!businessId) {\r\n        setError('Business ID is required but was not found');\r\n        console.error('Business ID is missing', { businessId, locationBusinessId, queryBusinessId });\r\n        return;\r\n      }\r\n      \r\n      if (!businessApiKey) {\r\n        setError('Business API key is required but was not found');\r\n        setShowBusinessIdInput(true);\r\n        return;\r\n      }\r\n\r\n      // First, save all templates that have text but no ID\r\n      const templatePromises = [];\r\n      const savedTemplateIds = {};\r\n      \r\n      if (templates.stage_selection.text && !templates.stage_selection.id) {\r\n        templatePromises.push(\r\n          saveTemplate('stage_selection')\r\n            .then(response => {\r\n              if (response && response.template_id) {\r\n                savedTemplateIds.stage_selection = response.template_id;\r\n                setTemplates(prev => ({\r\n                  ...prev,\r\n                  stage_selection: { ...prev.stage_selection, id: response.template_id }\r\n                }));\r\n                return response.template_id;\r\n              }\r\n              throw new Error('Failed to save stage selection template');\r\n            })\r\n        );\r\n      }\r\n      \r\n      if (templates.data_extraction.text && !templates.data_extraction.id) {\r\n        templatePromises.push(\r\n          saveTemplate('data_extraction')\r\n            .then(response => {\r\n              if (response && response.template_id) {\r\n                savedTemplateIds.data_extraction = response.template_id;\r\n                setTemplates(prev => ({\r\n                  ...prev,\r\n                  data_extraction: { ...prev.data_extraction, id: response.template_id }\r\n                }));\r\n                return response.template_id;\r\n              }\r\n              throw new Error('Failed to save data extraction template');\r\n            })\r\n        );\r\n      }\r\n      \r\n      if (templates.response_generation.text && !templates.response_generation.id) {\r\n        templatePromises.push(\r\n          saveTemplate('response_generation')\r\n            .then(response => {\r\n              if (response && response.template_id) {\r\n                savedTemplateIds.response_generation = response.template_id;\r\n                setTemplates(prev => ({\r\n                  ...prev,\r\n                  response_generation: { ...prev.response_generation, id: response.template_id }\r\n                }));\r\n                return response.template_id;\r\n              }\r\n              throw new Error('Failed to save response generation template');\r\n            })\r\n        );\r\n      }\r\n\r\n      // Wait for all templates to be saved\r\n      if (templatePromises.length > 0) {\r\n        setSuccess(`Saving ${templatePromises.length} template(s) first...`);\r\n        await Promise.all(templatePromises);\r\n      }\r\n      \r\n      // Prepare stage data with template IDs\r\n      const stageData = {\r\n        stage_name: stageName,\r\n        stage_description: stageDescription,\r\n        business_id: businessId,\r\n        agent_id: agentId || null,\r\n        stage_type: 'conversation',\r\n        stage_selection_template_id: savedTemplateIds.stage_selection || templates.stage_selection.id || null,\r\n        data_extraction_template_id: savedTemplateIds.data_extraction || templates.data_extraction.id || null,\r\n        response_generation_template_id: savedTemplateIds.response_generation || templates.response_generation.id || null,\r\n        stage_config: {\r\n          order: 0\r\n        }\r\n      };\r\n\r\n      // Determine if this is a create or update operation\r\n      const url = stageId === 'new' ? '/stages' : `/stages/${stageId}`;\r\n      const method = stageId === 'new' ? 'POST' : 'PUT';\r\n\r\n      console.log('Saving stage with data:', stageData);\r\n      \r\n      const response = await cachedFetch(url, {\r\n        method,\r\n        body: stageData\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json().catch(() => ({}));\r\n        throw new Error(errorData.message || errorData.error || 'Failed to save stage');\r\n      }\r\n\r\n      const data = await response.json();\r\n      console.log('Stage saved successfully:', data);\r\n      \r\n      // Update the stage ID if this was a new stage\r\n      if (stageId === 'new' && data.stage_id) {\r\n        setStageId(data.stage_id);\r\n        setStage(prev => ({ ...prev, stage_id: data.stage_id }));\r\n      }\r\n      \r\n      setSuccess('Stage saved successfully');\r\n      \r\n      // Navigate back to the stages list\r\n      navigate('/stages');\r\n    } catch (err) {\r\n      console.error('Error saving stage:', err);\r\n      setError(err.message || 'Failed to save stage');\r\n    }\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    // Navigate back to stage manager\r\n    let backUrl;\r\n    if (businessId && agentId) {\r\n      backUrl = `/stage-management/business_id=${businessId}/agent_id=${agentId}`;\r\n    } else if (businessId) {\r\n      backUrl = `/stage-management/business_id=${businessId}`;\r\n    } else {\r\n      backUrl = '/stage-management';\r\n    }\r\n    navigate(backUrl);\r\n  };\r\n\r\n  const handleTabChange = (event, newValue) => {\r\n    setTabValue(newValue);\r\n  };\r\n\r\n  // Update the credentials save function\r\n  const saveCredentials = () => {\r\n    if (!businessId || !businessApiKey) {\r\n      setError('Please enter both Business ID and API Key');\r\n      return;\r\n    }\r\n    \r\n    // Validate credentials first\r\n    validateCredentials().then(isValid => {\r\n      if (isValid) {\r\n        // Save to both localStorage and cookies\r\n        localStorage.setItem('businessId', businessId);\r\n        localStorage.setItem('businessApiKey', businessApiKey);\r\n        document.cookie = `businessId=${businessId}; path=/; max-age=86400`;\r\n        document.cookie = `businessApiKey=${businessApiKey}; path=/; max-age=86400`;\r\n        \r\n        setShowBusinessIdInput(false);\r\n        setSuccess('Business credentials validated and saved');\r\n        \r\n        // Reload templates\r\n        fetchAllTemplates();\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Paper sx={{ p: 3, mb: 3 }}>\r\n      {/* Back button and title */}\r\n      <Box sx={{ display: 'flex', alignItems: 'center', mb: 3 }}>\r\n        <IconButton onClick={handleCancel} sx={{ mr: 1 }}>\r\n          <ArrowBackIcon />\r\n        </IconButton>\r\n        <Typography variant=\"h5\">\r\n          {stageId && stageId !== 'new' ? 'Edit Stage' : 'Create New Stage'}\r\n        </Typography>\r\n      </Box>\r\n      \r\n      {error && (\r\n        <Alert severity=\"error\" sx={{ mb: 2 }} onClose={() => setError('')}>\r\n          {error}\r\n        </Alert>\r\n      )}\r\n      \r\n      {success && (\r\n        <Alert severity=\"success\" sx={{ mb: 2 }} onClose={() => setSuccess('')}>\r\n          {success}\r\n        </Alert>\r\n      )}\r\n      \r\n      {/* Business ID input section */}\r\n      {(showBusinessIdInput || !businessId || !businessApiKey) && (\r\n        <Box sx={{ mb: 3, p: 2, border: '1px dashed', borderColor: 'warning.main', borderRadius: 1 }}>\r\n          <Typography variant=\"subtitle1\" color=\"warning.main\" gutterBottom>\r\n            Business Credentials Required\r\n          </Typography>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} md={6}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Business ID\"\r\n                value={businessId}\r\n                onChange={(e) => setBusinessId(e.target.value)}\r\n                placeholder=\"Enter your business ID\"\r\n                helperText=\"Required for saving templates and stages\"\r\n                required\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Business API Key\"\r\n                value={businessApiKey}\r\n                onChange={(e) => setBusinessApiKey(e.target.value)}\r\n                placeholder=\"Enter your business API key\"\r\n                helperText=\"Required for authentication\"\r\n                required\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Button \r\n                variant=\"contained\" \r\n                color=\"primary\"\r\n                onClick={saveCredentials}\r\n              >\r\n                Validate & Save Credentials\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n      )}\r\n      \r\n      {isLoading ? (\r\n        <Box sx={{ display: 'flex', justifyContent: 'center', p: 4 }}>\r\n          <CircularProgress />\r\n        </Box>\r\n      ) : (\r\n        <>\r\n          {/* Basic stage information */}\r\n          <Box sx={{ mb: 3 }}>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              Stage Information\r\n            </Typography>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Stage Name\"\r\n                  value={stageName}\r\n                  onChange={(e) => setStageName(e.target.value)}\r\n                  required\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Stage Description\"\r\n                  value={stageDescription}\r\n                  onChange={(e) => setStageDescription(e.target.value)}\r\n                  multiline\r\n                  rows={2}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n          \r\n          <Divider sx={{ my: 3 }} />\r\n          \r\n          {/* Template editing section */}\r\n          <Box>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              Templates\r\n            </Typography>\r\n            \r\n            <Tabs value={tabValue} onChange={handleTabChange} sx={{ mb: 2 }}>\r\n              <Tab label=\"Stage Selection\" />\r\n              <Tab label=\"Data Extraction\" />\r\n              <Tab label=\"Response Generation\" />\r\n            </Tabs>\r\n            \r\n            {/* Stage Selection Template */}\r\n            <TabPanel value={tabValue} index={0}>\r\n              <Box sx={{ mb: 2 }}>\r\n                <FormControl fullWidth sx={{ mb: 2 }}>\r\n                  <InputLabel id=\"stage-selection-template-label\">Template</InputLabel>\r\n                  <Select\r\n                    labelId=\"stage-selection-template-label\"\r\n                    value={templates.stage_selection.id || ''}\r\n                    label=\"Template\"\r\n                    onChange={(e) => handleTemplateSelect('stage_selection', e.target.value)}\r\n                  >\r\n                    <MenuItem value=\"\">\r\n                      <em>None</em>\r\n                    </MenuItem>\r\n                    {availableTemplates.stage_selection.map((template) => (\r\n                      <MenuItem key={template.template_id} value={template.template_id}>\r\n                        {template.template_name}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n                \r\n                <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\r\n                  <Typography variant=\"subtitle2\" color=\"text.secondary\">\r\n                    {templates.stage_selection.id ? \r\n                      `Template ID: ${templates.stage_selection.id}` : \r\n                      'No template selected'}\r\n                  </Typography>\r\n                  <Box sx={{ display: 'flex', gap: 1 }}>\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      color=\"primary\"\r\n                      onClick={() => confirmSaveTemplate('stage_selection')}\r\n                      disabled={!templates.stage_selection.text || savingTemplates.stage_selection}\r\n                      startIcon={savingTemplates.stage_selection ? <CircularProgress size={20} /> : null}\r\n                    >\r\n                      {savingTemplates.stage_selection ? 'Saving...' : 'Save Template'}\r\n                    </Button>\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      color=\"secondary\"\r\n                      onClick={() => confirmSaveTemplate('stage_selection', true)}\r\n                      disabled={!templates.stage_selection.text || savingTemplates.stage_selection}\r\n                    >\r\n                      Save as Default\r\n                    </Button>\r\n                  </Box>\r\n                </Box>\r\n                \r\n                <Box sx={{ display: 'flex', gap: 1, mb: 2 }}>\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    startIcon={<RestartAltIcon />}\r\n                    onClick={() => handleApplyDefaultTemplate('stage_selection')}\r\n                    disabled={availableTemplates.default_stage_selection.length === 0}\r\n                  >\r\n                    Apply Default\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    startIcon={<PreviewIcon />}\r\n                    onClick={() => handlePreview('stage_selection')}\r\n                    disabled={!templates.stage_selection.text}\r\n                  >\r\n                    Preview\r\n                  </Button>\r\n                  <Tooltip title=\"Variables are enclosed in curly braces like {user_name}\">\r\n                    <IconButton>\r\n                      <HelpOutlineIcon />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                </Box>\r\n                \r\n                {previewData && previewData.type === 'stage_selection' && (\r\n                  <Alert severity=\"info\" sx={{ mb: 2 }}>\r\n                    <Typography variant=\"subtitle2\">Preview:</Typography>\r\n                    <Typography variant=\"body2\" sx={{ whiteSpace: 'pre-wrap' }}>\r\n                      {previewData.result}\r\n                    </Typography>\r\n                  </Alert>\r\n                )}\r\n                \r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Template Text\"\r\n                  value={templates.stage_selection.text || ''}\r\n                  onChange={(e) => handleTemplateChange('stage_selection', e.target.value)}\r\n                  multiline\r\n                  rows={8}\r\n                  placeholder=\"Enter template text with variables in {curly_braces}\"\r\n                />\r\n                \r\n                {variables.stage_selection.length > 0 && (\r\n                  <Box sx={{ mt: 2 }}>\r\n                    <Typography variant=\"subtitle2\">Variables:</Typography>\r\n                    <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1 }}>\r\n                      {variables.stage_selection.map((variable) => (\r\n                        <Chip key={variable} label={variable} size=\"small\" />\r\n                      ))}\r\n                    </Box>\r\n                  </Box>\r\n                )}\r\n              </Box>\r\n            </TabPanel>\r\n            \r\n            {/* Data Extraction Template */}\r\n            <TabPanel value={tabValue} index={1}>\r\n              <Box sx={{ mb: 2 }}>\r\n                <FormControl fullWidth sx={{ mb: 2 }}>\r\n                  <InputLabel id=\"data-extraction-template-label\">Template</InputLabel>\r\n                  <Select\r\n                    labelId=\"data-extraction-template-label\"\r\n                    value={templates.data_extraction.id || ''}\r\n                    label=\"Template\"\r\n                    onChange={(e) => handleTemplateSelect('data_extraction', e.target.value)}\r\n                  >\r\n                    <MenuItem value=\"\">\r\n                      <em>None</em>\r\n                    </MenuItem>\r\n                    {availableTemplates.data_extraction.map((template) => (\r\n                      <MenuItem key={template.template_id} value={template.template_id}>\r\n                        {template.template_name}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n                \r\n                <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\r\n                  <Typography variant=\"subtitle2\" color=\"text.secondary\">\r\n                    {templates.data_extraction.id ? \r\n                      `Template ID: ${templates.data_extraction.id}` : \r\n                      'No template selected'}\r\n                  </Typography>\r\n                  <Box sx={{ display: 'flex', gap: 1 }}>\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      color=\"primary\"\r\n                      onClick={() => confirmSaveTemplate('data_extraction')}\r\n                      disabled={!templates.data_extraction.text || savingTemplates.data_extraction}\r\n                      startIcon={savingTemplates.data_extraction ? <CircularProgress size={20} /> : null}\r\n                    >\r\n                      {savingTemplates.data_extraction ? 'Saving...' : 'Save Template'}\r\n                    </Button>\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      color=\"secondary\"\r\n                      onClick={() => confirmSaveTemplate('data_extraction', true)}\r\n                      disabled={!templates.data_extraction.text || savingTemplates.data_extraction}\r\n                    >\r\n                      Save as Default\r\n                    </Button>\r\n                  </Box>\r\n                </Box>\r\n                \r\n                <Box sx={{ display: 'flex', gap: 1, mb: 2 }}>\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    startIcon={<RestartAltIcon />}\r\n                    onClick={() => handleApplyDefaultTemplate('data_extraction')}\r\n                    disabled={availableTemplates.default_data_extraction.length === 0}\r\n                  >\r\n                    Apply Default\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    startIcon={<PreviewIcon />}\r\n                    onClick={() => handlePreview('data_extraction')}\r\n                    disabled={!templates.data_extraction.text}\r\n                  >\r\n                    Preview\r\n                  </Button>\r\n                  <Tooltip title=\"Variables are enclosed in curly braces like {user_name}\">\r\n                    <IconButton>\r\n                      <HelpOutlineIcon />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                </Box>\r\n                \r\n                {previewData && previewData.type === 'data_extraction' && (\r\n                  <Alert severity=\"info\" sx={{ mb: 2 }}>\r\n                    <Typography variant=\"subtitle2\">Preview:</Typography>\r\n                    <Typography variant=\"body2\" sx={{ whiteSpace: 'pre-wrap' }}>\r\n                      {previewData.result}\r\n                    </Typography>\r\n                  </Alert>\r\n                )}\r\n                \r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Template Text\"\r\n                  value={templates.data_extraction.text || ''}\r\n                  onChange={(e) => handleTemplateChange('data_extraction', e.target.value)}\r\n                  multiline\r\n                  rows={8}\r\n                  placeholder=\"Enter template text with variables in {curly_braces}\"\r\n                />\r\n                \r\n                {variables.data_extraction.length > 0 && (\r\n                  <Box sx={{ mt: 2 }}>\r\n                    <Typography variant=\"subtitle2\">Variables:</Typography>\r\n                    <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1 }}>\r\n                      {variables.data_extraction.map((variable) => (\r\n                        <Chip key={variable} label={variable} size=\"small\" />\r\n                      ))}\r\n                    </Box>\r\n                  </Box>\r\n                )}\r\n              </Box>\r\n            </TabPanel>\r\n            \r\n            {/* Response Generation Template */}\r\n            <TabPanel value={tabValue} index={2}>\r\n              <Box sx={{ mb: 2 }}>\r\n                <FormControl fullWidth sx={{ mb: 2 }}>\r\n                  <InputLabel id=\"response-generation-template-label\">Template</InputLabel>\r\n                  <Select\r\n                    labelId=\"response-generation-template-label\"\r\n                    value={templates.response_generation.id || ''}\r\n                    label=\"Template\"\r\n                    onChange={(e) => handleTemplateSelect('response_generation', e.target.value)}\r\n                  >\r\n                    <MenuItem value=\"\">\r\n                      <em>None</em>\r\n                    </MenuItem>\r\n                    {availableTemplates.response_generation.map((template) => (\r\n                      <MenuItem key={template.template_id} value={template.template_id}>\r\n                        {template.template_name}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n                \r\n                <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\r\n                  <Typography variant=\"subtitle2\" color=\"text.secondary\">\r\n                    {templates.response_generation.id ? \r\n                      `Template ID: ${templates.response_generation.id}` : \r\n                      'No template selected'}\r\n                  </Typography>\r\n                  <Box sx={{ display: 'flex', gap: 1 }}>\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      color=\"primary\"\r\n                      onClick={() => confirmSaveTemplate('response_generation')}\r\n                      disabled={!templates.response_generation.text || savingTemplates.response_generation}\r\n                      startIcon={savingTemplates.response_generation ? <CircularProgress size={20} /> : null}\r\n                    >\r\n                      {savingTemplates.response_generation ? 'Saving...' : 'Save Template'}\r\n                    </Button>\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      color=\"secondary\"\r\n                      onClick={() => confirmSaveTemplate('response_generation', true)}\r\n                      disabled={!templates.response_generation.text || savingTemplates.response_generation}\r\n                    >\r\n                      Save as Default\r\n                    </Button>\r\n                  </Box>\r\n                </Box>\r\n                \r\n                <Box sx={{ display: 'flex', gap: 1, mb: 2 }}>\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    startIcon={<RestartAltIcon />}\r\n                    onClick={() => handleApplyDefaultTemplate('response_generation')}\r\n                    disabled={availableTemplates.default_response_generation.length === 0}\r\n                  >\r\n                    Apply Default\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    startIcon={<PreviewIcon />}\r\n                    onClick={() => handlePreview('response_generation')}\r\n                    disabled={!templates.response_generation.text}\r\n                  >\r\n                    Preview\r\n                  </Button>\r\n                  <Tooltip title=\"Variables are enclosed in curly braces like {user_name}\">\r\n                    <IconButton>\r\n                      <HelpOutlineIcon />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                </Box>\r\n                \r\n                {previewData && previewData.type === 'response_generation' && (\r\n                  <Alert severity=\"info\" sx={{ mb: 2 }}>\r\n                    <Typography variant=\"subtitle2\">Preview:</Typography>\r\n                    <Typography variant=\"body2\" sx={{ whiteSpace: 'pre-wrap' }}>\r\n                      {previewData.result}\r\n                    </Typography>\r\n                  </Alert>\r\n                )}\r\n                \r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Template Text\"\r\n                  value={templates.response_generation.text || ''}\r\n                  onChange={(e) => handleTemplateChange('response_generation', e.target.value)}\r\n                  multiline\r\n                  rows={8}\r\n                  placeholder=\"Enter template text with variables in {curly_braces}\"\r\n                />\r\n                \r\n                {variables.response_generation.length > 0 && (\r\n                  <Box sx={{ mt: 2 }}>\r\n                    <Typography variant=\"subtitle2\">Variables:</Typography>\r\n                    <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1 }}>\r\n                      {variables.response_generation.map((variable) => (\r\n                        <Chip key={variable} label={variable} size=\"small\" />\r\n                      ))}\r\n                    </Box>\r\n                  </Box>\r\n                )}\r\n              </Box>\r\n            </TabPanel>\r\n          </Box>\r\n          \r\n          {/* Save button */}\r\n          <Box sx={{ mt: 3, display: 'flex', justifyContent: 'space-between' }}>\r\n            <Button\r\n              variant=\"outlined\"\r\n              onClick={handleCancel}\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              startIcon={<SaveIcon />}\r\n              onClick={handleSave}\r\n              disabled={isLoading}\r\n            >\r\n              {isLoading ? <CircularProgress size={24} /> : (stageId === 'new' ? 'Create Stage' : 'Save Stage')}\r\n            </Button>\r\n          </Box>\r\n        </>\r\n      )}\r\n\r\n      {/* Template Save Confirmation Dialog */}\r\n      <Dialog open={showConfirmDialog} onClose={() => setShowConfirmDialog(false)}>\r\n        <DialogTitle>Save Template</DialogTitle>\r\n        <DialogContent>\r\n          <Typography>\r\n            {saveAsDefault\r\n              ? `Are you sure you want to save this as a default ${templateToSave?.replace(/_/g, ' ')} template?`\r\n              : templates[templateToSave]?.id \r\n                ? `Are you sure you want to update this ${templateToSave?.replace(/_/g, ' ')} template?` \r\n                : `Are you sure you want to create a new ${templateToSave?.replace(/_/g, ' ')} template?`}\r\n          </Typography>\r\n          {saveAsDefault && (\r\n            <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mt: 1 }}>\r\n              This will create a new default template that can be applied to any stage.\r\n            </Typography>\r\n          )}\r\n          {!templates[templateToSave]?.id && !saveAsDefault && (\r\n            <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mt: 1 }}>\r\n              A new template will be created in the database.\r\n            </Typography>\r\n          )}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setShowConfirmDialog(false)}>Cancel</Button>\r\n          <Button onClick={handleConfirmSave} color=\"primary\" variant=\"contained\">\r\n            Save\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default StageEditor; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}