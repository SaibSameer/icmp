{"ast":null,"code":"var _jsxFileName = \"C:\\\\icmp_events_api\\\\front-end\\\\src\\\\components\\\\StageEditor.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { Box, Paper, Typography, TextField, Button, Alert, CircularProgress, Divider } from '@mui/material';\nimport SaveIcon from '@mui/icons-material/Save';\nimport RestartAltIcon from '@mui/icons-material/RestartAlt';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StageEditor = () => {\n  _s();\n  const {\n    stageId\n  } = useParams();\n  const navigate = useNavigate();\n\n  // State variables\n  const [stage, setStage] = useState(null);\n  const [stageName, setStageName] = useState('');\n  const [stageDescription, setStageDescription] = useState('');\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  // Get stored credentials\n  const getStoredCredentials = () => {\n    return {\n      businessId: localStorage.getItem('businessId') || '',\n      businessApiKey: localStorage.getItem('businessApiKey') || ''\n    };\n  };\n\n  // Track if component is mounted\n  const isMounted = useRef(true);\n\n  // Clear any previous fetch timeouts on unmount\n  useEffect(() => {\n    return () => {\n      isMounted.current = false;\n    };\n  }, []);\n\n  // Fetch stage data on component mount\n  useEffect(() => {\n    const {\n      businessId,\n      businessApiKey\n    } = getStoredCredentials();\n    if (!businessId || !businessApiKey) {\n      setError('Authentication required. Please log in.');\n      return;\n    }\n    if (stageId && stageId !== 'new') {\n      fetchStage(stageId, businessId, businessApiKey);\n    }\n  }, [stageId]);\n\n  // Fetch specific stage data\n  const fetchStage = async (id, businessId, businessApiKey) => {\n    if (!isMounted.current || !businessId || !businessApiKey) {\n      setIsLoading(false);\n      return;\n    }\n    setIsLoading(true);\n    setError('');\n    try {\n      console.log(`Fetching stage with ID: ${id} for business: ${businessId}`);\n\n      // Build query parameters\n      const params = new URLSearchParams();\n      params.append('business_id', businessId);\n\n      // Use direct fetch with proper headers\n      const response = await fetch(`/stages/${id}?${params.toString()}`, {\n        method: 'GET',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${businessApiKey}`\n        },\n        credentials: 'include'\n      });\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({}));\n        throw new Error(`Failed to fetch stage: ${response.status} ${errorData.message || ''}`);\n      }\n      const data = await response.json();\n      console.log('Fetched stage data:', data);\n      if (isMounted.current) {\n        // Store the complete stage data\n        setStage(data);\n\n        // Set the form fields with the stage data\n        setStageName(data.stage_name || '');\n        setStageDescription(data.stage_description || '');\n\n        // Clear any previous errors\n        setError('');\n\n        // Log the values being set\n        console.log('Setting stage name:', data.stage_name);\n        console.log('Setting stage description:', data.stage_description);\n      }\n    } catch (err) {\n      console.error('Error fetching stage:', err);\n      if (isMounted.current) {\n        setError(err.message);\n        setStage(null);\n        setStageName('');\n        setStageDescription('');\n      }\n    } finally {\n      if (isMounted.current) {\n        setIsLoading(false);\n      }\n    }\n  };\n\n  // Handle save\n  const handleSave = async () => {\n    if (!stageName.trim()) {\n      setError('Stage name is required');\n      return;\n    }\n    const {\n      businessId,\n      businessApiKey\n    } = getStoredCredentials();\n    if (!businessId || !businessApiKey) {\n      setError('Authentication required. Please log in.');\n      return;\n    }\n    setIsLoading(true);\n    try {\n      const method = stageId === 'new' ? 'POST' : 'PUT';\n      const url = stageId === 'new' ? '/stages' : `/stages/${stageId}`;\n      const stageData = {\n        stage_name: stageName,\n        stage_description: stageDescription,\n        business_id: businessId\n      };\n\n      // Only include agent_id if it exists in the stage\n      if (stage && stage.agent_id) {\n        stageData.agent_id = stage.agent_id;\n      }\n      console.log(`Saving stage with ${method} to ${url}:`, stageData);\n      const response = await fetch(url, {\n        method,\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${businessApiKey}`\n        },\n        credentials: 'include',\n        body: JSON.stringify(stageData)\n      });\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({}));\n        throw new Error(errorData.message || 'Failed to save stage');\n      }\n      const result = await response.json();\n      console.log('Stage saved successfully:', result);\n      setSuccess('Stage saved successfully');\n\n      // If this was a new stage, update the stageId and URL\n      if (stageId === 'new' && result.stage_id) {\n        // Update URL without page reload\n        const newUrl = `/stage-editor/${result.stage_id}`;\n        window.history.pushState({}, '', newUrl);\n      }\n    } catch (err) {\n      console.error('Error saving stage:', err);\n      setError(err.message || 'Failed to save stage');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Handle reset\n  const handleReset = () => {\n    if (stageId && stageId !== 'new') {\n      const {\n        businessId,\n        businessApiKey\n      } = getStoredCredentials();\n      fetchStage(stageId, businessId, businessApiKey);\n    } else {\n      setStageName('');\n      setStageDescription('');\n    }\n  };\n\n  // Handle cancel\n  const handleCancel = () => {\n    navigate('/stage-management');\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        minHeight: '200px'\n      },\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        sx: {\n          mb: 2\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        onClick: handleCancel,\n        sx: {\n          mt: 2\n        },\n        children: \"Return to Stage Management\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [success && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"success\",\n      sx: {\n        mb: 2\n      },\n      children: success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        p: 3,\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: \"Stage Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mb: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"Stage Name\",\n          value: stageName,\n          onChange: e => setStageName(e.target.value),\n          required: true,\n          sx: {\n            mb: 2\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"Stage Description\",\n          value: stageDescription,\n          onChange: e => setStageDescription(e.target.value),\n          multiline: true,\n          rows: 3\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'flex-end',\n        gap: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        onClick: handleCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        onClick: handleReset,\n        startIcon: /*#__PURE__*/_jsxDEV(RestartAltIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 22\n        }, this),\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: handleSave,\n        startIcon: /*#__PURE__*/_jsxDEV(SaveIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 22\n        }, this),\n        disabled: !stageName.trim(),\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 234,\n    columnNumber: 5\n  }, this);\n};\n_s(StageEditor, \"DamstfAlCAB6WXDZNC1AQVXB9X4=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = StageEditor;\nexport default StageEditor;\nvar _c;\n$RefreshReg$(_c, \"StageEditor\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useParams","useNavigate","Box","Paper","Typography","TextField","Button","Alert","CircularProgress","Divider","SaveIcon","RestartAltIcon","jsxDEV","_jsxDEV","StageEditor","_s","stageId","navigate","stage","setStage","stageName","setStageName","stageDescription","setStageDescription","error","setError","success","setSuccess","isLoading","setIsLoading","getStoredCredentials","businessId","localStorage","getItem","businessApiKey","isMounted","current","fetchStage","id","console","log","params","URLSearchParams","append","response","fetch","toString","method","headers","credentials","ok","errorData","json","catch","Error","status","message","data","stage_name","stage_description","err","handleSave","trim","url","stageData","business_id","agent_id","body","JSON","stringify","result","stage_id","newUrl","window","history","pushState","handleReset","handleCancel","sx","display","justifyContent","alignItems","minHeight","children","fileName","_jsxFileName","lineNumber","columnNumber","severity","mb","variant","onClick","mt","p","gutterBottom","fullWidth","label","value","onChange","e","target","required","multiline","rows","gap","startIcon","disabled","_c","$RefreshReg$"],"sources":["C:/icmp_events_api/front-end/src/components/StageEditor.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport {\r\n  Box,\r\n  Paper,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Alert,\r\n  CircularProgress,\r\n  Divider\r\n} from '@mui/material';\r\nimport SaveIcon from '@mui/icons-material/Save';\r\nimport RestartAltIcon from '@mui/icons-material/RestartAlt';\r\n\r\nconst StageEditor = () => {\r\n  const { stageId } = useParams();\r\n  const navigate = useNavigate();\r\n  \r\n  // State variables\r\n  const [stage, setStage] = useState(null);\r\n  const [stageName, setStageName] = useState('');\r\n  const [stageDescription, setStageDescription] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  \r\n  // Get stored credentials\r\n  const getStoredCredentials = () => {\r\n    return {\r\n      businessId: localStorage.getItem('businessId') || '',\r\n      businessApiKey: localStorage.getItem('businessApiKey') || ''\r\n    };\r\n  };\r\n  \r\n  // Track if component is mounted\r\n  const isMounted = useRef(true);\r\n  \r\n  // Clear any previous fetch timeouts on unmount\r\n  useEffect(() => {\r\n    return () => {\r\n      isMounted.current = false;\r\n    };\r\n  }, []);\r\n  \r\n  // Fetch stage data on component mount\r\n  useEffect(() => {\r\n    const { businessId, businessApiKey } = getStoredCredentials();\r\n    \r\n    if (!businessId || !businessApiKey) {\r\n      setError('Authentication required. Please log in.');\r\n      return;\r\n    }\r\n    \r\n    if (stageId && stageId !== 'new') {\r\n      fetchStage(stageId, businessId, businessApiKey);\r\n    }\r\n  }, [stageId]);\r\n  \r\n  // Fetch specific stage data\r\n  const fetchStage = async (id, businessId, businessApiKey) => {\r\n    if (!isMounted.current || !businessId || !businessApiKey) {\r\n      setIsLoading(false);\r\n      return;\r\n    }\r\n    \r\n    setIsLoading(true);\r\n    setError('');\r\n    try {\r\n      console.log(`Fetching stage with ID: ${id} for business: ${businessId}`);\r\n      \r\n      // Build query parameters\r\n      const params = new URLSearchParams();\r\n      params.append('business_id', businessId);\r\n      \r\n      // Use direct fetch with proper headers\r\n      const response = await fetch(`/stages/${id}?${params.toString()}`, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${businessApiKey}`\r\n        },\r\n        credentials: 'include'\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        const errorData = await response.json().catch(() => ({}));\r\n        throw new Error(`Failed to fetch stage: ${response.status} ${errorData.message || ''}`);\r\n      }\r\n      \r\n      const data = await response.json();\r\n      console.log('Fetched stage data:', data);\r\n      \r\n      if (isMounted.current) {\r\n        // Store the complete stage data\r\n        setStage(data);\r\n        \r\n        // Set the form fields with the stage data\r\n        setStageName(data.stage_name || '');\r\n        setStageDescription(data.stage_description || '');\r\n        \r\n        // Clear any previous errors\r\n        setError('');\r\n        \r\n        // Log the values being set\r\n        console.log('Setting stage name:', data.stage_name);\r\n        console.log('Setting stage description:', data.stage_description);\r\n      }\r\n    } catch (err) {\r\n      console.error('Error fetching stage:', err);\r\n      if (isMounted.current) {\r\n        setError(err.message);\r\n        setStage(null);\r\n        setStageName('');\r\n        setStageDescription('');\r\n      }\r\n    } finally {\r\n      if (isMounted.current) {\r\n        setIsLoading(false);\r\n      }\r\n    }\r\n  };\r\n  \r\n  // Handle save\r\n  const handleSave = async () => {\r\n    if (!stageName.trim()) {\r\n      setError('Stage name is required');\r\n      return;\r\n    }\r\n    \r\n    const { businessId, businessApiKey } = getStoredCredentials();\r\n    \r\n    if (!businessId || !businessApiKey) {\r\n      setError('Authentication required. Please log in.');\r\n      return;\r\n    }\r\n    \r\n    setIsLoading(true);\r\n    try {\r\n      const method = stageId === 'new' ? 'POST' : 'PUT';\r\n      const url = stageId === 'new' ? '/stages' : `/stages/${stageId}`;\r\n      \r\n      const stageData = {\r\n        stage_name: stageName,\r\n        stage_description: stageDescription,\r\n        business_id: businessId\r\n      };\r\n      \r\n      // Only include agent_id if it exists in the stage\r\n      if (stage && stage.agent_id) {\r\n        stageData.agent_id = stage.agent_id;\r\n      }\r\n      \r\n      console.log(`Saving stage with ${method} to ${url}:`, stageData);\r\n      \r\n      const response = await fetch(url, {\r\n        method,\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${businessApiKey}`\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify(stageData),\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        const errorData = await response.json().catch(() => ({}));\r\n        throw new Error(errorData.message || 'Failed to save stage');\r\n      }\r\n      \r\n      const result = await response.json();\r\n      console.log('Stage saved successfully:', result);\r\n      \r\n      setSuccess('Stage saved successfully');\r\n      \r\n      // If this was a new stage, update the stageId and URL\r\n      if (stageId === 'new' && result.stage_id) {\r\n        // Update URL without page reload\r\n        const newUrl = `/stage-editor/${result.stage_id}`;\r\n        window.history.pushState({}, '', newUrl);\r\n      }\r\n      \r\n    } catch (err) {\r\n      console.error('Error saving stage:', err);\r\n      setError(err.message || 'Failed to save stage');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n  \r\n  // Handle reset\r\n  const handleReset = () => {\r\n    if (stageId && stageId !== 'new') {\r\n      const { businessId, businessApiKey } = getStoredCredentials();\r\n      fetchStage(stageId, businessId, businessApiKey);\r\n    } else {\r\n      setStageName('');\r\n      setStageDescription('');\r\n    }\r\n  };\r\n  \r\n  // Handle cancel\r\n  const handleCancel = () => {\r\n    navigate('/stage-management');\r\n  };\r\n  \r\n  if (isLoading) {\r\n    return (\r\n      <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', minHeight: '200px' }}>\r\n        <CircularProgress />\r\n      </Box>\r\n    );\r\n  }\r\n  \r\n  if (error) {\r\n    return (\r\n      <Box>\r\n        <Alert severity=\"error\" sx={{ mb: 2 }}>\r\n          {error}\r\n        </Alert>\r\n        <Button\r\n          variant=\"outlined\"\r\n          onClick={handleCancel}\r\n          sx={{ mt: 2 }}\r\n        >\r\n          Return to Stage Management\r\n        </Button>\r\n      </Box>\r\n    );\r\n  }\r\n  \r\n  return (\r\n    <Box>\r\n      {success && (\r\n        <Alert severity=\"success\" sx={{ mb: 2 }}>\r\n          {success}\r\n        </Alert>\r\n      )}\r\n      \r\n      <Paper sx={{ p: 3, mb: 3 }}>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Stage Information\r\n        </Typography>\r\n        <Box sx={{ mb: 3 }}>\r\n          <TextField\r\n            fullWidth\r\n            label=\"Stage Name\"\r\n            value={stageName}\r\n            onChange={(e) => setStageName(e.target.value)}\r\n            required\r\n            sx={{ mb: 2 }}\r\n          />\r\n          <TextField\r\n            fullWidth\r\n            label=\"Stage Description\"\r\n            value={stageDescription}\r\n            onChange={(e) => setStageDescription(e.target.value)}\r\n            multiline\r\n            rows={3}\r\n          />\r\n        </Box>\r\n      </Paper>\r\n      \r\n      {/* Action Buttons */}\r\n      <Box sx={{ display: 'flex', justifyContent: 'flex-end', gap: 2 }}>\r\n        <Button\r\n          variant=\"outlined\"\r\n          onClick={handleCancel}\r\n        >\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          variant=\"outlined\"\r\n          onClick={handleReset}\r\n          startIcon={<RestartAltIcon />}\r\n        >\r\n          Reset\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          onClick={handleSave}\r\n          startIcon={<SaveIcon />}\r\n          disabled={!stageName.trim()}\r\n        >\r\n          Save\r\n        </Button>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default StageEditor;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}