{"ast":null,"code":"var _jsxFileName = \"C:\\\\icmp_events_api\\\\front-end\\\\src\\\\components\\\\StageManager.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useParams, useNavigate, useLocation } from 'react-router-dom';\nimport { Container, Typography, Paper, Button, Dialog, DialogTitle, DialogContent, DialogActions, TextField, CircularProgress, Grid, Box, IconButton, Divider, Alert, Snackbar, List, ListItem, ListItemText, ListItemSecondaryAction, Tooltip, FormControl, InputLabel, MenuItem, Select, Card, CardContent } from '@mui/material';\nimport AddIcon from '@mui/icons-material/Add';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport ArrowUpwardIcon from '@mui/icons-material/ArrowUpward';\nimport ArrowDownwardIcon from '@mui/icons-material/ArrowDownward';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport SaveIcon from '@mui/icons-material/Save';\nimport DescriptionIcon from '@mui/icons-material/Description';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StageManager = () => {\n  _s();\n  // Get parameters from URL and location\n  const {\n    businessId: paramBusinessId,\n    agentId: paramAgentId\n  } = useParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  // Extract query parameters if not using path params\n  const queryParams = new URLSearchParams(location.search);\n  const queryBusinessId = queryParams.get('business_id');\n  const queryAgentId = queryParams.get('agent_id');\n\n  // Use params or query params, then fallback to localStorage\n  const businessId = paramBusinessId || queryBusinessId || localStorage.getItem('businessId');\n  const agentId = paramAgentId || queryAgentId;\n\n  // States for stages and templates\n  const [stages, setStages] = useState([]);\n  const [selectedStage, setSelectedStage] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [openDialog, setOpenDialog] = useState(false);\n  const [openDeleteDialog, setOpenDeleteDialog] = useState(false);\n  const [stageToDelete, setStageToDelete] = useState(null);\n  const [newStageName, setNewStageName] = useState('');\n  const [stageDescription, setStageDescription] = useState('');\n  const [stageType, setStageType] = useState('conversation');\n  const [availableTemplates, setAvailableTemplates] = useState({\n    stage_selection: [],\n    data_extraction: [],\n    response_generation: []\n  });\n  const [selectedTemplates, setSelectedTemplates] = useState({\n    stage_selection: '',\n    data_extraction: '',\n    response_generation: ''\n  });\n  const [defaultTemplates, setDefaultTemplates] = useState({\n    stage_selection: '',\n    data_extraction: '',\n    response_generation: ''\n  });\n  const [snackbar, setSnackbar] = useState({\n    open: false,\n    message: '',\n    severity: 'success'\n  });\n\n  // Logging for debugging\n  useEffect(() => {\n    console.log(\"StageManager - Current params:\", {\n      paramBusinessId,\n      paramAgentId,\n      queryBusinessId,\n      queryAgentId,\n      resolvedBusinessId: businessId,\n      resolvedAgentId: agentId\n    });\n  }, [paramBusinessId, paramAgentId, queryBusinessId, queryAgentId, businessId, agentId]);\n\n  // Fetch templates for dropdowns\n  const fetchTemplates = useCallback(async () => {\n    if (!businessId) {\n      console.error(\"No business ID available for fetching templates\");\n      return;\n    }\n    try {\n      const response = await fetch(`/templates?business_id=${businessId}`, {\n        credentials: 'include'\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || 'Failed to fetch templates');\n      }\n      const templates = await response.json();\n      console.log(\"Fetched templates:\", templates);\n\n      // Group templates by type\n      const templatesByType = {\n        stage_selection: [],\n        data_extraction: [],\n        response_generation: []\n      };\n      const defaultTemplateIds = {\n        stage_selection: '',\n        data_extraction: '',\n        response_generation: ''\n      };\n      templates.forEach(template => {\n        // Check if this is a regular template type\n        if (template.template_type in templatesByType) {\n          templatesByType[template.template_type].push(template);\n        }\n\n        // Check if this is a default template type\n        if (template.template_type.startsWith('default_')) {\n          // Extract the base type (e.g., from 'default_stage_selection' to 'stage_selection')\n          const baseType = template.template_type.replace('default_', '');\n          if (baseType in defaultTemplateIds) {\n            // Store the first default template's ID for each type\n            if (!defaultTemplateIds[baseType]) {\n              defaultTemplateIds[baseType] = template.template_id;\n            }\n          }\n        }\n      });\n      setAvailableTemplates(templatesByType);\n      setDefaultTemplates(defaultTemplateIds);\n\n      // Set initial selected templates to defaults\n      setSelectedTemplates({\n        stage_selection: defaultTemplateIds.stage_selection,\n        data_extraction: defaultTemplateIds.data_extraction,\n        response_generation: defaultTemplateIds.response_generation\n      });\n    } catch (err) {\n      console.error(\"Error fetching templates:\", err);\n      showSnackbar(err.message, 'error');\n    }\n  }, [businessId]);\n\n  // Fetch stages based on business ID and agent ID\n  const fetchStages = useCallback(async () => {\n    if (!businessId) {\n      console.error(\"No business ID available for fetching stages\");\n      setIsLoading(false);\n      return;\n    }\n    setIsLoading(true);\n    try {\n      let url = `/stages?business_id=${businessId}`;\n      if (agentId) {\n        url += `&agent_id=${agentId}`;\n      }\n      console.log(\"Fetching stages from:\", url);\n      const response = await fetch(url, {\n        credentials: 'include'\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || 'Failed to fetch stages');\n      }\n      const data = await response.json();\n      console.log(\"Fetched stages:\", data);\n      setStages(data);\n    } catch (err) {\n      console.error(\"Error fetching stages:\", err);\n      showSnackbar(err.message, 'error');\n    } finally {\n      setIsLoading(false);\n    }\n  }, [businessId, agentId]);\n\n  // Initial data fetch\n  useEffect(() => {\n    fetchTemplates();\n    fetchStages();\n  }, [fetchTemplates, fetchStages]);\n\n  // Helper function for showing snackbar messages\n  const showSnackbar = (message, severity = 'success') => {\n    setSnackbar({\n      open: true,\n      message,\n      severity\n    });\n  };\n  const handleCloseSnackbar = () => {\n    setSnackbar({\n      ...snackbar,\n      open: false\n    });\n  };\n  const handleNavigateToHome = () => {\n    navigate('/business');\n  };\n  const handleOpenNewStageDialog = () => {\n    setNewStageName('');\n    setStageDescription('');\n    setStageType('conversation');\n    setSelectedTemplates({\n      stage_selection: defaultTemplates.stage_selection,\n      data_extraction: defaultTemplates.data_extraction,\n      response_generation: defaultTemplates.response_generation\n    });\n    setOpenDialog(true);\n  };\n  const handleCreateStage = async () => {\n    try {\n      if (!newStageName.trim()) {\n        showSnackbar('Stage name is required', 'error');\n        return;\n      }\n      const stageData = {\n        stage_name: newStageName,\n        stage_description: stageDescription,\n        stage_type: stageType,\n        business_id: businessId,\n        stage_selection_template_id: selectedTemplates.stage_selection,\n        data_extraction_template_id: selectedTemplates.data_extraction,\n        response_generation_template_id: selectedTemplates.response_generation,\n        stage_config: {\n          order: stages.length + 1\n        }\n      };\n\n      // Add agent_id only if it exists\n      if (agentId) {\n        stageData.agent_id = agentId;\n      }\n      console.log(\"Creating stage with data:\", stageData);\n      const response = await fetch('/stages', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        body: JSON.stringify(stageData)\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || 'Failed to create stage');\n      }\n      const newStage = await response.json();\n      await fetchStages();\n      setOpenDialog(false);\n      showSnackbar('Stage created successfully', 'success');\n\n      // Navigate to the stage editor for the newly created stage\n      if (newStage && newStage.stage_id) {\n        navigateToStageEditor(newStage.stage_id);\n      }\n    } catch (err) {\n      console.error(\"Error creating stage:\", err);\n      showSnackbar(err.message, 'error');\n    }\n  };\n  const navigateToStageEditor = stageId => {\n    // Construct the URL with query parameters\n    let url = `/stage-editor/${stageId}?business_id=${businessId}`;\n    if (agentId) {\n      url += `&agent_id=${agentId}`;\n    }\n    navigate(url);\n  };\n  const handleDeleteStage = async () => {\n    if (!stageToDelete) return;\n    try {\n      const response = await fetch(`/stages/${stageToDelete.stage_id}`, {\n        method: 'DELETE',\n        credentials: 'include'\n      });\n      if (!response.ok) throw new Error('Failed to delete stage');\n      await fetchStages();\n      setOpenDeleteDialog(false);\n      setStageToDelete(null);\n      showSnackbar('Stage deleted successfully', 'success');\n    } catch (err) {\n      showSnackbar(err.message, 'error');\n    }\n  };\n  const handleMoveStage = async (stageId, direction) => {\n    try {\n      const currentIndex = stages.findIndex(s => s.stage_id === stageId);\n      if (currentIndex === -1) return;\n\n      // If trying to move first item up or last item down, do nothing\n      if (currentIndex === 0 && direction === 'up' || currentIndex === stages.length - 1 && direction === 'down') {\n        return;\n      }\n      const targetIndex = direction === 'up' ? currentIndex - 1 : currentIndex + 1;\n\n      // Swap the order values in the stage_config\n      const updatedStages = [...stages];\n      const currentStage = {\n        ...updatedStages[currentIndex]\n      };\n      const targetStage = {\n        ...updatedStages[targetIndex]\n      };\n\n      // Update stage_config.order values\n      currentStage.stage_config = {\n        ...currentStage.stage_config,\n        order: targetIndex + 1\n      };\n      targetStage.stage_config = {\n        ...targetStage.stage_config,\n        order: currentIndex + 1\n      };\n\n      // Update both stages in the database\n      const currentUpdate = fetch(`/stages/${currentStage.stage_id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        body: JSON.stringify(currentStage)\n      });\n      const targetUpdate = fetch(`/stages/${targetStage.stage_id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        body: JSON.stringify(targetStage)\n      });\n      await Promise.all([currentUpdate, targetUpdate]);\n\n      // Refresh stages\n      await fetchStages();\n      showSnackbar('Stage order updated', 'success');\n    } catch (err) {\n      showSnackbar(err.message, 'error');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    sx: {\n      mt: 4,\n      mb: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        p: 3,\n        mb: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          alignItems: 'center',\n          mb: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: handleNavigateToHome,\n          sx: {\n            mr: 1\n          },\n          children: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          component: \"h1\",\n          gutterBottom: true,\n          sx: {\n            flexGrow: 1\n          },\n          children: [\"Stage Manager\", businessId && /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            component: \"span\",\n            color: \"text.secondary\",\n            children: [` - Business ID: ${businessId}`, agentId && ` - Agent ID: ${agentId}`]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 28\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 24\n          }, this),\n          onClick: handleOpenNewStageDialog,\n          sx: {\n            mr: 1\n          },\n          children: \"Create Stage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          color: \"secondary\",\n          startIcon: /*#__PURE__*/_jsxDEV(DescriptionIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 24\n          }, this),\n          onClick: () => navigate('/templates'),\n          children: \"Manage Templates\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        sx: {\n          mb: 3\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        sx: {\n          mb: 2\n        },\n        onClose: () => setError(''),\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 11\n      }, this), success && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"success\",\n        sx: {\n          mb: 2\n        },\n        onClose: () => setSuccess(''),\n        children: success\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 11\n      }, this), isLoading ? /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'center',\n          p: 4\n        },\n        children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: stages.length === 0 ? /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"info\",\n          children: \"No stages found. Create your first stage to get started.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(List, {\n          sx: {\n            bgcolor: 'background.paper'\n          },\n          children: [...stages].sort((a, b) => {\n            var _a$stage_config, _b$stage_config;\n            return (((_a$stage_config = a.stage_config) === null || _a$stage_config === void 0 ? void 0 : _a$stage_config.order) || Infinity) - (((_b$stage_config = b.stage_config) === null || _b$stage_config === void 0 ? void 0 : _b$stage_config.order) || Infinity);\n          }).map(stage => /*#__PURE__*/_jsxDEV(ListItem, {\n            button: true,\n            onClick: () => navigateToStageEditor(stage.stage_id),\n            sx: {\n              mb: 1,\n              bgcolor: 'background.paper'\n            },\n            children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: stage.stage_name,\n              secondary: /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  component: \"span\",\n                  variant: \"body2\",\n                  color: \"text.primary\",\n                  children: stage.stage_description || 'No description'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 460,\n                  columnNumber: 27\n                }, this), stage.stage_config && stage.stage_config.order && ` • Order: ${stage.stage_config.order}`]\n              }, void 0, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 456,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n              children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n                title: \"Move Up\",\n                children: /*#__PURE__*/_jsxDEV(IconButton, {\n                  edge: \"end\",\n                  \"aria-label\": \"move-up\",\n                  onClick: e => {\n                    e.stopPropagation();\n                    handleMoveStage(stage.stage_id, 'up');\n                  },\n                  disabled: stages.indexOf(stage) === 0,\n                  children: /*#__PURE__*/_jsxDEV(ArrowUpwardIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 479,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 470,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 469,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                title: \"Move Down\",\n                children: /*#__PURE__*/_jsxDEV(IconButton, {\n                  edge: \"end\",\n                  \"aria-label\": \"move-down\",\n                  onClick: e => {\n                    e.stopPropagation();\n                    handleMoveStage(stage.stage_id, 'down');\n                  },\n                  disabled: stages.indexOf(stage) === stages.length - 1,\n                  children: /*#__PURE__*/_jsxDEV(ArrowDownwardIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 492,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 483,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 482,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                title: \"Edit Stage\",\n                children: /*#__PURE__*/_jsxDEV(IconButton, {\n                  edge: \"end\",\n                  \"aria-label\": \"edit\",\n                  onClick: e => {\n                    e.stopPropagation();\n                    navigateToStageEditor(stage.stage_id);\n                  },\n                  children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 504,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 496,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 495,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                title: \"Delete Stage\",\n                children: /*#__PURE__*/_jsxDEV(IconButton, {\n                  edge: \"end\",\n                  \"aria-label\": \"delete\",\n                  onClick: e => {\n                    e.stopPropagation();\n                    setStageToDelete(stage);\n                    setOpenDeleteDialog(true);\n                  },\n                  children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 517,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 508,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 507,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 468,\n              columnNumber: 21\n            }, this)]\n          }, stage.stage_id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 447,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 15\n        }, this)\n      }, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openDialog,\n      onClose: () => setOpenDialog(false),\n      maxWidth: \"md\",\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Create New Stage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 536,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          sx: {\n            mt: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              autoFocus: true,\n              label: \"Stage Name\",\n              fullWidth: true,\n              variant: \"outlined\",\n              value: newStageName,\n              onChange: e => setNewStageName(e.target.value),\n              required: true,\n              error: !newStageName.trim(),\n              helperText: !newStageName.trim() ? \"Stage name is required\" : \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 540,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 539,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Stage Description\",\n              fullWidth: true,\n              variant: \"outlined\",\n              value: stageDescription,\n              onChange: e => setStageDescription(e.target.value),\n              multiline: true,\n              rows: 2\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 553,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 552,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                children: \"Stage Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 565,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                value: stageType,\n                onChange: e => setStageType(e.target.value),\n                label: \"Stage Type\",\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"conversation\",\n                  children: \"Conversation\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 571,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"form\",\n                  children: \"Form\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 572,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"document\",\n                  children: \"Document\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 573,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 566,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 564,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 563,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: \"Template Selection\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 580,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 579,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                children: \"Stage Selection Template\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 587,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                value: selectedTemplates.stage_selection,\n                onChange: e => setSelectedTemplates({\n                  ...selectedTemplates,\n                  stage_selection: e.target.value\n                }),\n                label: \"Stage Selection Template\",\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"\",\n                  children: \"None\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 596,\n                  columnNumber: 19\n                }, this), availableTemplates.stage_selection.map(template => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: template.template_id,\n                  children: template.template_name || template.template_id\n                }, template.template_id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 598,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 588,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 586,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 585,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                children: \"Data Extraction Template\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 608,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                value: selectedTemplates.data_extraction,\n                onChange: e => setSelectedTemplates({\n                  ...selectedTemplates,\n                  data_extraction: e.target.value\n                }),\n                label: \"Data Extraction Template\",\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"\",\n                  children: \"None\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 617,\n                  columnNumber: 19\n                }, this), availableTemplates.data_extraction.map(template => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: template.template_id,\n                  children: template.template_name || template.template_id\n                }, template.template_id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 619,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 609,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 607,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 606,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                children: \"Response Generation Template\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 629,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                value: selectedTemplates.response_generation,\n                onChange: e => setSelectedTemplates({\n                  ...selectedTemplates,\n                  response_generation: e.target.value\n                }),\n                label: \"Response Generation Template\",\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"\",\n                  children: \"None\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 638,\n                  columnNumber: 19\n                }, this), availableTemplates.response_generation.map(template => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: template.template_id,\n                  children: template.template_name || template.template_id\n                }, template.template_id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 640,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 630,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 628,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 627,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 538,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 537,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setOpenDialog(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 650,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCreateStage,\n          variant: \"contained\",\n          color: \"primary\",\n          disabled: !newStageName.trim(),\n          startIcon: /*#__PURE__*/_jsxDEV(SaveIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 656,\n            columnNumber: 24\n          }, this),\n          children: \"Create & Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 651,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 649,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 530,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openDeleteDialog,\n      onClose: () => setOpenDeleteDialog(false),\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Confirm Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 668,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"Are you sure you want to delete the stage \\\"\", stageToDelete === null || stageToDelete === void 0 ? void 0 : stageToDelete.stage_name, \"\\\"? This action cannot be undone.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 670,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 669,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setOpenDeleteDialog(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 676,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleDeleteStage,\n          variant: \"contained\",\n          color: \"error\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 677,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 675,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 664,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: snackbar.open,\n      autoHideDuration: 6000,\n      onClose: handleCloseSnackbar,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        severity: snackbar.severity,\n        onClose: handleCloseSnackbar,\n        children: snackbar.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 693,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 688,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 386,\n    columnNumber: 5\n  }, this);\n};\n_s(StageManager, \"uY7MyJpY6IEv4WfZGKX94vLLFkU=\", false, function () {\n  return [useParams, useLocation, useNavigate];\n});\n_c = StageManager;\nexport default StageManager;\nvar _c;\n$RefreshReg$(_c, \"StageManager\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useParams","useNavigate","useLocation","Container","Typography","Paper","Button","Dialog","DialogTitle","DialogContent","DialogActions","TextField","CircularProgress","Grid","Box","IconButton","Divider","Alert","Snackbar","List","ListItem","ListItemText","ListItemSecondaryAction","Tooltip","FormControl","InputLabel","MenuItem","Select","Card","CardContent","AddIcon","DeleteIcon","EditIcon","ArrowUpwardIcon","ArrowDownwardIcon","ArrowBackIcon","SaveIcon","DescriptionIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","StageManager","_s","businessId","paramBusinessId","agentId","paramAgentId","location","navigate","queryParams","URLSearchParams","search","queryBusinessId","get","queryAgentId","localStorage","getItem","stages","setStages","selectedStage","setSelectedStage","isLoading","setIsLoading","error","setError","success","setSuccess","openDialog","setOpenDialog","openDeleteDialog","setOpenDeleteDialog","stageToDelete","setStageToDelete","newStageName","setNewStageName","stageDescription","setStageDescription","stageType","setStageType","availableTemplates","setAvailableTemplates","stage_selection","data_extraction","response_generation","selectedTemplates","setSelectedTemplates","defaultTemplates","setDefaultTemplates","snackbar","setSnackbar","open","message","severity","console","log","resolvedBusinessId","resolvedAgentId","fetchTemplates","response","fetch","credentials","ok","errorData","json","Error","templates","templatesByType","defaultTemplateIds","forEach","template","template_type","push","startsWith","baseType","replace","template_id","err","showSnackbar","fetchStages","url","data","handleCloseSnackbar","handleNavigateToHome","handleOpenNewStageDialog","handleCreateStage","trim","stageData","stage_name","stage_description","stage_type","business_id","stage_selection_template_id","data_extraction_template_id","response_generation_template_id","stage_config","order","length","agent_id","method","headers","body","JSON","stringify","newStage","stage_id","navigateToStageEditor","stageId","handleDeleteStage","handleMoveStage","direction","currentIndex","findIndex","s","targetIndex","updatedStages","currentStage","targetStage","currentUpdate","targetUpdate","Promise","all","maxWidth","sx","mt","mb","children","p","display","alignItems","onClick","mr","fileName","_jsxFileName","lineNumber","columnNumber","variant","component","gutterBottom","flexGrow","color","startIcon","onClose","justifyContent","bgcolor","sort","a","b","_a$stage_config","_b$stage_config","Infinity","map","stage","button","primary","secondary","title","edge","e","stopPropagation","disabled","indexOf","fullWidth","container","spacing","item","xs","autoFocus","label","value","onChange","target","required","helperText","multiline","rows","template_name","autoHideDuration","_c","$RefreshReg$"],"sources":["C:/icmp_events_api/front-end/src/components/StageManager.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { useParams, useNavigate, useLocation } from 'react-router-dom';\r\nimport {\r\n  Container,\r\n  Typography,\r\n  Paper,\r\n  Button,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField,\r\n  CircularProgress,\r\n  Grid,\r\n  Box,\r\n  IconButton,\r\n  Divider,\r\n  Alert,\r\n  Snackbar,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemSecondaryAction,\r\n  Tooltip,\r\n  FormControl,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  Card,\r\n  CardContent\r\n} from '@mui/material';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport ArrowUpwardIcon from '@mui/icons-material/ArrowUpward';\r\nimport ArrowDownwardIcon from '@mui/icons-material/ArrowDownward';\r\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\r\nimport SaveIcon from '@mui/icons-material/Save';\r\nimport DescriptionIcon from '@mui/icons-material/Description';\r\n\r\nconst StageManager = () => {\r\n  // Get parameters from URL and location\r\n  const { businessId: paramBusinessId, agentId: paramAgentId } = useParams();\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  \r\n  // Extract query parameters if not using path params\r\n  const queryParams = new URLSearchParams(location.search);\r\n  const queryBusinessId = queryParams.get('business_id');\r\n  const queryAgentId = queryParams.get('agent_id');\r\n  \r\n  // Use params or query params, then fallback to localStorage\r\n  const businessId = paramBusinessId || queryBusinessId || localStorage.getItem('businessId');\r\n  const agentId = paramAgentId || queryAgentId;\r\n  \r\n  // States for stages and templates\r\n  const [stages, setStages] = useState([]);\r\n  const [selectedStage, setSelectedStage] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState('');\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n  const [openDeleteDialog, setOpenDeleteDialog] = useState(false);\r\n  const [stageToDelete, setStageToDelete] = useState(null);\r\n  const [newStageName, setNewStageName] = useState('');\r\n  const [stageDescription, setStageDescription] = useState('');\r\n  const [stageType, setStageType] = useState('conversation');\r\n  const [availableTemplates, setAvailableTemplates] = useState({\r\n    stage_selection: [],\r\n    data_extraction: [],\r\n    response_generation: []\r\n  });\r\n  const [selectedTemplates, setSelectedTemplates] = useState({\r\n    stage_selection: '',\r\n    data_extraction: '',\r\n    response_generation: ''\r\n  });\r\n  const [defaultTemplates, setDefaultTemplates] = useState({\r\n    stage_selection: '',\r\n    data_extraction: '',\r\n    response_generation: ''\r\n  });\r\n  const [snackbar, setSnackbar] = useState({\r\n    open: false,\r\n    message: '',\r\n    severity: 'success'\r\n  });\r\n\r\n  // Logging for debugging\r\n  useEffect(() => {\r\n    console.log(\"StageManager - Current params:\", { \r\n      paramBusinessId, \r\n      paramAgentId,\r\n      queryBusinessId,\r\n      queryAgentId,\r\n      resolvedBusinessId: businessId,\r\n      resolvedAgentId: agentId\r\n    });\r\n  }, [\r\n    paramBusinessId, \r\n    paramAgentId, \r\n    queryBusinessId, \r\n    queryAgentId, \r\n    businessId, \r\n    agentId\r\n  ]);\r\n\r\n  // Fetch templates for dropdowns\r\n  const fetchTemplates = useCallback(async () => {\r\n    if (!businessId) {\r\n      console.error(\"No business ID available for fetching templates\");\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      const response = await fetch(`/templates?business_id=${businessId}`, {\r\n        credentials: 'include'\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.error || 'Failed to fetch templates');\r\n      }\r\n      \r\n      const templates = await response.json();\r\n      console.log(\"Fetched templates:\", templates);\r\n      \r\n      // Group templates by type\r\n      const templatesByType = {\r\n        stage_selection: [],\r\n        data_extraction: [],\r\n        response_generation: []\r\n      };\r\n      \r\n      const defaultTemplateIds = {\r\n        stage_selection: '',\r\n        data_extraction: '',\r\n        response_generation: ''\r\n      };\r\n      \r\n      templates.forEach(template => {\r\n        // Check if this is a regular template type\r\n        if (template.template_type in templatesByType) {\r\n          templatesByType[template.template_type].push(template);\r\n        }\r\n        \r\n        // Check if this is a default template type\r\n        if (template.template_type.startsWith('default_')) {\r\n          // Extract the base type (e.g., from 'default_stage_selection' to 'stage_selection')\r\n          const baseType = template.template_type.replace('default_', '');\r\n          if (baseType in defaultTemplateIds) {\r\n            // Store the first default template's ID for each type\r\n            if (!defaultTemplateIds[baseType]) {\r\n              defaultTemplateIds[baseType] = template.template_id;\r\n            }\r\n          }\r\n        }\r\n      });\r\n      \r\n      setAvailableTemplates(templatesByType);\r\n      setDefaultTemplates(defaultTemplateIds);\r\n      \r\n      // Set initial selected templates to defaults\r\n      setSelectedTemplates({\r\n        stage_selection: defaultTemplateIds.stage_selection,\r\n        data_extraction: defaultTemplateIds.data_extraction,\r\n        response_generation: defaultTemplateIds.response_generation\r\n      });\r\n      \r\n    } catch (err) {\r\n      console.error(\"Error fetching templates:\", err);\r\n      showSnackbar(err.message, 'error');\r\n    }\r\n  }, [businessId]);\r\n\r\n  // Fetch stages based on business ID and agent ID\r\n  const fetchStages = useCallback(async () => {\r\n    if (!businessId) {\r\n      console.error(\"No business ID available for fetching stages\");\r\n      setIsLoading(false);\r\n      return;\r\n    }\r\n    \r\n    setIsLoading(true);\r\n    try {\r\n      let url = `/stages?business_id=${businessId}`;\r\n      if (agentId) {\r\n        url += `&agent_id=${agentId}`;\r\n      }\r\n      \r\n      console.log(\"Fetching stages from:\", url);\r\n      const response = await fetch(url, {\r\n        credentials: 'include'\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.error || 'Failed to fetch stages');\r\n      }\r\n      \r\n      const data = await response.json();\r\n      console.log(\"Fetched stages:\", data);\r\n      setStages(data);\r\n    } catch (err) {\r\n      console.error(\"Error fetching stages:\", err);\r\n      showSnackbar(err.message, 'error');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [businessId, agentId]);\r\n\r\n  // Initial data fetch\r\n  useEffect(() => {\r\n    fetchTemplates();\r\n    fetchStages();\r\n  }, [fetchTemplates, fetchStages]);\r\n\r\n  // Helper function for showing snackbar messages\r\n  const showSnackbar = (message, severity = 'success') => {\r\n    setSnackbar({\r\n      open: true,\r\n      message,\r\n      severity\r\n    });\r\n  };\r\n\r\n  const handleCloseSnackbar = () => {\r\n    setSnackbar({\r\n      ...snackbar,\r\n      open: false\r\n    });\r\n  };\r\n\r\n  const handleNavigateToHome = () => {\r\n    navigate('/business');\r\n  };\r\n\r\n  const handleOpenNewStageDialog = () => {\r\n    setNewStageName('');\r\n    setStageDescription('');\r\n    setStageType('conversation');\r\n    setSelectedTemplates({\r\n      stage_selection: defaultTemplates.stage_selection,\r\n      data_extraction: defaultTemplates.data_extraction,\r\n      response_generation: defaultTemplates.response_generation\r\n    });\r\n    setOpenDialog(true);\r\n  };\r\n\r\n  const handleCreateStage = async () => {\r\n    try {\r\n      if (!newStageName.trim()) {\r\n        showSnackbar('Stage name is required', 'error');\r\n        return;\r\n      }\r\n\r\n      const stageData = {\r\n        stage_name: newStageName,\r\n        stage_description: stageDescription,\r\n        stage_type: stageType,\r\n        business_id: businessId,\r\n        stage_selection_template_id: selectedTemplates.stage_selection,\r\n        data_extraction_template_id: selectedTemplates.data_extraction,\r\n        response_generation_template_id: selectedTemplates.response_generation,\r\n        stage_config: { order: stages.length + 1 }\r\n      };\r\n      \r\n      // Add agent_id only if it exists\r\n      if (agentId) {\r\n        stageData.agent_id = agentId;\r\n      }\r\n      \r\n      console.log(\"Creating stage with data:\", stageData);\r\n      \r\n      const response = await fetch('/stages', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify(stageData),\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.error || 'Failed to create stage');\r\n      }\r\n      \r\n      const newStage = await response.json();\r\n      await fetchStages();\r\n      setOpenDialog(false);\r\n      showSnackbar('Stage created successfully', 'success');\r\n\r\n      // Navigate to the stage editor for the newly created stage\r\n      if (newStage && newStage.stage_id) {\r\n        navigateToStageEditor(newStage.stage_id);\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Error creating stage:\", err);\r\n      showSnackbar(err.message, 'error');\r\n    }\r\n  };\r\n\r\n  const navigateToStageEditor = (stageId) => {\r\n    // Construct the URL with query parameters\r\n    let url = `/stage-editor/${stageId}?business_id=${businessId}`;\r\n    if (agentId) {\r\n      url += `&agent_id=${agentId}`;\r\n    }\r\n    \r\n    navigate(url);\r\n  };\r\n\r\n  const handleDeleteStage = async () => {\r\n    if (!stageToDelete) return;\r\n    \r\n    try {\r\n      const response = await fetch(`/stages/${stageToDelete.stage_id}`, {\r\n        method: 'DELETE',\r\n        credentials: 'include'\r\n      });\r\n      \r\n      if (!response.ok) throw new Error('Failed to delete stage');\r\n      \r\n      await fetchStages();\r\n      setOpenDeleteDialog(false);\r\n      setStageToDelete(null);\r\n      showSnackbar('Stage deleted successfully', 'success');\r\n    } catch (err) {\r\n      showSnackbar(err.message, 'error');\r\n    }\r\n  };\r\n\r\n  const handleMoveStage = async (stageId, direction) => {\r\n    try {\r\n      const currentIndex = stages.findIndex(s => s.stage_id === stageId);\r\n      if (currentIndex === -1) return;\r\n      \r\n      // If trying to move first item up or last item down, do nothing\r\n      if ((currentIndex === 0 && direction === 'up') || \r\n          (currentIndex === stages.length - 1 && direction === 'down')) {\r\n        return;\r\n      }\r\n      \r\n      const targetIndex = direction === 'up' ? currentIndex - 1 : currentIndex + 1;\r\n      \r\n      // Swap the order values in the stage_config\r\n      const updatedStages = [...stages];\r\n      const currentStage = { ...updatedStages[currentIndex] };\r\n      const targetStage = { ...updatedStages[targetIndex] };\r\n      \r\n      // Update stage_config.order values\r\n      currentStage.stage_config = { ...currentStage.stage_config, order: targetIndex + 1 };\r\n      targetStage.stage_config = { ...targetStage.stage_config, order: currentIndex + 1 };\r\n      \r\n      // Update both stages in the database\r\n      const currentUpdate = fetch(`/stages/${currentStage.stage_id}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify(currentStage),\r\n      });\r\n      \r\n      const targetUpdate = fetch(`/stages/${targetStage.stage_id}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify(targetStage),\r\n      });\r\n      \r\n      await Promise.all([currentUpdate, targetUpdate]);\r\n      \r\n      // Refresh stages\r\n      await fetchStages();\r\n      showSnackbar('Stage order updated', 'success');\r\n    } catch (err) {\r\n      showSnackbar(err.message, 'error');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\r\n      <Paper sx={{ p: 3, mb: 4 }}>\r\n        <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\r\n          <IconButton onClick={handleNavigateToHome} sx={{ mr: 1 }}>\r\n            <ArrowBackIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h5\" component=\"h1\" gutterBottom sx={{ flexGrow: 1 }}>\r\n            Stage Manager\r\n            {businessId && <Typography variant=\"subtitle1\" component=\"span\" color=\"text.secondary\">\r\n              {` - Business ID: ${businessId}`}\r\n              {agentId && ` - Agent ID: ${agentId}`}\r\n            </Typography>}\r\n          </Typography>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            startIcon={<AddIcon />}\r\n            onClick={handleOpenNewStageDialog}\r\n            sx={{ mr: 1 }}\r\n          >\r\n            Create Stage\r\n          </Button>\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"secondary\"\r\n            startIcon={<DescriptionIcon />}\r\n            onClick={() => navigate('/templates')}\r\n          >\r\n            Manage Templates\r\n          </Button>\r\n        </Box>\r\n        \r\n        <Divider sx={{ mb: 3 }} />\r\n        \r\n        {error && (\r\n          <Alert severity=\"error\" sx={{ mb: 2 }} onClose={() => setError('')}>\r\n            {error}\r\n          </Alert>\r\n        )}\r\n        \r\n        {success && (\r\n          <Alert severity=\"success\" sx={{ mb: 2 }} onClose={() => setSuccess('')}>\r\n            {success}\r\n          </Alert>\r\n        )}\r\n        \r\n        {isLoading ? (\r\n          <Box sx={{ display: 'flex', justifyContent: 'center', p: 4 }}>\r\n            <CircularProgress />\r\n          </Box>\r\n        ) : (\r\n          <>\r\n            {stages.length === 0 ? (\r\n              <Alert severity=\"info\">\r\n                No stages found. Create your first stage to get started.\r\n              </Alert>\r\n            ) : (\r\n              <List sx={{ bgcolor: 'background.paper' }}>\r\n                {[...stages].sort((a, b) => \r\n                  (a.stage_config?.order || Infinity) - (b.stage_config?.order || Infinity)\r\n                ).map((stage) => (\r\n                  <ListItem \r\n                    key={stage.stage_id}\r\n                    button\r\n                    onClick={() => navigateToStageEditor(stage.stage_id)}\r\n                    sx={{ \r\n                      mb: 1,\r\n                      bgcolor: 'background.paper'\r\n                    }}\r\n                  >\r\n                    <ListItemText\r\n                      primary={stage.stage_name}\r\n                      secondary={\r\n                        <>\r\n                          <Typography component=\"span\" variant=\"body2\" color=\"text.primary\">\r\n                            {stage.stage_description || 'No description'}\r\n                          </Typography>\r\n                          {stage.stage_config && stage.stage_config.order && \r\n                            ` • Order: ${stage.stage_config.order}`}\r\n                        </>\r\n                      }\r\n                    />\r\n                    <ListItemSecondaryAction>\r\n                      <Tooltip title=\"Move Up\">\r\n                        <IconButton \r\n                          edge=\"end\" \r\n                          aria-label=\"move-up\"\r\n                          onClick={(e) => {\r\n                            e.stopPropagation();\r\n                            handleMoveStage(stage.stage_id, 'up');\r\n                          }}\r\n                          disabled={stages.indexOf(stage) === 0}\r\n                        >\r\n                          <ArrowUpwardIcon />\r\n                        </IconButton>\r\n                      </Tooltip>\r\n                      <Tooltip title=\"Move Down\">\r\n                        <IconButton \r\n                          edge=\"end\" \r\n                          aria-label=\"move-down\"\r\n                          onClick={(e) => {\r\n                            e.stopPropagation();\r\n                            handleMoveStage(stage.stage_id, 'down');\r\n                          }}\r\n                          disabled={stages.indexOf(stage) === stages.length - 1}\r\n                        >\r\n                          <ArrowDownwardIcon />\r\n                        </IconButton>\r\n                      </Tooltip>\r\n                      <Tooltip title=\"Edit Stage\">\r\n                        <IconButton \r\n                          edge=\"end\" \r\n                          aria-label=\"edit\"\r\n                          onClick={(e) => {\r\n                            e.stopPropagation();\r\n                            navigateToStageEditor(stage.stage_id);\r\n                          }}\r\n                        >\r\n                          <EditIcon />\r\n                        </IconButton>\r\n                      </Tooltip>\r\n                      <Tooltip title=\"Delete Stage\">\r\n                        <IconButton \r\n                          edge=\"end\" \r\n                          aria-label=\"delete\"\r\n                          onClick={(e) => {\r\n                            e.stopPropagation();\r\n                            setStageToDelete(stage);\r\n                            setOpenDeleteDialog(true);\r\n                          }}\r\n                        >\r\n                          <DeleteIcon />\r\n                        </IconButton>\r\n                      </Tooltip>\r\n                    </ListItemSecondaryAction>\r\n                  </ListItem>\r\n                ))}\r\n              </List>\r\n            )}\r\n          </>\r\n        )}\r\n      </Paper>\r\n      \r\n      {/* Create Stage Dialog */}\r\n      <Dialog \r\n        open={openDialog} \r\n        onClose={() => setOpenDialog(false)}\r\n        maxWidth=\"md\"\r\n        fullWidth\r\n      >\r\n        <DialogTitle>Create New Stage</DialogTitle>\r\n        <DialogContent>\r\n          <Grid container spacing={2} sx={{ mt: 1 }}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                autoFocus\r\n                label=\"Stage Name\"\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                value={newStageName}\r\n                onChange={(e) => setNewStageName(e.target.value)}\r\n                required\r\n                error={!newStageName.trim()}\r\n                helperText={!newStageName.trim() ? \"Stage name is required\" : \"\"}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                label=\"Stage Description\"\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                value={stageDescription}\r\n                onChange={(e) => setStageDescription(e.target.value)}\r\n                multiline\r\n                rows={2}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <FormControl fullWidth>\r\n                <InputLabel>Stage Type</InputLabel>\r\n                <Select\r\n                  value={stageType}\r\n                  onChange={(e) => setStageType(e.target.value)}\r\n                  label=\"Stage Type\"\r\n                >\r\n                  <MenuItem value=\"conversation\">Conversation</MenuItem>\r\n                  <MenuItem value=\"form\">Form</MenuItem>\r\n                  <MenuItem value=\"document\">Document</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            \r\n            {/* Template Selection Dropdowns */}\r\n            <Grid item xs={12}>\r\n              <Typography variant=\"h6\" gutterBottom>\r\n                Template Selection\r\n              </Typography>\r\n            </Grid>\r\n            \r\n            <Grid item xs={12}>\r\n              <FormControl fullWidth>\r\n                <InputLabel>Stage Selection Template</InputLabel>\r\n                <Select\r\n                  value={selectedTemplates.stage_selection}\r\n                  onChange={(e) => setSelectedTemplates({\r\n                    ...selectedTemplates,\r\n                    stage_selection: e.target.value\r\n                  })}\r\n                  label=\"Stage Selection Template\"\r\n                >\r\n                  <MenuItem value=\"\">None</MenuItem>\r\n                  {availableTemplates.stage_selection.map(template => (\r\n                    <MenuItem key={template.template_id} value={template.template_id}>\r\n                      {template.template_name || template.template_id}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            \r\n            <Grid item xs={12}>\r\n              <FormControl fullWidth>\r\n                <InputLabel>Data Extraction Template</InputLabel>\r\n                <Select\r\n                  value={selectedTemplates.data_extraction}\r\n                  onChange={(e) => setSelectedTemplates({\r\n                    ...selectedTemplates,\r\n                    data_extraction: e.target.value\r\n                  })}\r\n                  label=\"Data Extraction Template\"\r\n                >\r\n                  <MenuItem value=\"\">None</MenuItem>\r\n                  {availableTemplates.data_extraction.map(template => (\r\n                    <MenuItem key={template.template_id} value={template.template_id}>\r\n                      {template.template_name || template.template_id}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            \r\n            <Grid item xs={12}>\r\n              <FormControl fullWidth>\r\n                <InputLabel>Response Generation Template</InputLabel>\r\n                <Select\r\n                  value={selectedTemplates.response_generation}\r\n                  onChange={(e) => setSelectedTemplates({\r\n                    ...selectedTemplates,\r\n                    response_generation: e.target.value\r\n                  })}\r\n                  label=\"Response Generation Template\"\r\n                >\r\n                  <MenuItem value=\"\">None</MenuItem>\r\n                  {availableTemplates.response_generation.map(template => (\r\n                    <MenuItem key={template.template_id} value={template.template_id}>\r\n                      {template.template_name || template.template_id}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setOpenDialog(false)}>Cancel</Button>\r\n          <Button \r\n            onClick={handleCreateStage} \r\n            variant=\"contained\" \r\n            color=\"primary\"\r\n            disabled={!newStageName.trim()}\r\n            startIcon={<SaveIcon />}\r\n          >\r\n            Create & Save\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {/* Delete Confirmation Dialog */}\r\n      <Dialog\r\n        open={openDeleteDialog}\r\n        onClose={() => setOpenDeleteDialog(false)}\r\n      >\r\n        <DialogTitle>Confirm Delete</DialogTitle>\r\n        <DialogContent>\r\n          <Typography>\r\n            Are you sure you want to delete the stage \"{stageToDelete?.stage_name}\"?\r\n            This action cannot be undone.\r\n          </Typography>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setOpenDeleteDialog(false)}>Cancel</Button>\r\n          <Button \r\n            onClick={handleDeleteStage} \r\n            variant=\"contained\" \r\n            color=\"error\"\r\n          >\r\n            Delete\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {/* Snackbar for notifications */}\r\n      <Snackbar\r\n        open={snackbar.open}\r\n        autoHideDuration={6000}\r\n        onClose={handleCloseSnackbar}\r\n      >\r\n        <Alert severity={snackbar.severity} onClose={handleCloseSnackbar}>\r\n          {snackbar.message}\r\n        </Alert>\r\n      </Snackbar>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default StageManager; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAC/D,SAASC,SAAS,EAAEC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AACtE,SACEC,SAAS,EACTC,UAAU,EACVC,KAAK,EACLC,MAAM,EACNC,MAAM,EACNC,WAAW,EACXC,aAAa,EACbC,aAAa,EACbC,SAAS,EACTC,gBAAgB,EAChBC,IAAI,EACJC,GAAG,EACHC,UAAU,EACVC,OAAO,EACPC,KAAK,EACLC,QAAQ,EACRC,IAAI,EACJC,QAAQ,EACRC,YAAY,EACZC,uBAAuB,EACvBC,OAAO,EACPC,WAAW,EACXC,UAAU,EACVC,QAAQ,EACRC,MAAM,EACNC,IAAI,EACJC,WAAW,QACN,eAAe;AACtB,OAAOC,OAAO,MAAM,yBAAyB;AAC7C,OAAOC,UAAU,MAAM,4BAA4B;AACnD,OAAOC,QAAQ,MAAM,0BAA0B;AAC/C,OAAOC,eAAe,MAAM,iCAAiC;AAC7D,OAAOC,iBAAiB,MAAM,mCAAmC;AACjE,OAAOC,aAAa,MAAM,+BAA+B;AACzD,OAAOC,QAAQ,MAAM,0BAA0B;AAC/C,OAAOC,eAAe,MAAM,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE9D,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB;EACA,MAAM;IAAEC,UAAU,EAAEC,eAAe;IAAEC,OAAO,EAAEC;EAAa,CAAC,GAAG/C,SAAS,CAAC,CAAC;EAC1E,MAAMgD,QAAQ,GAAG9C,WAAW,CAAC,CAAC;EAC9B,MAAM+C,QAAQ,GAAGhD,WAAW,CAAC,CAAC;;EAE9B;EACA,MAAMiD,WAAW,GAAG,IAAIC,eAAe,CAACH,QAAQ,CAACI,MAAM,CAAC;EACxD,MAAMC,eAAe,GAAGH,WAAW,CAACI,GAAG,CAAC,aAAa,CAAC;EACtD,MAAMC,YAAY,GAAGL,WAAW,CAACI,GAAG,CAAC,UAAU,CAAC;;EAEhD;EACA,MAAMV,UAAU,GAAGC,eAAe,IAAIQ,eAAe,IAAIG,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;EAC3F,MAAMX,OAAO,GAAGC,YAAY,IAAIQ,YAAY;;EAE5C;EACA,MAAM,CAACG,MAAM,EAAEC,SAAS,CAAC,GAAG9D,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAAC+D,aAAa,EAAEC,gBAAgB,CAAC,GAAGhE,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACiE,SAAS,EAAEC,YAAY,CAAC,GAAGlE,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACmE,KAAK,EAAEC,QAAQ,CAAC,GAAGpE,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACqE,OAAO,EAAEC,UAAU,CAAC,GAAGtE,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACuE,UAAU,EAAEC,aAAa,CAAC,GAAGxE,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACyE,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG1E,QAAQ,CAAC,KAAK,CAAC;EAC/D,MAAM,CAAC2E,aAAa,EAAEC,gBAAgB,CAAC,GAAG5E,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAAC6E,YAAY,EAAEC,eAAe,CAAC,GAAG9E,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAAC+E,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGhF,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACiF,SAAS,EAAEC,YAAY,CAAC,GAAGlF,QAAQ,CAAC,cAAc,CAAC;EAC1D,MAAM,CAACmF,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGpF,QAAQ,CAAC;IAC3DqF,eAAe,EAAE,EAAE;IACnBC,eAAe,EAAE,EAAE;IACnBC,mBAAmB,EAAE;EACvB,CAAC,CAAC;EACF,MAAM,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGzF,QAAQ,CAAC;IACzDqF,eAAe,EAAE,EAAE;IACnBC,eAAe,EAAE,EAAE;IACnBC,mBAAmB,EAAE;EACvB,CAAC,CAAC;EACF,MAAM,CAACG,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG3F,QAAQ,CAAC;IACvDqF,eAAe,EAAE,EAAE;IACnBC,eAAe,EAAE,EAAE;IACnBC,mBAAmB,EAAE;EACvB,CAAC,CAAC;EACF,MAAM,CAACK,QAAQ,EAAEC,WAAW,CAAC,GAAG7F,QAAQ,CAAC;IACvC8F,IAAI,EAAE,KAAK;IACXC,OAAO,EAAE,EAAE;IACXC,QAAQ,EAAE;EACZ,CAAC,CAAC;;EAEF;EACA/F,SAAS,CAAC,MAAM;IACdgG,OAAO,CAACC,GAAG,CAAC,gCAAgC,EAAE;MAC5ClD,eAAe;MACfE,YAAY;MACZM,eAAe;MACfE,YAAY;MACZyC,kBAAkB,EAAEpD,UAAU;MAC9BqD,eAAe,EAAEnD;IACnB,CAAC,CAAC;EACJ,CAAC,EAAE,CACDD,eAAe,EACfE,YAAY,EACZM,eAAe,EACfE,YAAY,EACZX,UAAU,EACVE,OAAO,CACR,CAAC;;EAEF;EACA,MAAMoD,cAAc,GAAGnG,WAAW,CAAC,YAAY;IAC7C,IAAI,CAAC6C,UAAU,EAAE;MACfkD,OAAO,CAAC9B,KAAK,CAAC,iDAAiD,CAAC;MAChE;IACF;IAEA,IAAI;MACF,MAAMmC,QAAQ,GAAG,MAAMC,KAAK,CAAC,0BAA0BxD,UAAU,EAAE,EAAE;QACnEyD,WAAW,EAAE;MACf,CAAC,CAAC;MAEF,IAAI,CAACF,QAAQ,CAACG,EAAE,EAAE;QAChB,MAAMC,SAAS,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QACvC,MAAM,IAAIC,KAAK,CAACF,SAAS,CAACvC,KAAK,IAAI,2BAA2B,CAAC;MACjE;MAEA,MAAM0C,SAAS,GAAG,MAAMP,QAAQ,CAACK,IAAI,CAAC,CAAC;MACvCV,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEW,SAAS,CAAC;;MAE5C;MACA,MAAMC,eAAe,GAAG;QACtBzB,eAAe,EAAE,EAAE;QACnBC,eAAe,EAAE,EAAE;QACnBC,mBAAmB,EAAE;MACvB,CAAC;MAED,MAAMwB,kBAAkB,GAAG;QACzB1B,eAAe,EAAE,EAAE;QACnBC,eAAe,EAAE,EAAE;QACnBC,mBAAmB,EAAE;MACvB,CAAC;MAEDsB,SAAS,CAACG,OAAO,CAACC,QAAQ,IAAI;QAC5B;QACA,IAAIA,QAAQ,CAACC,aAAa,IAAIJ,eAAe,EAAE;UAC7CA,eAAe,CAACG,QAAQ,CAACC,aAAa,CAAC,CAACC,IAAI,CAACF,QAAQ,CAAC;QACxD;;QAEA;QACA,IAAIA,QAAQ,CAACC,aAAa,CAACE,UAAU,CAAC,UAAU,CAAC,EAAE;UACjD;UACA,MAAMC,QAAQ,GAAGJ,QAAQ,CAACC,aAAa,CAACI,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC;UAC/D,IAAID,QAAQ,IAAIN,kBAAkB,EAAE;YAClC;YACA,IAAI,CAACA,kBAAkB,CAACM,QAAQ,CAAC,EAAE;cACjCN,kBAAkB,CAACM,QAAQ,CAAC,GAAGJ,QAAQ,CAACM,WAAW;YACrD;UACF;QACF;MACF,CAAC,CAAC;MAEFnC,qBAAqB,CAAC0B,eAAe,CAAC;MACtCnB,mBAAmB,CAACoB,kBAAkB,CAAC;;MAEvC;MACAtB,oBAAoB,CAAC;QACnBJ,eAAe,EAAE0B,kBAAkB,CAAC1B,eAAe;QACnDC,eAAe,EAAEyB,kBAAkB,CAACzB,eAAe;QACnDC,mBAAmB,EAAEwB,kBAAkB,CAACxB;MAC1C,CAAC,CAAC;IAEJ,CAAC,CAAC,OAAOiC,GAAG,EAAE;MACZvB,OAAO,CAAC9B,KAAK,CAAC,2BAA2B,EAAEqD,GAAG,CAAC;MAC/CC,YAAY,CAACD,GAAG,CAACzB,OAAO,EAAE,OAAO,CAAC;IACpC;EACF,CAAC,EAAE,CAAChD,UAAU,CAAC,CAAC;;EAEhB;EACA,MAAM2E,WAAW,GAAGxH,WAAW,CAAC,YAAY;IAC1C,IAAI,CAAC6C,UAAU,EAAE;MACfkD,OAAO,CAAC9B,KAAK,CAAC,8CAA8C,CAAC;MAC7DD,YAAY,CAAC,KAAK,CAAC;MACnB;IACF;IAEAA,YAAY,CAAC,IAAI,CAAC;IAClB,IAAI;MACF,IAAIyD,GAAG,GAAG,uBAAuB5E,UAAU,EAAE;MAC7C,IAAIE,OAAO,EAAE;QACX0E,GAAG,IAAI,aAAa1E,OAAO,EAAE;MAC/B;MAEAgD,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEyB,GAAG,CAAC;MACzC,MAAMrB,QAAQ,GAAG,MAAMC,KAAK,CAACoB,GAAG,EAAE;QAChCnB,WAAW,EAAE;MACf,CAAC,CAAC;MAEF,IAAI,CAACF,QAAQ,CAACG,EAAE,EAAE;QAChB,MAAMC,SAAS,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QACvC,MAAM,IAAIC,KAAK,CAACF,SAAS,CAACvC,KAAK,IAAI,wBAAwB,CAAC;MAC9D;MAEA,MAAMyD,IAAI,GAAG,MAAMtB,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClCV,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAE0B,IAAI,CAAC;MACpC9D,SAAS,CAAC8D,IAAI,CAAC;IACjB,CAAC,CAAC,OAAOJ,GAAG,EAAE;MACZvB,OAAO,CAAC9B,KAAK,CAAC,wBAAwB,EAAEqD,GAAG,CAAC;MAC5CC,YAAY,CAACD,GAAG,CAACzB,OAAO,EAAE,OAAO,CAAC;IACpC,CAAC,SAAS;MACR7B,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC,EAAE,CAACnB,UAAU,EAAEE,OAAO,CAAC,CAAC;;EAEzB;EACAhD,SAAS,CAAC,MAAM;IACdoG,cAAc,CAAC,CAAC;IAChBqB,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,CAACrB,cAAc,EAAEqB,WAAW,CAAC,CAAC;;EAEjC;EACA,MAAMD,YAAY,GAAGA,CAAC1B,OAAO,EAAEC,QAAQ,GAAG,SAAS,KAAK;IACtDH,WAAW,CAAC;MACVC,IAAI,EAAE,IAAI;MACVC,OAAO;MACPC;IACF,CAAC,CAAC;EACJ,CAAC;EAED,MAAM6B,mBAAmB,GAAGA,CAAA,KAAM;IAChChC,WAAW,CAAC;MACV,GAAGD,QAAQ;MACXE,IAAI,EAAE;IACR,CAAC,CAAC;EACJ,CAAC;EAED,MAAMgC,oBAAoB,GAAGA,CAAA,KAAM;IACjC1E,QAAQ,CAAC,WAAW,CAAC;EACvB,CAAC;EAED,MAAM2E,wBAAwB,GAAGA,CAAA,KAAM;IACrCjD,eAAe,CAAC,EAAE,CAAC;IACnBE,mBAAmB,CAAC,EAAE,CAAC;IACvBE,YAAY,CAAC,cAAc,CAAC;IAC5BO,oBAAoB,CAAC;MACnBJ,eAAe,EAAEK,gBAAgB,CAACL,eAAe;MACjDC,eAAe,EAAEI,gBAAgB,CAACJ,eAAe;MACjDC,mBAAmB,EAAEG,gBAAgB,CAACH;IACxC,CAAC,CAAC;IACFf,aAAa,CAAC,IAAI,CAAC;EACrB,CAAC;EAED,MAAMwD,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAI;MACF,IAAI,CAACnD,YAAY,CAACoD,IAAI,CAAC,CAAC,EAAE;QACxBR,YAAY,CAAC,wBAAwB,EAAE,OAAO,CAAC;QAC/C;MACF;MAEA,MAAMS,SAAS,GAAG;QAChBC,UAAU,EAAEtD,YAAY;QACxBuD,iBAAiB,EAAErD,gBAAgB;QACnCsD,UAAU,EAAEpD,SAAS;QACrBqD,WAAW,EAAEvF,UAAU;QACvBwF,2BAA2B,EAAE/C,iBAAiB,CAACH,eAAe;QAC9DmD,2BAA2B,EAAEhD,iBAAiB,CAACF,eAAe;QAC9DmD,+BAA+B,EAAEjD,iBAAiB,CAACD,mBAAmB;QACtEmD,YAAY,EAAE;UAAEC,KAAK,EAAE9E,MAAM,CAAC+E,MAAM,GAAG;QAAE;MAC3C,CAAC;;MAED;MACA,IAAI3F,OAAO,EAAE;QACXiF,SAAS,CAACW,QAAQ,GAAG5F,OAAO;MAC9B;MAEAgD,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAEgC,SAAS,CAAC;MAEnD,MAAM5B,QAAQ,GAAG,MAAMC,KAAK,CAAC,SAAS,EAAE;QACtCuC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDvC,WAAW,EAAE,SAAS;QACtBwC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAChB,SAAS;MAChC,CAAC,CAAC;MAEF,IAAI,CAAC5B,QAAQ,CAACG,EAAE,EAAE;QAChB,MAAMC,SAAS,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QACvC,MAAM,IAAIC,KAAK,CAACF,SAAS,CAACvC,KAAK,IAAI,wBAAwB,CAAC;MAC9D;MAEA,MAAMgF,QAAQ,GAAG,MAAM7C,QAAQ,CAACK,IAAI,CAAC,CAAC;MACtC,MAAMe,WAAW,CAAC,CAAC;MACnBlD,aAAa,CAAC,KAAK,CAAC;MACpBiD,YAAY,CAAC,4BAA4B,EAAE,SAAS,CAAC;;MAErD;MACA,IAAI0B,QAAQ,IAAIA,QAAQ,CAACC,QAAQ,EAAE;QACjCC,qBAAqB,CAACF,QAAQ,CAACC,QAAQ,CAAC;MAC1C;IACF,CAAC,CAAC,OAAO5B,GAAG,EAAE;MACZvB,OAAO,CAAC9B,KAAK,CAAC,uBAAuB,EAAEqD,GAAG,CAAC;MAC3CC,YAAY,CAACD,GAAG,CAACzB,OAAO,EAAE,OAAO,CAAC;IACpC;EACF,CAAC;EAED,MAAMsD,qBAAqB,GAAIC,OAAO,IAAK;IACzC;IACA,IAAI3B,GAAG,GAAG,iBAAiB2B,OAAO,gBAAgBvG,UAAU,EAAE;IAC9D,IAAIE,OAAO,EAAE;MACX0E,GAAG,IAAI,aAAa1E,OAAO,EAAE;IAC/B;IAEAG,QAAQ,CAACuE,GAAG,CAAC;EACf,CAAC;EAED,MAAM4B,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAI,CAAC5E,aAAa,EAAE;IAEpB,IAAI;MACF,MAAM2B,QAAQ,GAAG,MAAMC,KAAK,CAAC,WAAW5B,aAAa,CAACyE,QAAQ,EAAE,EAAE;QAChEN,MAAM,EAAE,QAAQ;QAChBtC,WAAW,EAAE;MACf,CAAC,CAAC;MAEF,IAAI,CAACF,QAAQ,CAACG,EAAE,EAAE,MAAM,IAAIG,KAAK,CAAC,wBAAwB,CAAC;MAE3D,MAAMc,WAAW,CAAC,CAAC;MACnBhD,mBAAmB,CAAC,KAAK,CAAC;MAC1BE,gBAAgB,CAAC,IAAI,CAAC;MACtB6C,YAAY,CAAC,4BAA4B,EAAE,SAAS,CAAC;IACvD,CAAC,CAAC,OAAOD,GAAG,EAAE;MACZC,YAAY,CAACD,GAAG,CAACzB,OAAO,EAAE,OAAO,CAAC;IACpC;EACF,CAAC;EAED,MAAMyD,eAAe,GAAG,MAAAA,CAAOF,OAAO,EAAEG,SAAS,KAAK;IACpD,IAAI;MACF,MAAMC,YAAY,GAAG7F,MAAM,CAAC8F,SAAS,CAACC,CAAC,IAAIA,CAAC,CAACR,QAAQ,KAAKE,OAAO,CAAC;MAClE,IAAII,YAAY,KAAK,CAAC,CAAC,EAAE;;MAEzB;MACA,IAAKA,YAAY,KAAK,CAAC,IAAID,SAAS,KAAK,IAAI,IACxCC,YAAY,KAAK7F,MAAM,CAAC+E,MAAM,GAAG,CAAC,IAAIa,SAAS,KAAK,MAAO,EAAE;QAChE;MACF;MAEA,MAAMI,WAAW,GAAGJ,SAAS,KAAK,IAAI,GAAGC,YAAY,GAAG,CAAC,GAAGA,YAAY,GAAG,CAAC;;MAE5E;MACA,MAAMI,aAAa,GAAG,CAAC,GAAGjG,MAAM,CAAC;MACjC,MAAMkG,YAAY,GAAG;QAAE,GAAGD,aAAa,CAACJ,YAAY;MAAE,CAAC;MACvD,MAAMM,WAAW,GAAG;QAAE,GAAGF,aAAa,CAACD,WAAW;MAAE,CAAC;;MAErD;MACAE,YAAY,CAACrB,YAAY,GAAG;QAAE,GAAGqB,YAAY,CAACrB,YAAY;QAAEC,KAAK,EAAEkB,WAAW,GAAG;MAAE,CAAC;MACpFG,WAAW,CAACtB,YAAY,GAAG;QAAE,GAAGsB,WAAW,CAACtB,YAAY;QAAEC,KAAK,EAAEe,YAAY,GAAG;MAAE,CAAC;;MAEnF;MACA,MAAMO,aAAa,GAAG1D,KAAK,CAAC,WAAWwD,YAAY,CAACX,QAAQ,EAAE,EAAE;QAC9DN,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDvC,WAAW,EAAE,SAAS;QACtBwC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACa,YAAY;MACnC,CAAC,CAAC;MAEF,MAAMG,YAAY,GAAG3D,KAAK,CAAC,WAAWyD,WAAW,CAACZ,QAAQ,EAAE,EAAE;QAC5DN,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDvC,WAAW,EAAE,SAAS;QACtBwC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACc,WAAW;MAClC,CAAC,CAAC;MAEF,MAAMG,OAAO,CAACC,GAAG,CAAC,CAACH,aAAa,EAAEC,YAAY,CAAC,CAAC;;MAEhD;MACA,MAAMxC,WAAW,CAAC,CAAC;MACnBD,YAAY,CAAC,qBAAqB,EAAE,SAAS,CAAC;IAChD,CAAC,CAAC,OAAOD,GAAG,EAAE;MACZC,YAAY,CAACD,GAAG,CAACzB,OAAO,EAAE,OAAO,CAAC;IACpC;EACF,CAAC;EAED,oBACErD,OAAA,CAACpC,SAAS;IAAC+J,QAAQ,EAAC,IAAI;IAACC,EAAE,EAAE;MAAEC,EAAE,EAAE,CAAC;MAAEC,EAAE,EAAE;IAAE,CAAE;IAAAC,QAAA,gBAC5C/H,OAAA,CAAClC,KAAK;MAAC8J,EAAE,EAAE;QAAEI,CAAC,EAAE,CAAC;QAAEF,EAAE,EAAE;MAAE,CAAE;MAAAC,QAAA,gBACzB/H,OAAA,CAACzB,GAAG;QAACqJ,EAAE,EAAE;UAAEK,OAAO,EAAE,MAAM;UAAEC,UAAU,EAAE,QAAQ;UAAEJ,EAAE,EAAE;QAAE,CAAE;QAAAC,QAAA,gBACxD/H,OAAA,CAACxB,UAAU;UAAC2J,OAAO,EAAE/C,oBAAqB;UAACwC,EAAE,EAAE;YAAEQ,EAAE,EAAE;UAAE,CAAE;UAAAL,QAAA,eACvD/H,OAAA,CAACJ,aAAa;YAAAyI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACP,CAAC,eACbxI,OAAA,CAACnC,UAAU;UAAC4K,OAAO,EAAC,IAAI;UAACC,SAAS,EAAC,IAAI;UAACC,YAAY;UAACf,EAAE,EAAE;YAAEgB,QAAQ,EAAE;UAAE,CAAE;UAAAb,QAAA,GAAC,eAExE,EAAC1H,UAAU,iBAAIL,OAAA,CAACnC,UAAU;YAAC4K,OAAO,EAAC,WAAW;YAACC,SAAS,EAAC,MAAM;YAACG,KAAK,EAAC,gBAAgB;YAAAd,QAAA,GACnF,mBAAmB1H,UAAU,EAAE,EAC/BE,OAAO,IAAI,gBAAgBA,OAAO,EAAE;UAAA;YAAA8H,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC3B,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eACbxI,OAAA,CAACjC,MAAM;UACL0K,OAAO,EAAC,WAAW;UACnBI,KAAK,EAAC,SAAS;UACfC,SAAS,eAAE9I,OAAA,CAACT,OAAO;YAAA8I,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAE;UACvBL,OAAO,EAAE9C,wBAAyB;UAClCuC,EAAE,EAAE;YAAEQ,EAAE,EAAE;UAAE,CAAE;UAAAL,QAAA,EACf;QAED;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTxI,OAAA,CAACjC,MAAM;UACL0K,OAAO,EAAC,UAAU;UAClBI,KAAK,EAAC,WAAW;UACjBC,SAAS,eAAE9I,OAAA,CAACF,eAAe;YAAAuI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAE;UAC/BL,OAAO,EAAEA,CAAA,KAAMzH,QAAQ,CAAC,YAAY,CAAE;UAAAqH,QAAA,EACvC;QAED;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eAENxI,OAAA,CAACvB,OAAO;QAACmJ,EAAE,EAAE;UAAEE,EAAE,EAAE;QAAE;MAAE;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAEzB/G,KAAK,iBACJzB,OAAA,CAACtB,KAAK;QAAC4E,QAAQ,EAAC,OAAO;QAACsE,EAAE,EAAE;UAAEE,EAAE,EAAE;QAAE,CAAE;QAACiB,OAAO,EAAEA,CAAA,KAAMrH,QAAQ,CAAC,EAAE,CAAE;QAAAqG,QAAA,EAChEtG;MAAK;QAAA4G,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CACR,EAEA7G,OAAO,iBACN3B,OAAA,CAACtB,KAAK;QAAC4E,QAAQ,EAAC,SAAS;QAACsE,EAAE,EAAE;UAAEE,EAAE,EAAE;QAAE,CAAE;QAACiB,OAAO,EAAEA,CAAA,KAAMnH,UAAU,CAAC,EAAE,CAAE;QAAAmG,QAAA,EACpEpG;MAAO;QAAA0G,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CACR,EAEAjH,SAAS,gBACRvB,OAAA,CAACzB,GAAG;QAACqJ,EAAE,EAAE;UAAEK,OAAO,EAAE,MAAM;UAAEe,cAAc,EAAE,QAAQ;UAAEhB,CAAC,EAAE;QAAE,CAAE;QAAAD,QAAA,eAC3D/H,OAAA,CAAC3B,gBAAgB;UAAAgK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjB,CAAC,gBAENxI,OAAA,CAAAE,SAAA;QAAA6H,QAAA,EACG5G,MAAM,CAAC+E,MAAM,KAAK,CAAC,gBAClBlG,OAAA,CAACtB,KAAK;UAAC4E,QAAQ,EAAC,MAAM;UAAAyE,QAAA,EAAC;QAEvB;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,gBAERxI,OAAA,CAACpB,IAAI;UAACgJ,EAAE,EAAE;YAAEqB,OAAO,EAAE;UAAmB,CAAE;UAAAlB,QAAA,EACvC,CAAC,GAAG5G,MAAM,CAAC,CAAC+H,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC;YAAA,IAAAC,eAAA,EAAAC,eAAA;YAAA,OACrB,CAAC,EAAAD,eAAA,GAAAF,CAAC,CAACnD,YAAY,cAAAqD,eAAA,uBAAdA,eAAA,CAAgBpD,KAAK,KAAIsD,QAAQ,KAAK,EAAAD,eAAA,GAAAF,CAAC,CAACpD,YAAY,cAAAsD,eAAA,uBAAdA,eAAA,CAAgBrD,KAAK,KAAIsD,QAAQ,CAAC;UAAA,CAC3E,CAAC,CAACC,GAAG,CAAEC,KAAK,iBACVzJ,OAAA,CAACnB,QAAQ;YAEP6K,MAAM;YACNvB,OAAO,EAAEA,CAAA,KAAMxB,qBAAqB,CAAC8C,KAAK,CAAC/C,QAAQ,CAAE;YACrDkB,EAAE,EAAE;cACFE,EAAE,EAAE,CAAC;cACLmB,OAAO,EAAE;YACX,CAAE;YAAAlB,QAAA,gBAEF/H,OAAA,CAAClB,YAAY;cACX6K,OAAO,EAAEF,KAAK,CAAChE,UAAW;cAC1BmE,SAAS,eACP5J,OAAA,CAAAE,SAAA;gBAAA6H,QAAA,gBACE/H,OAAA,CAACnC,UAAU;kBAAC6K,SAAS,EAAC,MAAM;kBAACD,OAAO,EAAC,OAAO;kBAACI,KAAK,EAAC,cAAc;kBAAAd,QAAA,EAC9D0B,KAAK,CAAC/D,iBAAiB,IAAI;gBAAgB;kBAAA2C,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAClC,CAAC,EACZiB,KAAK,CAACzD,YAAY,IAAIyD,KAAK,CAACzD,YAAY,CAACC,KAAK,IAC7C,aAAawD,KAAK,CAACzD,YAAY,CAACC,KAAK,EAAE;cAAA,eACzC;YACH;cAAAoC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACF,CAAC,eACFxI,OAAA,CAACjB,uBAAuB;cAAAgJ,QAAA,gBACtB/H,OAAA,CAAChB,OAAO;gBAAC6K,KAAK,EAAC,SAAS;gBAAA9B,QAAA,eACtB/H,OAAA,CAACxB,UAAU;kBACTsL,IAAI,EAAC,KAAK;kBACV,cAAW,SAAS;kBACpB3B,OAAO,EAAG4B,CAAC,IAAK;oBACdA,CAAC,CAACC,eAAe,CAAC,CAAC;oBACnBlD,eAAe,CAAC2C,KAAK,CAAC/C,QAAQ,EAAE,IAAI,CAAC;kBACvC,CAAE;kBACFuD,QAAQ,EAAE9I,MAAM,CAAC+I,OAAO,CAACT,KAAK,CAAC,KAAK,CAAE;kBAAA1B,QAAA,eAEtC/H,OAAA,CAACN,eAAe;oBAAA2I,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAE;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACT;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACN,CAAC,eACVxI,OAAA,CAAChB,OAAO;gBAAC6K,KAAK,EAAC,WAAW;gBAAA9B,QAAA,eACxB/H,OAAA,CAACxB,UAAU;kBACTsL,IAAI,EAAC,KAAK;kBACV,cAAW,WAAW;kBACtB3B,OAAO,EAAG4B,CAAC,IAAK;oBACdA,CAAC,CAACC,eAAe,CAAC,CAAC;oBACnBlD,eAAe,CAAC2C,KAAK,CAAC/C,QAAQ,EAAE,MAAM,CAAC;kBACzC,CAAE;kBACFuD,QAAQ,EAAE9I,MAAM,CAAC+I,OAAO,CAACT,KAAK,CAAC,KAAKtI,MAAM,CAAC+E,MAAM,GAAG,CAAE;kBAAA6B,QAAA,eAEtD/H,OAAA,CAACL,iBAAiB;oBAAA0I,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAE;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACX;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACN,CAAC,eACVxI,OAAA,CAAChB,OAAO;gBAAC6K,KAAK,EAAC,YAAY;gBAAA9B,QAAA,eACzB/H,OAAA,CAACxB,UAAU;kBACTsL,IAAI,EAAC,KAAK;kBACV,cAAW,MAAM;kBACjB3B,OAAO,EAAG4B,CAAC,IAAK;oBACdA,CAAC,CAACC,eAAe,CAAC,CAAC;oBACnBrD,qBAAqB,CAAC8C,KAAK,CAAC/C,QAAQ,CAAC;kBACvC,CAAE;kBAAAqB,QAAA,eAEF/H,OAAA,CAACP,QAAQ;oBAAA4I,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAE;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACF;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACN,CAAC,eACVxI,OAAA,CAAChB,OAAO;gBAAC6K,KAAK,EAAC,cAAc;gBAAA9B,QAAA,eAC3B/H,OAAA,CAACxB,UAAU;kBACTsL,IAAI,EAAC,KAAK;kBACV,cAAW,QAAQ;kBACnB3B,OAAO,EAAG4B,CAAC,IAAK;oBACdA,CAAC,CAACC,eAAe,CAAC,CAAC;oBACnB9H,gBAAgB,CAACuH,KAAK,CAAC;oBACvBzH,mBAAmB,CAAC,IAAI,CAAC;kBAC3B,CAAE;kBAAA+F,QAAA,eAEF/H,OAAA,CAACR,UAAU;oBAAA6I,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAE;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACJ;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACN,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACa,CAAC;UAAA,GAxErBiB,KAAK,CAAC/C,QAAQ;YAAA2B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAyEX,CACX;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE;MACP,gBACD,CACH;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC,eAGRxI,OAAA,CAAChC,MAAM;MACLoF,IAAI,EAAEvB,UAAW;MACjBkH,OAAO,EAAEA,CAAA,KAAMjH,aAAa,CAAC,KAAK,CAAE;MACpC6F,QAAQ,EAAC,IAAI;MACbwC,SAAS;MAAApC,QAAA,gBAET/H,OAAA,CAAC/B,WAAW;QAAA8J,QAAA,EAAC;MAAgB;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAAC,eAC3CxI,OAAA,CAAC9B,aAAa;QAAA6J,QAAA,eACZ/H,OAAA,CAAC1B,IAAI;UAAC8L,SAAS;UAACC,OAAO,EAAE,CAAE;UAACzC,EAAE,EAAE;YAAEC,EAAE,EAAE;UAAE,CAAE;UAAAE,QAAA,gBACxC/H,OAAA,CAAC1B,IAAI;YAACgM,IAAI;YAACC,EAAE,EAAE,EAAG;YAAAxC,QAAA,eAChB/H,OAAA,CAAC5B,SAAS;cACRoM,SAAS;cACTC,KAAK,EAAC,YAAY;cAClBN,SAAS;cACT1B,OAAO,EAAC,UAAU;cAClBiC,KAAK,EAAEvI,YAAa;cACpBwI,QAAQ,EAAGZ,CAAC,IAAK3H,eAAe,CAAC2H,CAAC,CAACa,MAAM,CAACF,KAAK,CAAE;cACjDG,QAAQ;cACRpJ,KAAK,EAAE,CAACU,YAAY,CAACoD,IAAI,CAAC,CAAE;cAC5BuF,UAAU,EAAE,CAAC3I,YAAY,CAACoD,IAAI,CAAC,CAAC,GAAG,wBAAwB,GAAG;YAAG;cAAA8C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC,eACPxI,OAAA,CAAC1B,IAAI;YAACgM,IAAI;YAACC,EAAE,EAAE,EAAG;YAAAxC,QAAA,eAChB/H,OAAA,CAAC5B,SAAS;cACRqM,KAAK,EAAC,mBAAmB;cACzBN,SAAS;cACT1B,OAAO,EAAC,UAAU;cAClBiC,KAAK,EAAErI,gBAAiB;cACxBsI,QAAQ,EAAGZ,CAAC,IAAKzH,mBAAmB,CAACyH,CAAC,CAACa,MAAM,CAACF,KAAK,CAAE;cACrDK,SAAS;cACTC,IAAI,EAAE;YAAE;cAAA3C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACT;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC,eACPxI,OAAA,CAAC1B,IAAI;YAACgM,IAAI;YAACC,EAAE,EAAE,EAAG;YAAAxC,QAAA,eAChB/H,OAAA,CAACf,WAAW;cAACkL,SAAS;cAAApC,QAAA,gBACpB/H,OAAA,CAACd,UAAU;gBAAA6I,QAAA,EAAC;cAAU;gBAAAM,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,eACnCxI,OAAA,CAACZ,MAAM;gBACLsL,KAAK,EAAEnI,SAAU;gBACjBoI,QAAQ,EAAGZ,CAAC,IAAKvH,YAAY,CAACuH,CAAC,CAACa,MAAM,CAACF,KAAK,CAAE;gBAC9CD,KAAK,EAAC,YAAY;gBAAA1C,QAAA,gBAElB/H,OAAA,CAACb,QAAQ;kBAACuL,KAAK,EAAC,cAAc;kBAAA3C,QAAA,EAAC;gBAAY;kBAAAM,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAU,CAAC,eACtDxI,OAAA,CAACb,QAAQ;kBAACuL,KAAK,EAAC,MAAM;kBAAA3C,QAAA,EAAC;gBAAI;kBAAAM,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAU,CAAC,eACtCxI,OAAA,CAACb,QAAQ;kBAACuL,KAAK,EAAC,UAAU;kBAAA3C,QAAA,EAAC;gBAAQ;kBAAAM,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAU,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACxC,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACV,CAAC,eAGPxI,OAAA,CAAC1B,IAAI;YAACgM,IAAI;YAACC,EAAE,EAAE,EAAG;YAAAxC,QAAA,eAChB/H,OAAA,CAACnC,UAAU;cAAC4K,OAAO,EAAC,IAAI;cAACE,YAAY;cAAAZ,QAAA,EAAC;YAEtC;cAAAM,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT,CAAC,eAEPxI,OAAA,CAAC1B,IAAI;YAACgM,IAAI;YAACC,EAAE,EAAE,EAAG;YAAAxC,QAAA,eAChB/H,OAAA,CAACf,WAAW;cAACkL,SAAS;cAAApC,QAAA,gBACpB/H,OAAA,CAACd,UAAU;gBAAA6I,QAAA,EAAC;cAAwB;gBAAAM,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,eACjDxI,OAAA,CAACZ,MAAM;gBACLsL,KAAK,EAAE5H,iBAAiB,CAACH,eAAgB;gBACzCgI,QAAQ,EAAGZ,CAAC,IAAKhH,oBAAoB,CAAC;kBACpC,GAAGD,iBAAiB;kBACpBH,eAAe,EAAEoH,CAAC,CAACa,MAAM,CAACF;gBAC5B,CAAC,CAAE;gBACHD,KAAK,EAAC,0BAA0B;gBAAA1C,QAAA,gBAEhC/H,OAAA,CAACb,QAAQ;kBAACuL,KAAK,EAAC,EAAE;kBAAA3C,QAAA,EAAC;gBAAI;kBAAAM,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAU,CAAC,EACjC/F,kBAAkB,CAACE,eAAe,CAAC6G,GAAG,CAACjF,QAAQ,iBAC9CvE,OAAA,CAACb,QAAQ;kBAA4BuL,KAAK,EAAEnG,QAAQ,CAACM,WAAY;kBAAAkD,QAAA,EAC9DxD,QAAQ,CAAC0G,aAAa,IAAI1G,QAAQ,CAACM;gBAAW,GADlCN,QAAQ,CAACM,WAAW;kBAAAwD,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAEzB,CACX,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACI,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACV,CAAC,eAEPxI,OAAA,CAAC1B,IAAI;YAACgM,IAAI;YAACC,EAAE,EAAE,EAAG;YAAAxC,QAAA,eAChB/H,OAAA,CAACf,WAAW;cAACkL,SAAS;cAAApC,QAAA,gBACpB/H,OAAA,CAACd,UAAU;gBAAA6I,QAAA,EAAC;cAAwB;gBAAAM,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,eACjDxI,OAAA,CAACZ,MAAM;gBACLsL,KAAK,EAAE5H,iBAAiB,CAACF,eAAgB;gBACzC+H,QAAQ,EAAGZ,CAAC,IAAKhH,oBAAoB,CAAC;kBACpC,GAAGD,iBAAiB;kBACpBF,eAAe,EAAEmH,CAAC,CAACa,MAAM,CAACF;gBAC5B,CAAC,CAAE;gBACHD,KAAK,EAAC,0BAA0B;gBAAA1C,QAAA,gBAEhC/H,OAAA,CAACb,QAAQ;kBAACuL,KAAK,EAAC,EAAE;kBAAA3C,QAAA,EAAC;gBAAI;kBAAAM,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAU,CAAC,EACjC/F,kBAAkB,CAACG,eAAe,CAAC4G,GAAG,CAACjF,QAAQ,iBAC9CvE,OAAA,CAACb,QAAQ;kBAA4BuL,KAAK,EAAEnG,QAAQ,CAACM,WAAY;kBAAAkD,QAAA,EAC9DxD,QAAQ,CAAC0G,aAAa,IAAI1G,QAAQ,CAACM;gBAAW,GADlCN,QAAQ,CAACM,WAAW;kBAAAwD,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAEzB,CACX,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACI,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACV,CAAC,eAEPxI,OAAA,CAAC1B,IAAI;YAACgM,IAAI;YAACC,EAAE,EAAE,EAAG;YAAAxC,QAAA,eAChB/H,OAAA,CAACf,WAAW;cAACkL,SAAS;cAAApC,QAAA,gBACpB/H,OAAA,CAACd,UAAU;gBAAA6I,QAAA,EAAC;cAA4B;gBAAAM,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,eACrDxI,OAAA,CAACZ,MAAM;gBACLsL,KAAK,EAAE5H,iBAAiB,CAACD,mBAAoB;gBAC7C8H,QAAQ,EAAGZ,CAAC,IAAKhH,oBAAoB,CAAC;kBACpC,GAAGD,iBAAiB;kBACpBD,mBAAmB,EAAEkH,CAAC,CAACa,MAAM,CAACF;gBAChC,CAAC,CAAE;gBACHD,KAAK,EAAC,8BAA8B;gBAAA1C,QAAA,gBAEpC/H,OAAA,CAACb,QAAQ;kBAACuL,KAAK,EAAC,EAAE;kBAAA3C,QAAA,EAAC;gBAAI;kBAAAM,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAU,CAAC,EACjC/F,kBAAkB,CAACI,mBAAmB,CAAC2G,GAAG,CAACjF,QAAQ,iBAClDvE,OAAA,CAACb,QAAQ;kBAA4BuL,KAAK,EAAEnG,QAAQ,CAACM,WAAY;kBAAAkD,QAAA,EAC9DxD,QAAQ,CAAC0G,aAAa,IAAI1G,QAAQ,CAACM;gBAAW,GADlCN,QAAQ,CAACM,WAAW;kBAAAwD,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAEzB,CACX,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACI,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACV,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACM,CAAC,eAChBxI,OAAA,CAAC7B,aAAa;QAAA4J,QAAA,gBACZ/H,OAAA,CAACjC,MAAM;UAACoK,OAAO,EAAEA,CAAA,KAAMrG,aAAa,CAAC,KAAK,CAAE;UAAAiG,QAAA,EAAC;QAAM;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC5DxI,OAAA,CAACjC,MAAM;UACLoK,OAAO,EAAE7C,iBAAkB;UAC3BmD,OAAO,EAAC,WAAW;UACnBI,KAAK,EAAC,SAAS;UACfoB,QAAQ,EAAE,CAAC9H,YAAY,CAACoD,IAAI,CAAC,CAAE;UAC/BuD,SAAS,eAAE9I,OAAA,CAACH,QAAQ;YAAAwI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAE;UAAAT,QAAA,EACzB;QAED;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC,eAGTxI,OAAA,CAAChC,MAAM;MACLoF,IAAI,EAAErB,gBAAiB;MACvBgH,OAAO,EAAEA,CAAA,KAAM/G,mBAAmB,CAAC,KAAK,CAAE;MAAA+F,QAAA,gBAE1C/H,OAAA,CAAC/B,WAAW;QAAA8J,QAAA,EAAC;MAAc;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAAC,eACzCxI,OAAA,CAAC9B,aAAa;QAAA6J,QAAA,eACZ/H,OAAA,CAACnC,UAAU;UAAAkK,QAAA,GAAC,8CACiC,EAAC9F,aAAa,aAAbA,aAAa,uBAAbA,aAAa,CAAEwD,UAAU,EAAC,mCAExE;QAAA;UAAA4C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eAChBxI,OAAA,CAAC7B,aAAa;QAAA4J,QAAA,gBACZ/H,OAAA,CAACjC,MAAM;UAACoK,OAAO,EAAEA,CAAA,KAAMnG,mBAAmB,CAAC,KAAK,CAAE;UAAA+F,QAAA,EAAC;QAAM;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAClExI,OAAA,CAACjC,MAAM;UACLoK,OAAO,EAAEtB,iBAAkB;UAC3B4B,OAAO,EAAC,WAAW;UACnBI,KAAK,EAAC,OAAO;UAAAd,QAAA,EACd;QAED;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC,eAGTxI,OAAA,CAACrB,QAAQ;MACPyE,IAAI,EAAEF,QAAQ,CAACE,IAAK;MACpB8H,gBAAgB,EAAE,IAAK;MACvBnC,OAAO,EAAE5D,mBAAoB;MAAA4C,QAAA,eAE7B/H,OAAA,CAACtB,KAAK;QAAC4E,QAAQ,EAAEJ,QAAQ,CAACI,QAAS;QAACyF,OAAO,EAAE5D,mBAAoB;QAAA4C,QAAA,EAC9D7E,QAAQ,CAACG;MAAO;QAAAgF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACZ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEhB,CAAC;AAACpI,EAAA,CAlpBID,YAAY;EAAA,QAE+C1C,SAAS,EACvDE,WAAW,EACXD,WAAW;AAAA;AAAAyN,EAAA,GAJxBhL,YAAY;AAopBlB,eAAeA,YAAY;AAAC,IAAAgL,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}