{"ast":null,"code":"// src/services/agentService.js\nimport { handleApiResponse } from './api';\n\n// Fetch agents for a business\nexport const fetchAgents = async businessId => {\n  try {\n    console.log(`Fetching agents for business: ${businessId}`);\n    const response = await fetch(`/agents?business_id=${businessId}`, {\n      method: 'GET',\n      credentials: 'include',\n      // Sends the businessApiKey cookie\n      headers: {\n        'Accept': 'application/json'\n      }\n    });\n    return await handleApiResponse(response);\n  } catch (error) {\n    console.error('Error in fetchAgents:', error);\n    throw error;\n  }\n};\n\n// Create a new agent\nexport const createAgent = async agentData => {\n  try {\n    console.log('Creating agent:', agentData);\n    const response = await fetch('/agents', {\n      method: 'POST',\n      credentials: 'include',\n      // Sends the businessApiKey cookie\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      body: JSON.stringify(agentData)\n    });\n    return await handleApiResponse(response);\n  } catch (error) {\n    console.error('Error in createAgent:', error);\n    throw error;\n  }\n};\n\n// Update an existing agent\nexport const updateAgent = async (agentId, agentData) => {\n  try {\n    console.log(`Updating agent ${agentId}:`, agentData);\n    const response = await fetch(`/agents/${agentId}`, {\n      method: 'PUT',\n      credentials: 'include',\n      // Sends the businessApiKey cookie\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      body: JSON.stringify(agentData)\n    });\n    return await handleApiResponse(response);\n  } catch (error) {\n    console.error('Error in updateAgent:', error);\n    throw error;\n  }\n};\n\n// Delete an agent\nexport const deleteAgent = async (agentId, businessId) => {\n  try {\n    console.log(`Deleting agent ${agentId} for business ${businessId}`);\n    const response = await fetch(`/agents/${agentId}?business_id=${businessId}`, {\n      method: 'DELETE',\n      credentials: 'include',\n      // Sends the businessApiKey cookie\n      headers: {\n        'Accept': 'application/json'\n      }\n    });\n    return await handleApiResponse(response);\n  } catch (error) {\n    console.error('Error in deleteAgent:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["handleApiResponse","fetchAgents","businessId","console","log","response","fetch","method","credentials","headers","error","createAgent","agentData","body","JSON","stringify","updateAgent","agentId","deleteAgent"],"sources":["C:/icmp_events_api/front-end/src/services/agentService.js"],"sourcesContent":["// src/services/agentService.js\r\nimport { handleApiResponse } from './api';\r\n\r\n// Fetch agents for a business\r\nexport const fetchAgents = async (businessId) => {\r\n  try {\r\n    console.log(`Fetching agents for business: ${businessId}`);\r\n    const response = await fetch(`/agents?business_id=${businessId}`, {\r\n      method: 'GET',\r\n      credentials: 'include', // Sends the businessApiKey cookie\r\n      headers: {\r\n        'Accept': 'application/json'\r\n      }\r\n    });\r\n    \r\n    return await handleApiResponse(response);\r\n  } catch (error) {\r\n    console.error('Error in fetchAgents:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Create a new agent\r\nexport const createAgent = async (agentData) => {\r\n  try {\r\n    console.log('Creating agent:', agentData);\r\n    const response = await fetch('/agents', {\r\n      method: 'POST',\r\n      credentials: 'include', // Sends the businessApiKey cookie\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json'\r\n      },\r\n      body: JSON.stringify(agentData)\r\n    });\r\n    \r\n    return await handleApiResponse(response);\r\n  } catch (error) {\r\n    console.error('Error in createAgent:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Update an existing agent\r\nexport const updateAgent = async (agentId, agentData) => {\r\n  try {\r\n    console.log(`Updating agent ${agentId}:`, agentData);\r\n    const response = await fetch(`/agents/${agentId}`, {\r\n      method: 'PUT',\r\n      credentials: 'include', // Sends the businessApiKey cookie\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json'\r\n      },\r\n      body: JSON.stringify(agentData)\r\n    });\r\n    \r\n    return await handleApiResponse(response);\r\n  } catch (error) {\r\n    console.error('Error in updateAgent:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Delete an agent\r\nexport const deleteAgent = async (agentId, businessId) => {\r\n  try {\r\n    console.log(`Deleting agent ${agentId} for business ${businessId}`);\r\n    const response = await fetch(`/agents/${agentId}?business_id=${businessId}`, {\r\n      method: 'DELETE',\r\n      credentials: 'include', // Sends the businessApiKey cookie\r\n      headers: {\r\n        'Accept': 'application/json'\r\n      }\r\n    });\r\n    \r\n    return await handleApiResponse(response);\r\n  } catch (error) {\r\n    console.error('Error in deleteAgent:', error);\r\n    throw error;\r\n  }\r\n};\r\n"],"mappings":"AAAA;AACA,SAASA,iBAAiB,QAAQ,OAAO;;AAEzC;AACA,OAAO,MAAMC,WAAW,GAAG,MAAOC,UAAU,IAAK;EAC/C,IAAI;IACFC,OAAO,CAACC,GAAG,CAAC,iCAAiCF,UAAU,EAAE,CAAC;IAC1D,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAC,uBAAuBJ,UAAU,EAAE,EAAE;MAChEK,MAAM,EAAE,KAAK;MACbC,WAAW,EAAE,SAAS;MAAE;MACxBC,OAAO,EAAE;QACP,QAAQ,EAAE;MACZ;IACF,CAAC,CAAC;IAEF,OAAO,MAAMT,iBAAiB,CAACK,QAAQ,CAAC;EAC1C,CAAC,CAAC,OAAOK,KAAK,EAAE;IACdP,OAAO,CAACO,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7C,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMC,WAAW,GAAG,MAAOC,SAAS,IAAK;EAC9C,IAAI;IACFT,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEQ,SAAS,CAAC;IACzC,MAAMP,QAAQ,GAAG,MAAMC,KAAK,CAAC,SAAS,EAAE;MACtCC,MAAM,EAAE,MAAM;MACdC,WAAW,EAAE,SAAS;MAAE;MACxBC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClC,QAAQ,EAAE;MACZ,CAAC;MACDI,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACH,SAAS;IAChC,CAAC,CAAC;IAEF,OAAO,MAAMZ,iBAAiB,CAACK,QAAQ,CAAC;EAC1C,CAAC,CAAC,OAAOK,KAAK,EAAE;IACdP,OAAO,CAACO,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7C,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMM,WAAW,GAAG,MAAAA,CAAOC,OAAO,EAAEL,SAAS,KAAK;EACvD,IAAI;IACFT,OAAO,CAACC,GAAG,CAAC,kBAAkBa,OAAO,GAAG,EAAEL,SAAS,CAAC;IACpD,MAAMP,QAAQ,GAAG,MAAMC,KAAK,CAAC,WAAWW,OAAO,EAAE,EAAE;MACjDV,MAAM,EAAE,KAAK;MACbC,WAAW,EAAE,SAAS;MAAE;MACxBC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClC,QAAQ,EAAE;MACZ,CAAC;MACDI,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACH,SAAS;IAChC,CAAC,CAAC;IAEF,OAAO,MAAMZ,iBAAiB,CAACK,QAAQ,CAAC;EAC1C,CAAC,CAAC,OAAOK,KAAK,EAAE;IACdP,OAAO,CAACO,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7C,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMQ,WAAW,GAAG,MAAAA,CAAOD,OAAO,EAAEf,UAAU,KAAK;EACxD,IAAI;IACFC,OAAO,CAACC,GAAG,CAAC,kBAAkBa,OAAO,iBAAiBf,UAAU,EAAE,CAAC;IACnE,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAC,WAAWW,OAAO,gBAAgBf,UAAU,EAAE,EAAE;MAC3EK,MAAM,EAAE,QAAQ;MAChBC,WAAW,EAAE,SAAS;MAAE;MACxBC,OAAO,EAAE;QACP,QAAQ,EAAE;MACZ;IACF,CAAC,CAAC;IAEF,OAAO,MAAMT,iBAAiB,CAACK,QAAQ,CAAC;EAC1C,CAAC,CAAC,OAAOK,KAAK,EAAE;IACdP,OAAO,CAACO,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7C,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}