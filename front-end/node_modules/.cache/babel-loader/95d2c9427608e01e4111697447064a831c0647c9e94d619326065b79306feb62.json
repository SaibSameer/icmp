{"ast":null,"code":"var _jsxFileName = \"C:\\\\icmp_events_api\\\\front-end\\\\src\\\\components\\\\StageEditor.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Box, Paper, Typography, Button, Alert, CircularProgress, Divider, Grid, Card, CardContent, CardHeader } from '@mui/material';\nimport RestartAltIcon from '@mui/icons-material/RestartAlt';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StageEditor = ({\n  stageId\n}) => {\n  _s();\n  var _stage$stage_selectio, _stage$data_extractio, _stage$response_gener;\n  const navigate = useNavigate();\n\n  // State variables\n  const [stage, setStage] = useState(null);\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  // Get stored credentials\n  const getStoredCredentials = () => {\n    return {\n      businessId: localStorage.getItem('businessId') || '',\n      businessApiKey: localStorage.getItem('businessApiKey') || ''\n    };\n  };\n\n  // Track if component is mounted\n  const isMounted = useRef(true);\n\n  // Clear any previous fetch timeouts on unmount\n  useEffect(() => {\n    return () => {\n      isMounted.current = false;\n    };\n  }, []);\n\n  // Fetch stage data on component mount\n  useEffect(() => {\n    const {\n      businessId,\n      businessApiKey\n    } = getStoredCredentials();\n    console.log('Component mounted with stageId:', stageId);\n    console.log('Credentials:', {\n      hasBusinessId: !!businessId,\n      hasApiKey: !!businessApiKey\n    });\n    if (!businessId || !businessApiKey) {\n      setError('Authentication required. Please log in.');\n      return;\n    }\n    if (stageId && stageId !== 'new') {\n      fetchStage(stageId, businessId, businessApiKey);\n    } else {\n      console.log('No valid stageId to fetch:', stageId);\n    }\n  }, [stageId]);\n\n  // Fetch specific stage data\n  const fetchStage = async (id, businessId, businessApiKey) => {\n    if (!isMounted.current || !businessId || !businessApiKey) {\n      console.error('Missing required parameters:', {\n        id,\n        businessId,\n        hasApiKey: !!businessApiKey\n      });\n      setIsLoading(false);\n      return;\n    }\n    setIsLoading(true);\n    setError('');\n    try {\n      console.log(`Fetching stage with ID: ${id} for business: ${businessId}`);\n\n      // Build query parameters\n      const params = new URLSearchParams();\n      params.append('business_id', businessId);\n      const url = `/stages/${id}?${params.toString()}`;\n      console.log('Request URL:', url);\n\n      // Use direct fetch with proper headers\n      const response = await fetch(url, {\n        method: 'GET',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${businessApiKey}`\n        },\n        credentials: 'include'\n      });\n      console.log('Response status:', response.status);\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({}));\n        console.error('Error response:', errorData);\n        throw new Error(`Failed to fetch stage: ${response.status} ${errorData.message || ''}`);\n      }\n      const data = await response.json();\n      console.log('Fetched stage data:', data);\n      if (isMounted.current) {\n        // Store the complete stage data\n        setStage(data);\n\n        // Clear any previous errors\n        setError('');\n\n        // Log the complete stage object for debugging\n        console.log('Complete stage object:', JSON.stringify(data, null, 2));\n      }\n    } catch (err) {\n      console.error('Error fetching stage:', err);\n      if (isMounted.current) {\n        setError(err.message);\n        setStage(null);\n      }\n    } finally {\n      if (isMounted.current) {\n        setIsLoading(false);\n      }\n    }\n  };\n\n  // Handle reset\n  const handleReset = () => {\n    if (stageId && stageId !== 'new') {\n      const {\n        businessId,\n        businessApiKey\n      } = getStoredCredentials();\n      fetchStage(stageId, businessId, businessApiKey);\n    }\n  };\n\n  // Handle cancel\n  const handleCancel = () => {\n    navigate('/stage-management');\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        minHeight: '200px'\n      },\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        sx: {\n          mb: 2\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        onClick: handleCancel,\n        sx: {\n          mt: 2\n        },\n        children: \"Return to Stage Management\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this);\n  }\n  if (!stage) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"info\",\n        sx: {\n          mb: 2\n        },\n        children: \"No stage data available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        onClick: handleCancel,\n        sx: {\n          mt: 2\n        },\n        children: \"Return to Stage Management\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Format date for display\n  const formatDate = dateString => {\n    if (!dateString) return 'N/A';\n    try {\n      const date = new Date(dateString);\n      return date.toLocaleString();\n    } catch (e) {\n      return dateString;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        p: 3,\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: \"Stage Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            variant: \"outlined\",\n            children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n              title: \"Basic Information\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                color: \"text.secondary\",\n                children: \"Stage ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                sx: {\n                  mb: 2\n                },\n                children: stage.stage_id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                color: \"text.secondary\",\n                children: \"Business ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                sx: {\n                  mb: 2\n                },\n                children: stage.business_id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                color: \"text.secondary\",\n                children: \"Agent ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                sx: {\n                  mb: 2\n                },\n                children: stage.agent_id || 'None'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                color: \"text.secondary\",\n                children: \"Stage Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                sx: {\n                  mb: 2\n                },\n                children: stage.stage_name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                color: \"text.secondary\",\n                children: \"Stage Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                sx: {\n                  mb: 2\n                },\n                children: stage.stage_description || 'No description'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                color: \"text.secondary\",\n                children: \"Stage Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                sx: {\n                  mb: 2\n                },\n                children: stage.stage_type || 'Not specified'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                color: \"text.secondary\",\n                children: \"Created At\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                children: formatDate(stage.created_at)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            variant: \"outlined\",\n            children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n              title: \"Template Configuration\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                color: \"text.secondary\",\n                children: \"Stage Selection Template\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  mb: 2,\n                  p: 2,\n                  bgcolor: 'background.paper',\n                  borderRadius: 1\n                },\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  component: \"pre\",\n                  sx: {\n                    whiteSpace: 'pre-wrap'\n                  },\n                  children: ((_stage$stage_selectio = stage.stage_selection_config) === null || _stage$stage_selectio === void 0 ? void 0 : _stage$stage_selectio.template_text) || 'No template text'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 242,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                color: \"text.secondary\",\n                children: \"Data Extraction Template\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  mb: 2,\n                  p: 2,\n                  bgcolor: 'background.paper',\n                  borderRadius: 1\n                },\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  component: \"pre\",\n                  sx: {\n                    whiteSpace: 'pre-wrap'\n                  },\n                  children: ((_stage$data_extractio = stage.data_extraction_config) === null || _stage$data_extractio === void 0 ? void 0 : _stage$data_extractio.template_text) || 'No template text'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                color: \"text.secondary\",\n                children: \"Response Generation Template\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  p: 2,\n                  bgcolor: 'background.paper',\n                  borderRadius: 1\n                },\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  component: \"pre\",\n                  sx: {\n                    whiteSpace: 'pre-wrap'\n                  },\n                  children: ((_stage$response_gener = stage.response_generation_config) === null || _stage$response_gener === void 0 ? void 0 : _stage$response_gener.template_text) || 'No template text'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 258,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'flex-end',\n        gap: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        onClick: handleCancel,\n        children: \"Return to Stage Management\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        onClick: handleReset,\n        startIcon: /*#__PURE__*/_jsxDEV(RestartAltIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 22\n        }, this),\n        children: \"Refresh\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 198,\n    columnNumber: 5\n  }, this);\n};\n_s(StageEditor, \"GAMEsw0SPFEgl6N3sHpqMPP1tUE=\", false, function () {\n  return [useNavigate];\n});\n_c = StageEditor;\nexport default StageEditor;\nvar _c;\n$RefreshReg$(_c, \"StageEditor\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useNavigate","Box","Paper","Typography","Button","Alert","CircularProgress","Divider","Grid","Card","CardContent","CardHeader","RestartAltIcon","jsxDEV","_jsxDEV","StageEditor","stageId","_s","_stage$stage_selectio","_stage$data_extractio","_stage$response_gener","navigate","stage","setStage","error","setError","isLoading","setIsLoading","getStoredCredentials","businessId","localStorage","getItem","businessApiKey","isMounted","current","console","log","hasBusinessId","hasApiKey","fetchStage","id","params","URLSearchParams","append","url","toString","response","fetch","method","headers","credentials","status","ok","errorData","json","catch","Error","message","data","JSON","stringify","err","handleReset","handleCancel","sx","display","justifyContent","alignItems","minHeight","children","fileName","_jsxFileName","lineNumber","columnNumber","severity","mb","variant","onClick","mt","formatDate","dateString","date","Date","toLocaleString","e","p","gutterBottom","container","spacing","item","xs","md","title","color","stage_id","business_id","agent_id","stage_name","stage_description","stage_type","created_at","bgcolor","borderRadius","component","whiteSpace","stage_selection_config","template_text","data_extraction_config","response_generation_config","gap","startIcon","_c","$RefreshReg$"],"sources":["C:/icmp_events_api/front-end/src/components/StageEditor.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport {\n  Box,\n  Paper,\n  Typography,\n  Button,\n  Alert,\n  CircularProgress,\n  Divider,\n  Grid,\n  Card,\n  CardContent,\n  CardHeader\n} from '@mui/material';\nimport RestartAltIcon from '@mui/icons-material/RestartAlt';\n\nconst StageEditor = ({ stageId }) => {\n  const navigate = useNavigate();\n  \n  // State variables\n  const [stage, setStage] = useState(null);\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  \n  // Get stored credentials\n  const getStoredCredentials = () => {\n    return {\n      businessId: localStorage.getItem('businessId') || '',\n      businessApiKey: localStorage.getItem('businessApiKey') || ''\n    };\n  };\n\n  // Track if component is mounted\n  const isMounted = useRef(true);\n  \n  // Clear any previous fetch timeouts on unmount\n  useEffect(() => {\n    return () => {\n      isMounted.current = false;\n    };\n  }, []);\n\n  // Fetch stage data on component mount\n  useEffect(() => {\n    const { businessId, businessApiKey } = getStoredCredentials();\n    \n    console.log('Component mounted with stageId:', stageId);\n    console.log('Credentials:', { \n      hasBusinessId: !!businessId, \n      hasApiKey: !!businessApiKey \n    });\n    \n    if (!businessId || !businessApiKey) {\n      setError('Authentication required. Please log in.');\n      return;\n    }\n    \n    if (stageId && stageId !== 'new') {\n      fetchStage(stageId, businessId, businessApiKey);\n    } else {\n      console.log('No valid stageId to fetch:', stageId);\n    }\n  }, [stageId]);\n  \n  // Fetch specific stage data\n  const fetchStage = async (id, businessId, businessApiKey) => {\n    if (!isMounted.current || !businessId || !businessApiKey) {\n      console.error('Missing required parameters:', { id, businessId, hasApiKey: !!businessApiKey });\n      setIsLoading(false);\n      return;\n    }\n    \n    setIsLoading(true);\n    setError('');\n    try {\n      console.log(`Fetching stage with ID: ${id} for business: ${businessId}`);\n      \n      // Build query parameters\n      const params = new URLSearchParams();\n      params.append('business_id', businessId);\n      \n      const url = `/stages/${id}?${params.toString()}`;\n      console.log('Request URL:', url);\n      \n      // Use direct fetch with proper headers\n      const response = await fetch(url, {\n        method: 'GET',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${businessApiKey}`\n        },\n        credentials: 'include'\n      });\n      \n      console.log('Response status:', response.status);\n      \n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({}));\n        console.error('Error response:', errorData);\n        throw new Error(`Failed to fetch stage: ${response.status} ${errorData.message || ''}`);\n      }\n      \n      const data = await response.json();\n      console.log('Fetched stage data:', data);\n      \n      if (isMounted.current) {\n        // Store the complete stage data\n        setStage(data);\n        \n        // Clear any previous errors\n        setError('');\n        \n        // Log the complete stage object for debugging\n        console.log('Complete stage object:', JSON.stringify(data, null, 2));\n      }\n    } catch (err) {\n      console.error('Error fetching stage:', err);\n      if (isMounted.current) {\n        setError(err.message);\n        setStage(null);\n      }\n    } finally {\n      if (isMounted.current) {\n        setIsLoading(false);\n      }\n    }\n  };\n\n  // Handle reset\n  const handleReset = () => {\n    if (stageId && stageId !== 'new') {\n    const { businessId, businessApiKey } = getStoredCredentials();\n      fetchStage(stageId, businessId, businessApiKey);\n    }\n  };\n  \n  // Handle cancel\n  const handleCancel = () => {\n    navigate('/stage-management');\n  };\n  \n  if (isLoading) {\n  return (\n      <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', minHeight: '200px' }}>\n        <CircularProgress />\n      </Box>\n    );\n  }\n  \n  if (error) {\n    return (\n      <Box>\n        <Alert severity=\"error\" sx={{ mb: 2 }}>\n          {error}\n        </Alert>\n        <Button\n          variant=\"outlined\"\n          onClick={handleCancel}\n          sx={{ mt: 2 }}\n        >\n          Return to Stage Management\n        </Button>\n      </Box>\n    );\n  }\n  \n  if (!stage) {\n    return (\n      <Box>\n        <Alert severity=\"info\" sx={{ mb: 2 }}>\n          No stage data available\n        </Alert>\n              <Button \n          variant=\"outlined\"\n          onClick={handleCancel}\n          sx={{ mt: 2 }}\n        >\n          Return to Stage Management\n              </Button>\n        </Box>\n    );\n  }\n  \n  // Format date for display\n  const formatDate = (dateString) => {\n    if (!dateString) return 'N/A';\n    try {\n      const date = new Date(dateString);\n      return date.toLocaleString();\n    } catch (e) {\n      return dateString;\n    }\n  };\n  \n  return (\n    <Box>\n      <Paper sx={{ p: 3, mb: 3 }}>\n            <Typography variant=\"h6\" gutterBottom>\n              Stage Information\n            </Typography>\n        \n        <Grid container spacing={3}>\n          {/* Basic Information */}\n          <Grid item xs={12} md={6}>\n            <Card variant=\"outlined\">\n              <CardHeader title=\"Basic Information\" />\n              <CardContent>\n                <Typography variant=\"subtitle2\" color=\"text.secondary\">Stage ID</Typography>\n                <Typography variant=\"body1\" sx={{ mb: 2 }}>{stage.stage_id}</Typography>\n                \n                <Typography variant=\"subtitle2\" color=\"text.secondary\">Business ID</Typography>\n                <Typography variant=\"body1\" sx={{ mb: 2 }}>{stage.business_id}</Typography>\n                \n                <Typography variant=\"subtitle2\" color=\"text.secondary\">Agent ID</Typography>\n                <Typography variant=\"body1\" sx={{ mb: 2 }}>{stage.agent_id || 'None'}</Typography>\n                \n                <Typography variant=\"subtitle2\" color=\"text.secondary\">Stage Name</Typography>\n                <Typography variant=\"body1\" sx={{ mb: 2 }}>{stage.stage_name}</Typography>\n                \n                <Typography variant=\"subtitle2\" color=\"text.secondary\">Stage Description</Typography>\n                <Typography variant=\"body1\" sx={{ mb: 2 }}>{stage.stage_description || 'No description'}</Typography>\n                \n                <Typography variant=\"subtitle2\" color=\"text.secondary\">Stage Type</Typography>\n                <Typography variant=\"body1\" sx={{ mb: 2 }}>{stage.stage_type || 'Not specified'}</Typography>\n                \n                <Typography variant=\"subtitle2\" color=\"text.secondary\">Created At</Typography>\n                <Typography variant=\"body1\">{formatDate(stage.created_at)}</Typography>\n              </CardContent>\n            </Card>\n          </Grid>\n          \n          {/* Template Configuration */}\n          <Grid item xs={12} md={6}>\n            <Card variant=\"outlined\">\n              <CardHeader title=\"Template Configuration\" />\n              <CardContent>\n                {/* Stage Selection Template */}\n                <Typography variant=\"subtitle2\" color=\"text.secondary\">Stage Selection Template</Typography>\n                <Box sx={{ mb: 2, p: 2, bgcolor: 'background.paper', borderRadius: 1 }}>\n                  <Typography variant=\"body2\" component=\"pre\" sx={{ whiteSpace: 'pre-wrap' }}>\n                    {stage.stage_selection_config?.template_text || 'No template text'}\n                  </Typography>\n                </Box>\n                \n                {/* Data Extraction Template */}\n                <Typography variant=\"subtitle2\" color=\"text.secondary\">Data Extraction Template</Typography>\n                <Box sx={{ mb: 2, p: 2, bgcolor: 'background.paper', borderRadius: 1 }}>\n                  <Typography variant=\"body2\" component=\"pre\" sx={{ whiteSpace: 'pre-wrap' }}>\n                    {stage.data_extraction_config?.template_text || 'No template text'}\n                  </Typography>\n                </Box>\n                \n                {/* Response Generation Template */}\n                <Typography variant=\"subtitle2\" color=\"text.secondary\">Response Generation Template</Typography>\n                <Box sx={{ p: 2, bgcolor: 'background.paper', borderRadius: 1 }}>\n                  <Typography variant=\"body2\" component=\"pre\" sx={{ whiteSpace: 'pre-wrap' }}>\n                    {stage.response_generation_config?.template_text || 'No template text'}\n                  </Typography>\n                </Box>\n              </CardContent>\n            </Card>\n          </Grid>\n        </Grid>\n      </Paper>\n      \n      {/* Action Buttons */}\n      <Box sx={{ display: 'flex', justifyContent: 'flex-end', gap: 2 }}>\n            <Button\n          variant=\"outlined\"\n          onClick={handleCancel}\n        >\n          Return to Stage Management\n            </Button>\n            <Button\n          variant=\"outlined\"\n          onClick={handleReset}\n          startIcon={<RestartAltIcon />}\n        >\n          Refresh\n            </Button>\n                </Box>\n          </Box>\n  );\n};\n\nexport default StageEditor;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}