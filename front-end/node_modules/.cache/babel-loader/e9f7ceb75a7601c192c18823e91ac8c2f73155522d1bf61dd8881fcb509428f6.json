{"ast":null,"code":"var _jsxFileName = \"C:\\\\icmp_events_api\\\\front-end\\\\src\\\\components\\\\TemplateManagement.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { TextField, Button, Typography, Card, CardContent, Box, TextareaAutosize, Select, MenuItem, InputLabel, FormControl, Grid, Paper, Divider, Tab, Tabs, Alert, List, ListItem, ListItemText, ListItemSecondaryAction, IconButton, Chip, Dialog, DialogTitle, DialogContent, DialogActions, CircularProgress, Snackbar } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\nimport SaveIcon from '@mui/icons-material/Save';\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport TemplateSection from './TemplateSection';\nimport AddIcon from '@mui/icons-material/Add';\nimport FilterListIcon from '@mui/icons-material/FilterList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TemplateManagement({\n  templateID,\n  setTemplateID,\n  availableVariable = [],\n  setAvailableVariable,\n  selectedVariable,\n  setSelectedVariable,\n  handleTemplateSelection,\n  handleVariableSelection,\n  addVariableToTemplate,\n  templateName,\n  setTemplateName,\n  templateText,\n  setTemplateText,\n  templateOutput,\n  createTemplate,\n  fetchTemplates,\n  handleSnackbarOpen,\n  handleSaveDefaultTemplate,\n  apiKey,\n  setTemplateOutput\n}) {\n  _s();\n  const navigate = useNavigate();\n  const [templates, setTemplates] = useState([]);\n  const [selectedTemplate, setSelectedTemplate] = useState(null);\n  const [templateType, setTemplateType] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n  const [activeTab, setActiveTab] = useState(0);\n  const [isLoading, setIsLoading] = useState(false);\n  const [editDialogOpen, setEditDialogOpen] = useState(false);\n  const [editingTemplate, setEditingTemplate] = useState(null);\n  const [filterType, setFilterType] = useState('all');\n  const [showBusinessIdInput, setShowBusinessIdInput] = useState(!apiKey || !templateID);\n  const [businessId, setBusinessId] = useState(templateID || '');\n  const [businessApiKey, setBusinessApiKey] = useState(apiKey || '');\n  const [filteredTemplates, setFilteredTemplates] = useState([]);\n  const [snackbar, setSnackbar] = useState({\n    open: false,\n    message: '',\n    severity: 'success'\n  });\n  const templateTypes = [{\n    value: 'stage_selection',\n    label: 'Stage Selection'\n  }, {\n    value: 'data_extraction',\n    label: 'Data Extraction'\n  }, {\n    value: 'response_generation',\n    label: 'Response Generation'\n  }, {\n    value: 'default_stage_selection',\n    label: 'Default Stage Selection'\n  }, {\n    value: 'default_data_extraction',\n    label: 'Default Data Extraction'\n  }, {\n    value: 'default_response_generation',\n    label: 'Default Response Generation'\n  }];\n  useEffect(() => {\n    console.log(\"TemplateManagement.js useEffect is running\");\n    if (typeof fetchTemplates === 'function') {\n      fetchTemplates();\n    }\n  }, [fetchTemplates]);\n  useEffect(() => {\n    // TODO: Implement API endpoint to retrieve available variables\n    const mockVariables = ['variable1', 'variable2', 'variable3'];\n    if (typeof setAvailableVariable === 'function') {\n      setAvailableVariable(mockVariables);\n    }\n  }, [setAvailableVariable]);\n  const handleCreateTemplate = async () => {\n    try {\n      if (!templateName || !templateText || !templateType) {\n        setErrorMessage('Template name, text, and type are required');\n        return;\n      }\n      const response = await fetch('/templates', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        body: JSON.stringify({\n          template_name: templateName,\n          template_text: templateText,\n          template_type: templateType\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to create template');\n      }\n      const data = await response.json();\n\n      // Reset form\n      setTemplateName('');\n      setTemplateText('');\n      setTemplateType('');\n\n      // Refresh templates\n      fetchTemplates();\n      setSuccessMessage('Template created successfully');\n\n      // Clear success message after 3 seconds\n      setTimeout(() => {\n        setSuccessMessage('');\n      }, 3000);\n    } catch (error) {\n      setErrorMessage(error.message);\n    }\n  };\n  const handleUpdateTemplate = async () => {\n    try {\n      if (!editingTemplate) return;\n      const response = await fetch(`/templates/${editingTemplate.template_id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        body: JSON.stringify({\n          template_name: editingTemplate.template_name,\n          template_text: editingTemplate.template_text,\n          template_type: editingTemplate.template_type\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to update template');\n      }\n\n      // Close dialog and refresh templates\n      setEditDialogOpen(false);\n      fetchTemplates();\n      setSuccessMessage('Template updated successfully');\n\n      // Clear success message after 3 seconds\n      setTimeout(() => {\n        setSuccessMessage('');\n      }, 3000);\n    } catch (error) {\n      setErrorMessage(error.message);\n    }\n  };\n  const handleDeleteTemplate = async templateId => {\n    if (!window.confirm('Are you sure you want to delete this template?')) {\n      return;\n    }\n    try {\n      const response = await fetch(`/templates/${templateId}`, {\n        method: 'DELETE',\n        credentials: 'include'\n      });\n      if (!response.ok) {\n        throw new Error('Failed to delete template');\n      }\n\n      // Refresh templates\n      fetchTemplates();\n      setSuccessMessage('Template deleted successfully');\n\n      // Clear success message after 3 seconds\n      setTimeout(() => {\n        setSuccessMessage('');\n      }, 3000);\n    } catch (error) {\n      setErrorMessage(error.message);\n    }\n  };\n  const handleDuplicateTemplate = async template => {\n    try {\n      const response = await fetch('/templates', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        body: JSON.stringify({\n          template_name: `${template.template_name} (Copy)`,\n          template_text: template.template_text,\n          template_type: template.template_type\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to duplicate template');\n      }\n\n      // Refresh templates\n      fetchTemplates();\n      setSuccessMessage('Template duplicated successfully');\n\n      // Clear success message after 3 seconds\n      setTimeout(() => {\n        setSuccessMessage('');\n      }, 3000);\n    } catch (error) {\n      setErrorMessage(error.message);\n    }\n  };\n  const handleEditTemplate = template => {\n    setEditingTemplate(template);\n    setEditDialogOpen(true);\n  };\n  const handleAddVariable = variable => {\n    setTemplateText(prev => `${prev} {${variable}}`);\n  };\n  const handleTabChange = (event, newValue) => {\n    setActiveTab(newValue);\n  };\n  const getFilteredTemplates = () => {\n    if (filterType === 'all') {\n      return templates;\n    }\n    return templates.filter(template => template.template_type === filterType);\n  };\n  const isDefaultTemplate = type => {\n    return type.startsWith('default_');\n  };\n  const getTemplateTypeLabel = type => {\n    const found = templateTypes.find(t => t.value === type);\n    return found ? found.label : type;\n  };\n  const handleNavigateToHome = () => {\n    navigate('/business');\n  };\n  const validateCredentials = async () => {\n    if (!businessId || !businessApiKey) {\n      showSnackbar('Business ID and API Key are required', 'error');\n      setShowBusinessIdInput(true);\n      return false;\n    }\n    try {\n      const response = await fetch(`/businesses/validate-credentials?business_id=${businessId}`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json',\n          'Authorization': `Bearer ${businessApiKey}`\n        },\n        credentials: 'include'\n      });\n      if (!response.ok) {\n        throw new Error('Invalid business ID or API key');\n      }\n      return true;\n    } catch (err) {\n      console.error('Credential validation error:', err);\n      showSnackbar('Failed to validate credentials: ' + err.message, 'error');\n      setShowBusinessIdInput(true);\n      return false;\n    }\n  };\n  const saveCredentials = async () => {\n    if (!businessId || !businessApiKey) {\n      showSnackbar('Please enter both Business ID and API Key', 'error');\n      return;\n    }\n    const isValid = await validateCredentials();\n    if (isValid) {\n      // Save to both localStorage and cookies\n      localStorage.setItem('businessId', businessId);\n      localStorage.setItem('businessApiKey', businessApiKey);\n      document.cookie = `businessId=${businessId}; path=/; max-age=86400`;\n      document.cookie = `businessApiKey=${businessApiKey}; path=/; max-age=86400`;\n      setShowBusinessIdInput(false);\n      showSnackbar('Business credentials validated and saved', 'success');\n\n      // Refresh templates\n      fetchTemplates();\n    }\n  };\n  const showSnackbar = (message, severity = 'success') => {\n    setSnackbar({\n      open: true,\n      message,\n      severity\n    });\n  };\n  const handleCloseSnackbar = () => {\n    setSnackbar(prev => ({\n      ...prev,\n      open: false\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    sx: {\n      p: 3,\n      mb: 4,\n      maxWidth: 1200,\n      mx: 'auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        alignItems: 'center',\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: handleNavigateToHome,\n        sx: {\n          mr: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        gutterBottom: true,\n        sx: {\n          flexGrow: 1,\n          mb: 0\n        },\n        children: \"Template Management\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 13\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      sx: {\n        mb: 2\n      },\n      onClose: () => setErrorMessage(''),\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 17\n    }, this), successMessage && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"success\",\n      sx: {\n        mb: 2\n      },\n      onClose: () => setSuccessMessage(''),\n      children: successMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n      value: activeTab,\n      onChange: handleTabChange,\n      sx: {\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Tab, {\n        label: \"Create Template\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        label: \"View Templates\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 13\n    }, this), activeTab === 0 && /*#__PURE__*/_jsxDEV(TemplateSection, {\n      templateId: templateID,\n      templateName: templateName,\n      templateText: templateText,\n      templateType: templateType,\n      setTemplateId: setTemplateID,\n      setTemplateName: setTemplateName,\n      setTemplateText: setTemplateText,\n      setTemplateType: setTemplateType,\n      createTemplate: handleCreateTemplate,\n      errorMessage: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 17\n    }, this), activeTab === 1 && /*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          alignItems: 'center',\n          mb: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          sx: {\n            flexGrow: 1\n          },\n          children: \"Available Templates\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            alignItems: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            variant: \"outlined\",\n            size: \"small\",\n            sx: {\n              width: 200,\n              mr: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              id: \"filter-type-label\",\n              children: \"Filter by Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              labelId: \"filter-type-label\",\n              value: filterType,\n              onChange: e => setFilterType(e.target.value),\n              label: \"Filter by Type\",\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"all\",\n                children: \"All Templates\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 366,\n                columnNumber: 37\n              }, this), templateTypes.map(type => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: type.value,\n                children: type.label\n              }, type.value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 368,\n                columnNumber: 41\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            startIcon: /*#__PURE__*/_jsxDEV(RefreshIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 44\n            }, this),\n            onClick: fetchTemplates,\n            children: \"Refresh\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 21\n      }, this), isLoading ? /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'center',\n          p: 3\n        },\n        children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(List, {\n        children: getFilteredTemplates().length === 0 ? /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"info\",\n          children: \"No templates found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 33\n        }, this) : getFilteredTemplates().map(template => /*#__PURE__*/_jsxDEV(ListItem, {\n          sx: {\n            mb: 1,\n            border: '1px solid #e0e0e0',\n            borderRadius: 1,\n            bgcolor: isDefaultTemplate(template.template_type) ? '#f5f5f5' : 'white'\n          },\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 1,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  alignItems: 'center'\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"subtitle1\",\n                  sx: {\n                    fontWeight: 'bold',\n                    flexGrow: 1\n                  },\n                  children: template.template_name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 406,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                  label: getTemplateTypeLabel(template.template_type),\n                  size: \"small\",\n                  color: isDefaultTemplate(template.template_type) ? \"primary\" : \"default\",\n                  sx: {\n                    mr: 1\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 409,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                  size: \"small\",\n                  onClick: () => handleEditTemplate(template),\n                  children: /*#__PURE__*/_jsxDEV(EditIcon, {\n                    fontSize: \"small\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 419,\n                    columnNumber: 57\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 415,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                  size: \"small\",\n                  onClick: () => handleDuplicateTemplate(template),\n                  children: /*#__PURE__*/_jsxDEV(ContentCopyIcon, {\n                    fontSize: \"small\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 425,\n                    columnNumber: 57\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 421,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                  size: \"small\",\n                  onClick: () => handleDeleteTemplate(template.template_id),\n                  disabled: isDefaultTemplate(template.template_type),\n                  children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n                    fontSize: \"small\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 432,\n                    columnNumber: 57\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 427,\n                  columnNumber: 53\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 405,\n                columnNumber: 49\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 404,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                sx: {\n                  whiteSpace: 'pre-wrap',\n                  bgcolor: '#f9f9f9',\n                  p: 1,\n                  borderRadius: 1,\n                  fontFamily: 'monospace',\n                  maxHeight: 150,\n                  overflow: 'auto'\n                },\n                children: template.template_text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 437,\n                columnNumber: 49\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 41\n          }, this)\n        }, template.template_id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 37\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: editDialogOpen,\n      onClose: () => setEditDialogOpen(false),\n      maxWidth: \"md\",\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Edit Template\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: editingTemplate && /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          sx: {\n            mt: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              required: true,\n              label: \"Template Name\",\n              value: editingTemplate.template_name,\n              onChange: e => setEditingTemplate({\n                ...editingTemplate,\n                template_name: e.target.value\n              }),\n              margin: \"normal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 468,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 467,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              margin: \"normal\",\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                id: \"edit-template-type-label\",\n                children: \"Template Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 483,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                labelId: \"edit-template-type-label\",\n                value: editingTemplate.template_type,\n                onChange: e => setEditingTemplate({\n                  ...editingTemplate,\n                  template_type: e.target.value\n                }),\n                label: \"Template Type\",\n                children: templateTypes.map(type => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: type.value,\n                  children: type.label\n                }, type.value, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 494,\n                  columnNumber: 45\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 484,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 482,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 481,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              required: true,\n              label: \"Template Text\",\n              value: editingTemplate.template_text,\n              onChange: e => setEditingTemplate({\n                ...editingTemplate,\n                template_text: e.target.value\n              }),\n              margin: \"normal\",\n              multiline: true,\n              rows: 8\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 503,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 502,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                p: 2,\n                bgcolor: '#f5f5f5',\n                borderRadius: 1\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                gutterBottom: true,\n                children: \"Available Variables\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 520,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  flexWrap: 'wrap',\n                  gap: 0.5\n                },\n                children: availableVariable === null || availableVariable === void 0 ? void 0 : availableVariable.map(variable => /*#__PURE__*/_jsxDEV(Chip, {\n                  label: variable,\n                  size: \"small\",\n                  onClick: () => setEditingTemplate({\n                    ...editingTemplate,\n                    template_text: `${editingTemplate.template_text} {${variable}}`\n                  })\n                }, variable, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 525,\n                  columnNumber: 45\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 523,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 519,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 518,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setEditDialogOpen(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 542,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleUpdateTemplate,\n          color: \"primary\",\n          variant: \"contained\",\n          startIcon: /*#__PURE__*/_jsxDEV(SaveIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 547,\n            columnNumber: 36\n          }, this),\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 543,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 541,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 13\n    }, this), (showBusinessIdInput || !businessId || !businessApiKey) && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 3,\n        p: 2,\n        border: '1px dashed',\n        borderColor: 'warning.main',\n        borderRadius: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle1\",\n        color: \"warning.main\",\n        gutterBottom: true,\n        children: \"Business Credentials Required\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 557,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 5,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Business ID\",\n            value: businessId,\n            onChange: e => setBusinessId(e.target.value),\n            placeholder: \"Enter your business ID\",\n            helperText: \"Required for managing templates\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 562,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 561,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 5,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Business API Key\",\n            value: businessApiKey,\n            onChange: e => setBusinessApiKey(e.target.value),\n            placeholder: \"Enter your business API key\",\n            helperText: \"Required for authentication\",\n            type: \"password\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 573,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 572,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 2,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: saveCredentials,\n            fullWidth: true,\n            sx: {\n              height: '56px'\n            },\n            children: \"Validate & Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 585,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 584,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 560,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 556,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: snackbar.open,\n      autoHideDuration: 6000,\n      onClose: handleCloseSnackbar,\n      anchorOrigin: {\n        vertical: 'top',\n        horizontal: 'right'\n      },\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleCloseSnackbar,\n        severity: snackbar.severity,\n        sx: {\n          width: '100%'\n        },\n        children: snackbar.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 606,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 600,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 309,\n    columnNumber: 9\n  }, this);\n}\n_s(TemplateManagement, \"0E2XmgM1TK/FLAOYDSslf24hnGc=\", false, function () {\n  return [useNavigate];\n});\n_c = TemplateManagement;\nexport default TemplateManagement;\nvar _c;\n$RefreshReg$(_c, \"TemplateManagement\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useNavigate","TextField","Button","Typography","Card","CardContent","Box","TextareaAutosize","Select","MenuItem","InputLabel","FormControl","Grid","Paper","Divider","Tab","Tabs","Alert","List","ListItem","ListItemText","ListItemSecondaryAction","IconButton","Chip","Dialog","DialogTitle","DialogContent","DialogActions","CircularProgress","Snackbar","DeleteIcon","EditIcon","ContentCopyIcon","SaveIcon","RefreshIcon","ArrowBackIcon","TemplateSection","AddIcon","FilterListIcon","jsxDEV","_jsxDEV","TemplateManagement","templateID","setTemplateID","availableVariable","setAvailableVariable","selectedVariable","setSelectedVariable","handleTemplateSelection","handleVariableSelection","addVariableToTemplate","templateName","setTemplateName","templateText","setTemplateText","templateOutput","createTemplate","fetchTemplates","handleSnackbarOpen","handleSaveDefaultTemplate","apiKey","setTemplateOutput","_s","navigate","templates","setTemplates","selectedTemplate","setSelectedTemplate","templateType","setTemplateType","errorMessage","setErrorMessage","successMessage","setSuccessMessage","activeTab","setActiveTab","isLoading","setIsLoading","editDialogOpen","setEditDialogOpen","editingTemplate","setEditingTemplate","filterType","setFilterType","showBusinessIdInput","setShowBusinessIdInput","businessId","setBusinessId","businessApiKey","setBusinessApiKey","filteredTemplates","setFilteredTemplates","snackbar","setSnackbar","open","message","severity","templateTypes","value","label","console","log","mockVariables","handleCreateTemplate","response","fetch","method","headers","credentials","body","JSON","stringify","template_name","template_text","template_type","ok","Error","data","json","setTimeout","error","handleUpdateTemplate","template_id","handleDeleteTemplate","templateId","window","confirm","handleDuplicateTemplate","template","handleEditTemplate","handleAddVariable","variable","prev","handleTabChange","event","newValue","getFilteredTemplates","filter","isDefaultTemplate","type","startsWith","getTemplateTypeLabel","found","find","t","handleNavigateToHome","validateCredentials","showSnackbar","err","saveCredentials","isValid","localStorage","setItem","document","cookie","handleCloseSnackbar","sx","p","mb","maxWidth","mx","children","display","alignItems","onClick","mr","fileName","_jsxFileName","lineNumber","columnNumber","variant","gutterBottom","flexGrow","onClose","onChange","setTemplateId","size","width","id","labelId","e","target","map","startIcon","justifyContent","length","border","borderRadius","bgcolor","container","spacing","item","xs","fontWeight","color","fontSize","disabled","whiteSpace","fontFamily","maxHeight","overflow","fullWidth","mt","required","margin","multiline","rows","flexWrap","gap","borderColor","md","placeholder","helperText","height","autoHideDuration","anchorOrigin","vertical","horizontal","_c","$RefreshReg$"],"sources":["C:/icmp_events_api/front-end/src/components/TemplateManagement.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {\r\n    TextField, Button, Typography, Card, CardContent, Box, TextareaAutosize,\r\n    Select, MenuItem, InputLabel, FormControl, Grid, Paper, Divider, Tab, Tabs, Alert, List, ListItem, ListItemText, ListItemSecondaryAction, IconButton, Chip, Dialog, DialogTitle, DialogContent, DialogActions, CircularProgress, Snackbar\r\n} from '@mui/material';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\r\nimport SaveIcon from '@mui/icons-material/Save';\r\nimport RefreshIcon from '@mui/icons-material/Refresh';\r\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\r\nimport TemplateSection from './TemplateSection';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport FilterListIcon from '@mui/icons-material/FilterList';\r\n\r\nfunction TemplateManagement({ templateID, setTemplateID, availableVariable = [], setAvailableVariable, selectedVariable, setSelectedVariable, handleTemplateSelection, handleVariableSelection, addVariableToTemplate, templateName, setTemplateName, templateText, setTemplateText, templateOutput, createTemplate, fetchTemplates, handleSnackbarOpen, handleSaveDefaultTemplate, apiKey, setTemplateOutput }) {\r\n    const navigate = useNavigate();\r\n    const [templates, setTemplates] = useState([]);\r\n    const [selectedTemplate, setSelectedTemplate] = useState(null);\r\n    const [templateType, setTemplateType] = useState('');\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n    const [successMessage, setSuccessMessage] = useState('');\r\n    const [activeTab, setActiveTab] = useState(0);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [editDialogOpen, setEditDialogOpen] = useState(false);\r\n    const [editingTemplate, setEditingTemplate] = useState(null);\r\n    const [filterType, setFilterType] = useState('all');\r\n    const [showBusinessIdInput, setShowBusinessIdInput] = useState(!apiKey || !templateID);\r\n    const [businessId, setBusinessId] = useState(templateID || '');\r\n    const [businessApiKey, setBusinessApiKey] = useState(apiKey || '');\r\n    const [filteredTemplates, setFilteredTemplates] = useState([]);\r\n    const [snackbar, setSnackbar] = useState({\r\n        open: false,\r\n        message: '',\r\n        severity: 'success'\r\n    });\r\n\r\n    const templateTypes = [\r\n        { value: 'stage_selection', label: 'Stage Selection' },\r\n        { value: 'data_extraction', label: 'Data Extraction' },\r\n        { value: 'response_generation', label: 'Response Generation' },\r\n        { value: 'default_stage_selection', label: 'Default Stage Selection' },\r\n        { value: 'default_data_extraction', label: 'Default Data Extraction' },\r\n        { value: 'default_response_generation', label: 'Default Response Generation' }\r\n    ];\r\n\r\n    useEffect(() => {\r\n        console.log(\"TemplateManagement.js useEffect is running\");\r\n        if (typeof fetchTemplates === 'function') {\r\n            fetchTemplates();\r\n        }\r\n    }, [fetchTemplates]);\r\n\r\n    useEffect(() => {\r\n        // TODO: Implement API endpoint to retrieve available variables\r\n        const mockVariables = ['variable1', 'variable2', 'variable3'];\r\n        if (typeof setAvailableVariable === 'function') {\r\n            setAvailableVariable(mockVariables);\r\n        }\r\n    }, [setAvailableVariable]);\r\n\r\n    const handleCreateTemplate = async () => {\r\n        try {\r\n            if (!templateName || !templateText || !templateType) {\r\n                setErrorMessage('Template name, text, and type are required');\r\n                return;\r\n            }\r\n            \r\n            const response = await fetch('/templates', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                credentials: 'include',\r\n                body: JSON.stringify({\r\n                    template_name: templateName,\r\n                    template_text: templateText,\r\n                    template_type: templateType\r\n                }),\r\n            });\r\n            \r\n            if (!response.ok) {\r\n                throw new Error('Failed to create template');\r\n            }\r\n            \r\n            const data = await response.json();\r\n            \r\n            // Reset form\r\n            setTemplateName('');\r\n            setTemplateText('');\r\n            setTemplateType('');\r\n            \r\n            // Refresh templates\r\n            fetchTemplates();\r\n            \r\n            setSuccessMessage('Template created successfully');\r\n            \r\n            // Clear success message after 3 seconds\r\n            setTimeout(() => {\r\n                setSuccessMessage('');\r\n            }, 3000);\r\n        } catch (error) {\r\n            setErrorMessage(error.message);\r\n        }\r\n    };\r\n\r\n    const handleUpdateTemplate = async () => {\r\n        try {\r\n            if (!editingTemplate) return;\r\n            \r\n            const response = await fetch(`/templates/${editingTemplate.template_id}`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                credentials: 'include',\r\n                body: JSON.stringify({\r\n                    template_name: editingTemplate.template_name,\r\n                    template_text: editingTemplate.template_text,\r\n                    template_type: editingTemplate.template_type\r\n                }),\r\n            });\r\n            \r\n            if (!response.ok) {\r\n                throw new Error('Failed to update template');\r\n            }\r\n            \r\n            // Close dialog and refresh templates\r\n            setEditDialogOpen(false);\r\n            fetchTemplates();\r\n            \r\n            setSuccessMessage('Template updated successfully');\r\n            \r\n            // Clear success message after 3 seconds\r\n            setTimeout(() => {\r\n                setSuccessMessage('');\r\n            }, 3000);\r\n        } catch (error) {\r\n            setErrorMessage(error.message);\r\n        }\r\n    };\r\n\r\n    const handleDeleteTemplate = async (templateId) => {\r\n        if (!window.confirm('Are you sure you want to delete this template?')) {\r\n            return;\r\n        }\r\n        \r\n        try {\r\n            const response = await fetch(`/templates/${templateId}`, {\r\n                method: 'DELETE',\r\n                credentials: 'include'\r\n            });\r\n            \r\n            if (!response.ok) {\r\n                throw new Error('Failed to delete template');\r\n            }\r\n            \r\n            // Refresh templates\r\n            fetchTemplates();\r\n            \r\n            setSuccessMessage('Template deleted successfully');\r\n            \r\n            // Clear success message after 3 seconds\r\n            setTimeout(() => {\r\n                setSuccessMessage('');\r\n            }, 3000);\r\n        } catch (error) {\r\n            setErrorMessage(error.message);\r\n        }\r\n    };\r\n\r\n    const handleDuplicateTemplate = async (template) => {\r\n        try {\r\n            const response = await fetch('/templates', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                credentials: 'include',\r\n                body: JSON.stringify({\r\n                    template_name: `${template.template_name} (Copy)`,\r\n                    template_text: template.template_text,\r\n                    template_type: template.template_type\r\n                }),\r\n            });\r\n            \r\n            if (!response.ok) {\r\n                throw new Error('Failed to duplicate template');\r\n            }\r\n            \r\n            // Refresh templates\r\n            fetchTemplates();\r\n            \r\n            setSuccessMessage('Template duplicated successfully');\r\n            \r\n            // Clear success message after 3 seconds\r\n            setTimeout(() => {\r\n                setSuccessMessage('');\r\n            }, 3000);\r\n        } catch (error) {\r\n            setErrorMessage(error.message);\r\n        }\r\n    };\r\n\r\n    const handleEditTemplate = (template) => {\r\n        setEditingTemplate(template);\r\n        setEditDialogOpen(true);\r\n    };\r\n\r\n    const handleAddVariable = (variable) => {\r\n        setTemplateText((prev) => `${prev} {${variable}}`);\r\n    };\r\n\r\n    const handleTabChange = (event, newValue) => {\r\n        setActiveTab(newValue);\r\n    };\r\n\r\n    const getFilteredTemplates = () => {\r\n        if (filterType === 'all') {\r\n            return templates;\r\n        }\r\n        \r\n        return templates.filter(template => template.template_type === filterType);\r\n    };\r\n\r\n    const isDefaultTemplate = (type) => {\r\n        return type.startsWith('default_');\r\n    };\r\n\r\n    const getTemplateTypeLabel = (type) => {\r\n        const found = templateTypes.find(t => t.value === type);\r\n        return found ? found.label : type;\r\n    };\r\n\r\n    const handleNavigateToHome = () => {\r\n        navigate('/business');\r\n    };\r\n\r\n    const validateCredentials = async () => {\r\n        if (!businessId || !businessApiKey) {\r\n            showSnackbar('Business ID and API Key are required', 'error');\r\n            setShowBusinessIdInput(true);\r\n            return false;\r\n        }\r\n        \r\n        try {\r\n            const response = await fetch(`/businesses/validate-credentials?business_id=${businessId}`, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Accept': 'application/json',\r\n                    'Authorization': `Bearer ${businessApiKey}`\r\n                },\r\n                credentials: 'include'\r\n            });\r\n            \r\n            if (!response.ok) {\r\n                throw new Error('Invalid business ID or API key');\r\n            }\r\n            \r\n            return true;\r\n        } catch (err) {\r\n            console.error('Credential validation error:', err);\r\n            showSnackbar('Failed to validate credentials: ' + err.message, 'error');\r\n            setShowBusinessIdInput(true);\r\n            return false;\r\n        }\r\n    };\r\n\r\n    const saveCredentials = async () => {\r\n        if (!businessId || !businessApiKey) {\r\n            showSnackbar('Please enter both Business ID and API Key', 'error');\r\n            return;\r\n        }\r\n        \r\n        const isValid = await validateCredentials();\r\n        if (isValid) {\r\n            // Save to both localStorage and cookies\r\n            localStorage.setItem('businessId', businessId);\r\n            localStorage.setItem('businessApiKey', businessApiKey);\r\n            document.cookie = `businessId=${businessId}; path=/; max-age=86400`;\r\n            document.cookie = `businessApiKey=${businessApiKey}; path=/; max-age=86400`;\r\n            \r\n            setShowBusinessIdInput(false);\r\n            showSnackbar('Business credentials validated and saved', 'success');\r\n            \r\n            // Refresh templates\r\n            fetchTemplates();\r\n        }\r\n    };\r\n\r\n    const showSnackbar = (message, severity = 'success') => {\r\n        setSnackbar({\r\n            open: true,\r\n            message,\r\n            severity\r\n        });\r\n    };\r\n\r\n    const handleCloseSnackbar = () => {\r\n        setSnackbar(prev => ({\r\n            ...prev,\r\n            open: false\r\n        }));\r\n    };\r\n\r\n    return (\r\n        <Paper sx={{ p: 3, mb: 4, maxWidth: 1200, mx: 'auto' }}>\r\n            <Box sx={{ display: 'flex', alignItems: 'center', mb: 3 }}>\r\n                <IconButton onClick={handleNavigateToHome} sx={{ mr: 1 }}>\r\n                    <ArrowBackIcon />\r\n                </IconButton>\r\n                <Typography variant=\"h5\" gutterBottom sx={{ flexGrow: 1, mb: 0 }}>\r\n                    Template Management\r\n                </Typography>\r\n            </Box>\r\n            \r\n            {errorMessage && (\r\n                <Alert severity=\"error\" sx={{ mb: 2 }} onClose={() => setErrorMessage('')}>\r\n                    {errorMessage}\r\n                </Alert>\r\n            )}\r\n            \r\n            {successMessage && (\r\n                <Alert severity=\"success\" sx={{ mb: 2 }} onClose={() => setSuccessMessage('')}>\r\n                    {successMessage}\r\n                </Alert>\r\n            )}\r\n            \r\n            <Tabs value={activeTab} onChange={handleTabChange} sx={{ mb: 3 }}>\r\n                <Tab label=\"Create Template\" />\r\n                <Tab label=\"View Templates\" />\r\n            </Tabs>\r\n            \r\n            {activeTab === 0 && (\r\n                <TemplateSection\r\n                    templateId={templateID}\r\n                    templateName={templateName}\r\n                    templateText={templateText}\r\n                    templateType={templateType}\r\n                    setTemplateId={setTemplateID}\r\n                    setTemplateName={setTemplateName}\r\n                    setTemplateText={setTemplateText}\r\n                    setTemplateType={setTemplateType}\r\n                    createTemplate={handleCreateTemplate}\r\n                    errorMessage={errorMessage}\r\n                />\r\n            )}\r\n            \r\n            {activeTab === 1 && (\r\n                <Box>\r\n                    <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\r\n                        <Typography variant=\"h6\" sx={{ flexGrow: 1 }}>\r\n                            Available Templates\r\n                        </Typography>\r\n                        <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                            <FormControl variant=\"outlined\" size=\"small\" sx={{ width: 200, mr: 1 }}>\r\n                                <InputLabel id=\"filter-type-label\">Filter by Type</InputLabel>\r\n                                <Select\r\n                                    labelId=\"filter-type-label\"\r\n                                    value={filterType}\r\n                                    onChange={(e) => setFilterType(e.target.value)}\r\n                                    label=\"Filter by Type\"\r\n                                >\r\n                                    <MenuItem value=\"all\">All Templates</MenuItem>\r\n                                    {templateTypes.map((type) => (\r\n                                        <MenuItem key={type.value} value={type.value}>\r\n                                            {type.label}\r\n                                        </MenuItem>\r\n                                    ))}\r\n                                </Select>\r\n                            </FormControl>\r\n                            <Button\r\n                                variant=\"outlined\"\r\n                                startIcon={<RefreshIcon />}\r\n                                onClick={fetchTemplates}\r\n                            >\r\n                                Refresh\r\n                            </Button>\r\n                        </Box>\r\n                    </Box>\r\n                    \r\n                    {isLoading ? (\r\n                        <Box sx={{ display: 'flex', justifyContent: 'center', p: 3 }}>\r\n                            <CircularProgress />\r\n                        </Box>\r\n                    ) : (\r\n                        <List>\r\n                            {getFilteredTemplates().length === 0 ? (\r\n                                <Alert severity=\"info\">No templates found</Alert>\r\n                            ) : (\r\n                                getFilteredTemplates().map((template) => (\r\n                                    <ListItem \r\n                                        key={template.template_id}\r\n                                        sx={{\r\n                                            mb: 1,\r\n                                            border: '1px solid #e0e0e0',\r\n                                            borderRadius: 1,\r\n                                            bgcolor: isDefaultTemplate(template.template_type) ? '#f5f5f5' : 'white'\r\n                                        }}\r\n                                    >\r\n                                        <Grid container spacing={1}>\r\n                                            <Grid item xs={12}>\r\n                                                <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                                    <Typography variant=\"subtitle1\" sx={{ fontWeight: 'bold', flexGrow: 1 }}>\r\n                                                        {template.template_name}\r\n                                                    </Typography>\r\n                                                    <Chip \r\n                                                        label={getTemplateTypeLabel(template.template_type)}\r\n                                                        size=\"small\"\r\n                                                        color={isDefaultTemplate(template.template_type) ? \"primary\" : \"default\"}\r\n                                                        sx={{ mr: 1 }}\r\n                                                    />\r\n                                                    <IconButton \r\n                                                        size=\"small\" \r\n                                                        onClick={() => handleEditTemplate(template)}\r\n                                                    >\r\n                                                        <EditIcon fontSize=\"small\" />\r\n                                                    </IconButton>\r\n                                                    <IconButton \r\n                                                        size=\"small\" \r\n                                                        onClick={() => handleDuplicateTemplate(template)}\r\n                                                    >\r\n                                                        <ContentCopyIcon fontSize=\"small\" />\r\n                                                    </IconButton>\r\n                                                    <IconButton \r\n                                                        size=\"small\" \r\n                                                        onClick={() => handleDeleteTemplate(template.template_id)}\r\n                                                        disabled={isDefaultTemplate(template.template_type)}\r\n                                                    >\r\n                                                        <DeleteIcon fontSize=\"small\" />\r\n                                                    </IconButton>\r\n                                                </Box>\r\n                                            </Grid>\r\n                                            <Grid item xs={12}>\r\n                                                <Typography \r\n                                                    variant=\"body2\" \r\n                                                    sx={{ \r\n                                                        whiteSpace: 'pre-wrap', \r\n                                                        bgcolor: '#f9f9f9', \r\n                                                        p: 1, \r\n                                                        borderRadius: 1,\r\n                                                        fontFamily: 'monospace',\r\n                                                        maxHeight: 150,\r\n                                                        overflow: 'auto'\r\n                                                    }}\r\n                                                >\r\n                                                    {template.template_text}\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </ListItem>\r\n                                ))\r\n                            )}\r\n                        </List>\r\n                    )}\r\n                </Box>\r\n            )}\r\n            \r\n            {/* Edit Template Dialog */}\r\n            <Dialog open={editDialogOpen} onClose={() => setEditDialogOpen(false)} maxWidth=\"md\" fullWidth>\r\n                <DialogTitle>Edit Template</DialogTitle>\r\n                <DialogContent>\r\n                    {editingTemplate && (\r\n                        <Grid container spacing={2} sx={{ mt: 1 }}>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    fullWidth\r\n                                    required\r\n                                    label=\"Template Name\"\r\n                                    value={editingTemplate.template_name}\r\n                                    onChange={(e) => setEditingTemplate({\r\n                                        ...editingTemplate,\r\n                                        template_name: e.target.value\r\n                                    })}\r\n                                    margin=\"normal\"\r\n                                />\r\n                            </Grid>\r\n                            \r\n                            <Grid item xs={12}>\r\n                                <FormControl fullWidth margin=\"normal\">\r\n                                    <InputLabel id=\"edit-template-type-label\">Template Type</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"edit-template-type-label\"\r\n                                        value={editingTemplate.template_type}\r\n                                        onChange={(e) => setEditingTemplate({\r\n                                            ...editingTemplate,\r\n                                            template_type: e.target.value\r\n                                        })}\r\n                                        label=\"Template Type\"\r\n                                    >\r\n                                        {templateTypes.map((type) => (\r\n                                            <MenuItem key={type.value} value={type.value}>\r\n                                                {type.label}\r\n                                            </MenuItem>\r\n                                        ))}\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Grid>\r\n                            \r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    fullWidth\r\n                                    required\r\n                                    label=\"Template Text\"\r\n                                    value={editingTemplate.template_text}\r\n                                    onChange={(e) => setEditingTemplate({\r\n                                        ...editingTemplate,\r\n                                        template_text: e.target.value\r\n                                    })}\r\n                                    margin=\"normal\"\r\n                                    multiline\r\n                                    rows={8}\r\n                                />\r\n                            </Grid>\r\n                            \r\n                            <Grid item xs={12}>\r\n                                <Box sx={{ p: 2, bgcolor: '#f5f5f5', borderRadius: 1 }}>\r\n                                    <Typography variant=\"subtitle2\" gutterBottom>\r\n                                        Available Variables\r\n                                    </Typography>\r\n                                    <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\r\n                                        {availableVariable?.map((variable) => (\r\n                                            <Chip\r\n                                                key={variable}\r\n                                                label={variable}\r\n                                                size=\"small\"\r\n                                                onClick={() => setEditingTemplate({\r\n                                                    ...editingTemplate,\r\n                                                    template_text: `${editingTemplate.template_text} {${variable}}`\r\n                                                })}\r\n                                            />\r\n                                        ))}\r\n                                    </Box>\r\n                                </Box>\r\n                            </Grid>\r\n                        </Grid>\r\n                    )}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => setEditDialogOpen(false)}>Cancel</Button>\r\n                    <Button \r\n                        onClick={handleUpdateTemplate} \r\n                        color=\"primary\" \r\n                        variant=\"contained\"\r\n                        startIcon={<SaveIcon />}\r\n                    >\r\n                        Save Changes\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            \r\n            {/* Business ID input section */}\r\n            {(showBusinessIdInput || !businessId || !businessApiKey) && (\r\n                <Box sx={{ mb: 3, p: 2, border: '1px dashed', borderColor: 'warning.main', borderRadius: 1 }}>\r\n                    <Typography variant=\"subtitle1\" color=\"warning.main\" gutterBottom>\r\n                        Business Credentials Required\r\n                    </Typography>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12} md={5}>\r\n                            <TextField\r\n                                fullWidth\r\n                                label=\"Business ID\"\r\n                                value={businessId}\r\n                                onChange={(e) => setBusinessId(e.target.value)}\r\n                                placeholder=\"Enter your business ID\"\r\n                                helperText=\"Required for managing templates\"\r\n                                required\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} md={5}>\r\n                            <TextField\r\n                                fullWidth\r\n                                label=\"Business API Key\"\r\n                                value={businessApiKey}\r\n                                onChange={(e) => setBusinessApiKey(e.target.value)}\r\n                                placeholder=\"Enter your business API key\"\r\n                                helperText=\"Required for authentication\"\r\n                                type=\"password\"\r\n                                required\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} md={2}>\r\n                            <Button \r\n                                variant=\"contained\" \r\n                                color=\"primary\"\r\n                                onClick={saveCredentials}\r\n                                fullWidth\r\n                                sx={{ height: '56px' }}\r\n                            >\r\n                                Validate & Save\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Box>\r\n            )}\r\n            \r\n            {/* Snackbar for notifications */}\r\n            <Snackbar\r\n                open={snackbar.open}\r\n                autoHideDuration={6000}\r\n                onClose={handleCloseSnackbar}\r\n                anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            >\r\n                <Alert onClose={handleCloseSnackbar} severity={snackbar.severity} sx={{ width: '100%' }}>\r\n                    {snackbar.message}\r\n                </Alert>\r\n            </Snackbar>\r\n        </Paper>\r\n    );\r\n}\r\n\r\nexport default TemplateManagement;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}