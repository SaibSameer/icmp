{"ast":null,"code":"var _jsxFileName = \"C:\\\\icmp_events_api\\\\front-end\\\\src\\\\components\\\\Configuration.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { TextField, Button, Typography } from '@mui/material';\nimport { validateConfigApi } from '../services/testService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Configuration = ({\n  userId,\n  setUserId,\n  businessId,\n  setBusinessId,\n  handleSnackbarOpen\n}) => {\n  _s();\n  const [businessApiKey, setBusinessApiKey] = useState('');\n  const [configOutput, setConfigOutput] = useState('');\n  useEffect(() => {\n    const storedUserId = localStorage.getItem('userId');\n    const storedBusinessId = localStorage.getItem('businessId');\n    const storedBusinessApiKey = localStorage.getItem('businessApiKey');\n    if (storedUserId) setUserId(storedUserId);\n    if (storedBusinessId) setBusinessId(storedBusinessId);\n    if (storedBusinessApiKey) setBusinessApiKey(storedBusinessApiKey);\n  }, [setUserId, setBusinessId]);\n  const handleSaveConfig = async () => {\n    try {\n      const validationResponse = await validateConfigApi(businessApiKey, userId, businessId);\n      setConfigOutput(JSON.stringify(validationResponse, null, 2));\n      if (validationResponse.success) {\n        localStorage.setItem('userId', userId);\n        localStorage.setItem('businessId', businessId);\n        localStorage.setItem('businessApiKey', businessApiKey);\n        handleSnackbarOpen(\"Configuration Saved!\", \"success\");\n      } else {\n        handleSnackbarOpen(\"Configuration validation failed!\", \"error\");\n      }\n    } catch (error) {\n      setConfigOutput(`Error: ${error.message}`);\n      handleSnackbarOpen(error.message, \"error\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      children: \"Configuration\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      fullWidth: true,\n      label: \"User ID\",\n      variant: \"outlined\",\n      value: userId,\n      onChange: e => setUserId(e.target.value),\n      style: {\n        marginBottom: '10px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      fullWidth: true,\n      label: \"Business ID\",\n      variant: \"outlined\",\n      value: businessId,\n      onChange: e => setBusinessId(e.target.value),\n      style: {\n        marginBottom: '10px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      fullWidth: true,\n      label: \"Business API Key\",\n      variant: \"outlined\",\n      value: businessApiKey,\n      onChange: e => setBusinessApiKey(e.target.value),\n      style: {\n        marginBottom: '10px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: handleSaveConfig,\n      children: \"Save Configuration\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: configOutput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(Configuration, \"m97U50dKfT/7NNedM7ZKkHxbTv0=\");\n_c = Configuration;\nexport default Configuration;\nvar _c;\n$RefreshReg$(_c, \"Configuration\");","map":{"version":3,"names":["React","useState","useEffect","TextField","Button","Typography","validateConfigApi","jsxDEV","_jsxDEV","Configuration","userId","setUserId","businessId","setBusinessId","handleSnackbarOpen","_s","businessApiKey","setBusinessApiKey","configOutput","setConfigOutput","storedUserId","localStorage","getItem","storedBusinessId","storedBusinessApiKey","handleSaveConfig","validationResponse","JSON","stringify","success","setItem","error","message","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","fullWidth","label","value","onChange","e","target","style","marginBottom","color","onClick","_c","$RefreshReg$"],"sources":["C:/icmp_events_api/front-end/src/components/Configuration.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { TextField, Button, Typography } from '@mui/material';\r\nimport { validateConfigApi } from '../services/testService';\r\n\r\nconst Configuration = ({ userId, setUserId, businessId, setBusinessId, handleSnackbarOpen }) => {\r\n  const [businessApiKey, setBusinessApiKey] = useState('');\r\n  const [configOutput, setConfigOutput] = useState('');\r\n\r\n  useEffect(() => {\r\n    const storedUserId = localStorage.getItem('userId');\r\n    const storedBusinessId = localStorage.getItem('businessId');\r\n    const storedBusinessApiKey = localStorage.getItem('businessApiKey');\r\n    if (storedUserId) setUserId(storedUserId);\r\n    if (storedBusinessId) setBusinessId(storedBusinessId);\r\n    if (storedBusinessApiKey) setBusinessApiKey(storedBusinessApiKey);\r\n  }, [setUserId, setBusinessId]);\r\n\r\n  const handleSaveConfig = async () => {\r\n    try {\r\n      const validationResponse = await validateConfigApi(businessApiKey, userId, businessId);\r\n      setConfigOutput(JSON.stringify(validationResponse, null, 2));\r\n      if (validationResponse.success) {\r\n        localStorage.setItem('userId', userId);\r\n        localStorage.setItem('businessId', businessId);\r\n        localStorage.setItem('businessApiKey', businessApiKey);\r\n        handleSnackbarOpen(\"Configuration Saved!\", \"success\");\r\n      } else {\r\n        handleSnackbarOpen(\"Configuration validation failed!\", \"error\");\r\n      }\r\n    } catch (error) {\r\n      setConfigOutput(`Error: ${error.message}`);\r\n      handleSnackbarOpen(error.message, \"error\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Typography variant=\"h6\">Configuration</Typography>\r\n      <TextField\r\n        fullWidth\r\n        label=\"User ID\"\r\n        variant=\"outlined\"\r\n        value={userId}\r\n        onChange={(e) => setUserId(e.target.value)}\r\n        style={{ marginBottom: '10px' }}\r\n      />\r\n      <TextField\r\n        fullWidth\r\n        label=\"Business ID\"\r\n        variant=\"outlined\"\r\n        value={businessId}\r\n        onChange={(e) => setBusinessId(e.target.value)}\r\n        style={{ marginBottom: '10px' }}\r\n      />\r\n      <TextField\r\n        fullWidth\r\n        label=\"Business API Key\"\r\n        variant=\"outlined\"\r\n        value={businessApiKey}\r\n        onChange={(e) => setBusinessApiKey(e.target.value)}\r\n        style={{ marginBottom: '10px' }}\r\n      />\r\n      <Button variant=\"contained\" color=\"primary\" onClick={handleSaveConfig}>\r\n        Save Configuration\r\n      </Button>\r\n      <pre>{configOutput}</pre>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Configuration;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}