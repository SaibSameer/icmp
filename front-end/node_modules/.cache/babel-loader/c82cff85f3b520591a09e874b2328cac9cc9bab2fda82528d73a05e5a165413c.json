{"ast":null,"code":"var _jsxFileName = \"C:\\\\icmp_events_api\\\\front-end\\\\src\\\\components\\\\TemplateManagement.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { TextField, Button, Typography, Card, CardContent, Box, TextareaAutosize, Select, MenuItem, InputLabel, FormControl, Grid, Paper, Divider, Tab, Tabs, Alert, List, ListItem, ListItemText, ListItemSecondaryAction, IconButton, Chip, Dialog, DialogTitle, DialogContent, DialogActions, CircularProgress, Snackbar, Container, Tooltip, ListSubheader } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\nimport SaveIcon from '@mui/icons-material/Save';\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport TemplateSection from './TemplateSection';\nimport AddIcon from '@mui/icons-material/Add';\nimport FilterListIcon from '@mui/icons-material/FilterList';\nimport StarIcon from '@mui/icons-material/Star';\nimport { normalizeUUID } from '../hooks/useConfig';\nimport { createTemplate, updateTemplate, deleteTemplate, fetchTemplates as fetchTemplatesService, duplicateTemplate } from '../services/templateService';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction TemplateManagement({\n  templateID,\n  setTemplateID,\n  availableVariable = [],\n  setAvailableVariable,\n  selectedVariable,\n  setSelectedVariable,\n  handleTemplateSelection,\n  handleVariableSelection,\n  addVariableToTemplate,\n  templateName,\n  setTemplateName,\n  templateContent,\n  setTemplateContent,\n  templateSystemPrompt,\n  setTemplateSystemPrompt,\n  templateOutput,\n  createTemplate,\n  fetchTemplates,\n  handleSnackbarOpen,\n  handleSaveDefaultTemplate,\n  apiKey,\n  setTemplateOutput\n}) {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [templates, setTemplates] = useState([]);\n  const [selectedTemplate, setSelectedTemplate] = useState(null);\n  const [templateType, setTemplateType] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n  const [activeTab, setActiveTab] = useState(0);\n  const [isLoading, setIsLoading] = useState(false);\n  const [editDialogOpen, setEditDialogOpen] = useState(false);\n  const [editingTemplate, setEditingTemplate] = useState({\n    template_id: '',\n    template_name: '',\n    content: '',\n    system_prompt: '',\n    template_type: '',\n    variables: []\n  });\n  const [filterType, setFilterType] = useState('all');\n  const [showBusinessIdInput, setShowBusinessIdInput] = useState(!apiKey || !templateID);\n  const [businessId, setBusinessId] = useState(templateID || '');\n  const [businessApiKey, setBusinessApiKey] = useState(apiKey || '');\n  const [agentId, setAgentId] = useState('');\n  const [filteredTemplates, setFilteredTemplates] = useState([]);\n  const [snackbar, setSnackbar] = useState({\n    open: false,\n    message: '',\n    severity: 'success'\n  });\n  const [showAgentIdInput, setShowAgentIdInput] = useState(!agentId);\n\n  // Define template types array for dropdowns and filtering\n  const templateTypes = [{\n    value: 'stage_selection',\n    label: 'Stage Selection',\n    group: 'Regular'\n  }, {\n    value: 'data_extraction',\n    label: 'Data Extraction',\n    group: 'Regular'\n  }, {\n    value: 'response_generation',\n    label: 'Response Generation',\n    group: 'Regular'\n  }, {\n    value: 'default_stage_selection',\n    label: 'Default Stage Selection',\n    group: 'Default'\n  }, {\n    value: 'default_data_extraction',\n    label: 'Default Data Extraction',\n    group: 'Default'\n  }, {\n    value: 'default_response_generation',\n    label: 'Default Response Generation',\n    group: 'Default'\n  }];\n\n  // Parse query parameters if any\n  const queryParams = new URLSearchParams(window.location.search);\n  const queryBusinessId = queryParams.get('business_id');\n  const queryAgentId = queryParams.get('agent_id');\n\n  // Get stored credentials from localStorage\n  const storedBusinessId = localStorage.getItem('businessId');\n  const storedApiKey = localStorage.getItem('businessApiKey');\n  const storedAgentId = localStorage.getItem('agentId');\n\n  // Update state with query params and localStorage values\n  useEffect(() => {\n    // Update businessId if query param or localStorage has a value\n    if (queryBusinessId || storedBusinessId) {\n      setBusinessId(queryBusinessId || storedBusinessId);\n    }\n\n    // Update businessApiKey if localStorage has a value\n    if (storedApiKey) {\n      setBusinessApiKey(storedApiKey);\n    }\n\n    // Update agentId if query param or localStorage has a value\n    if (queryAgentId || storedAgentId) {\n      setAgentId(queryAgentId || storedAgentId);\n    }\n\n    // Update visibility of input fields\n    setShowBusinessIdInput(!businessId || !businessApiKey);\n    setShowAgentIdInput(!agentId);\n  }, [queryBusinessId, storedBusinessId, storedApiKey, queryAgentId, storedAgentId]);\n\n  // Initialize filteredTemplates when templates change\n  useEffect(() => {\n    setFilteredTemplates(templates);\n  }, [templates]);\n\n  // Effect to fetch templates on mount\n  useEffect(() => {\n    if (businessId && agentId) {\n      console.log(\"TemplateManagement.js - Fetching templates with:\", {\n        businessId,\n        agentId\n      });\n      if (typeof fetchTemplates === 'function') {\n        fetchTemplates();\n      } else {\n        // If fetchTemplates is not a prop, use the internal implementation\n        fetchTemplatesInternal();\n      }\n    }\n  }, [businessId, agentId, fetchTemplates]);\n\n  // Internal implementation of fetchTemplates\n  const fetchTemplatesInternal = async () => {\n    if (!businessId) {\n      showSnackbar('Business ID is required to fetch templates', 'error');\n      setShowBusinessIdInput(true);\n      setIsLoading(false);\n      return;\n    }\n    if (!agentId) {\n      showSnackbar('Agent ID is required to fetch templates', 'error');\n      setShowAgentIdInput(true);\n      setIsLoading(false);\n      return;\n    }\n    if (!businessApiKey) {\n      showSnackbar('Business API Key is required to fetch templates', 'error');\n      setShowBusinessIdInput(true);\n      setIsLoading(false);\n      return;\n    }\n    setIsLoading(true);\n    try {\n      // Use the template service instead of direct fetch\n      const data = await fetchTemplatesService(businessId, agentId);\n      console.log('Fetched templates (raw):', data);\n\n      // Normalize the templates data to ensure all needed fields exist\n      const normalizedTemplates = Array.isArray(data) ? data.map(template => ({\n        template_id: template.template_id || template.id || `temp-${Math.random().toString(36).substring(2, 9)}`,\n        template_name: template.template_name || 'Unnamed Template',\n        content: template.content || '',\n        system_prompt: template.system_prompt || '',\n        template_type: template.template_type || 'Unknown Type',\n        variables: extractVariablesFromContent(template.content || '')\n      })) : [];\n      console.log('Normalized templates:', normalizedTemplates);\n      setTemplates(normalizedTemplates);\n      setFilteredTemplates(normalizedTemplates);\n\n      // Show message about number of templates loaded\n      showSnackbar(`${normalizedTemplates.length} templates loaded successfully`, 'success');\n    } catch (err) {\n      console.error('Error fetching templates:', err);\n      showSnackbar(err.message, 'error');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  useEffect(() => {\n    // TODO: Implement API endpoint to retrieve available variables\n    const mockVariables = ['variable1', 'variable2', 'variable3'];\n    if (typeof setAvailableVariable === 'function') {\n      setAvailableVariable(mockVariables);\n    }\n  }, [setAvailableVariable]);\n  const handleCreateTemplate = async () => {\n    try {\n      if (!templateName || !templateContent || !templateType) {\n        setErrorMessage('Template name, content, and type are required');\n        return;\n      }\n\n      // Use the template service instead of direct fetch\n      const templateData = {\n        template_name: templateName,\n        content: templateContent,\n        system_prompt: templateSystemPrompt || '',\n        template_type: templateType,\n        business_id: businessId,\n        agent_id: agentId\n      };\n      await createTemplate(templateData);\n\n      // Reset form\n      setTemplateName('');\n      setTemplateContent('');\n      setTemplateType('');\n\n      // Refresh templates\n      fetchTemplates();\n      setSuccessMessage('Template created successfully');\n\n      // Clear success message after 3 seconds\n      setTimeout(() => {\n        setSuccessMessage('');\n      }, 3000);\n    } catch (error) {\n      setErrorMessage(error.message);\n    }\n  };\n  const handleUpdateTemplate = async () => {\n    try {\n      if (!editingTemplate) return;\n\n      // Use the template service instead of direct fetch\n      const templateData = {\n        template_name: editingTemplate.template_name,\n        content: editingTemplate.content,\n        system_prompt: editingTemplate.system_prompt || '',\n        template_type: editingTemplate.template_type,\n        business_id: businessId,\n        agent_id: agentId\n      };\n      await updateTemplate(editingTemplate.template_id, templateData);\n\n      // Close dialog and refresh\n      setEditDialogOpen(false);\n      fetchTemplates();\n\n      // Show success message\n      showSnackbar('Template updated successfully', 'success');\n    } catch (error) {\n      console.error('Error updating template:', error);\n      showSnackbar(`Failed to update template: ${error.message}`, 'error');\n    }\n  };\n  const handleDeleteTemplate = async templateId => {\n    if (!window.confirm('Are you sure you want to delete this template?')) {\n      return;\n    }\n    try {\n      // Use the template service instead of direct fetch\n      await deleteTemplate(templateId, businessId);\n\n      // Refresh templates\n      fetchTemplates();\n\n      // Show success message\n      showSnackbar('Template deleted successfully', 'success');\n    } catch (error) {\n      console.error('Error deleting template:', error);\n      showSnackbar(`Failed to delete template: ${error.message}`, 'error');\n    }\n  };\n  const handleDuplicateTemplate = async template => {\n    try {\n      setIsLoading(true);\n\n      // Use the template service instead of direct fetch\n      const templateData = {\n        template_name: template.template_name,\n        content: template.content,\n        system_prompt: template.system_prompt || '',\n        template_type: template.template_type,\n        business_id: businessId,\n        agent_id: agentId\n      };\n      await duplicateTemplate(templateData);\n\n      // Refresh templates\n      fetchTemplates();\n\n      // Show success message\n      showSnackbar(`Template \"${template.template_name} (Copy)\" created successfully`, 'success');\n    } catch (error) {\n      console.error('Error duplicating template:', error);\n      showSnackbar(`Failed to duplicate template: ${error.message}`, 'error');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleEditTemplate = template => {\n    setEditingTemplate(template);\n    setEditDialogOpen(true);\n  };\n  const handleAddVariable = variable => {\n    setTemplateContent(prev => `${prev} {${variable}}`);\n  };\n  const handleTabChange = (event, newValue) => {\n    setActiveTab(newValue);\n  };\n  const getFilteredTemplates = () => {\n    // If searching by text instead of filtering by type\n    if (typeof filterType === 'string' && filterType.length > 0 && !templateTypes.some(t => t.value === filterType)) {\n      // This is a text search, not a type filter\n      const searchTerm = filterType.toLowerCase();\n      return templates.filter(template => template.template_name && template.template_name.toLowerCase().includes(searchTerm) || template.template_description && template.template_description.toLowerCase().includes(searchTerm) || template.template_id && template.template_id.toLowerCase().includes(searchTerm) || template.template_type && template.template_type.toLowerCase().includes(searchTerm));\n    }\n\n    // Regular type filtering\n    if (filterType === 'all') {\n      return templates;\n    }\n    return templates.filter(template => {\n      const type = template.template_type;\n      // Handle the case where type might be undefined or not a string\n      if (!type || typeof type !== 'string') return false;\n      return type === filterType;\n    });\n  };\n  const isDefaultTemplate = type => {\n    return type && typeof type === 'string' && type.startsWith('default_');\n  };\n  const getTemplateTypeLabel = type => {\n    if (!type) return 'Unknown Type';\n    const found = templateTypes.find(t => t.value === type);\n    return found ? found.label : type;\n  };\n  const handleNavigateToHome = () => {\n    navigate('/business');\n  };\n  const validateCredentials = async () => {\n    if (!businessId || !businessApiKey) {\n      showSnackbar('Business ID and API Key are required', 'error');\n      setShowBusinessIdInput(true);\n      return false;\n    }\n    try {\n      // Use the correct endpoint and method\n      const response = await fetch(`/businesses/validate-credentials?business_id=${businessId}&api_key=${businessApiKey}`, {\n        method: 'GET',\n        headers: {\n          'Accept': 'application/json',\n          'Authorization': `Bearer ${businessApiKey}`\n        },\n        credentials: 'include'\n      });\n      if (!response.ok) {\n        throw new Error('Invalid business ID or API key');\n      }\n      const data = await response.json();\n      if (!data.valid) {\n        throw new Error(data.message || 'Credential validation failed');\n      }\n      return true;\n    } catch (err) {\n      console.error('Credential validation error:', err);\n      showSnackbar('Failed to validate credentials: ' + err.message, 'error');\n      setShowBusinessIdInput(true);\n      return false;\n    }\n  };\n  const saveCredentials = async () => {\n    if (!businessId || !businessApiKey) {\n      showSnackbar('Please enter both Business ID and API Key', 'error');\n      return;\n    }\n    const isValid = await validateCredentials();\n    if (isValid) {\n      // Save to both localStorage and cookies\n      localStorage.setItem('businessId', businessId);\n      localStorage.setItem('businessApiKey', businessApiKey);\n      document.cookie = `businessId=${businessId}; path=/; max-age=86400`;\n      document.cookie = `businessApiKey=${businessApiKey}; path=/; max-age=86400`;\n      setShowBusinessIdInput(false);\n      showSnackbar('Business credentials validated and saved', 'success');\n\n      // Refresh templates\n      fetchTemplatesInternal();\n    }\n  };\n  const showSnackbar = (message, severity = 'success') => {\n    setSnackbar({\n      open: true,\n      message,\n      severity\n    });\n  };\n  const handleCloseSnackbar = () => {\n    setSnackbar(prev => ({\n      ...prev,\n      open: false\n    }));\n  };\n  const handleCreateNewTemplate = () => {\n    let url = `/template-editor/new?business_id=${businessId}`;\n    if (agentId) {\n      url += `&agent_id=${agentId}`;\n    }\n    navigate(url);\n  };\n  const handleEditExistingTemplate = templateId => {\n    // Check for invalid template ID\n    if (!templateId || templateId === 'undefined') {\n      console.error('Invalid template ID:', templateId);\n      showSnackbar('Cannot edit template: Invalid template ID', 'error');\n      return;\n    }\n    let url = `/template-editor/${templateId}?business_id=${businessId}`;\n    if (agentId) {\n      url += `&agent_id=${agentId}`;\n    }\n    console.log(`Navigating to edit template: ${url}`);\n    navigate(url);\n  };\n\n  // Effect to check if we need to refresh templates (coming from template editor)\n  useEffect(() => {\n    const templateUpdated = localStorage.getItem('template_updated');\n    const refreshParam = queryParams.get('refresh');\n    if (templateUpdated === 'true' || refreshParam) {\n      // Clear the flag\n      localStorage.removeItem('template_updated');\n\n      // If we have both business ID and agent ID, fetch templates\n      if (businessId && agentId && businessApiKey) {\n        console.log(\"Template was just updated, refreshing templates list\");\n        setTimeout(() => {\n          fetchTemplatesInternal();\n        }, 500); // Small delay to ensure backend has processed\n      }\n    }\n  }, [location, businessId, agentId, businessApiKey]);\n\n  // Effect to extract variables from template text\n  useEffect(() => {\n    if (editingTemplate.content) {\n      const matches = editingTemplate.content.match(/\\{([^}]+)\\}/g) || [];\n      const extractedVariables = matches.map(match => match.substring(1, match.length - 1));\n      setEditingTemplate(prev => ({\n        ...prev,\n        variables: Array.from(new Set(extractedVariables))\n      }));\n    }\n  }, [editingTemplate.content]);\n\n  // Helper to extract variables from content\n  const extractVariablesFromContent = content => {\n    if (!content) return [];\n    const matches = content.match(/\\{([^}]+)\\}/g) || [];\n    return matches.map(match => match.slice(1, -1));\n  };\n\n  // Handle template selection for variable insertion\n  const handleChooseTemplate = template => {\n    if (setTemplateName && typeof setTemplateName === 'function') {\n      setTemplateName(template.template_name);\n    }\n    if (setTemplateContent && typeof setTemplateContent === 'function') {\n      setTemplateContent(template.content);\n    }\n    if (setTemplateSystemPrompt && typeof setTemplateSystemPrompt === 'function') {\n      setTemplateSystemPrompt(template.system_prompt || '');\n    }\n    if (templateID !== undefined && setTemplateID && typeof setTemplateID === 'function') {\n      setTemplateID(template.template_id);\n    }\n    // Fire template selection handler if provided\n    if (handleTemplateSelection && typeof handleTemplateSelection === 'function') {\n      handleTemplateSelection(template);\n    }\n    showSnackbar(`Template \"${template.template_name}\" selected`, 'success');\n  };\n\n  // Function to open the Edit Dialog for template editing\n  const openEditDialog = template => {\n    setEditingTemplate({\n      template_id: template.template_id,\n      template_name: template.template_name,\n      content: template.content,\n      system_prompt: template.system_prompt || '',\n      template_type: template.template_type,\n      variables: extractVariablesFromContent(template.content)\n    });\n    setEditDialogOpen(true);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    sx: {\n      mt: 4,\n      mb: 4\n    },\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        p: 3,\n        mb: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          alignItems: 'center',\n          mb: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: handleNavigateToHome,\n          sx: {\n            mr: 1\n          },\n          children: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 516,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          component: \"h1\",\n          gutterBottom: true,\n          sx: {\n            flexGrow: 1\n          },\n          children: \"Template Management\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 518,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          color: \"primary\",\n          onClick: () => fetchTemplatesInternal(),\n          startIcon: /*#__PURE__*/_jsxDEV(RefreshIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 525,\n            columnNumber: 36\n          }, this),\n          sx: {\n            mr: 2\n          },\n          children: \"Refresh Templates\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 521,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: handleCreateNewTemplate,\n          startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 534,\n            columnNumber: 36\n          }, this),\n          children: \"Create Template\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 530,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 514,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        sx: {\n          mb: 3\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 540,\n        columnNumber: 17\n      }, this), (showBusinessIdInput || !businessId || !businessApiKey) && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mb: 3,\n          p: 2,\n          border: '1px dashed',\n          borderColor: 'warning.main',\n          borderRadius: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          color: \"warning.main\",\n          gutterBottom: true,\n          children: \"Business Credentials Required\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 545,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 5,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Business ID\",\n              value: businessId,\n              onChange: e => setBusinessId(e.target.value),\n              placeholder: \"Enter your business ID\",\n              helperText: \"Required for managing templates\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 550,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 549,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 5,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Business API Key\",\n              value: businessApiKey,\n              onChange: e => setBusinessApiKey(e.target.value),\n              placeholder: \"Enter your business API key\",\n              helperText: \"Required for authentication\",\n              type: \"password\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 561,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 560,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 2,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              onClick: saveCredentials,\n              fullWidth: true,\n              sx: {\n                height: '56px'\n              },\n              children: \"Validate & Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 573,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 572,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 548,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 544,\n        columnNumber: 21\n      }, this), (showAgentIdInput || !agentId) && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mb: 3,\n          p: 2,\n          border: '1px dashed',\n          borderColor: 'warning.main',\n          borderRadius: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          color: \"warning.main\",\n          gutterBottom: true,\n          children: \"Agent ID Required\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 590,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 9,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Agent ID\",\n              value: agentId,\n              onChange: e => setAgentId(e.target.value),\n              placeholder: \"Enter an agent ID\",\n              helperText: \"Required for managing templates\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 595,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 594,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 3,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              onClick: () => {\n                if (agentId) {\n                  // Save to localStorage\n                  localStorage.setItem('agentId', agentId);\n                  setShowAgentIdInput(false);\n                  showSnackbar('Agent ID saved', 'success');\n                  // Fetch templates for this agent\n                  fetchTemplatesInternal();\n                } else {\n                  showSnackbar('Please enter an Agent ID', 'error');\n                }\n              },\n              fullWidth: true,\n              sx: {\n                height: '56px'\n              },\n              children: \"Save & Use\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 606,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 605,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            mt: 2,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"text.secondary\",\n              children: \"After saving or changing the agent ID, click the button below to load templates:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 628,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              fullWidth: true,\n              onClick: fetchTemplatesInternal,\n              startIcon: /*#__PURE__*/_jsxDEV(RefreshIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 635,\n                columnNumber: 48\n              }, this),\n              sx: {\n                mt: 1\n              },\n              children: \"Load Templates for this Agent\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 631,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 627,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 593,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 589,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mb: 3\n        },\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          alignItems: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 4,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Search Templates\",\n              value: filterType,\n              onChange: e => setFilterType(e.target.value),\n              placeholder: \"Search by type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 649,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 648,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 3,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                id: \"filter-type-label\",\n                children: \"Filter by Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 659,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                labelId: \"filter-type-label\",\n                value: filterType,\n                onChange: e => setFilterType(e.target.value),\n                label: \"Filter by Type\",\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"all\",\n                  children: \"All Templates\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 666,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(ListSubheader, {\n                  children: \"Regular Templates\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 667,\n                  columnNumber: 37\n                }, this), templateTypes.filter(type => type.group === 'Regular').map(type => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: type.value,\n                  children: type.label\n                }, type.value, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 671,\n                  columnNumber: 45\n                }, this)), /*#__PURE__*/_jsxDEV(ListSubheader, {\n                  children: \"Default Templates\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 676,\n                  columnNumber: 37\n                }, this), templateTypes.filter(type => type.group === 'Default').map(type => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: type.value,\n                  children: type.label\n                }, type.value, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 680,\n                  columnNumber: 45\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 660,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 658,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 657,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 4,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              startIcon: /*#__PURE__*/_jsxDEV(RefreshIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 691,\n                columnNumber: 44\n              }, this),\n              onClick: () => {\n                // Use the internal implementation if fetchTemplates is not a function\n                if (typeof fetchTemplates === 'function') {\n                  fetchTemplates();\n                } else {\n                  fetchTemplatesInternal();\n                }\n              },\n              children: \"Refresh\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 689,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 688,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 647,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 646,\n        columnNumber: 17\n      }, this), isLoading ? /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'center',\n          p: 4\n        },\n        children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 709,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 708,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: filteredTemplates.length === 0 ? /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"info\",\n          children: \"No templates found. Create your first template to get started.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 714,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(List, {\n          sx: {\n            bgcolor: 'background.paper'\n          },\n          children: filteredTemplates.map(template => /*#__PURE__*/_jsxDEV(ListItem, {\n            button: true,\n            onClick: () => handleEditExistingTemplate(template.template_id),\n            sx: {\n              mb: 1,\n              borderLeft: isDefaultTemplate(template.template_type) ? '4px solid #f50057' : 'none',\n              bgcolor: isDefaultTemplate(template.template_type) ? 'rgba(245, 0, 87, 0.04)' : 'background.paper'\n            },\n            children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  alignItems: 'center'\n                },\n                children: [isDefaultTemplate(template.template_type) && /*#__PURE__*/_jsxDEV(Tooltip, {\n                  title: \"Default Template\",\n                  children: /*#__PURE__*/_jsxDEV(StarIcon, {\n                    sx: {\n                      mr: 1,\n                      color: 'secondary.main',\n                      fontSize: '1rem'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 735,\n                    columnNumber: 61\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 734,\n                  columnNumber: 57\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"subtitle1\",\n                  children: template.template_name || 'Unnamed Template'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 738,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                  size: \"small\",\n                  label: getTemplateTypeLabel(template.template_type),\n                  sx: {\n                    ml: 1\n                  },\n                  color: isDefaultTemplate(template.template_type) ? 'secondary' : 'primary',\n                  variant: isDefaultTemplate(template.template_type) ? 'filled' : 'outlined'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 741,\n                  columnNumber: 53\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 732,\n                columnNumber: 49\n              }, this),\n              secondary: /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  component: \"span\",\n                  variant: \"body2\",\n                  color: \"text.secondary\",\n                  children: template.template_description || 'No description'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 752,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  component: \"span\",\n                  variant: \"caption\",\n                  color: \"text.secondary\",\n                  sx: {\n                    display: 'block'\n                  },\n                  children: [\"ID: \", template.template_id]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 755,\n                  columnNumber: 53\n                }, this)]\n              }, void 0, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 730,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n              children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n                title: \"Edit Template\",\n                children: /*#__PURE__*/_jsxDEV(IconButton, {\n                  edge: \"end\",\n                  \"aria-label\": \"edit\",\n                  onClick: e => {\n                    e.stopPropagation();\n                    handleEditExistingTemplate(template.template_id);\n                  },\n                  children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 771,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 763,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 762,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                title: \"Duplicate Template\",\n                children: /*#__PURE__*/_jsxDEV(IconButton, {\n                  edge: \"end\",\n                  \"aria-label\": \"duplicate\",\n                  onClick: e => {\n                    e.stopPropagation();\n                    handleDuplicateTemplate(template);\n                  },\n                  children: /*#__PURE__*/_jsxDEV(ContentCopyIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 783,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 775,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 774,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                title: \"Delete Template\",\n                children: /*#__PURE__*/_jsxDEV(IconButton, {\n                  edge: \"end\",\n                  \"aria-label\": \"delete\",\n                  onClick: e => {\n                    e.stopPropagation();\n                    handleDeleteTemplate(template.template_id);\n                  },\n                  children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 795,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 787,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 786,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 761,\n              columnNumber: 41\n            }, this)]\n          }, template.template_id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 720,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 718,\n          columnNumber: 29\n        }, this)\n      }, void 0, false), /*#__PURE__*/_jsxDEV(Dialog, {\n        open: editDialogOpen,\n        onClose: () => setEditDialogOpen(false),\n        maxWidth: \"md\",\n        fullWidth: true,\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          children: [\"Edit Template: \", editingTemplate.template_name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 808,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Template Name\",\n                value: editingTemplate.template_name,\n                onChange: e => setEditingTemplate({\n                  ...editingTemplate,\n                  template_name: e.target.value\n                }),\n                fullWidth: true,\n                margin: \"normal\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 812,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 811,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(FormControl, {\n                fullWidth: true,\n                margin: \"normal\",\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  children: \"Template Type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 822,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  value: editingTemplate.template_type,\n                  onChange: e => setEditingTemplate({\n                    ...editingTemplate,\n                    template_type: e.target.value\n                  }),\n                  label: \"Template Type\",\n                  children: templateTypes.map(type => /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: type.value,\n                    children: type.label\n                  }, type.value, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 829,\n                    columnNumber: 45\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 823,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 821,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 820,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Template Content\",\n                value: editingTemplate.content,\n                onChange: e => setEditingTemplate({\n                  ...editingTemplate,\n                  content: e.target.value\n                }),\n                fullWidth: true,\n                multiline: true,\n                rows: 6,\n                margin: \"normal\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 837,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 836,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"System Prompt (Optional)\",\n                value: editingTemplate.system_prompt,\n                onChange: e => setEditingTemplate({\n                  ...editingTemplate,\n                  system_prompt: e.target.value\n                }),\n                fullWidth: true,\n                multiline: true,\n                rows: 3,\n                margin: \"normal\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 848,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 847,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  mt: 1\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"subtitle2\",\n                  children: \"Variables detected:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 860,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    display: 'flex',\n                    flexWrap: 'wrap',\n                    gap: 1,\n                    mt: 1\n                  },\n                  children: [editingTemplate.variables.map((variable, idx) => /*#__PURE__*/_jsxDEV(Chip, {\n                    label: variable,\n                    size: \"small\"\n                  }, idx, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 863,\n                    columnNumber: 45\n                  }, this)), editingTemplate.variables.length === 0 && /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    color: \"text.secondary\",\n                    children: [\"No variables detected. Use \", '{variable_name}', \" syntax to create variables.\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 866,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 861,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 859,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 858,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 810,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 809,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => setEditDialogOpen(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 876,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleUpdateTemplate,\n            color: \"primary\",\n            variant: \"contained\",\n            disabled: !editingTemplate.template_name || !editingTemplate.content,\n            children: \"Save Changes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 877,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 875,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 807,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n        open: snackbar.open,\n        autoHideDuration: 6000,\n        onClose: handleCloseSnackbar,\n        anchorOrigin: {\n          vertical: 'top',\n          horizontal: 'right'\n        },\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          onClose: handleCloseSnackbar,\n          severity: snackbar.severity,\n          sx: {\n            width: '100%'\n          },\n          children: snackbar.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 895,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 889,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 513,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 512,\n    columnNumber: 9\n  }, this);\n}\n_s(TemplateManagement, \"xtyaGMzqxe81Xkvthz5yxHj4Fvg=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = TemplateManagement;\nexport default TemplateManagement;\nvar _c;\n$RefreshReg$(_c, \"TemplateManagement\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useNavigate","useLocation","TextField","Button","Typography","Card","CardContent","Box","TextareaAutosize","Select","MenuItem","InputLabel","FormControl","Grid","Paper","Divider","Tab","Tabs","Alert","List","ListItem","ListItemText","ListItemSecondaryAction","IconButton","Chip","Dialog","DialogTitle","DialogContent","DialogActions","CircularProgress","Snackbar","Container","Tooltip","ListSubheader","DeleteIcon","EditIcon","ContentCopyIcon","SaveIcon","RefreshIcon","ArrowBackIcon","TemplateSection","AddIcon","FilterListIcon","StarIcon","normalizeUUID","createTemplate","updateTemplate","deleteTemplate","fetchTemplates","fetchTemplatesService","duplicateTemplate","jsxDEV","_jsxDEV","Fragment","_Fragment","TemplateManagement","templateID","setTemplateID","availableVariable","setAvailableVariable","selectedVariable","setSelectedVariable","handleTemplateSelection","handleVariableSelection","addVariableToTemplate","templateName","setTemplateName","templateContent","setTemplateContent","templateSystemPrompt","setTemplateSystemPrompt","templateOutput","handleSnackbarOpen","handleSaveDefaultTemplate","apiKey","setTemplateOutput","_s","navigate","location","templates","setTemplates","selectedTemplate","setSelectedTemplate","templateType","setTemplateType","errorMessage","setErrorMessage","successMessage","setSuccessMessage","activeTab","setActiveTab","isLoading","setIsLoading","editDialogOpen","setEditDialogOpen","editingTemplate","setEditingTemplate","template_id","template_name","content","system_prompt","template_type","variables","filterType","setFilterType","showBusinessIdInput","setShowBusinessIdInput","businessId","setBusinessId","businessApiKey","setBusinessApiKey","agentId","setAgentId","filteredTemplates","setFilteredTemplates","snackbar","setSnackbar","open","message","severity","showAgentIdInput","setShowAgentIdInput","templateTypes","value","label","group","queryParams","URLSearchParams","window","search","queryBusinessId","get","queryAgentId","storedBusinessId","localStorage","getItem","storedApiKey","storedAgentId","console","log","fetchTemplatesInternal","showSnackbar","data","normalizedTemplates","Array","isArray","map","template","id","Math","random","toString","substring","extractVariablesFromContent","length","err","error","mockVariables","handleCreateTemplate","templateData","business_id","agent_id","setTimeout","handleUpdateTemplate","handleDeleteTemplate","templateId","confirm","handleDuplicateTemplate","handleEditTemplate","handleAddVariable","variable","prev","handleTabChange","event","newValue","getFilteredTemplates","some","t","searchTerm","toLowerCase","filter","includes","template_description","type","isDefaultTemplate","startsWith","getTemplateTypeLabel","found","find","handleNavigateToHome","validateCredentials","response","fetch","method","headers","credentials","ok","Error","json","valid","saveCredentials","isValid","setItem","document","cookie","handleCloseSnackbar","handleCreateNewTemplate","url","handleEditExistingTemplate","templateUpdated","refreshParam","removeItem","matches","match","extractedVariables","from","Set","slice","handleChooseTemplate","undefined","openEditDialog","maxWidth","sx","mt","mb","children","p","display","alignItems","onClick","mr","fileName","_jsxFileName","lineNumber","columnNumber","variant","component","gutterBottom","flexGrow","color","startIcon","border","borderColor","borderRadius","container","spacing","item","xs","md","fullWidth","onChange","e","target","placeholder","helperText","required","height","labelId","justifyContent","bgcolor","button","borderLeft","primary","title","fontSize","size","ml","secondary","edge","stopPropagation","onClose","margin","multiline","rows","flexWrap","gap","idx","disabled","autoHideDuration","anchorOrigin","vertical","horizontal","width","_c","$RefreshReg$"],"sources":["C:/icmp_events_api/front-end/src/components/TemplateManagement.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport {\r\n    TextField, Button, Typography, Card, CardContent, Box, TextareaAutosize,\r\n    Select, MenuItem, InputLabel, FormControl, Grid, Paper, Divider, Tab, Tabs, Alert, List, ListItem, ListItemText, ListItemSecondaryAction, IconButton, Chip, Dialog, DialogTitle, DialogContent, DialogActions, CircularProgress, Snackbar, Container, Tooltip, ListSubheader\r\n} from '@mui/material';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\r\nimport SaveIcon from '@mui/icons-material/Save';\r\nimport RefreshIcon from '@mui/icons-material/Refresh';\r\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\r\nimport TemplateSection from './TemplateSection';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport FilterListIcon from '@mui/icons-material/FilterList';\r\nimport StarIcon from '@mui/icons-material/Star';\r\nimport { normalizeUUID } from '../hooks/useConfig';\r\nimport { createTemplate, updateTemplate, deleteTemplate, fetchTemplates as fetchTemplatesService, duplicateTemplate } from '../services/templateService';\r\n\r\nfunction TemplateManagement({ templateID, setTemplateID, availableVariable = [], setAvailableVariable, selectedVariable, setSelectedVariable, handleTemplateSelection, handleVariableSelection, addVariableToTemplate, templateName, setTemplateName, templateContent, setTemplateContent, templateSystemPrompt, setTemplateSystemPrompt, templateOutput, createTemplate, fetchTemplates, handleSnackbarOpen, handleSaveDefaultTemplate, apiKey, setTemplateOutput }) {\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const [templates, setTemplates] = useState([]);\r\n    const [selectedTemplate, setSelectedTemplate] = useState(null);\r\n    const [templateType, setTemplateType] = useState('');\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n    const [successMessage, setSuccessMessage] = useState('');\r\n    const [activeTab, setActiveTab] = useState(0);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [editDialogOpen, setEditDialogOpen] = useState(false);\r\n    const [editingTemplate, setEditingTemplate] = useState({\r\n        template_id: '',\r\n        template_name: '',\r\n        content: '',\r\n        system_prompt: '',\r\n        template_type: '',\r\n        variables: []\r\n    });\r\n    const [filterType, setFilterType] = useState('all');\r\n    const [showBusinessIdInput, setShowBusinessIdInput] = useState(!apiKey || !templateID);\r\n    const [businessId, setBusinessId] = useState(templateID || '');\r\n    const [businessApiKey, setBusinessApiKey] = useState(apiKey || '');\r\n    const [agentId, setAgentId] = useState('');\r\n    const [filteredTemplates, setFilteredTemplates] = useState([]);\r\n    const [snackbar, setSnackbar] = useState({\r\n        open: false,\r\n        message: '',\r\n        severity: 'success'\r\n    });\r\n    const [showAgentIdInput, setShowAgentIdInput] = useState(!agentId);\r\n\r\n    // Define template types array for dropdowns and filtering\r\n    const templateTypes = [\r\n        { value: 'stage_selection', label: 'Stage Selection', group: 'Regular' },\r\n        { value: 'data_extraction', label: 'Data Extraction', group: 'Regular' },\r\n        { value: 'response_generation', label: 'Response Generation', group: 'Regular' },\r\n        { value: 'default_stage_selection', label: 'Default Stage Selection', group: 'Default' },\r\n        { value: 'default_data_extraction', label: 'Default Data Extraction', group: 'Default' },\r\n        { value: 'default_response_generation', label: 'Default Response Generation', group: 'Default' }\r\n    ];\r\n\r\n    // Parse query parameters if any\r\n    const queryParams = new URLSearchParams(window.location.search);\r\n    const queryBusinessId = queryParams.get('business_id');\r\n    const queryAgentId = queryParams.get('agent_id');\r\n    \r\n    // Get stored credentials from localStorage\r\n    const storedBusinessId = localStorage.getItem('businessId');\r\n    const storedApiKey = localStorage.getItem('businessApiKey');\r\n    const storedAgentId = localStorage.getItem('agentId');\r\n    \r\n    // Update state with query params and localStorage values\r\n    useEffect(() => {\r\n        // Update businessId if query param or localStorage has a value\r\n        if (queryBusinessId || storedBusinessId) {\r\n            setBusinessId(queryBusinessId || storedBusinessId);\r\n        }\r\n        \r\n        // Update businessApiKey if localStorage has a value\r\n        if (storedApiKey) {\r\n            setBusinessApiKey(storedApiKey);\r\n        }\r\n        \r\n        // Update agentId if query param or localStorage has a value\r\n        if (queryAgentId || storedAgentId) {\r\n            setAgentId(queryAgentId || storedAgentId);\r\n        }\r\n        \r\n        // Update visibility of input fields\r\n        setShowBusinessIdInput(!businessId || !businessApiKey);\r\n        setShowAgentIdInput(!agentId);\r\n    }, [queryBusinessId, storedBusinessId, storedApiKey, queryAgentId, storedAgentId]);\r\n    \r\n    // Initialize filteredTemplates when templates change\r\n    useEffect(() => {\r\n        setFilteredTemplates(templates);\r\n    }, [templates]);\r\n    \r\n    // Effect to fetch templates on mount\r\n    useEffect(() => {\r\n        if (businessId && agentId) {\r\n            console.log(\"TemplateManagement.js - Fetching templates with:\", { businessId, agentId });\r\n            if (typeof fetchTemplates === 'function') {\r\n                fetchTemplates();\r\n            } else {\r\n                // If fetchTemplates is not a prop, use the internal implementation\r\n                fetchTemplatesInternal();\r\n            }\r\n        }\r\n    }, [businessId, agentId, fetchTemplates]);\r\n    \r\n    // Internal implementation of fetchTemplates\r\n    const fetchTemplatesInternal = async () => {\r\n        if (!businessId) {\r\n            showSnackbar('Business ID is required to fetch templates', 'error');\r\n            setShowBusinessIdInput(true);\r\n            setIsLoading(false);\r\n            return;\r\n        }\r\n        \r\n        if (!agentId) {\r\n            showSnackbar('Agent ID is required to fetch templates', 'error');\r\n            setShowAgentIdInput(true);\r\n            setIsLoading(false);\r\n            return;\r\n        }\r\n        \r\n        if (!businessApiKey) {\r\n            showSnackbar('Business API Key is required to fetch templates', 'error');\r\n            setShowBusinessIdInput(true);\r\n            setIsLoading(false);\r\n            return;\r\n        }\r\n        \r\n        setIsLoading(true);\r\n        try {\r\n            // Use the template service instead of direct fetch\r\n            const data = await fetchTemplatesService(businessId, agentId);\r\n            console.log('Fetched templates (raw):', data);\r\n            \r\n            // Normalize the templates data to ensure all needed fields exist\r\n            const normalizedTemplates = Array.isArray(data) ? data.map(template => ({\r\n                template_id: template.template_id || template.id || `temp-${Math.random().toString(36).substring(2, 9)}`,\r\n                template_name: template.template_name || 'Unnamed Template',\r\n                content: template.content || '',\r\n                system_prompt: template.system_prompt || '',\r\n                template_type: template.template_type || 'Unknown Type',\r\n                variables: extractVariablesFromContent(template.content || '')\r\n            })) : [];\r\n            \r\n            console.log('Normalized templates:', normalizedTemplates);\r\n            \r\n            setTemplates(normalizedTemplates);\r\n            setFilteredTemplates(normalizedTemplates);\r\n            \r\n            // Show message about number of templates loaded\r\n            showSnackbar(`${normalizedTemplates.length} templates loaded successfully`, 'success');\r\n        } catch (err) {\r\n            console.error('Error fetching templates:', err);\r\n            showSnackbar(err.message, 'error');\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        // TODO: Implement API endpoint to retrieve available variables\r\n        const mockVariables = ['variable1', 'variable2', 'variable3'];\r\n        if (typeof setAvailableVariable === 'function') {\r\n            setAvailableVariable(mockVariables);\r\n        }\r\n    }, [setAvailableVariable]);\r\n\r\n    const handleCreateTemplate = async () => {\r\n        try {\r\n            if (!templateName || !templateContent || !templateType) {\r\n                setErrorMessage('Template name, content, and type are required');\r\n                return;\r\n            }\r\n            \r\n            // Use the template service instead of direct fetch\r\n            const templateData = {\r\n                template_name: templateName,\r\n                content: templateContent,\r\n                system_prompt: templateSystemPrompt || '',\r\n                template_type: templateType,\r\n                business_id: businessId,\r\n                agent_id: agentId\r\n            };\r\n            \r\n            await createTemplate(templateData);\r\n            \r\n            // Reset form\r\n            setTemplateName('');\r\n            setTemplateContent('');\r\n            setTemplateType('');\r\n            \r\n            // Refresh templates\r\n            fetchTemplates();\r\n            \r\n            setSuccessMessage('Template created successfully');\r\n            \r\n            // Clear success message after 3 seconds\r\n            setTimeout(() => {\r\n                setSuccessMessage('');\r\n            }, 3000);\r\n        } catch (error) {\r\n            setErrorMessage(error.message);\r\n        }\r\n    };\r\n\r\n    const handleUpdateTemplate = async () => {\r\n        try {\r\n            if (!editingTemplate) return;\r\n            \r\n            // Use the template service instead of direct fetch\r\n            const templateData = {\r\n                template_name: editingTemplate.template_name,\r\n                content: editingTemplate.content,\r\n                system_prompt: editingTemplate.system_prompt || '',\r\n                template_type: editingTemplate.template_type,\r\n                business_id: businessId,\r\n                agent_id: agentId\r\n            };\r\n            \r\n            await updateTemplate(editingTemplate.template_id, templateData);\r\n            \r\n            // Close dialog and refresh\r\n            setEditDialogOpen(false);\r\n            fetchTemplates();\r\n            \r\n            // Show success message\r\n            showSnackbar('Template updated successfully', 'success');\r\n        } catch (error) {\r\n            console.error('Error updating template:', error);\r\n            showSnackbar(`Failed to update template: ${error.message}`, 'error');\r\n        }\r\n    };\r\n\r\n    const handleDeleteTemplate = async (templateId) => {\r\n        if (!window.confirm('Are you sure you want to delete this template?')) {\r\n            return;\r\n        }\r\n        \r\n        try {\r\n            // Use the template service instead of direct fetch\r\n            await deleteTemplate(templateId, businessId);\r\n            \r\n            // Refresh templates\r\n            fetchTemplates();\r\n            \r\n            // Show success message\r\n            showSnackbar('Template deleted successfully', 'success');\r\n        } catch (error) {\r\n            console.error('Error deleting template:', error);\r\n            showSnackbar(`Failed to delete template: ${error.message}`, 'error');\r\n        }\r\n    };\r\n\r\n    const handleDuplicateTemplate = async (template) => {\r\n        try {\r\n            setIsLoading(true);\r\n            \r\n            // Use the template service instead of direct fetch\r\n            const templateData = {\r\n                template_name: template.template_name,\r\n                content: template.content,\r\n                system_prompt: template.system_prompt || '',\r\n                template_type: template.template_type,\r\n                business_id: businessId,\r\n                agent_id: agentId\r\n            };\r\n            \r\n            await duplicateTemplate(templateData);\r\n            \r\n            // Refresh templates\r\n            fetchTemplates();\r\n            \r\n            // Show success message\r\n            showSnackbar(`Template \"${template.template_name} (Copy)\" created successfully`, 'success');\r\n        } catch (error) {\r\n            console.error('Error duplicating template:', error);\r\n            showSnackbar(`Failed to duplicate template: ${error.message}`, 'error');\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleEditTemplate = (template) => {\r\n        setEditingTemplate(template);\r\n        setEditDialogOpen(true);\r\n    };\r\n\r\n    const handleAddVariable = (variable) => {\r\n        setTemplateContent((prev) => `${prev} {${variable}}`);\r\n    };\r\n\r\n    const handleTabChange = (event, newValue) => {\r\n        setActiveTab(newValue);\r\n    };\r\n\r\n    const getFilteredTemplates = () => {\r\n        // If searching by text instead of filtering by type\r\n        if (typeof filterType === 'string' && filterType.length > 0 && !templateTypes.some(t => t.value === filterType)) {\r\n            // This is a text search, not a type filter\r\n            const searchTerm = filterType.toLowerCase();\r\n            return templates.filter(template => \r\n                (template.template_name && template.template_name.toLowerCase().includes(searchTerm)) ||\r\n                (template.template_description && template.template_description.toLowerCase().includes(searchTerm)) ||\r\n                (template.template_id && template.template_id.toLowerCase().includes(searchTerm)) ||\r\n                (template.template_type && template.template_type.toLowerCase().includes(searchTerm))\r\n            );\r\n        }\r\n        \r\n        // Regular type filtering\r\n        if (filterType === 'all') {\r\n            return templates;\r\n        }\r\n        \r\n        return templates.filter(template => {\r\n            const type = template.template_type;\r\n            // Handle the case where type might be undefined or not a string\r\n            if (!type || typeof type !== 'string') return false;\r\n            return type === filterType;\r\n        });\r\n    };\r\n\r\n    const isDefaultTemplate = (type) => {\r\n        return type && typeof type === 'string' && type.startsWith('default_');\r\n    };\r\n\r\n    const getTemplateTypeLabel = (type) => {\r\n        if (!type) return 'Unknown Type';\r\n        const found = templateTypes.find(t => t.value === type);\r\n        return found ? found.label : type;\r\n    };\r\n\r\n    const handleNavigateToHome = () => {\r\n        navigate('/business');\r\n    };\r\n\r\n    const validateCredentials = async () => {\r\n        if (!businessId || !businessApiKey) {\r\n            showSnackbar('Business ID and API Key are required', 'error');\r\n            setShowBusinessIdInput(true);\r\n            return false;\r\n        }\r\n        \r\n        try {\r\n            // Use the correct endpoint and method\r\n            const response = await fetch(`/businesses/validate-credentials?business_id=${businessId}&api_key=${businessApiKey}`, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Authorization': `Bearer ${businessApiKey}`\r\n                },\r\n                credentials: 'include'\r\n            });\r\n            \r\n            if (!response.ok) {\r\n                throw new Error('Invalid business ID or API key');\r\n            }\r\n            \r\n            const data = await response.json();\r\n            if (!data.valid) {\r\n                throw new Error(data.message || 'Credential validation failed');\r\n            }\r\n            \r\n            return true;\r\n        } catch (err) {\r\n            console.error('Credential validation error:', err);\r\n            showSnackbar('Failed to validate credentials: ' + err.message, 'error');\r\n            setShowBusinessIdInput(true);\r\n            return false;\r\n        }\r\n    };\r\n\r\n    const saveCredentials = async () => {\r\n        if (!businessId || !businessApiKey) {\r\n            showSnackbar('Please enter both Business ID and API Key', 'error');\r\n            return;\r\n        }\r\n        \r\n        const isValid = await validateCredentials();\r\n        if (isValid) {\r\n            // Save to both localStorage and cookies\r\n            localStorage.setItem('businessId', businessId);\r\n            localStorage.setItem('businessApiKey', businessApiKey);\r\n            document.cookie = `businessId=${businessId}; path=/; max-age=86400`;\r\n            document.cookie = `businessApiKey=${businessApiKey}; path=/; max-age=86400`;\r\n            \r\n            setShowBusinessIdInput(false);\r\n            showSnackbar('Business credentials validated and saved', 'success');\r\n            \r\n            // Refresh templates\r\n            fetchTemplatesInternal();\r\n        }\r\n    };\r\n\r\n    const showSnackbar = (message, severity = 'success') => {\r\n        setSnackbar({\r\n            open: true,\r\n            message,\r\n            severity\r\n        });\r\n    };\r\n\r\n    const handleCloseSnackbar = () => {\r\n        setSnackbar(prev => ({\r\n            ...prev,\r\n            open: false\r\n        }));\r\n    };\r\n\r\n    const handleCreateNewTemplate = () => {\r\n        let url = `/template-editor/new?business_id=${businessId}`;\r\n        if (agentId) {\r\n            url += `&agent_id=${agentId}`;\r\n        }\r\n        navigate(url);\r\n    };\r\n    \r\n    const handleEditExistingTemplate = (templateId) => {\r\n        // Check for invalid template ID\r\n        if (!templateId || templateId === 'undefined') {\r\n            console.error('Invalid template ID:', templateId);\r\n            showSnackbar('Cannot edit template: Invalid template ID', 'error');\r\n            return;\r\n        }\r\n        \r\n        let url = `/template-editor/${templateId}?business_id=${businessId}`;\r\n        if (agentId) {\r\n            url += `&agent_id=${agentId}`;\r\n        }\r\n        console.log(`Navigating to edit template: ${url}`);\r\n        navigate(url);\r\n    };\r\n\r\n    // Effect to check if we need to refresh templates (coming from template editor)\r\n    useEffect(() => {\r\n        const templateUpdated = localStorage.getItem('template_updated');\r\n        const refreshParam = queryParams.get('refresh');\r\n        \r\n        if (templateUpdated === 'true' || refreshParam) {\r\n            // Clear the flag\r\n            localStorage.removeItem('template_updated');\r\n            \r\n            // If we have both business ID and agent ID, fetch templates\r\n            if (businessId && agentId && businessApiKey) {\r\n                console.log(\"Template was just updated, refreshing templates list\");\r\n                setTimeout(() => {\r\n                    fetchTemplatesInternal();\r\n                }, 500); // Small delay to ensure backend has processed\r\n            }\r\n        }\r\n    }, [location, businessId, agentId, businessApiKey]);\r\n\r\n    // Effect to extract variables from template text\r\n    useEffect(() => {\r\n        if (editingTemplate.content) {\r\n            const matches = editingTemplate.content.match(/\\{([^}]+)\\}/g) || [];\r\n            const extractedVariables = matches.map(match => match.substring(1, match.length - 1));\r\n            setEditingTemplate(prev => ({\r\n                ...prev,\r\n                variables: Array.from(new Set(extractedVariables))\r\n            }));\r\n        }\r\n    }, [editingTemplate.content]);\r\n\r\n    // Helper to extract variables from content\r\n    const extractVariablesFromContent = (content) => {\r\n        if (!content) return [];\r\n        const matches = content.match(/\\{([^}]+)\\}/g) || [];\r\n        return matches.map(match => match.slice(1, -1));\r\n    };\r\n\r\n    // Handle template selection for variable insertion\r\n    const handleChooseTemplate = (template) => {\r\n        if (setTemplateName && typeof setTemplateName === 'function') {\r\n            setTemplateName(template.template_name);\r\n        }\r\n        if (setTemplateContent && typeof setTemplateContent === 'function') {\r\n            setTemplateContent(template.content);\r\n        }\r\n        if (setTemplateSystemPrompt && typeof setTemplateSystemPrompt === 'function') {\r\n            setTemplateSystemPrompt(template.system_prompt || '');\r\n        }\r\n        if (templateID !== undefined && setTemplateID && typeof setTemplateID === 'function') {\r\n            setTemplateID(template.template_id);\r\n        }\r\n        // Fire template selection handler if provided\r\n        if (handleTemplateSelection && typeof handleTemplateSelection === 'function') {\r\n            handleTemplateSelection(template);\r\n        }\r\n        showSnackbar(`Template \"${template.template_name}\" selected`, 'success');\r\n    };\r\n\r\n    // Function to open the Edit Dialog for template editing\r\n    const openEditDialog = (template) => {\r\n        setEditingTemplate({\r\n            template_id: template.template_id,\r\n            template_name: template.template_name,\r\n            content: template.content,\r\n            system_prompt: template.system_prompt || '',\r\n            template_type: template.template_type,\r\n            variables: extractVariablesFromContent(template.content)\r\n        });\r\n        setEditDialogOpen(true);\r\n    };\r\n\r\n    return (\r\n        <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\r\n            <Paper sx={{ p: 3, mb: 4 }}>\r\n                <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\r\n                    <IconButton onClick={handleNavigateToHome} sx={{ mr: 1 }}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                    <Typography variant=\"h5\" component=\"h1\" gutterBottom sx={{ flexGrow: 1 }}>\r\n                        Template Management\r\n                    </Typography>\r\n                    <Button\r\n                        variant=\"outlined\"\r\n                        color=\"primary\"\r\n                        onClick={() => fetchTemplatesInternal()}\r\n                        startIcon={<RefreshIcon />}\r\n                        sx={{ mr: 2 }}\r\n                    >\r\n                        Refresh Templates\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={handleCreateNewTemplate}\r\n                        startIcon={<AddIcon />}\r\n                    >\r\n                        Create Template\r\n                    </Button>\r\n                </Box>\r\n                \r\n                <Divider sx={{ mb: 3 }} />\r\n                \r\n                {/* Business ID input section */}\r\n                {(showBusinessIdInput || !businessId || !businessApiKey) && (\r\n                    <Box sx={{ mb: 3, p: 2, border: '1px dashed', borderColor: 'warning.main', borderRadius: 1 }}>\r\n                        <Typography variant=\"subtitle1\" color=\"warning.main\" gutterBottom>\r\n                            Business Credentials Required\r\n                        </Typography>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={12} md={5}>\r\n                                <TextField\r\n                                    fullWidth\r\n                                    label=\"Business ID\"\r\n                                    value={businessId}\r\n                                    onChange={(e) => setBusinessId(e.target.value)}\r\n                                    placeholder=\"Enter your business ID\"\r\n                                    helperText=\"Required for managing templates\"\r\n                                    required\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} md={5}>\r\n                                <TextField\r\n                                    fullWidth\r\n                                    label=\"Business API Key\"\r\n                                    value={businessApiKey}\r\n                                    onChange={(e) => setBusinessApiKey(e.target.value)}\r\n                                    placeholder=\"Enter your business API key\"\r\n                                    helperText=\"Required for authentication\"\r\n                                    type=\"password\"\r\n                                    required\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} md={2}>\r\n                                <Button \r\n                                    variant=\"contained\" \r\n                                    color=\"primary\"\r\n                                    onClick={saveCredentials}\r\n                                    fullWidth\r\n                                    sx={{ height: '56px' }}\r\n                                >\r\n                                    Validate & Save\r\n                                </Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Box>\r\n                )}\r\n                \r\n                {/* Agent ID input section */}\r\n                {(showAgentIdInput || !agentId) && (\r\n                    <Box sx={{ mb: 3, p: 2, border: '1px dashed', borderColor: 'warning.main', borderRadius: 1 }}>\r\n                        <Typography variant=\"subtitle1\" color=\"warning.main\" gutterBottom>\r\n                            Agent ID Required\r\n                        </Typography>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={12} md={9}>\r\n                                <TextField\r\n                                    fullWidth\r\n                                    label=\"Agent ID\"\r\n                                    value={agentId}\r\n                                    onChange={(e) => setAgentId(e.target.value)}\r\n                                    placeholder=\"Enter an agent ID\"\r\n                                    helperText=\"Required for managing templates\"\r\n                                    required\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} md={3}>\r\n                                <Button \r\n                                    variant=\"contained\" \r\n                                    color=\"primary\"\r\n                                    onClick={() => {\r\n                                        if (agentId) {\r\n                                            // Save to localStorage\r\n                                            localStorage.setItem('agentId', agentId);\r\n                                            setShowAgentIdInput(false);\r\n                                            showSnackbar('Agent ID saved', 'success');\r\n                                            // Fetch templates for this agent\r\n                                            fetchTemplatesInternal();\r\n                                        } else {\r\n                                            showSnackbar('Please enter an Agent ID', 'error');\r\n                                        }\r\n                                    }}\r\n                                    fullWidth\r\n                                    sx={{ height: '56px' }}\r\n                                >\r\n                                    Save & Use\r\n                                </Button>\r\n                            </Grid>\r\n                            <Grid item xs={12} mt={2}>\r\n                                <Typography variant=\"body2\" color=\"text.secondary\">\r\n                                    After saving or changing the agent ID, click the button below to load templates:\r\n                                </Typography>\r\n                                <Button \r\n                                    variant=\"outlined\" \r\n                                    fullWidth\r\n                                    onClick={fetchTemplatesInternal}\r\n                                    startIcon={<RefreshIcon />}\r\n                                    sx={{ mt: 1 }}\r\n                                >\r\n                                    Load Templates for this Agent\r\n                                </Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Box>\r\n                )}\r\n                \r\n                {/* Template filter */}\r\n                <Box sx={{ mb: 3 }}>\r\n                    <Grid container spacing={2} alignItems=\"center\">\r\n                        <Grid item xs={12} md={4}>\r\n                            <TextField\r\n                                fullWidth\r\n                                label=\"Search Templates\"\r\n                                value={filterType}\r\n                                onChange={(e) => setFilterType(e.target.value)}\r\n                                placeholder=\"Search by type\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} md={3}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel id=\"filter-type-label\">Filter by Type</InputLabel>\r\n                                <Select\r\n                                    labelId=\"filter-type-label\"\r\n                                    value={filterType}\r\n                                    onChange={(e) => setFilterType(e.target.value)}\r\n                                    label=\"Filter by Type\"\r\n                                >\r\n                                    <MenuItem value=\"all\">All Templates</MenuItem>\r\n                                    <ListSubheader>Regular Templates</ListSubheader>\r\n                                    {templateTypes\r\n                                        .filter(type => type.group === 'Regular')\r\n                                        .map((type) => (\r\n                                            <MenuItem key={type.value} value={type.value}>\r\n                                                {type.label}\r\n                                            </MenuItem>\r\n                                        ))\r\n                                    }\r\n                                    <ListSubheader>Default Templates</ListSubheader>\r\n                                    {templateTypes\r\n                                        .filter(type => type.group === 'Default')\r\n                                        .map((type) => (\r\n                                            <MenuItem key={type.value} value={type.value}>\r\n                                                {type.label}\r\n                                            </MenuItem>\r\n                                        ))\r\n                                    }\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={12} md={4}>\r\n                            <Button\r\n                                variant=\"outlined\"\r\n                                startIcon={<RefreshIcon />}\r\n                                onClick={() => {\r\n                                    // Use the internal implementation if fetchTemplates is not a function\r\n                                    if (typeof fetchTemplates === 'function') {\r\n                                        fetchTemplates();\r\n                                    } else {\r\n                                        fetchTemplatesInternal();\r\n                                    }\r\n                                }}\r\n                            >\r\n                                Refresh\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Box>\r\n                \r\n                {isLoading ? (\r\n                    <Box sx={{ display: 'flex', justifyContent: 'center', p: 4 }}>\r\n                        <CircularProgress />\r\n                    </Box>\r\n                ) : (\r\n                    <>\r\n                        {filteredTemplates.length === 0 ? (\r\n                            <Alert severity=\"info\">\r\n                                No templates found. Create your first template to get started.\r\n                            </Alert>\r\n                        ) : (\r\n                            <List sx={{ bgcolor: 'background.paper' }}>\r\n                                {filteredTemplates.map((template) => (\r\n                                    <ListItem\r\n                                        key={template.template_id}\r\n                                        button\r\n                                        onClick={() => handleEditExistingTemplate(template.template_id)}\r\n                                        sx={{ \r\n                                            mb: 1,\r\n                                            borderLeft: isDefaultTemplate(template.template_type) ? '4px solid #f50057' : 'none',\r\n                                            bgcolor: isDefaultTemplate(template.template_type) ? 'rgba(245, 0, 87, 0.04)' : 'background.paper'\r\n                                        }}\r\n                                    >\r\n                                        <ListItemText\r\n                                            primary={\r\n                                                <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                                    {isDefaultTemplate(template.template_type) && (\r\n                                                        <Tooltip title=\"Default Template\">\r\n                                                            <StarIcon sx={{ mr: 1, color: 'secondary.main', fontSize: '1rem' }} />\r\n                                                        </Tooltip>\r\n                                                    )}\r\n                                                    <Typography variant=\"subtitle1\">\r\n                                                        {template.template_name || 'Unnamed Template'}\r\n                                                    </Typography>\r\n                                                    <Chip \r\n                                                        size=\"small\" \r\n                                                        label={getTemplateTypeLabel(template.template_type)} \r\n                                                        sx={{ ml: 1 }}\r\n                                                        color={isDefaultTemplate(template.template_type) ? 'secondary' : 'primary'}\r\n                                                        variant={isDefaultTemplate(template.template_type) ? 'filled' : 'outlined'}\r\n                                                    />\r\n                                                </Box>\r\n                                            }\r\n                                            secondary={\r\n                                                <>\r\n                                                    <Typography component=\"span\" variant=\"body2\" color=\"text.secondary\">\r\n                                                        {template.template_description || 'No description'}\r\n                                                    </Typography>\r\n                                                    <Typography component=\"span\" variant=\"caption\" color=\"text.secondary\" sx={{ display: 'block' }}>\r\n                                                        ID: {template.template_id}\r\n                                                    </Typography>\r\n                                                </>\r\n                                            }\r\n                                        />\r\n                                        <ListItemSecondaryAction>\r\n                                            <Tooltip title=\"Edit Template\">\r\n                                                <IconButton \r\n                                                    edge=\"end\" \r\n                                                    aria-label=\"edit\"\r\n                                                    onClick={(e) => {\r\n                                                        e.stopPropagation();\r\n                                                        handleEditExistingTemplate(template.template_id);\r\n                                                    }}\r\n                                                >\r\n                                                    <EditIcon />\r\n                                                </IconButton>\r\n                                            </Tooltip>\r\n                                            <Tooltip title=\"Duplicate Template\">\r\n                                                <IconButton \r\n                                                    edge=\"end\" \r\n                                                    aria-label=\"duplicate\"\r\n                                                    onClick={(e) => {\r\n                                                        e.stopPropagation();\r\n                                                        handleDuplicateTemplate(template);\r\n                                                    }}\r\n                                                >\r\n                                                    <ContentCopyIcon />\r\n                                                </IconButton>\r\n                                            </Tooltip>\r\n                                            <Tooltip title=\"Delete Template\">\r\n                                                <IconButton \r\n                                                    edge=\"end\" \r\n                                                    aria-label=\"delete\"\r\n                                                    onClick={(e) => {\r\n                                                        e.stopPropagation();\r\n                                                        handleDeleteTemplate(template.template_id);\r\n                                                    }}\r\n                                                >\r\n                                                    <DeleteIcon />\r\n                                                </IconButton>\r\n                                            </Tooltip>\r\n                                        </ListItemSecondaryAction>\r\n                                    </ListItem>\r\n                                ))}\r\n                            </List>\r\n                        )}\r\n                    </>\r\n                )}\r\n                \r\n                {/* Edit Template Dialog */}\r\n                <Dialog open={editDialogOpen} onClose={() => setEditDialogOpen(false)} maxWidth=\"md\" fullWidth>\r\n                    <DialogTitle>Edit Template: {editingTemplate.template_name}</DialogTitle>\r\n                    <DialogContent>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    label=\"Template Name\" \r\n                                    value={editingTemplate.template_name}\r\n                                    onChange={(e) => setEditingTemplate({...editingTemplate, template_name: e.target.value})}\r\n                                    fullWidth\r\n                                    margin=\"normal\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <FormControl fullWidth margin=\"normal\">\r\n                                    <InputLabel>Template Type</InputLabel>\r\n                                    <Select\r\n                                        value={editingTemplate.template_type}\r\n                                        onChange={(e) => setEditingTemplate({...editingTemplate, template_type: e.target.value})}\r\n                                        label=\"Template Type\"\r\n                                    >\r\n                                        {templateTypes.map((type) => (\r\n                                            <MenuItem key={type.value} value={type.value}>\r\n                                                {type.label}\r\n                                            </MenuItem>\r\n                                        ))}\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    label=\"Template Content\"\r\n                                    value={editingTemplate.content}\r\n                                    onChange={(e) => setEditingTemplate({...editingTemplate, content: e.target.value})}\r\n                                    fullWidth\r\n                                    multiline\r\n                                    rows={6}\r\n                                    margin=\"normal\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    label=\"System Prompt (Optional)\"\r\n                                    value={editingTemplate.system_prompt}\r\n                                    onChange={(e) => setEditingTemplate({...editingTemplate, system_prompt: e.target.value})}\r\n                                    fullWidth\r\n                                    multiline\r\n                                    rows={3}\r\n                                    margin=\"normal\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Box sx={{ mt: 1 }}>\r\n                                    <Typography variant=\"subtitle2\">Variables detected:</Typography>\r\n                                    <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1, mt: 1 }}>\r\n                                        {editingTemplate.variables.map((variable, idx) => (\r\n                                            <Chip key={idx} label={variable} size=\"small\" />\r\n                                        ))}\r\n                                        {editingTemplate.variables.length === 0 && (\r\n                                            <Typography variant=\"body2\" color=\"text.secondary\">\r\n                                                No variables detected. Use {'{variable_name}'} syntax to create variables.\r\n                                            </Typography>\r\n                                        )}\r\n                                    </Box>\r\n                                </Box>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={() => setEditDialogOpen(false)}>Cancel</Button>\r\n                        <Button \r\n                            onClick={handleUpdateTemplate}\r\n                            color=\"primary\" \r\n                            variant=\"contained\"\r\n                            disabled={!editingTemplate.template_name || !editingTemplate.content}\r\n                        >\r\n                            Save Changes\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n                \r\n                {/* Snackbar for notifications */}\r\n                <Snackbar\r\n                    open={snackbar.open}\r\n                    autoHideDuration={6000}\r\n                    onClose={handleCloseSnackbar}\r\n                    anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                >\r\n                    <Alert onClose={handleCloseSnackbar} severity={snackbar.severity} sx={{ width: '100%' }}>\r\n                        {snackbar.message}\r\n                    </Alert>\r\n                </Snackbar>\r\n            </Paper>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default TemplateManagement;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}