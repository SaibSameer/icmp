{"ast":null,"code":"// File: src/services/testService.js\n// Last Modified: 2026-03-29\n\nconst API_BASE_URL = 'http://localhost:5000';\n\n// Helper function to handle API calls\nconst handleApiCall = async (url, method, apiKey, body = null) => {\n  const headers = {\n    'Authorization': `Bearer ${apiKey}`,\n    'Content-Type': 'application/json'\n  };\n  const config = {\n    method,\n    headers\n  };\n  if (body) {\n    config.body = JSON.stringify(body);\n  }\n  try {\n    const response = await fetch(url, config);\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.message || `HTTP error! Status: ${response.status}`);\n    }\n    return await response.json();\n  } catch (error) {\n    console.error(\"API call failed:\", error);\n    throw error;\n  }\n};\nexport const saveConfig = async (apiKey, userId, businessId) => {\n  // This function doesn't actually call an API. It only saves to localStorage.\n  return new Promise(resolve => {\n    localStorage.setItem('icmpApiKey', apiKey);\n    resolve({\n      success: true,\n      message: 'Configuration saved to localStorage'\n    });\n  });\n};\nexport const createUser = async (firstName, lastName, email) => {\n  // Placeholder. Implement when the API endpoint is ready.\n  return new Promise(resolve => {\n    // Simulate API call delay\n    setTimeout(() => {\n      resolve({\n        success: true,\n        message: 'User created successfully (simulated)'\n      });\n    }, 500);\n  });\n};\nexport const fetchBusinessDetails = async (businessId, apiKey) => {\n  // Placeholder. Implement when the API endpoint is ready.\n  return new Promise(resolve => {\n    // Simulate API call delay\n    setTimeout(() => {\n      resolve({\n        success: true,\n        message: 'Business details fetched successfully (simulated)'\n      });\n    }, 500);\n  });\n};\nexport const createTemplate = async (templateData, apiKey) => {\n  return handleApiCall(`${API_BASE_URL}/templates`, 'POST', apiKey, templateData);\n};\nexport const fetchTemplates = async apiKey => {\n  return handleApiCall(`${API_BASE_URL}/templates`, 'GET', apiKey);\n};\nexport const createStage = async (stageData, apiKey) => {\n  return handleApiCall(`${API_BASE_URL}/stages`, 'POST', apiKey, stageData);\n};\nexport const fetchStages = async (businessId, apiKey) => {\n  return handleApiCall(`${API_BASE_URL}/stages/${businessId}`, 'GET', apiKey);\n};\nexport const processMessage = async (messageData, apiKey) => {\n  return handleApiCall(`${API_BASE_URL}/message`, 'POST', apiKey, messageData);\n};\nexport const getStage = async (stageId, apiKey) => {\n  return handleApiCall(`${API_BASE_URL}/stages/${stageId}`, 'GET', apiKey);\n};\nexport const updateStage = async (stageId, stageData, apiKey) => {\n  return handleApiCall(`${API_BASE_URL}/stages/${stageId}`, 'PUT', apiKey, stageData);\n};\n\n//Function to fetch default template\nexport const getDefaultTemplates = async apiKey => {\n  return handleApiCall(`${API_BASE_URL}/templates`, 'GET', apiKey); // Implement API call to GET all default templates;\n};\n\n//Function to save Default Templates\nexport const saveDefaultTemplate = async (templateData, apiKey) => {\n  return handleApiCall(`${API_BASE_URL}/templates`, 'POST', apiKey, templateData); // Implement API call to post default templates;\n};","map":{"version":3,"names":["API_BASE_URL","handleApiCall","url","method","apiKey","body","headers","config","JSON","stringify","response","fetch","ok","errorData","json","Error","message","status","error","console","saveConfig","userId","businessId","Promise","resolve","localStorage","setItem","success","createUser","firstName","lastName","email","setTimeout","fetchBusinessDetails","createTemplate","templateData","fetchTemplates","createStage","stageData","fetchStages","processMessage","messageData","getStage","stageId","updateStage","getDefaultTemplates","saveDefaultTemplate"],"sources":["C:/icmp_events_api/front-end/src/services/testService.js"],"sourcesContent":["// File: src/services/testService.js\r\n// Last Modified: 2026-03-29\r\n\r\nconst API_BASE_URL = 'http://localhost:5000';\r\n\r\n// Helper function to handle API calls\r\nconst handleApiCall = async (url, method, apiKey, body = null) => {\r\n    const headers = {\r\n        'Authorization': `Bearer ${apiKey}`,\r\n        'Content-Type': 'application/json',\r\n    };\r\n\r\n    const config = {\r\n        method,\r\n        headers,\r\n    };\r\n\r\n    if (body) {\r\n        config.body = JSON.stringify(body);\r\n    }\r\n\r\n    try {\r\n        const response = await fetch(url, config);\r\n        if (!response.ok) {\r\n            const errorData = await response.json();\r\n            throw new Error(errorData.message || `HTTP error! Status: ${response.status}`);\r\n        }\r\n        return await response.json();\r\n    } catch (error) {\r\n        console.error(\"API call failed:\", error);\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const saveConfig = async (apiKey, userId, businessId) => {\r\n    // This function doesn't actually call an API. It only saves to localStorage.\r\n    return new Promise((resolve) => {\r\n        localStorage.setItem('icmpApiKey', apiKey);\r\n        resolve({ success: true, message: 'Configuration saved to localStorage' });\r\n    });\r\n};\r\n\r\nexport const createUser = async (firstName, lastName, email) => {\r\n    // Placeholder. Implement when the API endpoint is ready.\r\n    return new Promise((resolve) => {\r\n        // Simulate API call delay\r\n        setTimeout(() => {\r\n            resolve({ success: true, message: 'User created successfully (simulated)' });\r\n        }, 500);\r\n    });\r\n};\r\n\r\nexport const fetchBusinessDetails = async (businessId, apiKey) => {\r\n    // Placeholder. Implement when the API endpoint is ready.\r\n    return new Promise((resolve) => {\r\n        // Simulate API call delay\r\n        setTimeout(() => {\r\n            resolve({ success: true, message: 'Business details fetched successfully (simulated)' });\r\n        }, 500);\r\n    });\r\n};\r\n\r\nexport const createTemplate = async (templateData, apiKey) => {\r\n    return handleApiCall(`${API_BASE_URL}/templates`, 'POST', apiKey, templateData);\r\n};\r\n\r\nexport const fetchTemplates = async (apiKey) => {\r\n    return handleApiCall(`${API_BASE_URL}/templates`, 'GET', apiKey);\r\n};\r\n\r\nexport const createStage = async (stageData, apiKey) => {\r\n    return handleApiCall(`${API_BASE_URL}/stages`, 'POST', apiKey, stageData);\r\n};\r\n\r\nexport const fetchStages = async (businessId, apiKey) => {\r\n    return handleApiCall(`${API_BASE_URL}/stages/${businessId}`, 'GET', apiKey);\r\n};\r\n\r\nexport const processMessage = async (messageData, apiKey) => {\r\n    return handleApiCall(`${API_BASE_URL}/message`, 'POST', apiKey, messageData);\r\n};\r\n\r\nexport const getStage = async (stageId, apiKey) => {\r\n    return handleApiCall(`${API_BASE_URL}/stages/${stageId}`, 'GET', apiKey);\r\n};\r\n\r\nexport const updateStage = async (stageId, stageData, apiKey) => {\r\n    return handleApiCall(`${API_BASE_URL}/stages/${stageId}`, 'PUT', apiKey, stageData);\r\n};\r\n\r\n//Function to fetch default template\r\nexport const getDefaultTemplates = async (apiKey) => {\r\n    return handleApiCall(`${API_BASE_URL}/templates`, 'GET', apiKey); // Implement API call to GET all default templates;\r\n};\r\n\r\n//Function to save Default Templates\r\nexport const saveDefaultTemplate = async (templateData, apiKey) => {\r\n    return handleApiCall(`${API_BASE_URL}/templates`, 'POST', apiKey, templateData); // Implement API call to post default templates;\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}