{"ast":null,"code":"const API_BASE_URL = 'http://localhost:5000';\nconst handleApiCall = async (url, method, body = null) => {\n  const headers = {\n    'Authorization': `Bearer ${process.env.REACT_APP_ICMP_API_KEY}`,\n    'Content-Type': 'application/json'\n  };\n  const options = {\n    method,\n    headers,\n    ...(body && {\n      body: JSON.stringify(body)\n    })\n  };\n  try {\n    const response = await fetch(url, options);\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    return await response.json();\n  } catch (error) {\n    console.error(`${method} ${url} failed:`, error);\n    throw error;\n  }\n};\nexport const validateConfigApi = async (businessApiKey, userId, businessId) => {\n  const body = {\n    api_key: businessApiKey,\n    user_id: userId,\n    business_id: businessId\n  };\n  return await handleApiCall(`${API_BASE_URL}/validate_config`, 'POST', body);\n};\nexport const fetchBusinessDetailsApi = async businessId => {\n  return await handleApiCall(`${API_BASE_URL}/businesses/${businessId}`, 'GET');\n};\nexport const createTemplateApi = async (businessId, templateData, businessApiKey) => {\n  const body = {\n    business_id: businessId,\n    ...templateData,\n    api_key: businessApiKey\n  };\n  return await handleApiCall(`${API_BASE_URL}/templates`, 'POST', body);\n};\nexport const fetchTemplatesApi = async businessId => {\n  return await handleApiCall(`${API_BASE_URL}/templates?business_id=${businessId}`, 'GET');\n};\nexport const getDefaultTemplatesApi = async () => {\n  return await handleApiCall(`${API_BASE_URL}/defaultTemplates`, 'GET');\n};\nexport const createStageApi = async (businessId, stageData, businessApiKey) => {\n  const body = {\n    business_id: businessId,\n    ...stageData,\n    api_key: businessApiKey\n  };\n  return await handleApiCall(`${API_BASE_URL}/stages`, 'POST', body);\n};\nexport const fetchStagesApi = async businessId => {\n  return await handleApiCall(`${API_BASE_URL}/stages?business_id=${businessId}`, 'GET');\n};\nexport const sendMessageApi = async (businessId, message, businessApiKey) => {\n  const body = {\n    business_id: businessId,\n    message,\n    api_key: businessApiKey\n  };\n  return await handleApiCall(`${API_BASE_URL}/message`, 'POST', body);\n};\nexport const checkHealthApi = async () => {\n  return await handleApiCall(`${API_BASE_URL}/health`, 'GET');\n};","map":{"version":3,"names":["API_BASE_URL","handleApiCall","url","method","body","headers","process","env","REACT_APP_ICMP_API_KEY","options","JSON","stringify","response","fetch","ok","Error","status","json","error","console","validateConfigApi","businessApiKey","userId","businessId","api_key","user_id","business_id","fetchBusinessDetailsApi","createTemplateApi","templateData","fetchTemplatesApi","getDefaultTemplatesApi","createStageApi","stageData","fetchStagesApi","sendMessageApi","message","checkHealthApi"],"sources":["C:/icmp_events_api/front-end/src/services/testService.js"],"sourcesContent":["const API_BASE_URL = 'http://localhost:5000';\r\n\r\nconst handleApiCall = async (url, method, body = null) => {\r\n  const headers = {\r\n    'Authorization': `Bearer ${process.env.REACT_APP_ICMP_API_KEY}`,\r\n    'Content-Type': 'application/json',\r\n  };\r\n\r\n  const options = {\r\n    method,\r\n    headers,\r\n    ...(body && { body: JSON.stringify(body) }),\r\n  };\r\n\r\n  try {\r\n    const response = await fetch(url, options);\r\n    if (!response.ok) {\r\n      throw new Error(`HTTP error! status: ${response.status}`);\r\n    }\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(`${method} ${url} failed:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const validateConfigApi = async (businessApiKey, userId, businessId) => {\r\n  const body = { api_key: businessApiKey, user_id: userId, business_id: businessId };\r\n  return await handleApiCall(`${API_BASE_URL}/validate_config`, 'POST', body);\r\n};\r\n\r\nexport const fetchBusinessDetailsApi = async (businessId) => {\r\n  return await handleApiCall(`${API_BASE_URL}/businesses/${businessId}`, 'GET');\r\n};\r\n\r\nexport const createTemplateApi = async (businessId, templateData, businessApiKey) => {\r\n  const body = { business_id: businessId, ...templateData, api_key: businessApiKey };\r\n  return await handleApiCall(`${API_BASE_URL}/templates`, 'POST', body);\r\n};\r\n\r\nexport const fetchTemplatesApi = async (businessId) => {\r\n  return await handleApiCall(`${API_BASE_URL}/templates?business_id=${businessId}`, 'GET');\r\n};\r\n\r\nexport const getDefaultTemplatesApi = async () => {\r\n  return await handleApiCall(`${API_BASE_URL}/defaultTemplates`, 'GET');\r\n};\r\n\r\nexport const createStageApi = async (businessId, stageData, businessApiKey) => {\r\n  const body = { business_id: businessId, ...stageData, api_key: businessApiKey };\r\n  return await handleApiCall(`${API_BASE_URL}/stages`, 'POST', body);\r\n};\r\n\r\nexport const fetchStagesApi = async (businessId) => {\r\n  return await handleApiCall(`${API_BASE_URL}/stages?business_id=${businessId}`, 'GET');\r\n};\r\n\r\nexport const sendMessageApi = async (businessId, message, businessApiKey) => {\r\n  const body = { business_id: businessId, message, api_key: businessApiKey };\r\n  return await handleApiCall(`${API_BASE_URL}/message`, 'POST', body);\r\n};\r\n\r\nexport const checkHealthApi = async () => {\r\n  return await handleApiCall(`${API_BASE_URL}/health`, 'GET');\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}