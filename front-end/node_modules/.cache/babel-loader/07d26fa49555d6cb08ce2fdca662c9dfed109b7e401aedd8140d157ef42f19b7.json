{"ast":null,"code":"var _jsxFileName = \"C:\\\\icmp_events_api\\\\front-end\\\\src\\\\components\\\\StageEditor.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useParams, useNavigate, useLocation } from 'react-router-dom';\nimport { Box, Paper, Typography, TextField, Button, Tabs, Tab, Grid, Alert, Snackbar, IconButton, Tooltip, FormControl, InputLabel, MenuItem, Select, CircularProgress, Divider, Chip } from '@mui/material';\nimport SaveIcon from '@mui/icons-material/Save';\nimport PreviewIcon from '@mui/icons-material/Preview';\nimport RestartAltIcon from '@mui/icons-material/RestartAlt';\nimport HelpOutlineIcon from '@mui/icons-material/HelpOutline';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\n\n// TabPanel component for the tabs\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction TabPanel(props) {\n  const {\n    children,\n    value,\n    index,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: `tabpanel-${index}`,\n    \"aria-labelledby\": `tab-${index}`,\n    ...other,\n    style: {\n      padding: '20px 0'\n    },\n    children: value === index && /*#__PURE__*/_jsxDEV(Box, {\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_c = TabPanel;\nconst StageEditor = () => {\n  _s();\n  const {\n    stageId\n  } = useParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  // Get businessId and agentId from location state or URL query parameters\n  const queryParams = new URLSearchParams(location.search);\n  const queryBusinessId = queryParams.get('business_id');\n  const queryAgentId = queryParams.get('agent_id');\n\n  // Location state values as fallback\n  const {\n    businessId: locationBusinessId,\n    agentId: locationAgentId,\n    isNewStage\n  } = location.state || {};\n\n  // Use query parameters first, fall back to location state\n  const businessId = queryBusinessId || locationBusinessId;\n  const agentId = queryAgentId || locationAgentId;\n  const [stage, setStage] = useState(null);\n  const [stageName, setStageName] = useState('');\n  const [stageDescription, setStageDescription] = useState('');\n  const [tabValue, setTabValue] = useState(0);\n  const [templates, setTemplates] = useState({\n    stage_selection: {\n      id: '',\n      text: '',\n      type: ''\n    },\n    data_extraction: {\n      id: '',\n      text: '',\n      type: ''\n    },\n    response_generation: {\n      id: '',\n      text: '',\n      type: ''\n    }\n  });\n  const [availableTemplates, setAvailableTemplates] = useState({\n    stage_selection: [],\n    data_extraction: [],\n    response_generation: [],\n    default_stage_selection: [],\n    default_data_extraction: [],\n    default_response_generation: []\n  });\n  const [variables, setVariables] = useState({\n    stage_selection: [],\n    data_extraction: [],\n    response_generation: []\n  });\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [previewData, setPreviewData] = useState(null);\n\n  // Add template saving loading states\n  const [savingTemplates, setSavingTemplates] = useState({\n    stage_selection: false,\n    data_extraction: false,\n    response_generation: false\n  });\n\n  // Fetch stage data when the component mounts\n  useEffect(() => {\n    if (stageId && stageId !== 'new') {\n      fetchStage(stageId);\n    } else if (isNewStage) {\n      // For new stage, set up defaults but don't fetch\n      setStage({\n        stage_name: '',\n        stage_description: '',\n        business_id: businessId,\n        agent_id: agentId,\n        stage_selection_template_id: null,\n        data_extraction_template_id: null,\n        response_generation_template_id: null,\n        stage_config: {\n          order: 0\n        }\n      });\n    }\n\n    // Always fetch available templates\n    fetchAllTemplates();\n  }, [stageId, businessId, agentId, isNewStage]);\n\n  // Fetch specific stage data\n  const fetchStage = async id => {\n    setIsLoading(true);\n    try {\n      const response = await fetch(`/stages/${id}`, {\n        credentials: 'include'\n      });\n      if (!response.ok) throw new Error('Failed to fetch stage');\n      const data = await response.json();\n      setStage(data);\n      setStageName(data.stage_name || '');\n      setStageDescription(data.stage_description || '');\n\n      // For each template ID in the stage, fetch the template content\n      if (data.stage_selection_template_id) {\n        fetchTemplate(data.stage_selection_template_id, 'stage_selection');\n      }\n      if (data.data_extraction_template_id) {\n        fetchTemplate(data.data_extraction_template_id, 'data_extraction');\n      }\n      if (data.response_generation_template_id) {\n        fetchTemplate(data.response_generation_template_id, 'response_generation');\n      }\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Fetch all available templates on component mount\n  const fetchAllTemplates = async () => {\n    setIsLoading(true);\n    try {\n      // Fetch all templates\n      const response = await fetch('/templates', {\n        credentials: 'include'\n      });\n      if (!response.ok) throw new Error('Failed to fetch templates');\n      const data = await response.json();\n\n      // Organize templates by type\n      const templatesByType = {\n        stage_selection: [],\n        data_extraction: [],\n        response_generation: [],\n        default_stage_selection: [],\n        default_data_extraction: [],\n        default_response_generation: []\n      };\n      data.forEach(template => {\n        if (templatesByType[template.template_type]) {\n          templatesByType[template.template_type].push(template);\n        }\n      });\n      setAvailableTemplates(templatesByType);\n    } catch (err) {\n      setError(err.message || 'Failed to fetch templates');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const fetchTemplate = useCallback(async (templateId, type) => {\n    try {\n      const response = await fetch(`/templates/${templateId}`, {\n        credentials: 'include'\n      });\n      if (!response.ok) throw new Error(`Failed to fetch ${type} template`);\n      const data = await response.json();\n      setTemplates(prev => ({\n        ...prev,\n        [type]: {\n          id: data.template_id,\n          text: data.template_text,\n          type: data.template_type\n        }\n      }));\n\n      // Extract variables from template\n      setVariables(prev => ({\n        ...prev,\n        [type]: extractVariables(data.template_text)\n      }));\n    } catch (err) {\n      setError(err.message);\n    }\n  }, []);\n  const extractVariables = template => {\n    if (!template) return [];\n    const matches = template.match(/\\{([^}]+)\\}/g) || [];\n    return matches.map(match => match.slice(1, -1));\n  };\n  const handleTemplateChange = (type, value) => {\n    setTemplates(prev => ({\n      ...prev,\n      [type]: {\n        ...prev[type],\n        text: value\n      }\n    }));\n    // Update variables when template changes\n    setVariables(prev => ({\n      ...prev,\n      [type]: extractVariables(value)\n    }));\n  };\n  const handleTemplateSelect = async (type, templateId) => {\n    // If selecting \"None\", clear the template\n    if (!templateId) {\n      setTemplates(prev => ({\n        ...prev,\n        [type]: {\n          id: '',\n          text: '',\n          type: ''\n        }\n      }));\n      setVariables(prev => ({\n        ...prev,\n        [type]: []\n      }));\n      return;\n    }\n\n    // Fetch the selected template\n    await fetchTemplate(templateId, type);\n  };\n  const handleApplyDefaultTemplate = async type => {\n    // Map regular types to their default counterparts\n    const defaultTypeMap = {\n      'stage_selection': 'default_stage_selection',\n      'data_extraction': 'default_data_extraction',\n      'response_generation': 'default_response_generation'\n    };\n    const defaultType = defaultTypeMap[type];\n\n    // Find default templates of the corresponding type\n    const defaultTemplates = availableTemplates[defaultType];\n    if (defaultTemplates.length === 0) {\n      setError(`No default templates available for ${type}`);\n      return;\n    }\n\n    // For simplicity, use the first default template\n    const defaultTemplate = defaultTemplates[0];\n\n    // Apply the default template text (but keep the original ID)\n    setTemplates(prev => ({\n      ...prev,\n      [type]: {\n        ...prev[type],\n        text: defaultTemplate.template_text,\n        type: type // Keep the original type, not the default type\n      }\n    }));\n\n    // Update variables\n    setVariables(prev => ({\n      ...prev,\n      [type]: extractVariables(defaultTemplate.template_text)\n    }));\n    setSuccess(`Applied default template for ${type}`);\n  };\n  const handlePreview = async type => {\n    try {\n      // Get the current template text for preview\n      const templateText = templates[type].text;\n      if (!templateText.trim()) {\n        setError('Template is empty. Nothing to preview.');\n        return;\n      }\n\n      // Prepare the preview request\n      const previewRequest = {\n        templates: {\n          [type]: templateText\n        },\n        context: {\n          conversation_history: [\"User: Hello, I need help.\", \"AI: How can I assist you today?\"],\n          message: \"I want to book a flight\",\n          stage_list: [\"Greeting\", \"Flight Booking\", \"Confirmation\"],\n          extracted_data: {\n            intent: \"flight_booking\"\n          }\n        }\n      };\n      const response = await fetch('/templates/preview', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        body: JSON.stringify(previewRequest)\n      });\n      if (!response.ok) throw new Error('Failed to generate preview');\n      const data = await response.json();\n      setPreviewData({\n        type,\n        result: data[type] || data.result || \"Preview not available\"\n      });\n\n      // Show success message with preview data\n      setSuccess(`Preview generated for ${type}`);\n      return data;\n    } catch (err) {\n      setError(err.message);\n      return null;\n    }\n  };\n\n  // Update saveTemplate function to use loading state\n  const saveTemplate = async type => {\n    try {\n      var _document$cookie$spli;\n      setSavingTemplates(prev => ({\n        ...prev,\n        [type]: true\n      }));\n      if (!businessId) {\n        setError('Business ID is required to save template');\n        return;\n      }\n      const template = templates[type];\n      if (!template.text.trim()) {\n        setError(`Template text is required for ${type}`);\n        return;\n      }\n\n      // Get business API key from cookies\n      const businessApiKey = (_document$cookie$spli = document.cookie.split('; ').find(row => row.startsWith('businessApiKey='))) === null || _document$cookie$spli === void 0 ? void 0 : _document$cookie$spli.split('=')[1];\n      if (!businessApiKey) {\n        setError('Business API key is required but was not found in cookies');\n        return;\n      }\n\n      // If there's an ID, update existing template, otherwise create new\n      const url = template.id ? `/templates/${template.id}` : '/templates';\n      const method = template.id ? 'PUT' : 'POST';\n\n      // Add query parameter with business_id as fallback\n      const urlWithParams = `${url}?business_id=${businessId}`;\n      const templateData = {\n        template_name: `${stageName || 'New Stage'} - ${type.replace(/_/g, ' ')}`,\n        template_text: template.text,\n        template_type: type,\n        business_id: businessId // Important: Include business_id\n      };\n      console.log(`Saving ${type} template:`, templateData);\n      const response = await fetch(urlWithParams, {\n        method,\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${businessApiKey}` // Add Authorization header as backup\n        },\n        credentials: 'include',\n        body: JSON.stringify(templateData)\n      });\n      if (!response.ok) throw new Error(`Failed to save ${type} template`);\n      const data = await response.json();\n      console.log(`Template ${type} saved successfully:`, data);\n\n      // Update template ID if it was a new template\n      if (!template.id) {\n        setTemplates(prev => ({\n          ...prev,\n          [type]: {\n            ...prev[type],\n            id: data.template_id\n          }\n        }));\n      }\n      setSuccess(`${type} template saved successfully`);\n\n      // After successful save, refresh the available templates\n      fetchAllTemplates();\n    } catch (err) {\n      console.error(`Error saving ${type} template:`, err);\n      setError(`Error saving template: ${err.message}`);\n    } finally {\n      setSavingTemplates(prev => ({\n        ...prev,\n        [type]: false\n      }));\n    }\n  };\n\n  // Then modify the handleSave function to include the business API key\n  const handleSave = async () => {\n    if (!stage) return;\n    try {\n      var _document$cookie$spli2;\n      // Validate stage name\n      if (!stageName.trim()) {\n        setError('Stage name is required');\n        return;\n      }\n\n      // Ensure businessId is available\n      if (!businessId) {\n        setError('Business ID is required but was not found');\n        console.error('Business ID is missing', {\n          businessId,\n          locationBusinessId,\n          queryBusinessId\n        });\n        return;\n      }\n\n      // Get business API key from cookies\n      const businessApiKey = (_document$cookie$spli2 = document.cookie.split('; ').find(row => row.startsWith('businessApiKey='))) === null || _document$cookie$spli2 === void 0 ? void 0 : _document$cookie$spli2.split('=')[1];\n      if (!businessApiKey) {\n        setError('Business API key is required but was not found in cookies');\n        return;\n      }\n\n      // Check if we need to save any templates first\n      const templatesSavingNeeded = [];\n      if (templates.stage_selection.text && !templates.stage_selection.id) {\n        templatesSavingNeeded.push('stage_selection');\n      }\n      if (templates.data_extraction.text && !templates.data_extraction.id) {\n        templatesSavingNeeded.push('data_extraction');\n      }\n      if (templates.response_generation.text && !templates.response_generation.id) {\n        templatesSavingNeeded.push('response_generation');\n      }\n\n      // If any templates need saving, save them first\n      if (templatesSavingNeeded.length > 0) {\n        setSuccess(`Saving ${templatesSavingNeeded.length} template(s) first...`);\n\n        // Save templates in sequence\n        for (const type of templatesSavingNeeded) {\n          await saveTemplate(type);\n        }\n      }\n\n      // Prepare updated stage data\n      const updatedStage = {\n        ...stage,\n        stage_name: stageName,\n        stage_description: stageDescription,\n        business_id: businessId,\n        agent_id: agentId || null,\n        stage_type: 'conversation',\n        // Required field\n        stage_selection_template_id: templates.stage_selection.id || null,\n        data_extraction_template_id: templates.data_extraction.id || null,\n        response_generation_template_id: templates.response_generation.id || null\n      };\n      let response;\n      let method;\n      let url;\n\n      // Determine if this is a create or update operation\n      if (stageId === 'new' || isNewStage) {\n        method = 'POST';\n        url = '/stages';\n      } else {\n        method = 'PUT';\n        url = `/stages/${stageId}`;\n      }\n\n      // Add query parameter with business_id as fallback\n      url = `${url}?business_id=${businessId}`;\n      console.log('Saving stage with data:', JSON.stringify(updatedStage, null, 2));\n\n      // Call the API\n      response = await fetch(url, {\n        method: method,\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${businessApiKey}` // Add Authorization header as backup\n        },\n        credentials: 'include',\n        // This sends cookies\n        body: JSON.stringify(updatedStage)\n      });\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({}));\n        throw new Error(errorData.error || errorData.message || (stageId === 'new' ? 'Failed to create stage' : 'Failed to update stage'));\n      }\n      const result = await response.json();\n      console.log('Stage saved successfully:', result);\n      setSuccess(stageId === 'new' ? 'Stage created successfully' : 'Stage updated successfully');\n\n      // Navigate back to stage manager after a short delay\n      setTimeout(() => {\n        let backUrl;\n        if (businessId && agentId) {\n          backUrl = `/stage-management/business_id=${businessId}/agent_id=${agentId}`;\n        } else if (businessId) {\n          backUrl = `/stage-management/business_id=${businessId}`;\n        } else {\n          backUrl = '/stage-management';\n        }\n        navigate(backUrl);\n      }, 1500);\n    } catch (err) {\n      console.error('Error saving stage:', err);\n      setError(err.message || 'Failed to save stage');\n    }\n  };\n  const handleCancel = () => {\n    // Navigate back to stage manager\n    let backUrl;\n    if (businessId && agentId) {\n      backUrl = `/stage-management/business_id=${businessId}/agent_id=${agentId}`;\n    } else if (businessId) {\n      backUrl = `/stage-management/business_id=${businessId}`;\n    } else {\n      backUrl = '/stage-management';\n    }\n    navigate(backUrl);\n  };\n  const handleTabChange = (event, newValue) => {\n    setTabValue(newValue);\n  };\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    sx: {\n      p: 3,\n      mb: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        alignItems: 'center',\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: handleCancel,\n        sx: {\n          mr: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 577,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 576,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        children: stageId && stageId !== 'new' ? 'Edit Stage' : 'Create New Stage'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 579,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 575,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      sx: {\n        mb: 2\n      },\n      onClose: () => setError(''),\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 585,\n      columnNumber: 9\n    }, this), success && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"success\",\n      sx: {\n        mb: 2\n      },\n      onClose: () => setSuccess(''),\n      children: success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 591,\n      columnNumber: 9\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'center',\n        p: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 598,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 597,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mb: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: \"Stage Information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 604,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Stage Name\",\n              value: stageName,\n              onChange: e => setStageName(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 609,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 608,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Stage Description\",\n              value: stageDescription,\n              onChange: e => setStageDescription(e.target.value),\n              multiline: true,\n              rows: 2\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 618,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 617,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 607,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 603,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        sx: {\n          my: 3\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 630,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: \"Templates\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 634,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n          value: tabValue,\n          onChange: handleTabChange,\n          sx: {\n            mb: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Tab, {\n            label: \"Stage Selection\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 639,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            label: \"Data Extraction\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 640,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            label: \"Response Generation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 641,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 638,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n          value: tabValue,\n          index: 0,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              sx: {\n                mb: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                id: \"stage-selection-template-label\",\n                children: \"Template\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 648,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                labelId: \"stage-selection-template-label\",\n                value: templates.stage_selection.id || '',\n                label: \"Template\",\n                onChange: e => handleTemplateSelect('stage_selection', e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"\",\n                  children: /*#__PURE__*/_jsxDEV(\"em\", {\n                    children: \"None\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 656,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 655,\n                  columnNumber: 21\n                }, this), availableTemplates.stage_selection.map(template => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: template.template_id,\n                  children: template.template_name\n                }, template.template_id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 659,\n                  columnNumber: 23\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 649,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 647,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                justifyContent: 'space-between',\n                alignItems: 'center',\n                mb: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                color: \"text.secondary\",\n                children: templates.stage_selection.id ? `Template ID: ${templates.stage_selection.id}` : 'No template selected'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 667,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                color: \"primary\",\n                onClick: () => saveTemplate('stage_selection'),\n                disabled: !templates.stage_selection.text || savingTemplates.stage_selection,\n                startIcon: savingTemplates.stage_selection ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                  size: 20\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 677,\n                  columnNumber: 66\n                }, this) : null,\n                children: savingTemplates.stage_selection ? 'Saving...' : 'Save Template'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 672,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 666,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                gap: 1,\n                mb: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                startIcon: /*#__PURE__*/_jsxDEV(RestartAltIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 686,\n                  columnNumber: 32\n                }, this),\n                onClick: () => handleApplyDefaultTemplate('stage_selection'),\n                disabled: availableTemplates.default_stage_selection.length === 0,\n                children: \"Apply Default\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 684,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                startIcon: /*#__PURE__*/_jsxDEV(PreviewIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 694,\n                  columnNumber: 32\n                }, this),\n                onClick: () => handlePreview('stage_selection'),\n                disabled: !templates.stage_selection.text,\n                children: \"Preview\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 692,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                title: \"Variables are enclosed in curly braces like {user_name}\",\n                children: /*#__PURE__*/_jsxDEV(IconButton, {\n                  children: /*#__PURE__*/_jsxDEV(HelpOutlineIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 702,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 701,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 700,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 683,\n              columnNumber: 17\n            }, this), previewData && previewData.type === 'stage_selection' && /*#__PURE__*/_jsxDEV(Alert, {\n              severity: \"info\",\n              sx: {\n                mb: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                children: \"Preview:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 709,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                sx: {\n                  whiteSpace: 'pre-wrap'\n                },\n                children: previewData.result\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 710,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 708,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Template Text\",\n              value: templates.stage_selection.text || '',\n              onChange: e => handleTemplateChange('stage_selection', e.target.value),\n              multiline: true,\n              rows: 8,\n              placeholder: \"Enter template text with variables in {curly_braces}\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 716,\n              columnNumber: 17\n            }, this), variables.stage_selection.length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                mt: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                children: \"Variables:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 728,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  flexWrap: 'wrap',\n                  gap: 1\n                },\n                children: variables.stage_selection.map(variable => /*#__PURE__*/_jsxDEV(Chip, {\n                  label: variable,\n                  size: \"small\"\n                }, variable, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 731,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 729,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 727,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 646,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 645,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n          value: tabValue,\n          index: 1,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              sx: {\n                mb: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                id: \"data-extraction-template-label\",\n                children: \"Template\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 743,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                labelId: \"data-extraction-template-label\",\n                value: templates.data_extraction.id || '',\n                label: \"Template\",\n                onChange: e => handleTemplateSelect('data_extraction', e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"\",\n                  children: /*#__PURE__*/_jsxDEV(\"em\", {\n                    children: \"None\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 751,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 750,\n                  columnNumber: 21\n                }, this), availableTemplates.data_extraction.map(template => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: template.template_id,\n                  children: template.template_name\n                }, template.template_id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 754,\n                  columnNumber: 23\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 744,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 742,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                justifyContent: 'space-between',\n                alignItems: 'center',\n                mb: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                color: \"text.secondary\",\n                children: templates.data_extraction.id ? `Template ID: ${templates.data_extraction.id}` : 'No template selected'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 762,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                color: \"primary\",\n                onClick: () => saveTemplate('data_extraction'),\n                disabled: !templates.data_extraction.text || savingTemplates.data_extraction,\n                startIcon: savingTemplates.data_extraction ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                  size: 20\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 772,\n                  columnNumber: 66\n                }, this) : null,\n                children: savingTemplates.data_extraction ? 'Saving...' : 'Save Template'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 767,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 761,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                gap: 1,\n                mb: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                startIcon: /*#__PURE__*/_jsxDEV(RestartAltIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 781,\n                  columnNumber: 32\n                }, this),\n                onClick: () => handleApplyDefaultTemplate('data_extraction'),\n                disabled: availableTemplates.default_data_extraction.length === 0,\n                children: \"Apply Default\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 779,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                startIcon: /*#__PURE__*/_jsxDEV(PreviewIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 789,\n                  columnNumber: 32\n                }, this),\n                onClick: () => handlePreview('data_extraction'),\n                disabled: !templates.data_extraction.text,\n                children: \"Preview\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 787,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                title: \"Variables are enclosed in curly braces like {user_name}\",\n                children: /*#__PURE__*/_jsxDEV(IconButton, {\n                  children: /*#__PURE__*/_jsxDEV(HelpOutlineIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 797,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 796,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 795,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 778,\n              columnNumber: 17\n            }, this), previewData && previewData.type === 'data_extraction' && /*#__PURE__*/_jsxDEV(Alert, {\n              severity: \"info\",\n              sx: {\n                mb: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                children: \"Preview:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 804,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                sx: {\n                  whiteSpace: 'pre-wrap'\n                },\n                children: previewData.result\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 805,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 803,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Template Text\",\n              value: templates.data_extraction.text || '',\n              onChange: e => handleTemplateChange('data_extraction', e.target.value),\n              multiline: true,\n              rows: 8,\n              placeholder: \"Enter template text with variables in {curly_braces}\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 811,\n              columnNumber: 17\n            }, this), variables.data_extraction.length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                mt: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                children: \"Variables:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 823,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  flexWrap: 'wrap',\n                  gap: 1\n                },\n                children: variables.data_extraction.map(variable => /*#__PURE__*/_jsxDEV(Chip, {\n                  label: variable,\n                  size: \"small\"\n                }, variable, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 826,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 824,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 822,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 741,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 740,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n          value: tabValue,\n          index: 2,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              sx: {\n                mb: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                id: \"response-generation-template-label\",\n                children: \"Template\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 838,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                labelId: \"response-generation-template-label\",\n                value: templates.response_generation.id || '',\n                label: \"Template\",\n                onChange: e => handleTemplateSelect('response_generation', e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"\",\n                  children: /*#__PURE__*/_jsxDEV(\"em\", {\n                    children: \"None\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 846,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 845,\n                  columnNumber: 21\n                }, this), availableTemplates.response_generation.map(template => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: template.template_id,\n                  children: template.template_name\n                }, template.template_id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 849,\n                  columnNumber: 23\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 839,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 837,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                justifyContent: 'space-between',\n                alignItems: 'center',\n                mb: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                color: \"text.secondary\",\n                children: templates.response_generation.id ? `Template ID: ${templates.response_generation.id}` : 'No template selected'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 857,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                color: \"primary\",\n                onClick: () => saveTemplate('response_generation'),\n                disabled: !templates.response_generation.text || savingTemplates.response_generation,\n                startIcon: savingTemplates.response_generation ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                  size: 20\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 867,\n                  columnNumber: 70\n                }, this) : null,\n                children: savingTemplates.response_generation ? 'Saving...' : 'Save Template'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 862,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 856,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                gap: 1,\n                mb: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                startIcon: /*#__PURE__*/_jsxDEV(RestartAltIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 876,\n                  columnNumber: 32\n                }, this),\n                onClick: () => handleApplyDefaultTemplate('response_generation'),\n                disabled: availableTemplates.default_response_generation.length === 0,\n                children: \"Apply Default\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 874,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                startIcon: /*#__PURE__*/_jsxDEV(PreviewIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 884,\n                  columnNumber: 32\n                }, this),\n                onClick: () => handlePreview('response_generation'),\n                disabled: !templates.response_generation.text,\n                children: \"Preview\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 882,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                title: \"Variables are enclosed in curly braces like {user_name}\",\n                children: /*#__PURE__*/_jsxDEV(IconButton, {\n                  children: /*#__PURE__*/_jsxDEV(HelpOutlineIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 892,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 891,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 890,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 873,\n              columnNumber: 17\n            }, this), previewData && previewData.type === 'response_generation' && /*#__PURE__*/_jsxDEV(Alert, {\n              severity: \"info\",\n              sx: {\n                mb: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                children: \"Preview:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 899,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                sx: {\n                  whiteSpace: 'pre-wrap'\n                },\n                children: previewData.result\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 900,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 898,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Template Text\",\n              value: templates.response_generation.text || '',\n              onChange: e => handleTemplateChange('response_generation', e.target.value),\n              multiline: true,\n              rows: 8,\n              placeholder: \"Enter template text with variables in {curly_braces}\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 906,\n              columnNumber: 17\n            }, this), variables.response_generation.length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                mt: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                children: \"Variables:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 918,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  flexWrap: 'wrap',\n                  gap: 1\n                },\n                children: variables.response_generation.map(variable => /*#__PURE__*/_jsxDEV(Chip, {\n                  label: variable,\n                  size: \"small\"\n                }, variable, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 921,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 919,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 917,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 836,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 835,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 633,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 3,\n          display: 'flex',\n          justifyContent: 'space-between'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          onClick: handleCancel,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 932,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          startIcon: /*#__PURE__*/_jsxDEV(SaveIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 940,\n            columnNumber: 26\n          }, this),\n          onClick: handleSave,\n          disabled: isLoading,\n          children: isLoading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n            size: 24\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 944,\n            columnNumber: 28\n          }, this) : stageId === 'new' ? 'Create Stage' : 'Save Stage'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 938,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 931,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 573,\n    columnNumber: 5\n  }, this);\n};\n_s(StageEditor, \"VO7c74dVfW10BXGugng5cn0db2c=\", false, function () {\n  return [useParams, useNavigate, useLocation];\n});\n_c2 = StageEditor;\nexport default StageEditor;\nvar _c, _c2;\n$RefreshReg$(_c, \"TabPanel\");\n$RefreshReg$(_c2, \"StageEditor\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useParams","useNavigate","useLocation","Box","Paper","Typography","TextField","Button","Tabs","Tab","Grid","Alert","Snackbar","IconButton","Tooltip","FormControl","InputLabel","MenuItem","Select","CircularProgress","Divider","Chip","SaveIcon","PreviewIcon","RestartAltIcon","HelpOutlineIcon","ArrowBackIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","TabPanel","props","children","value","index","other","role","hidden","id","style","padding","fileName","_jsxFileName","lineNumber","columnNumber","_c","StageEditor","_s","stageId","navigate","location","queryParams","URLSearchParams","search","queryBusinessId","get","queryAgentId","businessId","locationBusinessId","agentId","locationAgentId","isNewStage","state","stage","setStage","stageName","setStageName","stageDescription","setStageDescription","tabValue","setTabValue","templates","setTemplates","stage_selection","text","type","data_extraction","response_generation","availableTemplates","setAvailableTemplates","default_stage_selection","default_data_extraction","default_response_generation","variables","setVariables","error","setError","success","setSuccess","isLoading","setIsLoading","previewData","setPreviewData","savingTemplates","setSavingTemplates","fetchStage","stage_name","stage_description","business_id","agent_id","stage_selection_template_id","data_extraction_template_id","response_generation_template_id","stage_config","order","fetchAllTemplates","response","fetch","credentials","ok","Error","data","json","fetchTemplate","err","message","templatesByType","forEach","template","template_type","push","templateId","prev","template_id","template_text","extractVariables","matches","match","map","slice","handleTemplateChange","handleTemplateSelect","handleApplyDefaultTemplate","defaultTypeMap","defaultType","defaultTemplates","length","defaultTemplate","handlePreview","templateText","trim","previewRequest","context","conversation_history","stage_list","extracted_data","intent","method","headers","body","JSON","stringify","result","saveTemplate","_document$cookie$spli","businessApiKey","document","cookie","split","find","row","startsWith","url","urlWithParams","templateData","template_name","replace","console","log","handleSave","_document$cookie$spli2","templatesSavingNeeded","updatedStage","stage_type","errorData","catch","setTimeout","backUrl","handleCancel","handleTabChange","event","newValue","sx","p","mb","display","alignItems","onClick","mr","variant","severity","onClose","justifyContent","gutterBottom","container","spacing","item","xs","fullWidth","label","onChange","e","target","required","multiline","rows","my","labelId","color","disabled","startIcon","size","gap","title","whiteSpace","placeholder","mt","flexWrap","variable","_c2","$RefreshReg$"],"sources":["C:/icmp_events_api/front-end/src/components/StageEditor.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { useParams, useNavigate, useLocation } from 'react-router-dom';\r\nimport {\r\n  Box,\r\n  Paper,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Tabs,\r\n  Tab,\r\n  Grid,\r\n  Alert,\r\n  Snackbar,\r\n  IconButton,\r\n  Tooltip,\r\n  FormControl,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  CircularProgress,\r\n  Divider,\r\n  Chip\r\n} from '@mui/material';\r\nimport SaveIcon from '@mui/icons-material/Save';\r\nimport PreviewIcon from '@mui/icons-material/Preview';\r\nimport RestartAltIcon from '@mui/icons-material/RestartAlt';\r\nimport HelpOutlineIcon from '@mui/icons-material/HelpOutline';\r\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\r\n\r\n// TabPanel component for the tabs\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`tabpanel-${index}`}\r\n      aria-labelledby={`tab-${index}`}\r\n      {...other}\r\n      style={{ padding: '20px 0' }}\r\n    >\r\n      {value === index && (\r\n        <Box>\r\n          {children}\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst StageEditor = () => {\r\n  const { stageId } = useParams();\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  \r\n  // Get businessId and agentId from location state or URL query parameters\r\n  const queryParams = new URLSearchParams(location.search);\r\n  const queryBusinessId = queryParams.get('business_id');\r\n  const queryAgentId = queryParams.get('agent_id');\r\n  \r\n  // Location state values as fallback\r\n  const { businessId: locationBusinessId, agentId: locationAgentId, isNewStage } = location.state || {};\r\n  \r\n  // Use query parameters first, fall back to location state\r\n  const businessId = queryBusinessId || locationBusinessId;\r\n  const agentId = queryAgentId || locationAgentId;\r\n  \r\n  const [stage, setStage] = useState(null);\r\n  const [stageName, setStageName] = useState('');\r\n  const [stageDescription, setStageDescription] = useState('');\r\n  const [tabValue, setTabValue] = useState(0);\r\n  const [templates, setTemplates] = useState({\r\n    stage_selection: { id: '', text: '', type: '' },\r\n    data_extraction: { id: '', text: '', type: '' },\r\n    response_generation: { id: '', text: '', type: '' }\r\n  });\r\n  const [availableTemplates, setAvailableTemplates] = useState({\r\n    stage_selection: [],\r\n    data_extraction: [],\r\n    response_generation: [],\r\n    default_stage_selection: [],\r\n    default_data_extraction: [],\r\n    default_response_generation: []\r\n  });\r\n  const [variables, setVariables] = useState({\r\n    stage_selection: [],\r\n    data_extraction: [],\r\n    response_generation: []\r\n  });\r\n  const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [previewData, setPreviewData] = useState(null);\r\n  \r\n  // Add template saving loading states\r\n  const [savingTemplates, setSavingTemplates] = useState({\r\n    stage_selection: false,\r\n    data_extraction: false,\r\n    response_generation: false\r\n  });\r\n\r\n  // Fetch stage data when the component mounts\r\n  useEffect(() => {\r\n    if (stageId && stageId !== 'new') {\r\n      fetchStage(stageId);\r\n    } else if (isNewStage) {\r\n      // For new stage, set up defaults but don't fetch\r\n      setStage({\r\n        stage_name: '',\r\n        stage_description: '',\r\n        business_id: businessId,\r\n        agent_id: agentId,\r\n        stage_selection_template_id: null,\r\n        data_extraction_template_id: null,\r\n        response_generation_template_id: null,\r\n        stage_config: { order: 0 }\r\n      });\r\n    }\r\n    \r\n    // Always fetch available templates\r\n    fetchAllTemplates();\r\n  }, [stageId, businessId, agentId, isNewStage]);\r\n\r\n  // Fetch specific stage data\r\n  const fetchStage = async (id) => {\r\n    setIsLoading(true);\r\n    try {\r\n      const response = await fetch(`/stages/${id}`, {\r\n        credentials: 'include'\r\n      });\r\n      \r\n      if (!response.ok) throw new Error('Failed to fetch stage');\r\n      \r\n      const data = await response.json();\r\n      setStage(data);\r\n      setStageName(data.stage_name || '');\r\n      setStageDescription(data.stage_description || '');\r\n      \r\n      // For each template ID in the stage, fetch the template content\r\n      if (data.stage_selection_template_id) {\r\n        fetchTemplate(data.stage_selection_template_id, 'stage_selection');\r\n      }\r\n      if (data.data_extraction_template_id) {\r\n        fetchTemplate(data.data_extraction_template_id, 'data_extraction');\r\n      }\r\n      if (data.response_generation_template_id) {\r\n        fetchTemplate(data.response_generation_template_id, 'response_generation');\r\n      }\r\n    } catch (err) {\r\n      setError(err.message);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  // Fetch all available templates on component mount\r\n  const fetchAllTemplates = async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      // Fetch all templates\r\n      const response = await fetch('/templates', {\r\n        credentials: 'include'\r\n      });\r\n      \r\n      if (!response.ok) throw new Error('Failed to fetch templates');\r\n      \r\n      const data = await response.json();\r\n      \r\n      // Organize templates by type\r\n      const templatesByType = {\r\n        stage_selection: [],\r\n        data_extraction: [],\r\n        response_generation: [],\r\n        default_stage_selection: [],\r\n        default_data_extraction: [],\r\n        default_response_generation: []\r\n      };\r\n      \r\n      data.forEach(template => {\r\n        if (templatesByType[template.template_type]) {\r\n          templatesByType[template.template_type].push(template);\r\n        }\r\n      });\r\n      \r\n      setAvailableTemplates(templatesByType);\r\n    } catch (err) {\r\n      setError(err.message || 'Failed to fetch templates');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchTemplate = useCallback(async (templateId, type) => {\r\n    try {\r\n      const response = await fetch(`/templates/${templateId}`, {\r\n        credentials: 'include'\r\n      });\r\n      \r\n      if (!response.ok) throw new Error(`Failed to fetch ${type} template`);\r\n      \r\n      const data = await response.json();\r\n      \r\n      setTemplates(prev => ({\r\n        ...prev,\r\n        [type]: {\r\n          id: data.template_id,\r\n          text: data.template_text,\r\n          type: data.template_type\r\n        }\r\n      }));\r\n      \r\n      // Extract variables from template\r\n      setVariables(prev => ({\r\n        ...prev,\r\n        [type]: extractVariables(data.template_text)\r\n      }));\r\n    } catch (err) {\r\n      setError(err.message);\r\n    }\r\n  }, []);\r\n\r\n  const extractVariables = (template) => {\r\n    if (!template) return [];\r\n    const matches = template.match(/\\{([^}]+)\\}/g) || [];\r\n    return matches.map(match => match.slice(1, -1));\r\n  };\r\n\r\n  const handleTemplateChange = (type, value) => {\r\n    setTemplates(prev => ({\r\n      ...prev,\r\n      [type]: {\r\n        ...prev[type],\r\n        text: value\r\n      }\r\n    }));\r\n    // Update variables when template changes\r\n    setVariables(prev => ({\r\n      ...prev,\r\n      [type]: extractVariables(value)\r\n    }));\r\n  };\r\n\r\n  const handleTemplateSelect = async (type, templateId) => {\r\n    // If selecting \"None\", clear the template\r\n    if (!templateId) {\r\n      setTemplates(prev => ({\r\n        ...prev,\r\n        [type]: { id: '', text: '', type: '' }\r\n      }));\r\n      setVariables(prev => ({\r\n        ...prev,\r\n        [type]: []\r\n      }));\r\n      return;\r\n    }\r\n    \r\n    // Fetch the selected template\r\n    await fetchTemplate(templateId, type);\r\n  };\r\n\r\n  const handleApplyDefaultTemplate = async (type) => {\r\n    // Map regular types to their default counterparts\r\n    const defaultTypeMap = {\r\n      'stage_selection': 'default_stage_selection',\r\n      'data_extraction': 'default_data_extraction',\r\n      'response_generation': 'default_response_generation'\r\n    };\r\n    \r\n    const defaultType = defaultTypeMap[type];\r\n    \r\n    // Find default templates of the corresponding type\r\n    const defaultTemplates = availableTemplates[defaultType];\r\n    \r\n    if (defaultTemplates.length === 0) {\r\n      setError(`No default templates available for ${type}`);\r\n      return;\r\n    }\r\n    \r\n    // For simplicity, use the first default template\r\n    const defaultTemplate = defaultTemplates[0];\r\n    \r\n    // Apply the default template text (but keep the original ID)\r\n    setTemplates(prev => ({\r\n      ...prev,\r\n      [type]: {\r\n        ...prev[type],\r\n        text: defaultTemplate.template_text,\r\n        type: type // Keep the original type, not the default type\r\n      }\r\n    }));\r\n    \r\n    // Update variables\r\n    setVariables(prev => ({\r\n      ...prev,\r\n      [type]: extractVariables(defaultTemplate.template_text)\r\n    }));\r\n    \r\n    setSuccess(`Applied default template for ${type}`);\r\n  };\r\n\r\n  const handlePreview = async (type) => {\r\n    try {\r\n      // Get the current template text for preview\r\n      const templateText = templates[type].text;\r\n      \r\n      if (!templateText.trim()) {\r\n        setError('Template is empty. Nothing to preview.');\r\n        return;\r\n      }\r\n      \r\n      // Prepare the preview request\r\n      const previewRequest = {\r\n        templates: {\r\n          [type]: templateText\r\n        },\r\n        context: {\r\n          conversation_history: [\"User: Hello, I need help.\", \"AI: How can I assist you today?\"],\r\n          message: \"I want to book a flight\",\r\n          stage_list: [\"Greeting\", \"Flight Booking\", \"Confirmation\"],\r\n          extracted_data: { intent: \"flight_booking\" }\r\n        }\r\n      };\r\n      \r\n      const response = await fetch('/templates/preview', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify(previewRequest),\r\n      });\r\n      \r\n      if (!response.ok) throw new Error('Failed to generate preview');\r\n      \r\n      const data = await response.json();\r\n      setPreviewData({\r\n        type,\r\n        result: data[type] || data.result || \"Preview not available\"\r\n      });\r\n      \r\n      // Show success message with preview data\r\n      setSuccess(`Preview generated for ${type}`);\r\n      \r\n      return data;\r\n    } catch (err) {\r\n      setError(err.message);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  // Update saveTemplate function to use loading state\r\n  const saveTemplate = async (type) => {\r\n    try {\r\n      setSavingTemplates(prev => ({ ...prev, [type]: true }));\r\n      \r\n      if (!businessId) {\r\n        setError('Business ID is required to save template');\r\n        return;\r\n      }\r\n\r\n      const template = templates[type];\r\n      if (!template.text.trim()) {\r\n        setError(`Template text is required for ${type}`);\r\n        return;\r\n      }\r\n\r\n      // Get business API key from cookies\r\n      const businessApiKey = document.cookie\r\n        .split('; ')\r\n        .find(row => row.startsWith('businessApiKey='))\r\n        ?.split('=')[1];\r\n      \r\n      if (!businessApiKey) {\r\n        setError('Business API key is required but was not found in cookies');\r\n        return;\r\n      }\r\n\r\n      // If there's an ID, update existing template, otherwise create new\r\n      const url = template.id ? `/templates/${template.id}` : '/templates';\r\n      const method = template.id ? 'PUT' : 'POST';\r\n\r\n      // Add query parameter with business_id as fallback\r\n      const urlWithParams = `${url}?business_id=${businessId}`;\r\n\r\n      const templateData = {\r\n        template_name: `${stageName || 'New Stage'} - ${type.replace(/_/g, ' ')}`,\r\n        template_text: template.text,\r\n        template_type: type,\r\n        business_id: businessId // Important: Include business_id\r\n      };\r\n\r\n      console.log(`Saving ${type} template:`, templateData);\r\n\r\n      const response = await fetch(urlWithParams, {\r\n        method,\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${businessApiKey}` // Add Authorization header as backup\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify(templateData),\r\n      });\r\n\r\n      if (!response.ok) throw new Error(`Failed to save ${type} template`);\r\n\r\n      const data = await response.json();\r\n      console.log(`Template ${type} saved successfully:`, data);\r\n      \r\n      // Update template ID if it was a new template\r\n      if (!template.id) {\r\n        setTemplates(prev => ({\r\n          ...prev,\r\n          [type]: {\r\n            ...prev[type],\r\n            id: data.template_id\r\n          }\r\n        }));\r\n      }\r\n\r\n      setSuccess(`${type} template saved successfully`);\r\n      \r\n      // After successful save, refresh the available templates\r\n      fetchAllTemplates();\r\n    } catch (err) {\r\n      console.error(`Error saving ${type} template:`, err);\r\n      setError(`Error saving template: ${err.message}`);\r\n    } finally {\r\n      setSavingTemplates(prev => ({ ...prev, [type]: false }));\r\n    }\r\n  };\r\n\r\n  // Then modify the handleSave function to include the business API key\r\n  const handleSave = async () => {\r\n    if (!stage) return;\r\n    \r\n    try {\r\n      // Validate stage name\r\n      if (!stageName.trim()) {\r\n        setError('Stage name is required');\r\n        return;\r\n      }\r\n      \r\n      // Ensure businessId is available\r\n      if (!businessId) {\r\n        setError('Business ID is required but was not found');\r\n        console.error('Business ID is missing', { businessId, locationBusinessId, queryBusinessId });\r\n        return;\r\n      }\r\n      \r\n      // Get business API key from cookies\r\n      const businessApiKey = document.cookie\r\n        .split('; ')\r\n        .find(row => row.startsWith('businessApiKey='))\r\n        ?.split('=')[1];\r\n      \r\n      if (!businessApiKey) {\r\n        setError('Business API key is required but was not found in cookies');\r\n        return;\r\n      }\r\n      \r\n      // Check if we need to save any templates first\r\n      const templatesSavingNeeded = [];\r\n      if (templates.stage_selection.text && !templates.stage_selection.id) {\r\n        templatesSavingNeeded.push('stage_selection');\r\n      }\r\n      if (templates.data_extraction.text && !templates.data_extraction.id) {\r\n        templatesSavingNeeded.push('data_extraction');\r\n      }\r\n      if (templates.response_generation.text && !templates.response_generation.id) {\r\n        templatesSavingNeeded.push('response_generation');\r\n      }\r\n      \r\n      // If any templates need saving, save them first\r\n      if (templatesSavingNeeded.length > 0) {\r\n        setSuccess(`Saving ${templatesSavingNeeded.length} template(s) first...`);\r\n        \r\n        // Save templates in sequence\r\n        for (const type of templatesSavingNeeded) {\r\n          await saveTemplate(type);\r\n        }\r\n      }\r\n      \r\n      // Prepare updated stage data\r\n      const updatedStage = {\r\n        ...stage,\r\n        stage_name: stageName,\r\n        stage_description: stageDescription,\r\n        business_id: businessId,\r\n        agent_id: agentId || null,\r\n        stage_type: 'conversation', // Required field\r\n        stage_selection_template_id: templates.stage_selection.id || null,\r\n        data_extraction_template_id: templates.data_extraction.id || null,\r\n        response_generation_template_id: templates.response_generation.id || null\r\n      };\r\n      \r\n      let response;\r\n      let method;\r\n      let url;\r\n      \r\n      // Determine if this is a create or update operation\r\n      if (stageId === 'new' || isNewStage) {\r\n        method = 'POST';\r\n        url = '/stages';\r\n      } else {\r\n        method = 'PUT';\r\n        url = `/stages/${stageId}`;\r\n      }\r\n      \r\n      // Add query parameter with business_id as fallback\r\n      url = `${url}?business_id=${businessId}`;\r\n      \r\n      console.log('Saving stage with data:', JSON.stringify(updatedStage, null, 2));\r\n      \r\n      // Call the API\r\n      response = await fetch(url, {\r\n        method: method,\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${businessApiKey}` // Add Authorization header as backup\r\n        },\r\n        credentials: 'include', // This sends cookies\r\n        body: JSON.stringify(updatedStage),\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        const errorData = await response.json().catch(() => ({}));\r\n        throw new Error(errorData.error || errorData.message || \r\n          (stageId === 'new' ? 'Failed to create stage' : 'Failed to update stage'));\r\n      }\r\n      \r\n      const result = await response.json();\r\n      console.log('Stage saved successfully:', result);\r\n      \r\n      setSuccess(stageId === 'new' ? 'Stage created successfully' : 'Stage updated successfully');\r\n      \r\n      // Navigate back to stage manager after a short delay\r\n      setTimeout(() => {\r\n        let backUrl;\r\n        if (businessId && agentId) {\r\n          backUrl = `/stage-management/business_id=${businessId}/agent_id=${agentId}`;\r\n        } else if (businessId) {\r\n          backUrl = `/stage-management/business_id=${businessId}`;\r\n        } else {\r\n          backUrl = '/stage-management';\r\n        }\r\n        navigate(backUrl);\r\n      }, 1500);\r\n    } catch (err) {\r\n      console.error('Error saving stage:', err);\r\n      setError(err.message || 'Failed to save stage');\r\n    }\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    // Navigate back to stage manager\r\n    let backUrl;\r\n    if (businessId && agentId) {\r\n      backUrl = `/stage-management/business_id=${businessId}/agent_id=${agentId}`;\r\n    } else if (businessId) {\r\n      backUrl = `/stage-management/business_id=${businessId}`;\r\n    } else {\r\n      backUrl = '/stage-management';\r\n    }\r\n    navigate(backUrl);\r\n  };\r\n\r\n  const handleTabChange = (event, newValue) => {\r\n    setTabValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <Paper sx={{ p: 3, mb: 3 }}>\r\n      {/* Back button and title */}\r\n      <Box sx={{ display: 'flex', alignItems: 'center', mb: 3 }}>\r\n        <IconButton onClick={handleCancel} sx={{ mr: 1 }}>\r\n          <ArrowBackIcon />\r\n        </IconButton>\r\n        <Typography variant=\"h5\">\r\n          {stageId && stageId !== 'new' ? 'Edit Stage' : 'Create New Stage'}\r\n        </Typography>\r\n      </Box>\r\n      \r\n      {error && (\r\n        <Alert severity=\"error\" sx={{ mb: 2 }} onClose={() => setError('')}>\r\n          {error}\r\n        </Alert>\r\n      )}\r\n      \r\n      {success && (\r\n        <Alert severity=\"success\" sx={{ mb: 2 }} onClose={() => setSuccess('')}>\r\n          {success}\r\n        </Alert>\r\n      )}\r\n      \r\n      {isLoading ? (\r\n        <Box sx={{ display: 'flex', justifyContent: 'center', p: 4 }}>\r\n          <CircularProgress />\r\n        </Box>\r\n      ) : (\r\n        <>\r\n          {/* Basic stage information */}\r\n          <Box sx={{ mb: 3 }}>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              Stage Information\r\n            </Typography>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Stage Name\"\r\n                  value={stageName}\r\n                  onChange={(e) => setStageName(e.target.value)}\r\n                  required\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Stage Description\"\r\n                  value={stageDescription}\r\n                  onChange={(e) => setStageDescription(e.target.value)}\r\n                  multiline\r\n                  rows={2}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n          \r\n          <Divider sx={{ my: 3 }} />\r\n          \r\n          {/* Template editing section */}\r\n          <Box>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              Templates\r\n            </Typography>\r\n            \r\n            <Tabs value={tabValue} onChange={handleTabChange} sx={{ mb: 2 }}>\r\n              <Tab label=\"Stage Selection\" />\r\n              <Tab label=\"Data Extraction\" />\r\n              <Tab label=\"Response Generation\" />\r\n            </Tabs>\r\n            \r\n            {/* Stage Selection Template */}\r\n            <TabPanel value={tabValue} index={0}>\r\n              <Box sx={{ mb: 2 }}>\r\n                <FormControl fullWidth sx={{ mb: 2 }}>\r\n                  <InputLabel id=\"stage-selection-template-label\">Template</InputLabel>\r\n                  <Select\r\n                    labelId=\"stage-selection-template-label\"\r\n                    value={templates.stage_selection.id || ''}\r\n                    label=\"Template\"\r\n                    onChange={(e) => handleTemplateSelect('stage_selection', e.target.value)}\r\n                  >\r\n                    <MenuItem value=\"\">\r\n                      <em>None</em>\r\n                    </MenuItem>\r\n                    {availableTemplates.stage_selection.map((template) => (\r\n                      <MenuItem key={template.template_id} value={template.template_id}>\r\n                        {template.template_name}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n                \r\n                <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\r\n                  <Typography variant=\"subtitle2\" color=\"text.secondary\">\r\n                    {templates.stage_selection.id ? \r\n                      `Template ID: ${templates.stage_selection.id}` : \r\n                      'No template selected'}\r\n                  </Typography>\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n                    onClick={() => saveTemplate('stage_selection')}\r\n                    disabled={!templates.stage_selection.text || savingTemplates.stage_selection}\r\n                    startIcon={savingTemplates.stage_selection ? <CircularProgress size={20} /> : null}\r\n                  >\r\n                    {savingTemplates.stage_selection ? 'Saving...' : 'Save Template'}\r\n                  </Button>\r\n                </Box>\r\n                \r\n                <Box sx={{ display: 'flex', gap: 1, mb: 2 }}>\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    startIcon={<RestartAltIcon />}\r\n                    onClick={() => handleApplyDefaultTemplate('stage_selection')}\r\n                    disabled={availableTemplates.default_stage_selection.length === 0}\r\n                  >\r\n                    Apply Default\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    startIcon={<PreviewIcon />}\r\n                    onClick={() => handlePreview('stage_selection')}\r\n                    disabled={!templates.stage_selection.text}\r\n                  >\r\n                    Preview\r\n                  </Button>\r\n                  <Tooltip title=\"Variables are enclosed in curly braces like {user_name}\">\r\n                    <IconButton>\r\n                      <HelpOutlineIcon />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                </Box>\r\n                \r\n                {previewData && previewData.type === 'stage_selection' && (\r\n                  <Alert severity=\"info\" sx={{ mb: 2 }}>\r\n                    <Typography variant=\"subtitle2\">Preview:</Typography>\r\n                    <Typography variant=\"body2\" sx={{ whiteSpace: 'pre-wrap' }}>\r\n                      {previewData.result}\r\n                    </Typography>\r\n                  </Alert>\r\n                )}\r\n                \r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Template Text\"\r\n                  value={templates.stage_selection.text || ''}\r\n                  onChange={(e) => handleTemplateChange('stage_selection', e.target.value)}\r\n                  multiline\r\n                  rows={8}\r\n                  placeholder=\"Enter template text with variables in {curly_braces}\"\r\n                />\r\n                \r\n                {variables.stage_selection.length > 0 && (\r\n                  <Box sx={{ mt: 2 }}>\r\n                    <Typography variant=\"subtitle2\">Variables:</Typography>\r\n                    <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1 }}>\r\n                      {variables.stage_selection.map((variable) => (\r\n                        <Chip key={variable} label={variable} size=\"small\" />\r\n                      ))}\r\n                    </Box>\r\n                  </Box>\r\n                )}\r\n              </Box>\r\n            </TabPanel>\r\n            \r\n            {/* Data Extraction Template */}\r\n            <TabPanel value={tabValue} index={1}>\r\n              <Box sx={{ mb: 2 }}>\r\n                <FormControl fullWidth sx={{ mb: 2 }}>\r\n                  <InputLabel id=\"data-extraction-template-label\">Template</InputLabel>\r\n                  <Select\r\n                    labelId=\"data-extraction-template-label\"\r\n                    value={templates.data_extraction.id || ''}\r\n                    label=\"Template\"\r\n                    onChange={(e) => handleTemplateSelect('data_extraction', e.target.value)}\r\n                  >\r\n                    <MenuItem value=\"\">\r\n                      <em>None</em>\r\n                    </MenuItem>\r\n                    {availableTemplates.data_extraction.map((template) => (\r\n                      <MenuItem key={template.template_id} value={template.template_id}>\r\n                        {template.template_name}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n                \r\n                <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\r\n                  <Typography variant=\"subtitle2\" color=\"text.secondary\">\r\n                    {templates.data_extraction.id ? \r\n                      `Template ID: ${templates.data_extraction.id}` : \r\n                      'No template selected'}\r\n                  </Typography>\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n                    onClick={() => saveTemplate('data_extraction')}\r\n                    disabled={!templates.data_extraction.text || savingTemplates.data_extraction}\r\n                    startIcon={savingTemplates.data_extraction ? <CircularProgress size={20} /> : null}\r\n                  >\r\n                    {savingTemplates.data_extraction ? 'Saving...' : 'Save Template'}\r\n                  </Button>\r\n                </Box>\r\n                \r\n                <Box sx={{ display: 'flex', gap: 1, mb: 2 }}>\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    startIcon={<RestartAltIcon />}\r\n                    onClick={() => handleApplyDefaultTemplate('data_extraction')}\r\n                    disabled={availableTemplates.default_data_extraction.length === 0}\r\n                  >\r\n                    Apply Default\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    startIcon={<PreviewIcon />}\r\n                    onClick={() => handlePreview('data_extraction')}\r\n                    disabled={!templates.data_extraction.text}\r\n                  >\r\n                    Preview\r\n                  </Button>\r\n                  <Tooltip title=\"Variables are enclosed in curly braces like {user_name}\">\r\n                    <IconButton>\r\n                      <HelpOutlineIcon />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                </Box>\r\n                \r\n                {previewData && previewData.type === 'data_extraction' && (\r\n                  <Alert severity=\"info\" sx={{ mb: 2 }}>\r\n                    <Typography variant=\"subtitle2\">Preview:</Typography>\r\n                    <Typography variant=\"body2\" sx={{ whiteSpace: 'pre-wrap' }}>\r\n                      {previewData.result}\r\n                    </Typography>\r\n                  </Alert>\r\n                )}\r\n                \r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Template Text\"\r\n                  value={templates.data_extraction.text || ''}\r\n                  onChange={(e) => handleTemplateChange('data_extraction', e.target.value)}\r\n                  multiline\r\n                  rows={8}\r\n                  placeholder=\"Enter template text with variables in {curly_braces}\"\r\n                />\r\n                \r\n                {variables.data_extraction.length > 0 && (\r\n                  <Box sx={{ mt: 2 }}>\r\n                    <Typography variant=\"subtitle2\">Variables:</Typography>\r\n                    <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1 }}>\r\n                      {variables.data_extraction.map((variable) => (\r\n                        <Chip key={variable} label={variable} size=\"small\" />\r\n                      ))}\r\n                    </Box>\r\n                  </Box>\r\n                )}\r\n              </Box>\r\n            </TabPanel>\r\n            \r\n            {/* Response Generation Template */}\r\n            <TabPanel value={tabValue} index={2}>\r\n              <Box sx={{ mb: 2 }}>\r\n                <FormControl fullWidth sx={{ mb: 2 }}>\r\n                  <InputLabel id=\"response-generation-template-label\">Template</InputLabel>\r\n                  <Select\r\n                    labelId=\"response-generation-template-label\"\r\n                    value={templates.response_generation.id || ''}\r\n                    label=\"Template\"\r\n                    onChange={(e) => handleTemplateSelect('response_generation', e.target.value)}\r\n                  >\r\n                    <MenuItem value=\"\">\r\n                      <em>None</em>\r\n                    </MenuItem>\r\n                    {availableTemplates.response_generation.map((template) => (\r\n                      <MenuItem key={template.template_id} value={template.template_id}>\r\n                        {template.template_name}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n                \r\n                <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\r\n                  <Typography variant=\"subtitle2\" color=\"text.secondary\">\r\n                    {templates.response_generation.id ? \r\n                      `Template ID: ${templates.response_generation.id}` : \r\n                      'No template selected'}\r\n                  </Typography>\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n                    onClick={() => saveTemplate('response_generation')}\r\n                    disabled={!templates.response_generation.text || savingTemplates.response_generation}\r\n                    startIcon={savingTemplates.response_generation ? <CircularProgress size={20} /> : null}\r\n                  >\r\n                    {savingTemplates.response_generation ? 'Saving...' : 'Save Template'}\r\n                  </Button>\r\n                </Box>\r\n                \r\n                <Box sx={{ display: 'flex', gap: 1, mb: 2 }}>\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    startIcon={<RestartAltIcon />}\r\n                    onClick={() => handleApplyDefaultTemplate('response_generation')}\r\n                    disabled={availableTemplates.default_response_generation.length === 0}\r\n                  >\r\n                    Apply Default\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    startIcon={<PreviewIcon />}\r\n                    onClick={() => handlePreview('response_generation')}\r\n                    disabled={!templates.response_generation.text}\r\n                  >\r\n                    Preview\r\n                  </Button>\r\n                  <Tooltip title=\"Variables are enclosed in curly braces like {user_name}\">\r\n                    <IconButton>\r\n                      <HelpOutlineIcon />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                </Box>\r\n                \r\n                {previewData && previewData.type === 'response_generation' && (\r\n                  <Alert severity=\"info\" sx={{ mb: 2 }}>\r\n                    <Typography variant=\"subtitle2\">Preview:</Typography>\r\n                    <Typography variant=\"body2\" sx={{ whiteSpace: 'pre-wrap' }}>\r\n                      {previewData.result}\r\n                    </Typography>\r\n                  </Alert>\r\n                )}\r\n                \r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Template Text\"\r\n                  value={templates.response_generation.text || ''}\r\n                  onChange={(e) => handleTemplateChange('response_generation', e.target.value)}\r\n                  multiline\r\n                  rows={8}\r\n                  placeholder=\"Enter template text with variables in {curly_braces}\"\r\n                />\r\n                \r\n                {variables.response_generation.length > 0 && (\r\n                  <Box sx={{ mt: 2 }}>\r\n                    <Typography variant=\"subtitle2\">Variables:</Typography>\r\n                    <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1 }}>\r\n                      {variables.response_generation.map((variable) => (\r\n                        <Chip key={variable} label={variable} size=\"small\" />\r\n                      ))}\r\n                    </Box>\r\n                  </Box>\r\n                )}\r\n              </Box>\r\n            </TabPanel>\r\n          </Box>\r\n          \r\n          {/* Save button */}\r\n          <Box sx={{ mt: 3, display: 'flex', justifyContent: 'space-between' }}>\r\n            <Button\r\n              variant=\"outlined\"\r\n              onClick={handleCancel}\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              startIcon={<SaveIcon />}\r\n              onClick={handleSave}\r\n              disabled={isLoading}\r\n            >\r\n              {isLoading ? <CircularProgress size={24} /> : (stageId === 'new' ? 'Create Stage' : 'Save Stage')}\r\n            </Button>\r\n          </Box>\r\n        </>\r\n      )}\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default StageEditor; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}