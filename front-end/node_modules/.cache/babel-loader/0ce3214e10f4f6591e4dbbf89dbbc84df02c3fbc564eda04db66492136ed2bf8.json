{"ast":null,"code":"var _jsxFileName = \"C:\\\\icmp_events_api\\\\front-end\\\\src\\\\components\\\\StageManagement.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { TextField, Button, Typography } from '@mui/material';\nimport { createStageApi, fetchStagesApi } from '../services/testService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StageManagement = ({\n  businessId,\n  businessApiKey,\n  handleSnackbarOpen\n}) => {\n  _s();\n  const [stageId, setStageId] = useState('');\n  const [stageName, setStageName] = useState('');\n  const [stageDescription, setStageDescription] = useState('');\n  const [stageType, setStageType] = useState('');\n  const [selectionTemplateId, setSelectionTemplateId] = useState('');\n  const [extractionTemplateId, setExtractionTemplateId] = useState('');\n  const [responseTemplateId, setResponseTemplateId] = useState('');\n  const [stageOutput, setStageOutput] = useState('');\n  const handleCreateStage = async () => {\n    const stageData = {\n      stage_name: stageName,\n      stage_description: stageDescription,\n      stage_type: stageType,\n      stage_selection_template_id: selectionTemplateId,\n      data_extraction_template_id: extractionTemplateId,\n      response_generation_template_id: responseTemplateId\n    };\n    try {\n      const response = await createStageApi(businessId, stageData, businessApiKey);\n      setStageOutput(JSON.stringify(response, null, 2));\n      handleSnackbarOpen(\"Stage created!\", \"success\");\n    } catch (error) {\n      setStageOutput(`Error: ${error.message}`);\n      handleSnackbarOpen(error.message, \"error\");\n    }\n  };\n  const fetchStages = async () => {\n    try {\n      const response = await fetchStagesApi(businessId);\n      setStageOutput(JSON.stringify(response, null, 2));\n      handleSnackbarOpen(\"Stages fetched!\", \"success\");\n    } catch (error) {\n      setStageOutput(`Error: ${error.message}`);\n      handleSnackbarOpen(error.message, \"error\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      children: \"Stage Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      fullWidth: true,\n      label: \"Stage ID (for editing)\",\n      variant: \"outlined\",\n      value: stageId,\n      onChange: e => setStageId(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Stage Name\",\n      variant: \"outlined\",\n      value: stageName,\n      onChange: e => setStageName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Description\",\n      variant: \"outlined\",\n      value: stageDescription,\n      onChange: e => setStageDescription(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Stage Type\",\n      variant: \"outlined\",\n      value: stageType,\n      onChange: e => setStageType(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Selection Template ID\",\n      variant: \"outlined\",\n      value: selectionTemplateId,\n      onChange: e => setSelectionTemplateId(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Extraction Template ID\",\n      variant: \"outlined\",\n      value: extractionTemplateId,\n      onChange: e => setExtractionTemplateId(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Response Template ID\",\n      variant: \"outlined\",\n      value: responseTemplateId,\n      onChange: e => setResponseTemplateId(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: handleCreateStage,\n      children: \"Create Stage\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: fetchStages,\n      children: \"Fetch Stages\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: stageOutput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(StageManagement, \"saumI+sW9NJo26GUZE7Negtd20s=\");\n_c = StageManagement;\nexport default StageManagement;\nvar _c;\n$RefreshReg$(_c, \"StageManagement\");","map":{"version":3,"names":["React","useState","TextField","Button","Typography","createStageApi","fetchStagesApi","jsxDEV","_jsxDEV","StageManagement","businessId","businessApiKey","handleSnackbarOpen","_s","stageId","setStageId","stageName","setStageName","stageDescription","setStageDescription","stageType","setStageType","selectionTemplateId","setSelectionTemplateId","extractionTemplateId","setExtractionTemplateId","responseTemplateId","setResponseTemplateId","stageOutput","setStageOutput","handleCreateStage","stageData","stage_name","stage_description","stage_type","stage_selection_template_id","data_extraction_template_id","response_generation_template_id","response","JSON","stringify","error","message","fetchStages","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","fullWidth","label","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/icmp_events_api/front-end/src/components/StageManagement.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { TextField, Button, Typography } from '@mui/material';\r\nimport { createStageApi, fetchStagesApi } from '../services/testService';\r\n\r\nconst StageManagement = ({ businessId, businessApiKey, handleSnackbarOpen }) => {\r\n  const [stageId, setStageId] = useState('');\r\n  const [stageName, setStageName] = useState('');\r\n  const [stageDescription, setStageDescription] = useState('');\r\n  const [stageType, setStageType] = useState('');\r\n  const [selectionTemplateId, setSelectionTemplateId] = useState('');\r\n  const [extractionTemplateId, setExtractionTemplateId] = useState('');\r\n  const [responseTemplateId, setResponseTemplateId] = useState('');\r\n  const [stageOutput, setStageOutput] = useState('');\r\n\r\n  const handleCreateStage = async () => {\r\n    const stageData = {\r\n      stage_name: stageName,\r\n      stage_description: stageDescription,\r\n      stage_type: stageType,\r\n      stage_selection_template_id: selectionTemplateId,\r\n      data_extraction_template_id: extractionTemplateId,\r\n      response_generation_template_id: responseTemplateId,\r\n    };\r\n    try {\r\n      const response = await createStageApi(businessId, stageData, businessApiKey);\r\n      setStageOutput(JSON.stringify(response, null, 2));\r\n      handleSnackbarOpen(\"Stage created!\", \"success\");\r\n    } catch (error) {\r\n      setStageOutput(`Error: ${error.message}`);\r\n      handleSnackbarOpen(error.message, \"error\");\r\n    }\r\n  };\r\n\r\n  const fetchStages = async () => {\r\n    try {\r\n      const response = await fetchStagesApi(businessId);\r\n      setStageOutput(JSON.stringify(response, null, 2));\r\n      handleSnackbarOpen(\"Stages fetched!\", \"success\");\r\n    } catch (error) {\r\n      setStageOutput(`Error: ${error.message}`);\r\n      handleSnackbarOpen(error.message, \"error\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Typography variant=\"h6\">Stage Management</Typography>\r\n      <TextField\r\n        fullWidth\r\n        label=\"Stage ID (for editing)\"\r\n        variant=\"outlined\"\r\n        value={stageId}\r\n        onChange={(e) => setStageId(e.target.value)}\r\n      />\r\n      <TextField\r\n        label=\"Stage Name\"\r\n        variant=\"outlined\"\r\n        value={stageName}\r\n        onChange={(e) => setStageName(e.target.value)}\r\n      />\r\n      <TextField\r\n        label=\"Description\"\r\n        variant=\"outlined\"\r\n        value={stageDescription}\r\n        onChange={(e) => setStageDescription(e.target.value)}\r\n      />\r\n      <TextField\r\n        label=\"Stage Type\"\r\n        variant=\"outlined\"\r\n        value={stageType}\r\n        onChange={(e) => setStageType(e.target.value)}\r\n      />\r\n      <TextField\r\n        label=\"Selection Template ID\"\r\n        variant=\"outlined\"\r\n        value={selectionTemplateId}\r\n        onChange={(e) => setSelectionTemplateId(e.target.value)}\r\n      />\r\n      <TextField\r\n        label=\"Extraction Template ID\"\r\n        variant=\"outlined\"\r\n        value={extractionTemplateId}\r\n        onChange={(e) => setExtractionTemplateId(e.target.value)}\r\n      />\r\n      <TextField\r\n        label=\"Response Template ID\"\r\n        variant=\"outlined\"\r\n        value={responseTemplateId}\r\n        onChange={(e) => setResponseTemplateId(e.target.value)}\r\n      />\r\n      <Button variant=\"contained\" onClick={handleCreateStage}>\r\n        Create Stage\r\n      </Button>\r\n      <Button variant=\"contained\" onClick={fetchStages}>\r\n        Fetch Stages\r\n      </Button>\r\n      <pre>{stageOutput}</pre>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StageManagement;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}