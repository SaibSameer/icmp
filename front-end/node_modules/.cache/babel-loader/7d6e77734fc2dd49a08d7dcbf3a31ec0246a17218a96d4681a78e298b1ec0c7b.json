{"ast":null,"code":"var _jsxFileName = \"C:\\\\icmp_events_api\\\\front-end\\\\src\\\\components\\\\StageManagement.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from '@mui/material/core';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport { Box } from '@mui/material';\nimport TextareaAutosize from '@mui/material/TextareaAutosize';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction StageManagement() {\n  _s();\n  const [stageName, setStageName] = useState('');\n  const [stageDescription, setStageDescription] = useState('');\n  const [stageType, setStageType] = useState('');\n  const [stageOutput, setStageOutput] = useState('');\n  const handleCreateStage = () => {\n    // Create stage logic here (replace with your actual logic)\n    setStageOutput(`Stage Created (Dummy):\\nName: ${stageName}\\nDescription: ${stageDescription}\\nType: ${stageType}`);\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: \"Stage Management\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          '& > :not(style)': {\n            m: 1,\n            width: '25ch'\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Stage Name\",\n          variant: \"outlined\",\n          value: stageName,\n          onChange: e => setStageName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Stage Description\",\n          variant: \"outlined\",\n          value: stageDescription,\n          onChange: e => setStageDescription(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Stage Type\",\n          variant: \"outlined\",\n          value: stageType,\n          onChange: e => setStageType(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: handleCreateStage,\n          children: \"Create Stage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: stageOutput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n_s(StageManagement, \"Zqwtli1e79CZS41GZYfKvjz1n6U=\");\n_c = StageManagement;\nexport default StageManagement;\nvar _c;\n$RefreshReg$(_c, \"StageManagement\");","map":{"version":3,"names":["React","useState","TextField","Button","Typography","Card","CardContent","Box","TextareaAutosize","jsxDEV","_jsxDEV","StageManagement","_s","stageName","setStageName","stageDescription","setStageDescription","stageType","setStageType","stageOutput","setStageOutput","handleCreateStage","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","sx","m","width","label","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/icmp_events_api/front-end/src/components/StageManagement.js"],"sourcesContent":["import React, { useState } from '@mui/material/core';\r\nimport TextField from '@mui/material/TextField';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport { Box } from '@mui/material';\r\nimport TextareaAutosize from '@mui/material/TextareaAutosize';\r\n\r\nfunction StageManagement() {\r\n    const [stageName, setStageName] = useState('');\r\n    const [stageDescription, setStageDescription] = useState('');\r\n    const [stageType, setStageType] = useState('');\r\n    const [stageOutput, setStageOutput] = useState('');\r\n\r\n    const handleCreateStage = () => {\r\n        // Create stage logic here (replace with your actual logic)\r\n        setStageOutput(`Stage Created (Dummy):\\nName: ${stageName}\\nDescription: ${stageDescription}\\nType: ${stageType}`);\r\n    };\r\n\r\n    return (\r\n        <Card>\r\n            <CardContent>\r\n                <Typography variant=\"h6\" gutterBottom>Stage Management</Typography>\r\n                <Box sx={{ '& > :not(style)': { m: 1, width: '25ch' } }}>\r\n                    <TextField label=\"Stage Name\" variant=\"outlined\" value={stageName} onChange={(e) => setStageName(e.target.value)} />\r\n                    <TextField label=\"Stage Description\" variant=\"outlined\" value={stageDescription} onChange={(e) => setStageDescription(e.target.value)} />\r\n                    <TextField label=\"Stage Type\" variant=\"outlined\" value={stageType} onChange={(e) => setStageType(e.target.value)} />\r\n                    <Button variant=\"contained\" onClick={handleCreateStage}>Create Stage</Button>\r\n                    <Typography variant=\"body1\">{stageOutput}</Typography>\r\n                </Box>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default StageManagement;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,oBAAoB;AACpD,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,WAAW,MAAM,2BAA2B;AACnD,SAASC,GAAG,QAAQ,eAAe;AACnC,OAAOC,gBAAgB,MAAM,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9D,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACc,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACgB,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACkB,WAAW,EAAEC,cAAc,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMoB,iBAAiB,GAAGA,CAAA,KAAM;IAC5B;IACAD,cAAc,CAAC,iCAAiCP,SAAS,kBAAkBE,gBAAgB,WAAWE,SAAS,EAAE,CAAC;EACtH,CAAC;EAED,oBACIP,OAAA,CAACL,IAAI;IAAAiB,QAAA,eACDZ,OAAA,CAACJ,WAAW;MAAAgB,QAAA,gBACRZ,OAAA,CAACN,UAAU;QAACmB,OAAO,EAAC,IAAI;QAACC,YAAY;QAAAF,QAAA,EAAC;MAAgB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eACnElB,OAAA,CAACH,GAAG;QAACsB,EAAE,EAAE;UAAE,iBAAiB,EAAE;YAAEC,CAAC,EAAE,CAAC;YAAEC,KAAK,EAAE;UAAO;QAAE,CAAE;QAAAT,QAAA,gBACpDZ,OAAA,CAACR,SAAS;UAAC8B,KAAK,EAAC,YAAY;UAACT,OAAO,EAAC,UAAU;UAACU,KAAK,EAAEpB,SAAU;UAACqB,QAAQ,EAAGC,CAAC,IAAKrB,YAAY,CAACqB,CAAC,CAACC,MAAM,CAACH,KAAK;QAAE;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACpHlB,OAAA,CAACR,SAAS;UAAC8B,KAAK,EAAC,mBAAmB;UAACT,OAAO,EAAC,UAAU;UAACU,KAAK,EAAElB,gBAAiB;UAACmB,QAAQ,EAAGC,CAAC,IAAKnB,mBAAmB,CAACmB,CAAC,CAACC,MAAM,CAACH,KAAK;QAAE;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACzIlB,OAAA,CAACR,SAAS;UAAC8B,KAAK,EAAC,YAAY;UAACT,OAAO,EAAC,UAAU;UAACU,KAAK,EAAEhB,SAAU;UAACiB,QAAQ,EAAGC,CAAC,IAAKjB,YAAY,CAACiB,CAAC,CAACC,MAAM,CAACH,KAAK;QAAE;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACpHlB,OAAA,CAACP,MAAM;UAACoB,OAAO,EAAC,WAAW;UAACc,OAAO,EAAEhB,iBAAkB;UAAAC,QAAA,EAAC;QAAY;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC7ElB,OAAA,CAACN,UAAU;UAACmB,OAAO,EAAC,OAAO;UAAAD,QAAA,EAAEH;QAAW;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAa,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACZ,CAAC;AAEf;AAAChB,EAAA,CAzBQD,eAAe;AAAA2B,EAAA,GAAf3B,eAAe;AA2BxB,eAAeA,eAAe;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}