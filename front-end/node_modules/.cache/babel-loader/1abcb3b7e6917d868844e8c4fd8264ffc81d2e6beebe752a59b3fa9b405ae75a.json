{"ast":null,"code":"var _jsxFileName = \"C:\\\\icmp_events_api\\\\front-end\\\\src\\\\components\\\\TemplateSection.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Card, CardContent, Typography, TextField, Button, Box, FormControl, InputLabel, Select, MenuItem, Grid, Alert } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TemplateSection = ({\n  templateId,\n  templateName,\n  templateText,\n  templateType,\n  setTemplateId,\n  setTemplateName,\n  setTemplateText,\n  setTemplateType,\n  createTemplate,\n  errorMessage\n}) => {\n  _s();\n  const [isCreating, setIsCreating] = useState(false);\n  const templateTypes = [{\n    value: 'stage_selection',\n    label: 'Stage Selection'\n  }, {\n    value: 'data_extraction',\n    label: 'Data Extraction'\n  }, {\n    value: 'response_generation',\n    label: 'Response Generation'\n  }, {\n    value: 'default_stage_selection',\n    label: 'Default Stage Selection'\n  }, {\n    value: 'default_data_extraction',\n    label: 'Default Data Extraction'\n  }, {\n    value: 'default_response_generation',\n    label: 'Default Response Generation'\n  }];\n  const handleCreateTemplate = async () => {\n    setIsCreating(true);\n    try {\n      await createTemplate();\n    } finally {\n      setIsCreating(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: \"Create Template\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Template ID\",\n            value: templateId,\n            onChange: e => setTemplateId(e.target.value),\n            margin: \"normal\",\n            disabled: true,\n            helperText: \"Template ID will be auto-generated\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            required: true,\n            label: \"Template Name\",\n            value: templateName,\n            onChange: e => setTemplateName(e.target.value),\n            margin: \"normal\",\n            placeholder: \"Enter a descriptive name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            margin: \"normal\",\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              id: \"template-type-label\",\n              children: \"Template Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              labelId: \"template-type-label\",\n              value: templateType,\n              onChange: e => setTemplateType(e.target.value),\n              label: \"Template Type\",\n              children: templateTypes.map(type => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: type.value,\n                children: type.label\n              }, type.value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            required: true,\n            label: \"Template Text\",\n            value: templateText,\n            onChange: e => setTemplateText(e.target.value),\n            margin: \"normal\",\n            multiline: true,\n            rows: 6,\n            placeholder: \"Enter template text with variables in curly braces, e.g. {variable_name}\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), errorMessage && /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Alert, {\n            severity: \"error\",\n            sx: {\n              mt: 2\n            },\n            children: errorMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mt: 2,\n              display: 'flex',\n              justifyContent: 'flex-end'\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              onClick: handleCreateTemplate,\n              disabled: isCreating || !templateName.trim() || !templateText.trim() || !templateType,\n              children: isCreating ? 'Creating...' : 'Create Template'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(TemplateSection, \"aodhKfF0+mgCWIpo7M6ELxBdlsg=\");\n_c = TemplateSection;\nexport default TemplateSection;\nvar _c;\n$RefreshReg$(_c, \"TemplateSection\");","map":{"version":3,"names":["React","useState","Card","CardContent","Typography","TextField","Button","Box","FormControl","InputLabel","Select","MenuItem","Grid","Alert","jsxDEV","_jsxDEV","TemplateSection","templateId","templateName","templateText","templateType","setTemplateId","setTemplateName","setTemplateText","setTemplateType","createTemplate","errorMessage","_s","isCreating","setIsCreating","templateTypes","value","label","handleCreateTemplate","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","container","spacing","item","xs","fullWidth","onChange","e","target","margin","disabled","helperText","required","placeholder","id","labelId","map","type","multiline","rows","severity","sx","mt","display","justifyContent","color","onClick","trim","_c","$RefreshReg$"],"sources":["C:/icmp_events_api/front-end/src/components/TemplateSection.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Box,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Grid,\r\n  Alert\r\n} from '@mui/material';\r\n\r\nconst TemplateSection = ({\r\n  templateId,\r\n  templateName,\r\n  templateText,\r\n  templateType,\r\n  setTemplateId,\r\n  setTemplateName,\r\n  setTemplateText,\r\n  setTemplateType,\r\n  createTemplate,\r\n  errorMessage\r\n}) => {\r\n  const [isCreating, setIsCreating] = useState(false);\r\n\r\n  const templateTypes = [\r\n    { value: 'stage_selection', label: 'Stage Selection' },\r\n    { value: 'data_extraction', label: 'Data Extraction' },\r\n    { value: 'response_generation', label: 'Response Generation' },\r\n    { value: 'default_stage_selection', label: 'Default Stage Selection' },\r\n    { value: 'default_data_extraction', label: 'Default Data Extraction' },\r\n    { value: 'default_response_generation', label: 'Default Response Generation' }\r\n  ];\r\n\r\n  const handleCreateTemplate = async () => {\r\n    setIsCreating(true);\r\n    try {\r\n      await createTemplate();\r\n    } finally {\r\n      setIsCreating(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <CardContent>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Create Template\r\n        </Typography>\r\n\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              fullWidth\r\n              label=\"Template ID\"\r\n              value={templateId}\r\n              onChange={(e) => setTemplateId(e.target.value)}\r\n              margin=\"normal\"\r\n              disabled\r\n              helperText=\"Template ID will be auto-generated\"\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              fullWidth\r\n              required\r\n              label=\"Template Name\"\r\n              value={templateName}\r\n              onChange={(e) => setTemplateName(e.target.value)}\r\n              margin=\"normal\"\r\n              placeholder=\"Enter a descriptive name\"\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n            <FormControl fullWidth margin=\"normal\">\r\n              <InputLabel id=\"template-type-label\">Template Type</InputLabel>\r\n              <Select\r\n                labelId=\"template-type-label\"\r\n                value={templateType}\r\n                onChange={(e) => setTemplateType(e.target.value)}\r\n                label=\"Template Type\"\r\n              >\r\n                {templateTypes.map((type) => (\r\n                  <MenuItem key={type.value} value={type.value}>\r\n                    {type.label}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              fullWidth\r\n              required\r\n              label=\"Template Text\"\r\n              value={templateText}\r\n              onChange={(e) => setTemplateText(e.target.value)}\r\n              margin=\"normal\"\r\n              multiline\r\n              rows={6}\r\n              placeholder=\"Enter template text with variables in curly braces, e.g. {variable_name}\"\r\n            />\r\n          </Grid>\r\n\r\n          {errorMessage && (\r\n            <Grid item xs={12}>\r\n              <Alert severity=\"error\" sx={{ mt: 2 }}>\r\n                {errorMessage}\r\n              </Alert>\r\n            </Grid>\r\n          )}\r\n\r\n          <Grid item xs={12}>\r\n            <Box sx={{ mt: 2, display: 'flex', justifyContent: 'flex-end' }}>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={handleCreateTemplate}\r\n                disabled={\r\n                  isCreating || \r\n                  !templateName.trim() || \r\n                  !templateText.trim() || \r\n                  !templateType\r\n                }\r\n              >\r\n                {isCreating ? 'Creating...' : 'Create Template'}\r\n              </Button>\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default TemplateSection; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}