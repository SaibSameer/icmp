{"ast":null,"code":"var _s = $RefreshSig$();\n// src/hooks/useStageManagement.js\nimport { useState } from 'react';\nimport { fetchStages as fetchStagesApi, createStage as createStageApi } from '../services/testService';\nconst useStageManagement = (apiKey, businessId, handleSnackbarOpen) => {\n  _s();\n  const [stageId, setStageId] = useState('');\n  const [stageName, setStageName] = useState('');\n  const [stageDescription, setStageDescription] = useState('');\n  const [stageType, setStageType] = useState('');\n  const [selectionTemplateId, setSelectionTemplateId] = useState('');\n  const [selectionCustomPrompt, setSelectionCustomPrompt] = useState('');\n  const [extractionTemplateId, setExtractionTemplateId] = useState('');\n  const [extractionCustomPrompt, setExtractionCustomPrompt] = useState('');\n  const [responseTemplateId, setResponseTemplateId] = useState('');\n  const [responseCustomPrompt, setResponseCustomPrompt] = useState('');\n  const [stageOutput, setStageOutput] = useState('');\n  const fetchStages = async () => {\n    if (!businessId) {\n      setStageOutput(\"Please enter a Business ID.\");\n      handleSnackbarOpen(\"Please enter a Business ID.\", \"warning\");\n      return;\n    }\n    try {\n      const data = await fetchStagesApi(businessId, apiKey);\n      setStageOutput(JSON.stringify(data, null, 2));\n      handleSnackbarOpen(\"Stages Fetched!\", \"success\");\n    } catch (error) {\n      setStageOutput(`Error: ${error.message}`);\n      handleSnackbarOpen(error.message, \"error\");\n    }\n  };\n  const createStage = async () => {\n    const stageData = {\n      business_id: businessId,\n      stage_name: stageName,\n      stage_description: stageDescription,\n      stage_type: stageType,\n      selection_template_id: selectionTemplateId || null,\n      selection_custom_prompt: selectionCustomPrompt || null,\n      extraction_template_id: extractionTemplateId || null,\n      extraction_custom_prompt: extractionCustomPrompt || null,\n      response_template_id: responseTemplateId || null,\n      response_custom_prompt: responseCustomPrompt || null\n    };\n    try {\n      const data = await createStageApi(stageData, apiKey);\n      setStageOutput(`Stage Created: ${data.stage_id}`);\n      handleSnackbarOpen(`Stage Created: ${data.stage_id}`, \"success\");\n    } catch (error) {\n      setStageOutput(`Error: ${error.message}`);\n      handleSnackbarOpen(error.message, \"error\");\n    }\n  };\n  return {\n    stageId,\n    setStageId,\n    stageName,\n    setStageName,\n    stageDescription,\n    setStageDescription,\n    stageType,\n    setStageType,\n    selectionTemplateId,\n    setSelectionTemplateId,\n    selectionCustomPrompt,\n    setSelectionCustomPrompt,\n    extractionTemplateId,\n    setExtractionTemplateId,\n    extractionCustomPrompt,\n    setExtractionCustomPrompt,\n    responseTemplateId,\n    setResponseTemplateId,\n    responseCustomPrompt,\n    setResponseCustomPrompt,\n    stageOutput,\n    setStageOutput,\n    fetchStages,\n    createStage\n  };\n};\n_s(useStageManagement, \"Xo/+k9k7tOw7jqxb59SGuTk9b0E=\");\nexport default useStageManagement;","map":{"version":3,"names":["useState","fetchStages","fetchStagesApi","createStage","createStageApi","useStageManagement","apiKey","businessId","handleSnackbarOpen","_s","stageId","setStageId","stageName","setStageName","stageDescription","setStageDescription","stageType","setStageType","selectionTemplateId","setSelectionTemplateId","selectionCustomPrompt","setSelectionCustomPrompt","extractionTemplateId","setExtractionTemplateId","extractionCustomPrompt","setExtractionCustomPrompt","responseTemplateId","setResponseTemplateId","responseCustomPrompt","setResponseCustomPrompt","stageOutput","setStageOutput","data","JSON","stringify","error","message","stageData","business_id","stage_name","stage_description","stage_type","selection_template_id","selection_custom_prompt","extraction_template_id","extraction_custom_prompt","response_template_id","response_custom_prompt","stage_id"],"sources":["C:/icmp_events_api/front-end/src/hooks/useStageManagement.js"],"sourcesContent":["// src/hooks/useStageManagement.js\r\nimport { useState } from 'react';\r\nimport { fetchStages as fetchStagesApi, createStage as createStageApi} from '../services/testService';\r\n\r\nconst useStageManagement = (apiKey, businessId, handleSnackbarOpen) => {\r\n    const [stageId, setStageId] = useState('');\r\n    const [stageName, setStageName] = useState('');\r\n    const [stageDescription, setStageDescription] = useState('');\r\n    const [stageType, setStageType] = useState('');\r\n    const [selectionTemplateId, setSelectionTemplateId] = useState('');\r\n    const [selectionCustomPrompt, setSelectionCustomPrompt] = useState('');\r\n    const [extractionTemplateId, setExtractionTemplateId] = useState('');\r\n    const [extractionCustomPrompt, setExtractionCustomPrompt] = useState('');\r\n    const [responseTemplateId, setResponseTemplateId] = useState('');\r\n    const [responseCustomPrompt, setResponseCustomPrompt] = useState('');\r\n    const [stageOutput, setStageOutput] = useState('');\r\n\r\n    const fetchStages = async () => {\r\n        if (!businessId) {\r\n            setStageOutput(\"Please enter a Business ID.\");\r\n            handleSnackbarOpen(\"Please enter a Business ID.\", \"warning\");\r\n            return;\r\n        }\r\n        try {\r\n            const data = await fetchStagesApi(businessId, apiKey)\r\n            setStageOutput(JSON.stringify(data, null, 2));\r\n            handleSnackbarOpen(\"Stages Fetched!\", \"success\")\r\n\r\n        } catch (error) {\r\n            setStageOutput(`Error: ${error.message}`);\r\n            handleSnackbarOpen(error.message, \"error\")\r\n        }\r\n    };\r\n\r\n    const createStage = async () => {\r\n        const stageData = {\r\n            business_id: businessId,\r\n            stage_name: stageName,\r\n            stage_description: stageDescription,\r\n            stage_type: stageType,\r\n            selection_template_id: selectionTemplateId || null,\r\n            selection_custom_prompt: selectionCustomPrompt || null,\r\n            extraction_template_id: extractionTemplateId || null,\r\n            extraction_custom_prompt: extractionCustomPrompt || null,\r\n            response_template_id: responseTemplateId || null,\r\n            response_custom_prompt: responseCustomPrompt || null\r\n        };\r\n\r\n        try {\r\n            const data = await createStageApi(stageData, apiKey)\r\n            setStageOutput(`Stage Created: ${data.stage_id}`);\r\n            handleSnackbarOpen(`Stage Created: ${data.stage_id}`, \"success\")\r\n        } catch (error) {\r\n            setStageOutput(`Error: ${error.message}`);\r\n            handleSnackbarOpen(error.message, \"error\")\r\n        }\r\n    };\r\n\r\n    return {\r\n        stageId,\r\n        setStageId,\r\n        stageName,\r\n        setStageName,\r\n        stageDescription,\r\n        setStageDescription,\r\n        stageType,\r\n        setStageType,\r\n        selectionTemplateId,\r\n        setSelectionTemplateId,\r\n        selectionCustomPrompt,\r\n        setSelectionCustomPrompt,\r\n        extractionTemplateId,\r\n        setExtractionTemplateId,\r\n        extractionCustomPrompt,\r\n        setExtractionCustomPrompt,\r\n        responseTemplateId,\r\n        setResponseTemplateId,\r\n        responseCustomPrompt,\r\n        setResponseCustomPrompt,\r\n        stageOutput,\r\n        setStageOutput,\r\n        fetchStages,\r\n        createStage\r\n    };\r\n};\r\n\r\nexport default useStageManagement;"],"mappings":";AAAA;AACA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,IAAIC,cAAc,EAAEC,WAAW,IAAIC,cAAc,QAAO,yBAAyB;AAErG,MAAMC,kBAAkB,GAAGA,CAACC,MAAM,EAAEC,UAAU,EAAEC,kBAAkB,KAAK;EAAAC,EAAA;EACnE,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACc,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACgB,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACkB,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAClE,MAAM,CAACoB,qBAAqB,EAAEC,wBAAwB,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EACtE,MAAM,CAACsB,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EACpE,MAAM,CAACwB,sBAAsB,EAAEC,yBAAyB,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EACxE,MAAM,CAAC0B,kBAAkB,EAAEC,qBAAqB,CAAC,GAAG3B,QAAQ,CAAC,EAAE,CAAC;EAChE,MAAM,CAAC4B,oBAAoB,EAAEC,uBAAuB,CAAC,GAAG7B,QAAQ,CAAC,EAAE,CAAC;EACpE,MAAM,CAAC8B,WAAW,EAAEC,cAAc,CAAC,GAAG/B,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI,CAACM,UAAU,EAAE;MACbwB,cAAc,CAAC,6BAA6B,CAAC;MAC7CvB,kBAAkB,CAAC,6BAA6B,EAAE,SAAS,CAAC;MAC5D;IACJ;IACA,IAAI;MACA,MAAMwB,IAAI,GAAG,MAAM9B,cAAc,CAACK,UAAU,EAAED,MAAM,CAAC;MACrDyB,cAAc,CAACE,IAAI,CAACC,SAAS,CAACF,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;MAC7CxB,kBAAkB,CAAC,iBAAiB,EAAE,SAAS,CAAC;IAEpD,CAAC,CAAC,OAAO2B,KAAK,EAAE;MACZJ,cAAc,CAAC,UAAUI,KAAK,CAACC,OAAO,EAAE,CAAC;MACzC5B,kBAAkB,CAAC2B,KAAK,CAACC,OAAO,EAAE,OAAO,CAAC;IAC9C;EACJ,CAAC;EAED,MAAMjC,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC5B,MAAMkC,SAAS,GAAG;MACdC,WAAW,EAAE/B,UAAU;MACvBgC,UAAU,EAAE3B,SAAS;MACrB4B,iBAAiB,EAAE1B,gBAAgB;MACnC2B,UAAU,EAAEzB,SAAS;MACrB0B,qBAAqB,EAAExB,mBAAmB,IAAI,IAAI;MAClDyB,uBAAuB,EAAEvB,qBAAqB,IAAI,IAAI;MACtDwB,sBAAsB,EAAEtB,oBAAoB,IAAI,IAAI;MACpDuB,wBAAwB,EAAErB,sBAAsB,IAAI,IAAI;MACxDsB,oBAAoB,EAAEpB,kBAAkB,IAAI,IAAI;MAChDqB,sBAAsB,EAAEnB,oBAAoB,IAAI;IACpD,CAAC;IAED,IAAI;MACA,MAAMI,IAAI,GAAG,MAAM5B,cAAc,CAACiC,SAAS,EAAE/B,MAAM,CAAC;MACpDyB,cAAc,CAAC,kBAAkBC,IAAI,CAACgB,QAAQ,EAAE,CAAC;MACjDxC,kBAAkB,CAAC,kBAAkBwB,IAAI,CAACgB,QAAQ,EAAE,EAAE,SAAS,CAAC;IACpE,CAAC,CAAC,OAAOb,KAAK,EAAE;MACZJ,cAAc,CAAC,UAAUI,KAAK,CAACC,OAAO,EAAE,CAAC;MACzC5B,kBAAkB,CAAC2B,KAAK,CAACC,OAAO,EAAE,OAAO,CAAC;IAC9C;EACJ,CAAC;EAED,OAAO;IACH1B,OAAO;IACPC,UAAU;IACVC,SAAS;IACTC,YAAY;IACZC,gBAAgB;IAChBC,mBAAmB;IACnBC,SAAS;IACTC,YAAY;IACZC,mBAAmB;IACnBC,sBAAsB;IACtBC,qBAAqB;IACrBC,wBAAwB;IACxBC,oBAAoB;IACpBC,uBAAuB;IACvBC,sBAAsB;IACtBC,yBAAyB;IACzBC,kBAAkB;IAClBC,qBAAqB;IACrBC,oBAAoB;IACpBC,uBAAuB;IACvBC,WAAW;IACXC,cAAc;IACd9B,WAAW;IACXE;EACJ,CAAC;AACL,CAAC;AAACM,EAAA,CAhFIJ,kBAAkB;AAkFxB,eAAeA,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}