{"ast":null,"code":"var _jsxFileName = \"C:\\\\icmp_events_api\\\\front-end\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { TextField, Button, Typography, Card, CardContent, Box, CircularProgress } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login({\n  setIsAuthenticated,\n  handleSnackbarOpen\n}) {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const [apiKey, setApiKey] = useState('');\n  const [userId, setUserId] = useState('');\n  const [businessId, setBusinessId] = useState('');\n  const [businessApiKey, setBusinessApiKey] = useState('');\n  const navigate = useNavigate();\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setIsLoading(true);\n    try {\n      const response = await fetch('/validate_config', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        body: JSON.stringify({\n          apiKey,\n          userId,\n          businessId,\n          businessApiKey\n        })\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || 'Login failed');\n      }\n      const data = await response.json();\n      if (data.isValid) {\n        // Store credentials in localStorage\n        localStorage.setItem('apiKey', apiKey);\n        localStorage.setItem('userId', userId);\n        localStorage.setItem('businessId', businessId);\n        localStorage.setItem('businessApiKey', businessApiKey);\n\n        // Save configuration\n        const saveResponse = await fetch('/api/save-config', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          credentials: 'include',\n          body: JSON.stringify({\n            apiKey,\n            userId,\n            businessId,\n            businessApiKey\n          })\n        });\n        if (!saveResponse.ok) {\n          const errorData = await saveResponse.json();\n          throw new Error(errorData.message || 'Failed to save configuration');\n        }\n        handleSnackbarOpen('Login successful', 'success');\n        setIsAuthenticated(true);\n      } else {\n        throw new Error(data.error || 'Login failed');\n      }\n    } catch (error) {\n      console.error('Login error:', error);\n      handleSnackbarOpen(error.message || 'Login failed', 'error');\n      setIsAuthenticated(false);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      mt: 4,\n      maxWidth: 400,\n      mx: 'auto'\n    },\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        gutterBottom: true,\n        align: \"center\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          flexDirection: 'column',\n          gap: 2,\n          mt: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          label: \"ICMP API Key\",\n          variant: \"outlined\",\n          value: apiKey,\n          onChange: e => setApiKey(e.target.value),\n          disabled: isLoading,\n          type: \"password\",\n          required: true,\n          error: !apiKey,\n          helperText: !apiKey ? \"ICMP API Key is required\" : \"\",\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Business API Key\",\n          variant: \"outlined\",\n          value: businessApiKey,\n          onChange: e => setBusinessApiKey(e.target.value),\n          disabled: isLoading,\n          type: \"password\",\n          required: true,\n          error: !businessApiKey,\n          helperText: !businessApiKey ? \"Business API Key is required\" : \"\",\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"User ID\",\n          variant: \"outlined\",\n          value: userId,\n          onChange: e => setUserId(e.target.value),\n          disabled: isLoading,\n          required: true,\n          error: !userId,\n          helperText: !userId ? \"User ID is required\" : \"\",\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Business ID\",\n          variant: \"outlined\",\n          value: businessId,\n          onChange: e => setBusinessId(e.target.value),\n          disabled: isLoading,\n          required: true,\n          error: !businessId,\n          helperText: !businessId ? \"Business ID is required\" : \"\",\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: handleSubmit,\n          disabled: isLoading || !apiKey || !userId || !businessId || !businessApiKey,\n          fullWidth: true,\n          children: isLoading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n            size: 24\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 38\n          }, this) : 'Login'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n}\n_s(Login, \"CIDrv2m1Py2rOmbCKFw/5AKl2fk=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","TextField","Button","Typography","Card","CardContent","Box","CircularProgress","useNavigate","jsxDEV","_jsxDEV","Login","setIsAuthenticated","handleSnackbarOpen","_s","isLoading","setIsLoading","apiKey","setApiKey","userId","setUserId","businessId","setBusinessId","businessApiKey","setBusinessApiKey","navigate","handleSubmit","event","preventDefault","response","fetch","method","headers","credentials","body","JSON","stringify","ok","errorData","json","Error","message","data","isValid","localStorage","setItem","saveResponse","error","console","sx","mt","maxWidth","mx","children","variant","gutterBottom","align","fileName","_jsxFileName","lineNumber","columnNumber","display","flexDirection","gap","label","value","onChange","e","target","disabled","type","required","helperText","fullWidth","onClick","size","_c","$RefreshReg$"],"sources":["C:/icmp_events_api/front-end/src/components/Login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { TextField, Button, Typography, Card, CardContent, Box, CircularProgress } from '@mui/material';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction Login({ setIsAuthenticated, handleSnackbarOpen }) {\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [apiKey, setApiKey] = useState('');\r\n    const [userId, setUserId] = useState('');\r\n    const [businessId, setBusinessId] = useState('');\r\n    const [businessApiKey, setBusinessApiKey] = useState('');\r\n    const navigate = useNavigate();\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        setIsLoading(true);\r\n\r\n        try {\r\n            const response = await fetch('/validate_config', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                credentials: 'include',\r\n                body: JSON.stringify({\r\n                    apiKey,\r\n                    userId,\r\n                    businessId,\r\n                    businessApiKey\r\n                })\r\n            });\r\n\r\n            if (!response.ok) {\r\n                const errorData = await response.json();\r\n                throw new Error(errorData.message || 'Login failed');\r\n            }\r\n\r\n            const data = await response.json();\r\n            if (data.isValid) {\r\n                // Store credentials in localStorage\r\n                localStorage.setItem('apiKey', apiKey);\r\n                localStorage.setItem('userId', userId);\r\n                localStorage.setItem('businessId', businessId);\r\n                localStorage.setItem('businessApiKey', businessApiKey);\r\n\r\n                // Save configuration\r\n                const saveResponse = await fetch('/api/save-config', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    credentials: 'include',\r\n                    body: JSON.stringify({\r\n                        apiKey,\r\n                        userId,\r\n                        businessId,\r\n                        businessApiKey\r\n                    })\r\n                });\r\n\r\n                if (!saveResponse.ok) {\r\n                    const errorData = await saveResponse.json();\r\n                    throw new Error(errorData.message || 'Failed to save configuration');\r\n                }\r\n\r\n                handleSnackbarOpen('Login successful', 'success');\r\n                setIsAuthenticated(true);\r\n            } else {\r\n                throw new Error(data.error || 'Login failed');\r\n            }\r\n        } catch (error) {\r\n            console.error('Login error:', error);\r\n            handleSnackbarOpen(error.message || 'Login failed', 'error');\r\n            setIsAuthenticated(false);\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Card sx={{ mt: 4, maxWidth: 400, mx: 'auto' }}>\r\n            <CardContent>\r\n                <Typography variant=\"h5\" gutterBottom align=\"center\">\r\n                    Login\r\n                </Typography>\r\n                <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2, mt: 2 }}>\r\n                    <TextField\r\n                        label=\"ICMP API Key\"\r\n                        variant=\"outlined\"\r\n                        value={apiKey}\r\n                        onChange={(e) => setApiKey(e.target.value)}\r\n                        disabled={isLoading}\r\n                        type=\"password\"\r\n                        required\r\n                        error={!apiKey}\r\n                        helperText={!apiKey ? \"ICMP API Key is required\" : \"\"}\r\n                        fullWidth\r\n                    />\r\n                    <TextField\r\n                        label=\"Business API Key\"\r\n                        variant=\"outlined\"\r\n                        value={businessApiKey}\r\n                        onChange={(e) => setBusinessApiKey(e.target.value)}\r\n                        disabled={isLoading}\r\n                        type=\"password\"\r\n                        required\r\n                        error={!businessApiKey}\r\n                        helperText={!businessApiKey ? \"Business API Key is required\" : \"\"}\r\n                        fullWidth\r\n                    />\r\n                    <TextField \r\n                        label=\"User ID\" \r\n                        variant=\"outlined\" \r\n                        value={userId}\r\n                        onChange={(e) => setUserId(e.target.value)}\r\n                        disabled={isLoading}\r\n                        required\r\n                        error={!userId}\r\n                        helperText={!userId ? \"User ID is required\" : \"\"}\r\n                        fullWidth\r\n                    />\r\n                    <TextField \r\n                        label=\"Business ID\" \r\n                        variant=\"outlined\" \r\n                        value={businessId}\r\n                        onChange={(e) => setBusinessId(e.target.value)}\r\n                        disabled={isLoading}\r\n                        required\r\n                        error={!businessId}\r\n                        helperText={!businessId ? \"Business ID is required\" : \"\"}\r\n                        fullWidth\r\n                    />\r\n\r\n                    <Button \r\n                        variant=\"contained\" \r\n                        onClick={handleSubmit} \r\n                        disabled={isLoading || !apiKey || !userId || !businessId || !businessApiKey}\r\n                        fullWidth\r\n                    >\r\n                        {isLoading ? <CircularProgress size={24} /> : 'Login'}\r\n                    </Button>\r\n                </Box>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default Login; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}