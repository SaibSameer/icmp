{"ast":null,"code":"var _jsxFileName = \"C:\\\\icmp_events_api\\\\front-end\\\\src\\\\components\\\\BusinessManagement.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { TextField, Button, Typography } from '@mui/material';\nimport { fetchBusinessDetailsApi } from '../services/testService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BusinessManagement = ({\n  businessId,\n  businessApiKey,\n  handleSnackbarOpen\n}) => {\n  _s();\n  const [businessOutput, setBusinessOutput] = useState('');\n  const handleFetchBusinessDetails = async () => {\n    if (!businessId) {\n      setBusinessOutput(\"Please enter a Business ID.\");\n      handleSnackbarOpen(\"Please enter a Business ID.\", \"warning\");\n      return;\n    }\n    try {\n      const response = await fetchBusinessDetailsApi(businessId);\n      setBusinessOutput(JSON.stringify(response, null, 2));\n      handleSnackbarOpen(\"Business details fetched!\", \"success\");\n    } catch (error) {\n      setBusinessOutput(`Error: ${error.message}`);\n      handleSnackbarOpen(error.message, \"error\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      children: \"Business Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: handleFetchBusinessDetails,\n      children: \"Fetch Business Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: businessOutput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(BusinessManagement, \"02nZpivedeLr+zbIS7j99u99hfY=\");\n_c = BusinessManagement;\nexport default BusinessManagement;\nvar _c;\n$RefreshReg$(_c, \"BusinessManagement\");","map":{"version":3,"names":["React","useState","TextField","Button","Typography","fetchBusinessDetailsApi","jsxDEV","_jsxDEV","BusinessManagement","businessId","businessApiKey","handleSnackbarOpen","_s","businessOutput","setBusinessOutput","handleFetchBusinessDetails","response","JSON","stringify","error","message","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/icmp_events_api/front-end/src/components/BusinessManagement.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { TextField, Button, Typography } from '@mui/material';\r\nimport { fetchBusinessDetailsApi } from '../services/testService';\r\n\r\nconst BusinessManagement = ({ businessId, businessApiKey, handleSnackbarOpen }) => {\r\n  const [businessOutput, setBusinessOutput] = useState('');\r\n\r\n  const handleFetchBusinessDetails = async () => {\r\n    if (!businessId) {\r\n      setBusinessOutput(\"Please enter a Business ID.\");\r\n      handleSnackbarOpen(\"Please enter a Business ID.\", \"warning\");\r\n      return;\r\n    }\r\n    try {\r\n      const response = await fetchBusinessDetailsApi(businessId);\r\n      setBusinessOutput(JSON.stringify(response, null, 2));\r\n      handleSnackbarOpen(\"Business details fetched!\", \"success\");\r\n    } catch (error) {\r\n      setBusinessOutput(`Error: ${error.message}`);\r\n      handleSnackbarOpen(error.message, \"error\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Typography variant=\"h6\">Business Management</Typography>\r\n      <Button variant=\"contained\" onClick={handleFetchBusinessDetails}>\r\n        Fetch Business Details\r\n      </Button>\r\n      <pre>{businessOutput}</pre>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BusinessManagement;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,SAAS,EAAEC,MAAM,EAAEC,UAAU,QAAQ,eAAe;AAC7D,SAASC,uBAAuB,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,MAAMC,kBAAkB,GAAGA,CAAC;EAAEC,UAAU;EAAEC,cAAc;EAAEC;AAAmB,CAAC,KAAK;EAAAC,EAAA;EACjF,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAExD,MAAMc,0BAA0B,GAAG,MAAAA,CAAA,KAAY;IAC7C,IAAI,CAACN,UAAU,EAAE;MACfK,iBAAiB,CAAC,6BAA6B,CAAC;MAChDH,kBAAkB,CAAC,6BAA6B,EAAE,SAAS,CAAC;MAC5D;IACF;IACA,IAAI;MACF,MAAMK,QAAQ,GAAG,MAAMX,uBAAuB,CAACI,UAAU,CAAC;MAC1DK,iBAAiB,CAACG,IAAI,CAACC,SAAS,CAACF,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;MACpDL,kBAAkB,CAAC,2BAA2B,EAAE,SAAS,CAAC;IAC5D,CAAC,CAAC,OAAOQ,KAAK,EAAE;MACdL,iBAAiB,CAAC,UAAUK,KAAK,CAACC,OAAO,EAAE,CAAC;MAC5CT,kBAAkB,CAACQ,KAAK,CAACC,OAAO,EAAE,OAAO,CAAC;IAC5C;EACF,CAAC;EAED,oBACEb,OAAA;IAAAc,QAAA,gBACEd,OAAA,CAACH,UAAU;MAACkB,OAAO,EAAC,IAAI;MAAAD,QAAA,EAAC;IAAmB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eACzDnB,OAAA,CAACJ,MAAM;MAACmB,OAAO,EAAC,WAAW;MAACK,OAAO,EAAEZ,0BAA2B;MAAAM,QAAA,EAAC;IAEjE;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTnB,OAAA;MAAAc,QAAA,EAAMR;IAAc;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxB,CAAC;AAEV,CAAC;AAACd,EAAA,CA5BIJ,kBAAkB;AAAAoB,EAAA,GAAlBpB,kBAAkB;AA8BxB,eAAeA,kBAAkB;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}