{"ast":null,"code":"var _jsxFileName = \"C:\\\\icmp_events_api\\\\front-end\\\\src\\\\components\\\\StageFlow.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Paper, Typography, Grid, Button, Dialog, DialogTitle, DialogContent, DialogActions, TextField, Select, MenuItem, FormControl, InputLabel, Alert, Snackbar, IconButton, Tooltip } from '@mui/material';\nimport AddIcon from '@mui/icons-material/Add';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport HelpOutlineIcon from '@mui/icons-material/HelpOutline';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StageFlow = ({\n  stages,\n  businessId\n}) => {\n  _s();\n  const [transitions, setTransitions] = useState([]);\n  const [openDialog, setOpenDialog] = useState(false);\n  const [selectedTransition, setSelectedTransition] = useState(null);\n  const [newTransition, setNewTransition] = useState({\n    from_stage: '',\n    to_stage: '',\n    condition: '',\n    description: ''\n  });\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  useEffect(() => {\n    fetchTransitions();\n  }, [businessId]);\n  const fetchTransitions = async () => {\n    try {\n      const response = await fetch(`/api/v1/stages/${businessId}/transitions`);\n      if (!response.ok) throw new Error('Failed to fetch transitions');\n      const data = await response.json();\n      setTransitions(data);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  const handleCreateTransition = async () => {\n    try {\n      const response = await fetch(`/api/v1/stages/${businessId}/transitions`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newTransition)\n      });\n      if (!response.ok) throw new Error('Failed to create transition');\n      const data = await response.json();\n      setTransitions([...transitions, data]);\n      setOpenDialog(false);\n      setNewTransition({\n        from_stage: '',\n        to_stage: '',\n        condition: '',\n        description: ''\n      });\n      setSuccess('Transition created successfully');\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  const handleDeleteTransition = async transitionId => {\n    try {\n      const response = await fetch(`/api/v1/stages/${businessId}/transitions/${transitionId}`, {\n        method: 'DELETE'\n      });\n      if (!response.ok) throw new Error('Failed to delete transition');\n      setTransitions(transitions.filter(t => t.transition_id !== transitionId));\n      setSuccess('Transition deleted successfully');\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  const renderTransitionCard = transition => {\n    const fromStage = stages.find(s => s.stage_id === transition.from_stage);\n    const toStage = stages.find(s => s.stage_id === transition.to_stage);\n    return /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        p: 2,\n        mb: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          alignItems: 'center',\n          mb: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          sx: {\n            flexGrow: 1\n          },\n          children: [fromStage === null || fromStage === void 0 ? void 0 : fromStage.stage_name, \" \\u2192 \", toStage === null || toStage === void 0 ? void 0 : toStage.stage_name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \"Edit transition\",\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            size: \"small\",\n            onClick: () => {\n              setSelectedTransition(transition);\n              setNewTransition(transition);\n              setOpenDialog(true);\n            },\n            children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \"Delete transition\",\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            size: \"small\",\n            color: \"error\",\n            onClick: () => handleDeleteTransition(transition.transition_id),\n            children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        color: \"text.secondary\",\n        gutterBottom: true,\n        children: [\"Condition: \", transition.condition]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        color: \"text.secondary\",\n        children: transition.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, transition.transition_id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      p: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        children: \"Stage Transitions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 22\n        }, this),\n        variant: \"contained\",\n        onClick: () => {\n          setSelectedTransition(null);\n          setNewTransition({\n            from_stage: '',\n            to_stage: '',\n            condition: '',\n            description: ''\n          });\n          setOpenDialog(true);\n        },\n        children: \"Add Transition\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: transitions.map(renderTransitionCard)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openDialog,\n      onClose: () => setOpenDialog(false),\n      maxWidth: \"sm\",\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: selectedTransition ? 'Edit Transition' : 'Create New Transition'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          sx: {\n            mt: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            children: \"From Stage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: newTransition.from_stage,\n            onChange: e => setNewTransition({\n              ...newTransition,\n              from_stage: e.target.value\n            }),\n            label: \"From Stage\",\n            children: stages.map(stage => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: stage.stage_id,\n              children: stage.stage_name\n            }, stage.stage_id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          sx: {\n            mt: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            children: \"To Stage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: newTransition.to_stage,\n            onChange: e => setNewTransition({\n              ...newTransition,\n              to_stage: e.target.value\n            }),\n            label: \"To Stage\",\n            children: stages.map(stage => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: stage.stage_id,\n              children: stage.stage_name\n            }, stage.stage_id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"Condition\",\n          value: newTransition.condition,\n          onChange: e => setNewTransition({\n            ...newTransition,\n            condition: e.target.value\n          }),\n          sx: {\n            mt: 2\n          },\n          helperText: \"Enter the condition that triggers this transition (e.g., 'user_agreed', 'payment_completed')\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"Description\",\n          value: newTransition.description,\n          onChange: e => setNewTransition({\n            ...newTransition,\n            description: e.target.value\n          }),\n          multiline: true,\n          rows: 3,\n          sx: {\n            mt: 2\n          },\n          helperText: \"Describe when and why this transition occurs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setOpenDialog(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCreateTransition,\n          variant: \"contained\",\n          children: selectedTransition ? 'Update' : 'Create'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: !!error,\n      autoHideDuration: 6000,\n      onClose: () => setError(''),\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        onClose: () => setError(''),\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: !!success,\n      autoHideDuration: 6000,\n      onClose: () => setSuccess(''),\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"success\",\n        onClose: () => setSuccess(''),\n        children: success\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n};\n_s(StageFlow, \"pFbuaEIr9idSQqCdxV1w+6kYoSU=\");\n_c = StageFlow;\nexport default StageFlow;\nvar _c;\n$RefreshReg$(_c, \"StageFlow\");","map":{"version":3,"names":["React","useState","useEffect","Box","Paper","Typography","Grid","Button","Dialog","DialogTitle","DialogContent","DialogActions","TextField","Select","MenuItem","FormControl","InputLabel","Alert","Snackbar","IconButton","Tooltip","AddIcon","DeleteIcon","EditIcon","HelpOutlineIcon","jsxDEV","_jsxDEV","StageFlow","stages","businessId","_s","transitions","setTransitions","openDialog","setOpenDialog","selectedTransition","setSelectedTransition","newTransition","setNewTransition","from_stage","to_stage","condition","description","error","setError","success","setSuccess","fetchTransitions","response","fetch","ok","Error","data","json","err","message","handleCreateTransition","method","headers","body","JSON","stringify","handleDeleteTransition","transitionId","filter","t","transition_id","renderTransitionCard","transition","fromStage","find","s","stage_id","toStage","sx","p","mb","children","display","alignItems","variant","flexGrow","stage_name","fileName","_jsxFileName","lineNumber","columnNumber","title","size","onClick","color","gutterBottom","justifyContent","startIcon","container","spacing","item","xs","map","open","onClose","maxWidth","fullWidth","mt","value","onChange","e","target","label","stage","helperText","multiline","rows","autoHideDuration","severity","_c","$RefreshReg$"],"sources":["C:/icmp_events_api/front-end/src/components/StageFlow.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Box,\r\n  Paper,\r\n  Typography,\r\n  Grid,\r\n  Button,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField,\r\n  Select,\r\n  MenuItem,\r\n  FormControl,\r\n  InputLabel,\r\n  Alert,\r\n  Snackbar,\r\n  IconButton,\r\n  Tooltip\r\n} from '@mui/material';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport HelpOutlineIcon from '@mui/icons-material/HelpOutline';\r\n\r\nconst StageFlow = ({ stages, businessId }) => {\r\n  const [transitions, setTransitions] = useState([]);\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n  const [selectedTransition, setSelectedTransition] = useState(null);\r\n  const [newTransition, setNewTransition] = useState({\r\n    from_stage: '',\r\n    to_stage: '',\r\n    condition: '',\r\n    description: ''\r\n  });\r\n  const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState('');\r\n\r\n  useEffect(() => {\r\n    fetchTransitions();\r\n  }, [businessId]);\r\n\r\n  const fetchTransitions = async () => {\r\n    try {\r\n      const response = await fetch(`/api/v1/stages/${businessId}/transitions`);\r\n      if (!response.ok) throw new Error('Failed to fetch transitions');\r\n      const data = await response.json();\r\n      setTransitions(data);\r\n    } catch (err) {\r\n      setError(err.message);\r\n    }\r\n  };\r\n\r\n  const handleCreateTransition = async () => {\r\n    try {\r\n      const response = await fetch(`/api/v1/stages/${businessId}/transitions`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(newTransition),\r\n      });\r\n      if (!response.ok) throw new Error('Failed to create transition');\r\n      const data = await response.json();\r\n      setTransitions([...transitions, data]);\r\n      setOpenDialog(false);\r\n      setNewTransition({\r\n        from_stage: '',\r\n        to_stage: '',\r\n        condition: '',\r\n        description: ''\r\n      });\r\n      setSuccess('Transition created successfully');\r\n    } catch (err) {\r\n      setError(err.message);\r\n    }\r\n  };\r\n\r\n  const handleDeleteTransition = async (transitionId) => {\r\n    try {\r\n      const response = await fetch(`/api/v1/stages/${businessId}/transitions/${transitionId}`, {\r\n        method: 'DELETE',\r\n      });\r\n      if (!response.ok) throw new Error('Failed to delete transition');\r\n      setTransitions(transitions.filter(t => t.transition_id !== transitionId));\r\n      setSuccess('Transition deleted successfully');\r\n    } catch (err) {\r\n      setError(err.message);\r\n    }\r\n  };\r\n\r\n  const renderTransitionCard = (transition) => {\r\n    const fromStage = stages.find(s => s.stage_id === transition.from_stage);\r\n    const toStage = stages.find(s => s.stage_id === transition.to_stage);\r\n\r\n    return (\r\n      <Paper key={transition.transition_id} sx={{ p: 2, mb: 2 }}>\r\n        <Box sx={{ display: 'flex', alignItems: 'center', mb: 1 }}>\r\n          <Typography variant=\"h6\" sx={{ flexGrow: 1 }}>\r\n            {fromStage?.stage_name} → {toStage?.stage_name}\r\n          </Typography>\r\n          <Tooltip title=\"Edit transition\">\r\n            <IconButton\r\n              size=\"small\"\r\n              onClick={() => {\r\n                setSelectedTransition(transition);\r\n                setNewTransition(transition);\r\n                setOpenDialog(true);\r\n              }}\r\n            >\r\n              <EditIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n          <Tooltip title=\"Delete transition\">\r\n            <IconButton\r\n              size=\"small\"\r\n              color=\"error\"\r\n              onClick={() => handleDeleteTransition(transition.transition_id)}\r\n            >\r\n              <DeleteIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Box>\r\n        <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>\r\n          Condition: {transition.condition}\r\n        </Typography>\r\n        <Typography variant=\"body2\" color=\"text.secondary\">\r\n          {transition.description}\r\n        </Typography>\r\n      </Paper>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ p: 3 }}>\r\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 3 }}>\r\n        <Typography variant=\"h5\">Stage Transitions</Typography>\r\n        <Button\r\n          startIcon={<AddIcon />}\r\n          variant=\"contained\"\r\n          onClick={() => {\r\n            setSelectedTransition(null);\r\n            setNewTransition({\r\n              from_stage: '',\r\n              to_stage: '',\r\n              condition: '',\r\n              description: ''\r\n            });\r\n            setOpenDialog(true);\r\n          }}\r\n        >\r\n          Add Transition\r\n        </Button>\r\n      </Box>\r\n\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12}>\r\n          {transitions.map(renderTransitionCard)}\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Dialog open={openDialog} onClose={() => setOpenDialog(false)} maxWidth=\"sm\" fullWidth>\r\n        <DialogTitle>\r\n          {selectedTransition ? 'Edit Transition' : 'Create New Transition'}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <FormControl fullWidth sx={{ mt: 2 }}>\r\n            <InputLabel>From Stage</InputLabel>\r\n            <Select\r\n              value={newTransition.from_stage}\r\n              onChange={(e) => setNewTransition({ ...newTransition, from_stage: e.target.value })}\r\n              label=\"From Stage\"\r\n            >\r\n              {stages.map((stage) => (\r\n                <MenuItem key={stage.stage_id} value={stage.stage_id}>\r\n                  {stage.stage_name}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n\r\n          <FormControl fullWidth sx={{ mt: 2 }}>\r\n            <InputLabel>To Stage</InputLabel>\r\n            <Select\r\n              value={newTransition.to_stage}\r\n              onChange={(e) => setNewTransition({ ...newTransition, to_stage: e.target.value })}\r\n              label=\"To Stage\"\r\n            >\r\n              {stages.map((stage) => (\r\n                <MenuItem key={stage.stage_id} value={stage.stage_id}>\r\n                  {stage.stage_name}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n\r\n          <TextField\r\n            fullWidth\r\n            label=\"Condition\"\r\n            value={newTransition.condition}\r\n            onChange={(e) => setNewTransition({ ...newTransition, condition: e.target.value })}\r\n            sx={{ mt: 2 }}\r\n            helperText=\"Enter the condition that triggers this transition (e.g., 'user_agreed', 'payment_completed')\"\r\n          />\r\n\r\n          <TextField\r\n            fullWidth\r\n            label=\"Description\"\r\n            value={newTransition.description}\r\n            onChange={(e) => setNewTransition({ ...newTransition, description: e.target.value })}\r\n            multiline\r\n            rows={3}\r\n            sx={{ mt: 2 }}\r\n            helperText=\"Describe when and why this transition occurs\"\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setOpenDialog(false)}>Cancel</Button>\r\n          <Button onClick={handleCreateTransition} variant=\"contained\">\r\n            {selectedTransition ? 'Update' : 'Create'}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      <Snackbar\r\n        open={!!error}\r\n        autoHideDuration={6000}\r\n        onClose={() => setError('')}\r\n      >\r\n        <Alert severity=\"error\" onClose={() => setError('')}>\r\n          {error}\r\n        </Alert>\r\n      </Snackbar>\r\n\r\n      <Snackbar\r\n        open={!!success}\r\n        autoHideDuration={6000}\r\n        onClose={() => setSuccess('')}\r\n      >\r\n        <Alert severity=\"success\" onClose={() => setSuccess('')}>\r\n          {success}\r\n        </Alert>\r\n      </Snackbar>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default StageFlow; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}