{"ast":null,"code":"// Global request cache to prevent duplicate API calls\nconst apiCache = {\n  cache: {},\n  get: function (url) {\n    var _this$cache$url;\n    return (_this$cache$url = this.cache[url]) === null || _this$cache$url === void 0 ? void 0 : _this$cache$url.data;\n  },\n  set: function (url, data, ttl = 60000) {\n    // Default TTL: 1 minute\n    this.cache[url] = {\n      data,\n      expiry: Date.now() + ttl\n    };\n  },\n  isValid: function (url) {\n    const item = this.cache[url];\n    return item && item.expiry > Date.now();\n  },\n  clear: function () {\n    this.cache = {};\n  }\n};\n\n// Cached fetch function\nexport const cachedFetch = async (url, options = {}, ttl = 60000) => {\n  const cacheKey = url + (options.body ? JSON.stringify(options.body) : '');\n\n  // Return cached data if available and not expired\n  if (!options.method || options.method === 'GET') {\n    if (apiCache.isValid(cacheKey)) {\n      console.log(`Using cached data for: ${url}`);\n      return {\n        ok: true,\n        json: async () => apiCache.get(cacheKey)\n      };\n    }\n  }\n\n  // Perform the fetch\n  const response = await fetch(url, options);\n\n  // Cache the result for GET requests\n  if (response.ok && (!options.method || options.method === 'GET')) {\n    const data = await response.json();\n    apiCache.set(cacheKey, data, ttl);\n\n    // Return an object that mimics the fetch response\n    return {\n      ok: true,\n      json: async () => data\n    };\n  }\n  return response;\n};","map":{"version":3,"names":["apiCache","cache","get","url","_this$cache$url","data","set","ttl","expiry","Date","now","isValid","item","clear","cachedFetch","options","cacheKey","body","JSON","stringify","method","console","log","ok","json","response","fetch"],"sources":["C:/icmp_events_api/front-end/src/utils/fetchUtils.js"],"sourcesContent":["// Global request cache to prevent duplicate API calls\r\nconst apiCache = {\r\n  cache: {},\r\n  get: function(url) {\r\n    return this.cache[url]?.data;\r\n  },\r\n  set: function(url, data, ttl = 60000) { // Default TTL: 1 minute\r\n    this.cache[url] = {\r\n      data,\r\n      expiry: Date.now() + ttl\r\n    };\r\n  },\r\n  isValid: function(url) {\r\n    const item = this.cache[url];\r\n    return item && item.expiry > Date.now();\r\n  },\r\n  clear: function() {\r\n    this.cache = {};\r\n  }\r\n};\r\n\r\n// Cached fetch function\r\nexport const cachedFetch = async (url, options = {}, ttl = 60000) => {\r\n  const cacheKey = url + (options.body ? JSON.stringify(options.body) : '');\r\n  \r\n  // Return cached data if available and not expired\r\n  if (!options.method || options.method === 'GET') {\r\n    if (apiCache.isValid(cacheKey)) {\r\n      console.log(`Using cached data for: ${url}`);\r\n      return { \r\n        ok: true,\r\n        json: async () => apiCache.get(cacheKey)\r\n      };\r\n    }\r\n  }\r\n  \r\n  // Perform the fetch\r\n  const response = await fetch(url, options);\r\n  \r\n  // Cache the result for GET requests\r\n  if (response.ok && (!options.method || options.method === 'GET')) {\r\n    const data = await response.json();\r\n    apiCache.set(cacheKey, data, ttl);\r\n    \r\n    // Return an object that mimics the fetch response\r\n    return {\r\n      ok: true,\r\n      json: async () => data\r\n    };\r\n  }\r\n  \r\n  return response;\r\n}; "],"mappings":"AAAA;AACA,MAAMA,QAAQ,GAAG;EACfC,KAAK,EAAE,CAAC,CAAC;EACTC,GAAG,EAAE,SAAAA,CAASC,GAAG,EAAE;IAAA,IAAAC,eAAA;IACjB,QAAAA,eAAA,GAAO,IAAI,CAACH,KAAK,CAACE,GAAG,CAAC,cAAAC,eAAA,uBAAfA,eAAA,CAAiBC,IAAI;EAC9B,CAAC;EACDC,GAAG,EAAE,SAAAA,CAASH,GAAG,EAAEE,IAAI,EAAEE,GAAG,GAAG,KAAK,EAAE;IAAE;IACtC,IAAI,CAACN,KAAK,CAACE,GAAG,CAAC,GAAG;MAChBE,IAAI;MACJG,MAAM,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGH;IACvB,CAAC;EACH,CAAC;EACDI,OAAO,EAAE,SAAAA,CAASR,GAAG,EAAE;IACrB,MAAMS,IAAI,GAAG,IAAI,CAACX,KAAK,CAACE,GAAG,CAAC;IAC5B,OAAOS,IAAI,IAAIA,IAAI,CAACJ,MAAM,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC;EACzC,CAAC;EACDG,KAAK,EAAE,SAAAA,CAAA,EAAW;IAChB,IAAI,CAACZ,KAAK,GAAG,CAAC,CAAC;EACjB;AACF,CAAC;;AAED;AACA,OAAO,MAAMa,WAAW,GAAG,MAAAA,CAAOX,GAAG,EAAEY,OAAO,GAAG,CAAC,CAAC,EAAER,GAAG,GAAG,KAAK,KAAK;EACnE,MAAMS,QAAQ,GAAGb,GAAG,IAAIY,OAAO,CAACE,IAAI,GAAGC,IAAI,CAACC,SAAS,CAACJ,OAAO,CAACE,IAAI,CAAC,GAAG,EAAE,CAAC;;EAEzE;EACA,IAAI,CAACF,OAAO,CAACK,MAAM,IAAIL,OAAO,CAACK,MAAM,KAAK,KAAK,EAAE;IAC/C,IAAIpB,QAAQ,CAACW,OAAO,CAACK,QAAQ,CAAC,EAAE;MAC9BK,OAAO,CAACC,GAAG,CAAC,0BAA0BnB,GAAG,EAAE,CAAC;MAC5C,OAAO;QACLoB,EAAE,EAAE,IAAI;QACRC,IAAI,EAAE,MAAAA,CAAA,KAAYxB,QAAQ,CAACE,GAAG,CAACc,QAAQ;MACzC,CAAC;IACH;EACF;;EAEA;EACA,MAAMS,QAAQ,GAAG,MAAMC,KAAK,CAACvB,GAAG,EAAEY,OAAO,CAAC;;EAE1C;EACA,IAAIU,QAAQ,CAACF,EAAE,KAAK,CAACR,OAAO,CAACK,MAAM,IAAIL,OAAO,CAACK,MAAM,KAAK,KAAK,CAAC,EAAE;IAChE,MAAMf,IAAI,GAAG,MAAMoB,QAAQ,CAACD,IAAI,CAAC,CAAC;IAClCxB,QAAQ,CAACM,GAAG,CAACU,QAAQ,EAAEX,IAAI,EAAEE,GAAG,CAAC;;IAEjC;IACA,OAAO;MACLgB,EAAE,EAAE,IAAI;MACRC,IAAI,EAAE,MAAAA,CAAA,KAAYnB;IACpB,CAAC;EACH;EAEA,OAAOoB,QAAQ;AACjB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}