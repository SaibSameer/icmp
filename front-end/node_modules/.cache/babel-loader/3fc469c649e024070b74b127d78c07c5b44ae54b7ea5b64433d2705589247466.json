{"ast":null,"code":"var _jsxFileName = \"C:\\\\icmp_events_api\\\\front-end\\\\src\\\\components\\\\StageManager.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { Container, Typography, Paper, Button, Dialog, DialogTitle, DialogContent, DialogActions, TextField, CircularProgress, Grid, Box, IconButton, Divider, Alert, Snackbar, List, ListItem, ListItemText, ListItemSecondaryAction, Tooltip, FormControl, InputLabel, MenuItem, Select } from '@mui/material';\nimport AddIcon from '@mui/icons-material/Add';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport ArrowUpwardIcon from '@mui/icons-material/ArrowUpward';\nimport ArrowDownwardIcon from '@mui/icons-material/ArrowDownward';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StageManager = () => {\n  _s();\n  const {\n    businessId,\n    agentId\n  } = useParams();\n  const navigate = useNavigate();\n  const [stages, setStages] = useState([]);\n  const [selectedStage, setSelectedStage] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [openDialog, setOpenDialog] = useState(false);\n  const [openDeleteDialog, setOpenDeleteDialog] = useState(false);\n  const [stageToDelete, setStageToDelete] = useState(null);\n  const [newStageName, setNewStageName] = useState('');\n  const [availableTemplates, setAvailableTemplates] = useState({\n    stage_selection: [],\n    data_extraction: [],\n    response_generation: []\n  });\n  const [defaultTemplates, setDefaultTemplates] = useState({\n    stage_selection: '',\n    data_extraction: '',\n    response_generation: ''\n  });\n\n  // Fetch templates for dropdowns\n  const fetchTemplates = useCallback(async () => {\n    try {\n      const response = await fetch('/templates', {\n        credentials: 'include'\n      });\n      if (!response.ok) throw new Error('Failed to fetch templates');\n      const templates = await response.json();\n\n      // Group templates by type\n      const templatesByType = {\n        stage_selection: [],\n        data_extraction: [],\n        response_generation: []\n      };\n      const defaultTemplateIds = {\n        stage_selection: '',\n        data_extraction: '',\n        response_generation: ''\n      };\n      templates.forEach(template => {\n        // Check if this is a regular template type\n        if (template.template_type in templatesByType) {\n          templatesByType[template.template_type].push(template);\n        }\n\n        // Check if this is a default template type\n        if (template.template_type.startsWith('default_')) {\n          // Extract the base type (e.g., from 'default_stage_selection' to 'stage_selection')\n          const baseType = template.template_type.replace('default_', '');\n          if (baseType in defaultTemplateIds) {\n            // Store the first default template's ID for each type\n            if (!defaultTemplateIds[baseType]) {\n              defaultTemplateIds[baseType] = template.template_id;\n            }\n          }\n        }\n      });\n      setAvailableTemplates(templatesByType);\n      setDefaultTemplates(defaultTemplateIds);\n    } catch (err) {\n      setError(err.message);\n    }\n  }, []);\n\n  // Fetch stages based on business ID and agent ID\n  const fetchStages = useCallback(async () => {\n    setIsLoading(true);\n    try {\n      let url = '/stages';\n      if (businessId) {\n        url += `?business_id=${businessId}`;\n        if (agentId) {\n          url += `&agent_id=${agentId}`;\n        }\n      }\n      const response = await fetch(url, {\n        credentials: 'include'\n      });\n      if (!response.ok) throw new Error('Failed to fetch stages');\n      const data = await response.json();\n      setStages(data);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [businessId, agentId]);\n  useEffect(() => {\n    fetchTemplates();\n    fetchStages();\n  }, [fetchTemplates, fetchStages]);\n  const handleNavigateToHome = () => {\n    navigate('/business');\n  };\n  const handleCreateStage = async () => {\n    try {\n      if (!newStageName.trim()) {\n        setError('Stage name is required');\n        return;\n      }\n      const response = await fetch('/stages', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        body: JSON.stringify({\n          stage_name: newStageName,\n          business_id: businessId,\n          agent_id: agentId,\n          // Use default template IDs from our state\n          stage_selection_template_id: defaultTemplates.stage_selection || null,\n          data_extraction_template_id: defaultTemplates.data_extraction || null,\n          response_generation_template_id: defaultTemplates.response_generation || null,\n          stage_config: {\n            order: stages.length + 1\n          }\n        })\n      });\n      if (!response.ok) throw new Error('Failed to create stage');\n      const newStage = await response.json();\n      await fetchStages();\n      setOpenDialog(false);\n      setNewStageName('');\n      setSuccess('Stage created successfully');\n\n      // Navigate to the stage editor for the newly created stage\n      if (newStage && newStage.stage_id) {\n        navigate(`/stage-editor/${newStage.stage_id}`, {\n          state: {\n            businessId,\n            agentId\n          }\n        });\n      }\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  const handleNavigateToCreateStage = () => {\n    // Make sure we include business_id and agent_id in query parameters \n    // for the new stage creation page\n    const queryParams = new URLSearchParams();\n    if (businessId) queryParams.set('business_id', businessId);\n    if (agentId) queryParams.set('agent_id', agentId);\n    navigate(`/stage-editor/new?${queryParams.toString()}`, {\n      state: {\n        businessId,\n        agentId,\n        isNewStage: true\n      }\n    });\n  };\n  const handleNavigateToEditStage = stage => {\n    // Make sure we include business_id and agent_id in query parameters\n    const queryParams = new URLSearchParams();\n    if (businessId) queryParams.set('business_id', businessId);\n    if (agentId) queryParams.set('agent_id', agentId);\n    navigate(`/stage-editor/${stage.stage_id}?${queryParams.toString()}`, {\n      state: {\n        businessId,\n        agentId\n      }\n    });\n  };\n  const handleDeleteStage = async () => {\n    if (!stageToDelete) return;\n    try {\n      const response = await fetch(`/stages/${stageToDelete.stage_id}`, {\n        method: 'DELETE',\n        credentials: 'include'\n      });\n      if (!response.ok) throw new Error('Failed to delete stage');\n      await fetchStages();\n      setOpenDeleteDialog(false);\n      setStageToDelete(null);\n      setSuccess('Stage deleted successfully');\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  const handleMoveStage = async (stageId, direction) => {\n    try {\n      const currentIndex = stages.findIndex(s => s.stage_id === stageId);\n      if (currentIndex === -1) return;\n\n      // If trying to move first item up or last item down, do nothing\n      if (currentIndex === 0 && direction === 'up' || currentIndex === stages.length - 1 && direction === 'down') {\n        return;\n      }\n      const targetIndex = direction === 'up' ? currentIndex - 1 : currentIndex + 1;\n\n      // Swap the order values in the stage_config\n      const updatedStages = [...stages];\n      const currentStage = {\n        ...updatedStages[currentIndex]\n      };\n      const targetStage = {\n        ...updatedStages[targetIndex]\n      };\n\n      // Update stage_config.order values\n      currentStage.stage_config = {\n        ...currentStage.stage_config,\n        order: targetIndex + 1\n      };\n      targetStage.stage_config = {\n        ...targetStage.stage_config,\n        order: currentIndex + 1\n      };\n\n      // Update both stages in the database\n      const currentUpdate = fetch(`/stages/${currentStage.stage_id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        body: JSON.stringify(currentStage)\n      });\n      const targetUpdate = fetch(`/stages/${targetStage.stage_id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        body: JSON.stringify(targetStage)\n      });\n      await Promise.all([currentUpdate, targetUpdate]);\n\n      // Refresh stages\n      await fetchStages();\n      setSuccess('Stage order updated');\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    sx: {\n      mt: 4,\n      mb: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        p: 3,\n        mb: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          alignItems: 'center',\n          mb: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: handleNavigateToHome,\n          sx: {\n            mr: 1\n          },\n          children: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          component: \"h1\",\n          gutterBottom: true,\n          sx: {\n            flexGrow: 1\n          },\n          children: [\"Stage Manager\", businessId && /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            component: \"span\",\n            color: \"text.secondary\",\n            children: [` - Business ID: ${businessId}`, agentId && ` - Agent ID: ${agentId}`]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 28\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 24\n          }, this),\n          onClick: handleNavigateToCreateStage,\n          children: \"Create Stage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        sx: {\n          mb: 3\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        sx: {\n          mb: 2\n        },\n        onClose: () => setError(''),\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 11\n      }, this), success && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"success\",\n        sx: {\n          mb: 2\n        },\n        onClose: () => setSuccess(''),\n        children: success\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 11\n      }, this), isLoading ? /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'center',\n          p: 4\n        },\n        children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: stages.length === 0 ? /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"info\",\n          children: \"No stages found. Create your first stage to get started.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(List, {\n          sx: {\n            bgcolor: 'background.paper'\n          },\n          children: [...stages].sort((a, b) => {\n            var _a$stage_config, _b$stage_config;\n            return (((_a$stage_config = a.stage_config) === null || _a$stage_config === void 0 ? void 0 : _a$stage_config.order) || Infinity) - (((_b$stage_config = b.stage_config) === null || _b$stage_config === void 0 ? void 0 : _b$stage_config.order) || Infinity);\n          }).map(stage => /*#__PURE__*/_jsxDEV(ListItem, {\n            button: true,\n            onClick: () => handleNavigateToEditStage(stage),\n            sx: {\n              mb: 1,\n              bgcolor: 'background.paper'\n            },\n            children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: stage.stage_name,\n              secondary: /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  component: \"span\",\n                  variant: \"body2\",\n                  color: \"text.primary\",\n                  children: `Stage ID: ${stage.stage_id}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 360,\n                  columnNumber: 27\n                }, this), stage.stage_config && stage.stage_config.order && ` • Order: ${stage.stage_config.order}`]\n              }, void 0, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n              children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n                title: \"Move Up\",\n                children: /*#__PURE__*/_jsxDEV(IconButton, {\n                  edge: \"end\",\n                  onClick: e => {\n                    e.stopPropagation();\n                    handleMoveStage(stage.stage_id, 'up');\n                  },\n                  disabled: stages.indexOf(stage) === 0,\n                  children: /*#__PURE__*/_jsxDEV(ArrowUpwardIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 378,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 370,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 369,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                title: \"Move Down\",\n                children: /*#__PURE__*/_jsxDEV(IconButton, {\n                  edge: \"end\",\n                  onClick: e => {\n                    e.stopPropagation();\n                    handleMoveStage(stage.stage_id, 'down');\n                  },\n                  disabled: stages.indexOf(stage) === stages.length - 1,\n                  children: /*#__PURE__*/_jsxDEV(ArrowDownwardIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 390,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 382,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 381,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                title: \"Edit Stage\",\n                children: /*#__PURE__*/_jsxDEV(IconButton, {\n                  edge: \"end\",\n                  onClick: e => {\n                    e.stopPropagation();\n                    handleNavigateToEditStage(stage);\n                  },\n                  children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 401,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 394,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 393,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                title: \"Delete Stage\",\n                children: /*#__PURE__*/_jsxDEV(IconButton, {\n                  edge: \"end\",\n                  onClick: e => {\n                    e.stopPropagation();\n                    setStageToDelete(stage);\n                    setOpenDeleteDialog(true);\n                  },\n                  children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 413,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 405,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 404,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 21\n            }, this)]\n          }, stage.stage_id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 15\n        }, this)\n      }, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openDeleteDialog,\n      onClose: () => setOpenDeleteDialog(false),\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Confirm Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"Are you sure you want to delete the stage \\\"\", stageToDelete === null || stageToDelete === void 0 ? void 0 : stageToDelete.stage_name, \"\\\"? This action cannot be undone.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setOpenDeleteDialog(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleDeleteStage,\n          color: \"error\",\n          variant: \"contained\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: !!error,\n      autoHideDuration: 6000,\n      onClose: () => setError(''),\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        onClose: () => setError(''),\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: !!success,\n      autoHideDuration: 6000,\n      onClose: () => setSuccess(''),\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"success\",\n        onClose: () => setSuccess(''),\n        children: success\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 295,\n    columnNumber: 5\n  }, this);\n};\n_s(StageManager, \"mqaycQXgLPDRw4l4gLicz6zT0Ts=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = StageManager;\nexport default StageManager;\nvar _c;\n$RefreshReg$(_c, \"StageManager\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useParams","useNavigate","Container","Typography","Paper","Button","Dialog","DialogTitle","DialogContent","DialogActions","TextField","CircularProgress","Grid","Box","IconButton","Divider","Alert","Snackbar","List","ListItem","ListItemText","ListItemSecondaryAction","Tooltip","FormControl","InputLabel","MenuItem","Select","AddIcon","DeleteIcon","EditIcon","ArrowUpwardIcon","ArrowDownwardIcon","ArrowBackIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","StageManager","_s","businessId","agentId","navigate","stages","setStages","selectedStage","setSelectedStage","isLoading","setIsLoading","error","setError","success","setSuccess","openDialog","setOpenDialog","openDeleteDialog","setOpenDeleteDialog","stageToDelete","setStageToDelete","newStageName","setNewStageName","availableTemplates","setAvailableTemplates","stage_selection","data_extraction","response_generation","defaultTemplates","setDefaultTemplates","fetchTemplates","response","fetch","credentials","ok","Error","templates","json","templatesByType","defaultTemplateIds","forEach","template","template_type","push","startsWith","baseType","replace","template_id","err","message","fetchStages","url","data","handleNavigateToHome","handleCreateStage","trim","method","headers","body","JSON","stringify","stage_name","business_id","agent_id","stage_selection_template_id","data_extraction_template_id","response_generation_template_id","stage_config","order","length","newStage","stage_id","state","handleNavigateToCreateStage","queryParams","URLSearchParams","set","toString","isNewStage","handleNavigateToEditStage","stage","handleDeleteStage","handleMoveStage","stageId","direction","currentIndex","findIndex","s","targetIndex","updatedStages","currentStage","targetStage","currentUpdate","targetUpdate","Promise","all","maxWidth","sx","mt","mb","children","p","display","alignItems","onClick","mr","fileName","_jsxFileName","lineNumber","columnNumber","variant","component","gutterBottom","flexGrow","color","startIcon","severity","onClose","justifyContent","bgcolor","sort","a","b","_a$stage_config","_b$stage_config","Infinity","map","button","primary","secondary","title","edge","e","stopPropagation","disabled","indexOf","open","autoHideDuration","_c","$RefreshReg$"],"sources":["C:/icmp_events_api/front-end/src/components/StageManager.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport {\r\n  Container,\r\n  Typography,\r\n  Paper,\r\n  Button,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField,\r\n  CircularProgress,\r\n  Grid,\r\n  Box,\r\n  IconButton,\r\n  Divider,\r\n  Alert,\r\n  Snackbar,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemSecondaryAction,\r\n  Tooltip,\r\n  FormControl,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select\r\n} from '@mui/material';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport ArrowUpwardIcon from '@mui/icons-material/ArrowUpward';\r\nimport ArrowDownwardIcon from '@mui/icons-material/ArrowDownward';\r\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\r\n\r\nconst StageManager = () => {\r\n  const { businessId, agentId } = useParams();\r\n  const navigate = useNavigate();\r\n  const [stages, setStages] = useState([]);\r\n  const [selectedStage, setSelectedStage] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState('');\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n  const [openDeleteDialog, setOpenDeleteDialog] = useState(false);\r\n  const [stageToDelete, setStageToDelete] = useState(null);\r\n  const [newStageName, setNewStageName] = useState('');\r\n  const [availableTemplates, setAvailableTemplates] = useState({\r\n    stage_selection: [],\r\n    data_extraction: [],\r\n    response_generation: []\r\n  });\r\n  const [defaultTemplates, setDefaultTemplates] = useState({\r\n    stage_selection: '',\r\n    data_extraction: '',\r\n    response_generation: ''\r\n  });\r\n\r\n  // Fetch templates for dropdowns\r\n  const fetchTemplates = useCallback(async () => {\r\n    try {\r\n      const response = await fetch('/templates', {\r\n        credentials: 'include'\r\n      });\r\n      \r\n      if (!response.ok) throw new Error('Failed to fetch templates');\r\n      \r\n      const templates = await response.json();\r\n      \r\n      // Group templates by type\r\n      const templatesByType = {\r\n        stage_selection: [],\r\n        data_extraction: [],\r\n        response_generation: []\r\n      };\r\n      \r\n      const defaultTemplateIds = {\r\n        stage_selection: '',\r\n        data_extraction: '',\r\n        response_generation: ''\r\n      };\r\n      \r\n      templates.forEach(template => {\r\n        // Check if this is a regular template type\r\n        if (template.template_type in templatesByType) {\r\n          templatesByType[template.template_type].push(template);\r\n        }\r\n        \r\n        // Check if this is a default template type\r\n        if (template.template_type.startsWith('default_')) {\r\n          // Extract the base type (e.g., from 'default_stage_selection' to 'stage_selection')\r\n          const baseType = template.template_type.replace('default_', '');\r\n          if (baseType in defaultTemplateIds) {\r\n            // Store the first default template's ID for each type\r\n            if (!defaultTemplateIds[baseType]) {\r\n              defaultTemplateIds[baseType] = template.template_id;\r\n            }\r\n          }\r\n        }\r\n      });\r\n      \r\n      setAvailableTemplates(templatesByType);\r\n      setDefaultTemplates(defaultTemplateIds);\r\n    } catch (err) {\r\n      setError(err.message);\r\n    }\r\n  }, []);\r\n\r\n  // Fetch stages based on business ID and agent ID\r\n  const fetchStages = useCallback(async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      let url = '/stages';\r\n      if (businessId) {\r\n        url += `?business_id=${businessId}`;\r\n        if (agentId) {\r\n          url += `&agent_id=${agentId}`;\r\n        }\r\n      }\r\n      \r\n      const response = await fetch(url, {\r\n        credentials: 'include'\r\n      });\r\n      \r\n      if (!response.ok) throw new Error('Failed to fetch stages');\r\n      \r\n      const data = await response.json();\r\n      setStages(data);\r\n    } catch (err) {\r\n      setError(err.message);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [businessId, agentId]);\r\n\r\n  useEffect(() => {\r\n    fetchTemplates();\r\n    fetchStages();\r\n  }, [fetchTemplates, fetchStages]);\r\n\r\n  const handleNavigateToHome = () => {\r\n    navigate('/business');\r\n  };\r\n\r\n  const handleCreateStage = async () => {\r\n    try {\r\n      if (!newStageName.trim()) {\r\n        setError('Stage name is required');\r\n        return;\r\n      }\r\n\r\n      const response = await fetch('/stages', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify({\r\n          stage_name: newStageName,\r\n          business_id: businessId,\r\n          agent_id: agentId,\r\n          // Use default template IDs from our state\r\n          stage_selection_template_id: defaultTemplates.stage_selection || null,\r\n          data_extraction_template_id: defaultTemplates.data_extraction || null,\r\n          response_generation_template_id: defaultTemplates.response_generation || null,\r\n          stage_config: { order: stages.length + 1 }\r\n        }),\r\n      });\r\n      \r\n      if (!response.ok) throw new Error('Failed to create stage');\r\n      \r\n      const newStage = await response.json();\r\n      await fetchStages();\r\n      setOpenDialog(false);\r\n      setNewStageName('');\r\n      setSuccess('Stage created successfully');\r\n\r\n      // Navigate to the stage editor for the newly created stage\r\n      if (newStage && newStage.stage_id) {\r\n        navigate(`/stage-editor/${newStage.stage_id}`, {\r\n          state: { \r\n            businessId, \r\n            agentId\r\n          }\r\n        });\r\n      }\r\n    } catch (err) {\r\n      setError(err.message);\r\n    }\r\n  };\r\n\r\n  const handleNavigateToCreateStage = () => {\r\n    // Make sure we include business_id and agent_id in query parameters \r\n    // for the new stage creation page\r\n    const queryParams = new URLSearchParams();\r\n    if (businessId) queryParams.set('business_id', businessId);\r\n    if (agentId) queryParams.set('agent_id', agentId);\r\n    \r\n    navigate(`/stage-editor/new?${queryParams.toString()}`, {\r\n      state: { \r\n        businessId, \r\n        agentId, \r\n        isNewStage: true \r\n      }\r\n    });\r\n  };\r\n\r\n  const handleNavigateToEditStage = (stage) => {\r\n    // Make sure we include business_id and agent_id in query parameters\r\n    const queryParams = new URLSearchParams();\r\n    if (businessId) queryParams.set('business_id', businessId);\r\n    if (agentId) queryParams.set('agent_id', agentId);\r\n    \r\n    navigate(`/stage-editor/${stage.stage_id}?${queryParams.toString()}`, {\r\n      state: { \r\n        businessId, \r\n        agentId \r\n      }\r\n    });\r\n  };\r\n\r\n  const handleDeleteStage = async () => {\r\n    if (!stageToDelete) return;\r\n    \r\n    try {\r\n      const response = await fetch(`/stages/${stageToDelete.stage_id}`, {\r\n        method: 'DELETE',\r\n        credentials: 'include'\r\n      });\r\n      \r\n      if (!response.ok) throw new Error('Failed to delete stage');\r\n      \r\n      await fetchStages();\r\n      setOpenDeleteDialog(false);\r\n      setStageToDelete(null);\r\n      setSuccess('Stage deleted successfully');\r\n    } catch (err) {\r\n      setError(err.message);\r\n    }\r\n  };\r\n\r\n  const handleMoveStage = async (stageId, direction) => {\r\n    try {\r\n      const currentIndex = stages.findIndex(s => s.stage_id === stageId);\r\n      if (currentIndex === -1) return;\r\n      \r\n      // If trying to move first item up or last item down, do nothing\r\n      if ((currentIndex === 0 && direction === 'up') || \r\n          (currentIndex === stages.length - 1 && direction === 'down')) {\r\n        return;\r\n      }\r\n      \r\n      const targetIndex = direction === 'up' ? currentIndex - 1 : currentIndex + 1;\r\n      \r\n      // Swap the order values in the stage_config\r\n      const updatedStages = [...stages];\r\n      const currentStage = { ...updatedStages[currentIndex] };\r\n      const targetStage = { ...updatedStages[targetIndex] };\r\n      \r\n      // Update stage_config.order values\r\n      currentStage.stage_config = { ...currentStage.stage_config, order: targetIndex + 1 };\r\n      targetStage.stage_config = { ...targetStage.stage_config, order: currentIndex + 1 };\r\n      \r\n      // Update both stages in the database\r\n      const currentUpdate = fetch(`/stages/${currentStage.stage_id}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify(currentStage),\r\n      });\r\n      \r\n      const targetUpdate = fetch(`/stages/${targetStage.stage_id}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify(targetStage),\r\n      });\r\n      \r\n      await Promise.all([currentUpdate, targetUpdate]);\r\n      \r\n      // Refresh stages\r\n      await fetchStages();\r\n      setSuccess('Stage order updated');\r\n    } catch (err) {\r\n      setError(err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\r\n      <Paper sx={{ p: 3, mb: 4 }}>\r\n        <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\r\n          <IconButton onClick={handleNavigateToHome} sx={{ mr: 1 }}>\r\n            <ArrowBackIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h5\" component=\"h1\" gutterBottom sx={{ flexGrow: 1 }}>\r\n            Stage Manager\r\n            {businessId && <Typography variant=\"subtitle1\" component=\"span\" color=\"text.secondary\">\r\n              {` - Business ID: ${businessId}`}\r\n              {agentId && ` - Agent ID: ${agentId}`}\r\n            </Typography>}\r\n          </Typography>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            startIcon={<AddIcon />}\r\n            onClick={handleNavigateToCreateStage}\r\n          >\r\n            Create Stage\r\n          </Button>\r\n        </Box>\r\n        \r\n        <Divider sx={{ mb: 3 }} />\r\n        \r\n        {error && (\r\n          <Alert severity=\"error\" sx={{ mb: 2 }} onClose={() => setError('')}>\r\n            {error}\r\n          </Alert>\r\n        )}\r\n        \r\n        {success && (\r\n          <Alert severity=\"success\" sx={{ mb: 2 }} onClose={() => setSuccess('')}>\r\n            {success}\r\n          </Alert>\r\n        )}\r\n        \r\n        {isLoading ? (\r\n          <Box sx={{ display: 'flex', justifyContent: 'center', p: 4 }}>\r\n            <CircularProgress />\r\n          </Box>\r\n        ) : (\r\n          <>\r\n            {stages.length === 0 ? (\r\n              <Alert severity=\"info\">\r\n                No stages found. Create your first stage to get started.\r\n              </Alert>\r\n            ) : (\r\n              <List sx={{ bgcolor: 'background.paper' }}>\r\n                {[...stages].sort((a, b) => \r\n                  (a.stage_config?.order || Infinity) - (b.stage_config?.order || Infinity)\r\n                ).map((stage) => (\r\n                  <ListItem \r\n                    key={stage.stage_id}\r\n                    button\r\n                    onClick={() => handleNavigateToEditStage(stage)}\r\n                    sx={{ \r\n                      mb: 1,\r\n                      bgcolor: 'background.paper'\r\n                    }}\r\n                  >\r\n                    <ListItemText\r\n                      primary={stage.stage_name}\r\n                      secondary={\r\n                        <>\r\n                          <Typography component=\"span\" variant=\"body2\" color=\"text.primary\">\r\n                            {`Stage ID: ${stage.stage_id}`}\r\n                          </Typography>\r\n                          {stage.stage_config && stage.stage_config.order && \r\n                            ` • Order: ${stage.stage_config.order}`}\r\n                        </>\r\n                      }\r\n                    />\r\n                    <ListItemSecondaryAction>\r\n                      <Tooltip title=\"Move Up\">\r\n                        <IconButton \r\n                          edge=\"end\" \r\n                          onClick={(e) => {\r\n                            e.stopPropagation();\r\n                            handleMoveStage(stage.stage_id, 'up');\r\n                          }} \r\n                          disabled={stages.indexOf(stage) === 0}\r\n                        >\r\n                          <ArrowUpwardIcon />\r\n                        </IconButton>\r\n                      </Tooltip>\r\n                      <Tooltip title=\"Move Down\">\r\n                        <IconButton \r\n                          edge=\"end\" \r\n                          onClick={(e) => {\r\n                            e.stopPropagation();\r\n                            handleMoveStage(stage.stage_id, 'down');\r\n                          }} \r\n                          disabled={stages.indexOf(stage) === stages.length - 1}\r\n                        >\r\n                          <ArrowDownwardIcon />\r\n                        </IconButton>\r\n                      </Tooltip>\r\n                      <Tooltip title=\"Edit Stage\">\r\n                        <IconButton \r\n                          edge=\"end\" \r\n                          onClick={(e) => {\r\n                            e.stopPropagation();\r\n                            handleNavigateToEditStage(stage);\r\n                          }}\r\n                        >\r\n                          <EditIcon />\r\n                        </IconButton>\r\n                      </Tooltip>\r\n                      <Tooltip title=\"Delete Stage\">\r\n                        <IconButton \r\n                          edge=\"end\" \r\n                          onClick={(e) => {\r\n                            e.stopPropagation();\r\n                            setStageToDelete(stage);\r\n                            setOpenDeleteDialog(true);\r\n                          }}\r\n                        >\r\n                          <DeleteIcon />\r\n                        </IconButton>\r\n                      </Tooltip>\r\n                    </ListItemSecondaryAction>\r\n                  </ListItem>\r\n                ))}\r\n              </List>\r\n            )}\r\n          </>\r\n        )}\r\n      </Paper>\r\n      \r\n      {/* Delete Confirmation Dialog */}\r\n      <Dialog\r\n        open={openDeleteDialog}\r\n        onClose={() => setOpenDeleteDialog(false)}\r\n      >\r\n        <DialogTitle>Confirm Delete</DialogTitle>\r\n        <DialogContent>\r\n          <Typography>\r\n            Are you sure you want to delete the stage \"{stageToDelete?.stage_name}\"? This action cannot be undone.\r\n          </Typography>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setOpenDeleteDialog(false)}>Cancel</Button>\r\n          <Button onClick={handleDeleteStage} color=\"error\" variant=\"contained\">Delete</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      \r\n      {/* Error and Success Snackbars */}\r\n      <Snackbar\r\n        open={!!error}\r\n        autoHideDuration={6000}\r\n        onClose={() => setError('')}\r\n      >\r\n        <Alert severity=\"error\" onClose={() => setError('')}>\r\n          {error}\r\n        </Alert>\r\n      </Snackbar>\r\n      \r\n      <Snackbar\r\n        open={!!success}\r\n        autoHideDuration={6000}\r\n        onClose={() => setSuccess('')}\r\n      >\r\n        <Alert severity=\"success\" onClose={() => setSuccess('')}>\r\n          {success}\r\n        </Alert>\r\n      </Snackbar>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default StageManager; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}