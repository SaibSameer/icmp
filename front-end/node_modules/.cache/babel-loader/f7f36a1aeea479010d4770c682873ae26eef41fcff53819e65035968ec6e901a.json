{"ast":null,"code":"var _jsxFileName = \"C:\\\\icmp_events_api\\\\front-end\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { isLoggedIn, getStoredCredentials, logout } from '../services/authService';\n\n// Create the context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\n\n// Custom hook to use the auth context\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\n// Provider component\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [userId, setUserId] = useState('');\n  const [businessId, setBusinessId] = useState('');\n  const [businessApiKey, setBusinessApiKey] = useState('');\n\n  // Check if user is logged in on mount\n  useEffect(() => {\n    const loggedIn = isLoggedIn();\n    if (loggedIn) {\n      const {\n        userId,\n        businessId,\n        businessApiKey\n      } = getStoredCredentials();\n      setUserId(userId);\n      setBusinessId(businessId);\n      setBusinessApiKey(businessApiKey);\n      setIsAuthenticated(true);\n    }\n  }, []);\n\n  // Login function\n  const login = (newUserId, newBusinessId, newBusinessApiKey) => {\n    setUserId(newUserId);\n    setBusinessId(newBusinessId);\n    setBusinessApiKey(newBusinessApiKey);\n    setIsAuthenticated(true);\n  };\n\n  // Logout function\n  const handleLogout = () => {\n    logout();\n    setUserId('');\n    setBusinessId('');\n    setBusinessApiKey('');\n    setIsAuthenticated(false);\n  };\n\n  // Value object to be provided by the context\n  const value = {\n    isAuthenticated,\n    userId,\n    businessId,\n    businessApiKey,\n    login,\n    logout: handleLogout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"k//Z7rIaMUSVLESxJ5yU+kJGGBE=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","isLoggedIn","getStoredCredentials","logout","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","isAuthenticated","setIsAuthenticated","userId","setUserId","businessId","setBusinessId","businessApiKey","setBusinessApiKey","loggedIn","login","newUserId","newBusinessId","newBusinessApiKey","handleLogout","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/icmp_events_api/front-end/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { isLoggedIn, getStoredCredentials, logout } from '../services/authService';\r\n\r\n// Create the context\r\nconst AuthContext = createContext(null);\r\n\r\n// Custom hook to use the auth context\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\n// Provider component\r\nexport const AuthProvider = ({ children }) => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [userId, setUserId] = useState('');\r\n  const [businessId, setBusinessId] = useState('');\r\n  const [businessApiKey, setBusinessApiKey] = useState('');\r\n\r\n  // Check if user is logged in on mount\r\n  useEffect(() => {\r\n    const loggedIn = isLoggedIn();\r\n    if (loggedIn) {\r\n      const { userId, businessId, businessApiKey } = getStoredCredentials();\r\n      setUserId(userId);\r\n      setBusinessId(businessId);\r\n      setBusinessApiKey(businessApiKey);\r\n      setIsAuthenticated(true);\r\n    }\r\n  }, []);\r\n\r\n  // Login function\r\n  const login = (newUserId, newBusinessId, newBusinessApiKey) => {\r\n    setUserId(newUserId);\r\n    setBusinessId(newBusinessId);\r\n    setBusinessApiKey(newBusinessApiKey);\r\n    setIsAuthenticated(true);\r\n  };\r\n\r\n  // Logout function\r\n  const handleLogout = () => {\r\n    logout();\r\n    setUserId('');\r\n    setBusinessId('');\r\n    setBusinessApiKey('');\r\n    setIsAuthenticated(false);\r\n  };\r\n\r\n  // Value object to be provided by the context\r\n  const value = {\r\n    isAuthenticated,\r\n    userId,\r\n    businessId,\r\n    businessApiKey,\r\n    login,\r\n    logout: handleLogout\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}; "],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC7E,SAASC,UAAU,EAAEC,oBAAoB,EAAEC,MAAM,QAAQ,yBAAyB;;AAElF;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,gBAAGT,aAAa,CAAC,IAAI,CAAC;;AAEvC;AACA,OAAO,MAAMU,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,OAAO,GAAGX,UAAU,CAACQ,WAAW,CAAC;EACvC,IAAI,CAACG,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,6CAA6C,CAAC;EAChE;EACA,OAAOD,OAAO;AAChB,CAAC;;AAED;AAAAD,EAAA,CARaD,OAAO;AASpB,OAAO,MAAMI,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC5C,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACiB,MAAM,EAAEC,SAAS,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACmB,UAAU,EAAEC,aAAa,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACqB,cAAc,EAAEC,iBAAiB,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;;EAExD;EACAC,SAAS,CAAC,MAAM;IACd,MAAMsB,QAAQ,GAAGrB,UAAU,CAAC,CAAC;IAC7B,IAAIqB,QAAQ,EAAE;MACZ,MAAM;QAAEN,MAAM;QAAEE,UAAU;QAAEE;MAAe,CAAC,GAAGlB,oBAAoB,CAAC,CAAC;MACrEe,SAAS,CAACD,MAAM,CAAC;MACjBG,aAAa,CAACD,UAAU,CAAC;MACzBG,iBAAiB,CAACD,cAAc,CAAC;MACjCL,kBAAkB,CAAC,IAAI,CAAC;IAC1B;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMQ,KAAK,GAAGA,CAACC,SAAS,EAAEC,aAAa,EAAEC,iBAAiB,KAAK;IAC7DT,SAAS,CAACO,SAAS,CAAC;IACpBL,aAAa,CAACM,aAAa,CAAC;IAC5BJ,iBAAiB,CAACK,iBAAiB,CAAC;IACpCX,kBAAkB,CAAC,IAAI,CAAC;EAC1B,CAAC;;EAED;EACA,MAAMY,YAAY,GAAGA,CAAA,KAAM;IACzBxB,MAAM,CAAC,CAAC;IACRc,SAAS,CAAC,EAAE,CAAC;IACbE,aAAa,CAAC,EAAE,CAAC;IACjBE,iBAAiB,CAAC,EAAE,CAAC;IACrBN,kBAAkB,CAAC,KAAK,CAAC;EAC3B,CAAC;;EAED;EACA,MAAMa,KAAK,GAAG;IACZd,eAAe;IACfE,MAAM;IACNE,UAAU;IACVE,cAAc;IACdG,KAAK;IACLpB,MAAM,EAAEwB;EACV,CAAC;EAED,oBACEtB,OAAA,CAACC,WAAW,CAACuB,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAhB,QAAA,EAChCA;EAAQ;IAAAkB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACpB,GAAA,CAlDWF,YAAY;AAAAuB,EAAA,GAAZvB,YAAY;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}