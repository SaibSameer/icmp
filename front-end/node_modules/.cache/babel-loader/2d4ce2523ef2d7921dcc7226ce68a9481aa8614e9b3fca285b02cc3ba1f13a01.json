{"ast":null,"code":"var _jsxFileName = \"C:\\\\icmp_events_api\\\\front-end\\\\src\\\\components\\\\TemplateEditor.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useParams, useNavigate, useLocation } from 'react-router-dom';\nimport { Box, Paper, Typography, TextField, Button, FormControl, InputLabel, MenuItem, Select, CircularProgress, Grid, Alert, Divider, Chip, IconButton, Tooltip, Dialog, DialogTitle, DialogContent, DialogActions, Snackbar, ListSubheader } from '@mui/material';\nimport SaveIcon from '@mui/icons-material/Save';\nimport PreviewIcon from '@mui/icons-material/Preview';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport HelpOutlineIcon from '@mui/icons-material/HelpOutline';\nimport VisibilityIcon from '@mui/icons-material/Visibility';\nimport { API_CONFIG } from '../config';\nimport { normalizeUUID } from '../hooks/useConfig';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TemplateEditor = () => {\n  _s();\n  const {\n    templateId\n  } = useParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  // Parse query parameters\n  const queryParams = new URLSearchParams(location.search);\n  const queryBusinessId = queryParams.get('business_id');\n  const queryAgentId = queryParams.get('agent_id');\n\n  // Get stored business ID and API key from localStorage\n  const storedBusinessId = localStorage.getItem('businessId');\n  const storedApiKey = localStorage.getItem('businessApiKey');\n  const storedAgentId = localStorage.getItem('agentId');\n\n  // State for template data\n  const [template, setTemplate] = useState({\n    template_id: templateId === 'new' ? '' : templateId,\n    template_name: '',\n    content: '',\n    system_prompt: '',\n    template_type: 'stage_selection',\n    variables: [],\n    agent_id: ''\n  });\n\n  // State for UI\n  const [businessId, setBusinessId] = useState(queryBusinessId || storedBusinessId || '');\n  const [businessApiKey, setBusinessApiKey] = useState(storedApiKey || '');\n  const [agentId, setAgentId] = useState(queryAgentId || storedAgentId || '');\n  const [showBusinessIdInput, setShowBusinessIdInput] = useState(!businessId || !businessApiKey);\n  const [showAgentIdInput, setShowAgentIdInput] = useState(!agentId);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [previewData, setPreviewData] = useState(null);\n  const [showPreview, setShowPreview] = useState(false);\n  const [snackbar, setSnackbar] = useState({\n    open: false,\n    message: '',\n    severity: 'success'\n  });\n\n  // Add state for template types array\n  const templateTypes = [{\n    value: 'stage_selection',\n    label: 'Stage Selection',\n    group: 'Regular'\n  }, {\n    value: 'data_extraction',\n    label: 'Data Extraction',\n    group: 'Regular'\n  }, {\n    value: 'response_generation',\n    label: 'Response Generation',\n    group: 'Regular'\n  }, {\n    value: 'default_stage_selection',\n    label: 'Default Stage Selection',\n    group: 'Default'\n  }, {\n    value: 'default_data_extraction',\n    label: 'Default Data Extraction',\n    group: 'Default'\n  }, {\n    value: 'default_response_generation',\n    label: 'Default Response Generation',\n    group: 'Default'\n  }];\n\n  // Extract variables from template content\n  const extractVariables = text => {\n    if (!text) return [];\n    const matches = text.match(/\\{([^}]+)\\}/g) || [];\n    return matches.map(match => match.slice(1, -1));\n  };\n\n  // Update variables whenever template content changes\n  useEffect(() => {\n    const variables = extractVariables(template.content);\n    setTemplate(prev => ({\n      ...prev,\n      variables\n    }));\n  }, [template.content]);\n\n  // Update template's agent_id when agentId changes\n  useEffect(() => {\n    if (agentId) {\n      setTemplate(prev => ({\n        ...prev,\n        agent_id: agentId\n      }));\n    }\n  }, [agentId]);\n\n  // Fetch template data if editing an existing template\n  useEffect(() => {\n    const fetchTemplateData = async () => {\n      // Skip fetching for new templates\n      if (templateId === 'new') return;\n\n      // Skip fetching if templateId is invalid/undefined\n      if (!templateId || templateId === 'undefined') {\n        console.error('Invalid template ID:', templateId);\n        showSnackbar('Invalid template ID', 'error');\n        // Redirect to template creation\n        navigate('/template-editor/new');\n        return;\n      }\n      if (!businessId) {\n        showSnackbar('Business ID is required to fetch template', 'error');\n        setShowBusinessIdInput(true);\n        return;\n      }\n      if (!businessApiKey) {\n        showSnackbar('Business API Key is required', 'error');\n        setShowBusinessIdInput(true);\n        return;\n      }\n      setIsLoading(true);\n      try {\n        console.log(`Fetching template with ID: ${templateId}`);\n        const response = await fetch(`/templates/${templateId}?business_id=${businessId}`, {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json',\n            'Authorization': `Bearer ${businessApiKey}`\n          },\n          credentials: 'include'\n        });\n        if (!response.ok) {\n          const errorData = await response.json().catch(() => ({}));\n          throw new Error(errorData.error || errorData.message || 'Failed to fetch template');\n        }\n        const data = await response.json();\n        console.log('Fetched template:', data);\n\n        // Don't modify the template_type, preserve its original value\n        setTemplate({\n          template_id: data.template_id,\n          template_name: data.template_name || '',\n          content: data.content || '',\n          system_prompt: data.system_prompt || '',\n          template_type: data.template_type || 'stage_selection',\n          variables: extractVariables(data.content),\n          agent_id: data.agent_id || ''\n        });\n      } catch (err) {\n        console.error('Error fetching template:', err);\n        showSnackbar(err.message, 'error');\n        // Redirect to template list on error\n        navigate('/templates');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchTemplateData();\n  }, [templateId, businessId, businessApiKey, navigate]);\n\n  // Validate credentials\n  const validateCredentials = async () => {\n    if (!businessId || !businessApiKey) {\n      setSnackbar({\n        open: true,\n        message: 'Business ID and API Key are required',\n        severity: 'error'\n      });\n      setShowBusinessIdInput(true);\n      return false;\n    }\n    try {\n      // Use the correct endpoint and method\n      const response = await fetch(`/businesses/validate-credentials?business_id=${businessId}&api_key=${businessApiKey}`, {\n        method: 'GET',\n        headers: {\n          'Accept': 'application/json',\n          'Authorization': `Bearer ${businessApiKey}`\n        },\n        credentials: 'include'\n      });\n      if (!response.ok) {\n        throw new Error('Invalid business ID or API key');\n      }\n      const data = await response.json();\n      if (!data.valid) {\n        throw new Error(data.message || 'Credential validation failed');\n      }\n      return true;\n    } catch (err) {\n      console.error('Credential validation error:', err);\n      setSnackbar({\n        open: true,\n        message: 'Failed to validate credentials: ' + err.message,\n        severity: 'error'\n      });\n      setShowBusinessIdInput(true);\n      return false;\n    }\n  };\n\n  // Save credentials\n  const saveCredentials = async () => {\n    if (!businessId || !businessApiKey) {\n      showSnackbar('Please enter both Business ID and API Key', 'error');\n      return;\n    }\n    const isValid = await validateCredentials();\n    if (isValid) {\n      // Save to both localStorage and cookies\n      localStorage.setItem('businessId', businessId);\n      localStorage.setItem('businessApiKey', businessApiKey);\n      document.cookie = `businessId=${businessId}; path=/; max-age=86400`;\n      document.cookie = `businessApiKey=${businessApiKey}; path=/; max-age=86400`;\n      setShowBusinessIdInput(false);\n      showSnackbar('Business credentials validated and saved', 'success');\n    }\n  };\n\n  // Handle template preview\n  const handlePreview = async () => {\n    if (!template.content.trim()) {\n      showSnackbar('Template content is empty', 'error');\n      return;\n    }\n    setIsLoading(true);\n    try {\n      // Prepare preview request\n      const previewRequest = {\n        template_type: template.template_type,\n        template_text: template.content,\n        business_id: businessId,\n        agent_id: agentId,\n        context: {\n          conversation_history: [{\n            role: \"user\",\n            content: \"I'm interested in your products\"\n          }, {\n            role: \"assistant\",\n            content: \"I'd be happy to tell you about our products. What type are you interested in?\"\n          }],\n          extracted_data: {\n            customer_name: \"John Doe\",\n            product_interest: \"shoes\",\n            budget: \"$100\"\n          }\n        }\n      };\n      let previewSuccess = false;\n      let errorMessage = '';\n\n      // Try multiple possible endpoints (for compatibility)\n      const endpoints = ['/templates/preview', '/templates/render', '/render_template', '/api/templates/preview'];\n      let response = null;\n      for (const endpoint of endpoints) {\n        try {\n          console.log(`Trying to preview template with endpoint: ${endpoint}`);\n          response = await fetch(endpoint, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n              'Accept': 'application/json',\n              'Authorization': `Bearer ${businessApiKey}`\n            },\n            credentials: 'include',\n            body: JSON.stringify(previewRequest)\n          });\n          if (response.ok) {\n            const data = await response.json();\n            console.log('Preview response:', data);\n            setPreviewData(data);\n            setShowPreview(true);\n            previewSuccess = true;\n            break;\n          } else {\n            const errData = await response.json().catch(() => ({}));\n            errorMessage = errData.message || errData.error || `Failed with status ${response.status}`;\n            console.warn(`Endpoint ${endpoint} failed: ${errorMessage}`);\n          }\n        } catch (endpointErr) {\n          console.warn(`Endpoint ${endpoint} failed:`, endpointErr);\n          errorMessage = endpointErr.message;\n        }\n      }\n\n      // If no endpoint worked, use fallback preview\n      if (!previewSuccess) {\n        console.log('All endpoint attempts failed, using local preview');\n\n        // Simple variable replacement for demonstration\n        let previewText = template.content;\n\n        // Replace variables with sample values\n        template.variables.forEach(variable => {\n          const sampleValue = `[Sample ${variable}]`;\n          previewText = previewText.replace(new RegExp(`{${variable}}`, 'g'), sampleValue);\n        });\n        setPreviewData({\n          rendered_text: previewText,\n          message: \"Using client-side preview (API endpoints not available)\",\n          is_fallback: true\n        });\n        setShowPreview(true);\n\n        // Show notification\n        showSnackbar(`Using fallback preview. Server error: ${errorMessage}`, 'warning');\n      }\n    } catch (err) {\n      console.error('Error generating preview:', err);\n      showSnackbar(`Failed to generate preview: ${err.message}`, 'error');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Handle template save\n  const handleSaveTemplate = async () => {\n    if (!template.template_name || !template.content || !template.template_type) {\n      showSnackbar('Template name, content, and type are required', 'error');\n      return;\n    }\n\n    // Validate credentials if needed\n    if (!businessId || !businessApiKey) {\n      showSnackbar('Business ID and API Key are required', 'error');\n      setShowBusinessIdInput(true);\n      return;\n    }\n    setIsLoading(true);\n    try {\n      // Check if we're creating a new template or editing an existing one\n      const isNewTemplate = templateId === 'new' || !template.template_id;\n\n      // Use the API_CONFIG for consistent endpoints\n      const endpoint = isNewTemplate ? API_CONFIG.ENDPOINTS.TEMPLATES : `${API_CONFIG.ENDPOINTS.TEMPLATES}/${template.template_id}`;\n      const url = `${API_CONFIG.BASE_URL}${endpoint}`;\n      console.log(`Saving template to URL: ${url}, method: ${isNewTemplate ? 'POST' : 'PUT'}`);\n      const method = isNewTemplate ? 'POST' : 'PUT';\n\n      // Prepare the request payload with the correct field names\n      const payload = {\n        template_name: template.template_name,\n        content: template.content,\n        system_prompt: template.system_prompt || '',\n        template_type: template.template_type,\n        business_id: normalizeUUID(businessId)\n      };\n\n      // Only include template_id for existing templates\n      if (!isNewTemplate && template.template_id) {\n        payload.template_id = template.template_id;\n      }\n\n      // Add agent_id if available\n      if (agentId) {\n        payload.agent_id = normalizeUUID(agentId);\n      }\n      console.log('Payload with normalized IDs:', payload);\n      const response = await fetch(url, {\n        method,\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json',\n          'Authorization': `Bearer ${businessApiKey}`\n        },\n        credentials: 'include',\n        body: JSON.stringify(payload)\n      });\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({}));\n        throw new Error(errorData.error || errorData.message || `Failed to ${isNewTemplate ? 'create' : 'update'} template`);\n      }\n      const data = await response.json();\n      showSnackbar(`Template ${isNewTemplate ? 'created' : 'updated'} successfully`, 'success');\n\n      // If creating a new template, update the URL to edit mode\n      if (isNewTemplate && data.template_id) {\n        // Set a flag in localStorage to trigger a refresh on the templates list\n        localStorage.setItem('template_updated', 'true');\n\n        // Update the browser URL without navigating away\n        window.history.replaceState(null, '', `/template-editor/${data.template_id}?business_id=${businessId}${agentId ? `&agent_id=${agentId}` : ''}`);\n\n        // Update the template with the new ID\n        setTemplate(prev => ({\n          ...prev,\n          template_id: data.template_id\n        }));\n\n        // Update the templateId state\n        setTemplateId(data.template_id);\n      }\n    } catch (err) {\n      console.error('Error saving template:', err);\n      showSnackbar(err.message, 'error');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Navigate back to templates list\n  const handleCancel = () => {\n    navigate('/templates');\n  };\n\n  // Handle template type change\n  const handleTemplateTypeChange = e => {\n    const newType = e.target.value;\n    console.log('Template type changed to:', newType);\n    setTemplate(prev => {\n      const updated = {\n        ...prev,\n        template_type: newType\n      };\n      console.log('Updated template state:', updated);\n      return updated;\n    });\n  };\n\n  // Snackbar functions\n  const showSnackbar = (message, severity = 'success') => {\n    setSnackbar({\n      open: true,\n      message,\n      severity\n    });\n  };\n  const handleCloseSnackbar = () => {\n    setSnackbar(prev => ({\n      ...prev,\n      open: false\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    sx: {\n      p: 3,\n      mb: 3,\n      maxWidth: 1200,\n      mx: 'auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        alignItems: 'center',\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: handleCancel,\n        sx: {\n          mr: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 493,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        children: template.template_id && template.template_id !== 'new' ? 'Edit Template' : 'Create New Template'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 495,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          flexGrow: 1\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 498,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handleSaveTemplate,\n        disabled: isLoading || !template.template_name.trim() || !template.content.trim(),\n        startIcon: isLoading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n          size: 24\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 504,\n          columnNumber: 34\n        }, this) : /*#__PURE__*/_jsxDEV(SaveIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 504,\n          columnNumber: 67\n        }, this),\n        children: \"Save Template\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 499,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 491,\n      columnNumber: 7\n    }, this), (showBusinessIdInput || !businessId || !businessApiKey) && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 3,\n        p: 2,\n        border: '1px dashed',\n        borderColor: 'warning.main',\n        borderRadius: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle1\",\n        color: \"warning.main\",\n        gutterBottom: true,\n        children: \"Business Credentials Required\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 513,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 5,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Business ID\",\n            value: businessId,\n            onChange: e => setBusinessId(e.target.value),\n            placeholder: \"Enter your business ID\",\n            helperText: \"Required for saving templates\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 518,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 517,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 5,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Business API Key\",\n            value: businessApiKey,\n            onChange: e => setBusinessApiKey(e.target.value),\n            placeholder: \"Enter your business API key\",\n            helperText: \"Required for authentication\",\n            type: \"password\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 529,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 528,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 2,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: saveCredentials,\n            fullWidth: true,\n            sx: {\n              height: '56px'\n            },\n            children: \"Validate & Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 541,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 540,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 516,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 512,\n      columnNumber: 9\n    }, this), (showAgentIdInput || !agentId) && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 3,\n        p: 2,\n        border: '1px dashed',\n        borderColor: 'warning.main',\n        borderRadius: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle1\",\n        color: \"warning.main\",\n        gutterBottom: true,\n        children: \"Agent ID Required\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 558,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 5,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Agent ID\",\n            value: agentId,\n            onChange: e => setAgentId(e.target.value),\n            placeholder: \"Enter your agent ID\",\n            helperText: \"Required for saving templates\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 563,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 562,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 561,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 557,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"Template Name\",\n          value: template.template_name,\n          onChange: e => setTemplate(prev => ({\n            ...prev,\n            template_name: e.target.value\n          })),\n          required: true,\n          error: !template.template_name.trim(),\n          helperText: !template.template_name.trim() ? \"Template name is required\" : \"\",\n          sx: {\n            mb: 2\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 580,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          sx: {\n            mb: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"template-type-label\",\n            children: \"Template Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 592,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            labelId: \"template-type-label\",\n            value: template.template_type,\n            label: \"Template Type\",\n            onChange: handleTemplateTypeChange,\n            children: [/*#__PURE__*/_jsxDEV(ListSubheader, {\n              children: \"Regular Templates\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 599,\n              columnNumber: 15\n            }, this), templateTypes.filter(type => type.group === 'Regular').map(type => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: type.value,\n              children: type.label\n            }, type.value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 603,\n              columnNumber: 19\n            }, this)), /*#__PURE__*/_jsxDEV(ListSubheader, {\n              children: \"Default Templates\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 608,\n              columnNumber: 15\n            }, this), templateTypes.filter(type => type.group === 'Default').map(type => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: type.value,\n              children: type.label\n            }, type.value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 612,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 593,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 591,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"Template Description\",\n          value: template.template_description,\n          onChange: e => setTemplate(prev => ({\n            ...prev,\n            template_description: e.target.value\n          })),\n          multiline: true,\n          rows: 2,\n          sx: {\n            mb: 2\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 620,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            alignItems: 'center',\n            mb: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            sx: {\n              mr: 2\n            },\n            children: \"Detected Variables:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 631,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              flexWrap: 'wrap',\n              gap: 1\n            },\n            children: template.variables.length > 0 ? template.variables.map((variable, index) => /*#__PURE__*/_jsxDEV(Chip, {\n              label: variable,\n              color: \"primary\",\n              variant: \"outlined\"\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 637,\n              columnNumber: 19\n            }, this)) : /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"text.secondary\",\n              children: [\"No variables detected. Use \", \"{variable_name}\", \" syntax.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 645,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 634,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 630,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          color: \"primary\",\n          onClick: handlePreview,\n          disabled: !template.content.trim(),\n          startIcon: /*#__PURE__*/_jsxDEV(VisibilityIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 657,\n            columnNumber: 24\n          }, this),\n          sx: {\n            mt: 2\n          },\n          children: \"Preview Template\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 652,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 579,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          gutterBottom: true,\n          children: [\"Template Content\", /*#__PURE__*/_jsxDEV(Tooltip, {\n            title: \"Use {variable_name} syntax to create variables in your template\",\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              size: \"small\",\n              children: /*#__PURE__*/_jsxDEV(HelpOutlineIcon, {\n                fontSize: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 669,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 668,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 667,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 665,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          multiline: true,\n          rows: 10,\n          value: template.content,\n          onChange: e => setTemplate({\n            ...template,\n            content: e.target.value\n          }),\n          placeholder: \"Enter your template content here with variables in {curly_braces}...\",\n          sx: {\n            mb: 2,\n            fontFamily: 'monospace',\n            '& .MuiInputBase-input': {\n              fontFamily: 'monospace'\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 673,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"System Prompt (Optional)\",\n            value: template.system_prompt,\n            onChange: e => setTemplate({\n              ...template,\n              system_prompt: e.target.value\n            }),\n            fullWidth: true,\n            multiline: true,\n            rows: 4,\n            margin: \"normal\",\n            variant: \"outlined\",\n            placeholder: \"Enter optional system prompt for the model...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 690,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 689,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 664,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 578,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: showPreview,\n      onClose: () => setShowPreview(false),\n      maxWidth: \"md\",\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Template Preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 712,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          gutterBottom: true,\n          children: [\"Template: \", template.template_name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 714,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle2\",\n          color: \"text.secondary\",\n          gutterBottom: true,\n          children: [\"Type: \", template.template_type]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 717,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          sx: {\n            my: 2\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 720,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            bgcolor: 'background.paper',\n            p: 2,\n            borderRadius: 1,\n            border: '1px solid',\n            borderColor: 'divider',\n            maxHeight: '500px',\n            overflow: 'auto',\n            fontFamily: 'monospace',\n            whiteSpace: 'pre-wrap',\n            wordBreak: 'break-word'\n          },\n          children: (previewData === null || previewData === void 0 ? void 0 : previewData.rendered_text) || (previewData === null || previewData === void 0 ? void 0 : previewData.content) || 'No preview data available'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 721,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 713,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setShowPreview(false),\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 737,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 736,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 706,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: snackbar.open,\n      autoHideDuration: 6000,\n      onClose: handleCloseSnackbar,\n      anchorOrigin: {\n        vertical: 'top',\n        horizontal: 'right'\n      },\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleCloseSnackbar,\n        severity: snackbar.severity,\n        sx: {\n          width: '100%'\n        },\n        children: snackbar.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 748,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 742,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 489,\n    columnNumber: 5\n  }, this);\n};\n_s(TemplateEditor, \"ZdA6oZKFhCzx+5pFowiYkQHyogU=\", false, function () {\n  return [useParams, useNavigate, useLocation];\n});\n_c = TemplateEditor;\nexport default TemplateEditor;\nvar _c;\n$RefreshReg$(_c, \"TemplateEditor\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useParams","useNavigate","useLocation","Box","Paper","Typography","TextField","Button","FormControl","InputLabel","MenuItem","Select","CircularProgress","Grid","Alert","Divider","Chip","IconButton","Tooltip","Dialog","DialogTitle","DialogContent","DialogActions","Snackbar","ListSubheader","SaveIcon","PreviewIcon","ArrowBackIcon","HelpOutlineIcon","VisibilityIcon","API_CONFIG","normalizeUUID","jsxDEV","_jsxDEV","TemplateEditor","_s","templateId","navigate","location","queryParams","URLSearchParams","search","queryBusinessId","get","queryAgentId","storedBusinessId","localStorage","getItem","storedApiKey","storedAgentId","template","setTemplate","template_id","template_name","content","system_prompt","template_type","variables","agent_id","businessId","setBusinessId","businessApiKey","setBusinessApiKey","agentId","setAgentId","showBusinessIdInput","setShowBusinessIdInput","showAgentIdInput","setShowAgentIdInput","isLoading","setIsLoading","error","setError","success","setSuccess","previewData","setPreviewData","showPreview","setShowPreview","snackbar","setSnackbar","open","message","severity","templateTypes","value","label","group","extractVariables","text","matches","match","map","slice","prev","fetchTemplateData","console","showSnackbar","log","response","fetch","method","headers","credentials","ok","errorData","json","catch","Error","data","err","validateCredentials","valid","saveCredentials","isValid","setItem","document","cookie","handlePreview","trim","previewRequest","template_text","business_id","context","conversation_history","role","extracted_data","customer_name","product_interest","budget","previewSuccess","errorMessage","endpoints","endpoint","body","JSON","stringify","errData","status","warn","endpointErr","previewText","forEach","variable","sampleValue","replace","RegExp","rendered_text","is_fallback","handleSaveTemplate","isNewTemplate","ENDPOINTS","TEMPLATES","url","BASE_URL","payload","window","history","replaceState","setTemplateId","handleCancel","handleTemplateTypeChange","e","newType","target","updated","handleCloseSnackbar","sx","p","mb","maxWidth","mx","children","display","alignItems","onClick","mr","fileName","_jsxFileName","lineNumber","columnNumber","variant","flexGrow","color","disabled","startIcon","size","border","borderColor","borderRadius","gutterBottom","container","spacing","item","xs","md","fullWidth","onChange","placeholder","helperText","required","type","height","id","labelId","filter","template_description","multiline","rows","flexWrap","gap","length","index","mt","title","fontSize","fontFamily","margin","onClose","my","bgcolor","maxHeight","overflow","whiteSpace","wordBreak","autoHideDuration","anchorOrigin","vertical","horizontal","width","_c","$RefreshReg$"],"sources":["C:/icmp_events_api/front-end/src/components/TemplateEditor.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { useParams, useNavigate, useLocation } from 'react-router-dom';\r\nimport {\r\n  Box,\r\n  Paper,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  FormControl,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  CircularProgress,\r\n  Grid,\r\n  Alert,\r\n  Divider,\r\n  Chip,\r\n  IconButton,\r\n  Tooltip,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Snackbar,\r\n  ListSubheader\r\n} from '@mui/material';\r\nimport SaveIcon from '@mui/icons-material/Save';\r\nimport PreviewIcon from '@mui/icons-material/Preview';\r\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\r\nimport HelpOutlineIcon from '@mui/icons-material/HelpOutline';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport { API_CONFIG } from '../config';\r\nimport { normalizeUUID } from '../hooks/useConfig';\r\n\r\nconst TemplateEditor = () => {\r\n  const { templateId } = useParams();\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  \r\n  // Parse query parameters\r\n  const queryParams = new URLSearchParams(location.search);\r\n  const queryBusinessId = queryParams.get('business_id');\r\n  const queryAgentId = queryParams.get('agent_id');\r\n  \r\n  // Get stored business ID and API key from localStorage\r\n  const storedBusinessId = localStorage.getItem('businessId');\r\n  const storedApiKey = localStorage.getItem('businessApiKey');\r\n  const storedAgentId = localStorage.getItem('agentId');\r\n  \r\n  // State for template data\r\n  const [template, setTemplate] = useState({\r\n    template_id: templateId === 'new' ? '' : templateId,\r\n    template_name: '',\r\n    content: '',\r\n    system_prompt: '',\r\n    template_type: 'stage_selection',\r\n    variables: [],\r\n    agent_id: ''\r\n  });\r\n  \r\n  // State for UI\r\n  const [businessId, setBusinessId] = useState(queryBusinessId || storedBusinessId || '');\r\n  const [businessApiKey, setBusinessApiKey] = useState(storedApiKey || '');\r\n  const [agentId, setAgentId] = useState(queryAgentId || storedAgentId || '');\r\n  const [showBusinessIdInput, setShowBusinessIdInput] = useState(!businessId || !businessApiKey);\r\n  const [showAgentIdInput, setShowAgentIdInput] = useState(!agentId);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState('');\r\n  const [previewData, setPreviewData] = useState(null);\r\n  const [showPreview, setShowPreview] = useState(false);\r\n  const [snackbar, setSnackbar] = useState({\r\n    open: false,\r\n    message: '',\r\n    severity: 'success'\r\n  });\r\n  \r\n  // Add state for template types array\r\n  const templateTypes = [\r\n    { value: 'stage_selection', label: 'Stage Selection', group: 'Regular' },\r\n    { value: 'data_extraction', label: 'Data Extraction', group: 'Regular' },\r\n    { value: 'response_generation', label: 'Response Generation', group: 'Regular' },\r\n    { value: 'default_stage_selection', label: 'Default Stage Selection', group: 'Default' },\r\n    { value: 'default_data_extraction', label: 'Default Data Extraction', group: 'Default' },\r\n    { value: 'default_response_generation', label: 'Default Response Generation', group: 'Default' }\r\n  ];\r\n  \r\n  // Extract variables from template content\r\n  const extractVariables = (text) => {\r\n    if (!text) return [];\r\n    const matches = text.match(/\\{([^}]+)\\}/g) || [];\r\n    return matches.map(match => match.slice(1, -1));\r\n  };\r\n  \r\n  // Update variables whenever template content changes\r\n  useEffect(() => {\r\n    const variables = extractVariables(template.content);\r\n    setTemplate(prev => ({\r\n      ...prev,\r\n      variables\r\n    }));\r\n  }, [template.content]);\r\n  \r\n  // Update template's agent_id when agentId changes\r\n  useEffect(() => {\r\n    if (agentId) {\r\n      setTemplate(prev => ({\r\n        ...prev,\r\n        agent_id: agentId\r\n      }));\r\n    }\r\n  }, [agentId]);\r\n  \r\n  // Fetch template data if editing an existing template\r\n  useEffect(() => {\r\n    const fetchTemplateData = async () => {\r\n      // Skip fetching for new templates\r\n      if (templateId === 'new') return;\r\n      \r\n      // Skip fetching if templateId is invalid/undefined\r\n      if (!templateId || templateId === 'undefined') {\r\n        console.error('Invalid template ID:', templateId);\r\n        showSnackbar('Invalid template ID', 'error');\r\n        // Redirect to template creation\r\n        navigate('/template-editor/new');\r\n        return;\r\n      }\r\n      \r\n      if (!businessId) {\r\n        showSnackbar('Business ID is required to fetch template', 'error');\r\n        setShowBusinessIdInput(true);\r\n        return;\r\n      }\r\n      \r\n      if (!businessApiKey) {\r\n        showSnackbar('Business API Key is required', 'error');\r\n        setShowBusinessIdInput(true);\r\n        return;\r\n      }\r\n      \r\n      setIsLoading(true);\r\n      try {\r\n        console.log(`Fetching template with ID: ${templateId}`);\r\n        const response = await fetch(`/templates/${templateId}?business_id=${businessId}`, {\r\n          method: 'GET',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': `Bearer ${businessApiKey}`\r\n          },\r\n          credentials: 'include'\r\n        });\r\n        \r\n        if (!response.ok) {\r\n          const errorData = await response.json().catch(() => ({}));\r\n          throw new Error(errorData.error || errorData.message || 'Failed to fetch template');\r\n        }\r\n        \r\n        const data = await response.json();\r\n        console.log('Fetched template:', data);\r\n        \r\n        // Don't modify the template_type, preserve its original value\r\n        setTemplate({\r\n          template_id: data.template_id,\r\n          template_name: data.template_name || '',\r\n          content: data.content || '',\r\n          system_prompt: data.system_prompt || '',\r\n          template_type: data.template_type || 'stage_selection',\r\n          variables: extractVariables(data.content),\r\n          agent_id: data.agent_id || ''\r\n        });\r\n      } catch (err) {\r\n        console.error('Error fetching template:', err);\r\n        showSnackbar(err.message, 'error');\r\n        // Redirect to template list on error\r\n        navigate('/templates');\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n    \r\n    fetchTemplateData();\r\n  }, [templateId, businessId, businessApiKey, navigate]);\r\n  \r\n  // Validate credentials\r\n  const validateCredentials = async () => {\r\n    if (!businessId || !businessApiKey) {\r\n      setSnackbar({\r\n        open: true,\r\n        message: 'Business ID and API Key are required',\r\n        severity: 'error'\r\n      });\r\n      setShowBusinessIdInput(true);\r\n      return false;\r\n    }\r\n    \r\n    try {\r\n      // Use the correct endpoint and method\r\n      const response = await fetch(`/businesses/validate-credentials?business_id=${businessId}&api_key=${businessApiKey}`, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Authorization': `Bearer ${businessApiKey}`\r\n        },\r\n        credentials: 'include'\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        throw new Error('Invalid business ID or API key');\r\n      }\r\n      \r\n      const data = await response.json();\r\n      if (!data.valid) {\r\n        throw new Error(data.message || 'Credential validation failed');\r\n      }\r\n      \r\n      return true;\r\n    } catch (err) {\r\n      console.error('Credential validation error:', err);\r\n      setSnackbar({\r\n        open: true,\r\n        message: 'Failed to validate credentials: ' + err.message,\r\n        severity: 'error'\r\n      });\r\n      setShowBusinessIdInput(true);\r\n      return false;\r\n    }\r\n  };\r\n  \r\n  // Save credentials\r\n  const saveCredentials = async () => {\r\n    if (!businessId || !businessApiKey) {\r\n      showSnackbar('Please enter both Business ID and API Key', 'error');\r\n      return;\r\n    }\r\n    \r\n    const isValid = await validateCredentials();\r\n    if (isValid) {\r\n      // Save to both localStorage and cookies\r\n      localStorage.setItem('businessId', businessId);\r\n      localStorage.setItem('businessApiKey', businessApiKey);\r\n      document.cookie = `businessId=${businessId}; path=/; max-age=86400`;\r\n      document.cookie = `businessApiKey=${businessApiKey}; path=/; max-age=86400`;\r\n      \r\n      setShowBusinessIdInput(false);\r\n      showSnackbar('Business credentials validated and saved', 'success');\r\n    }\r\n  };\r\n  \r\n  // Handle template preview\r\n  const handlePreview = async () => {\r\n    if (!template.content.trim()) {\r\n      showSnackbar('Template content is empty', 'error');\r\n      return;\r\n    }\r\n    \r\n    setIsLoading(true);\r\n    try {\r\n      // Prepare preview request\r\n      const previewRequest = {\r\n        template_type: template.template_type,\r\n        template_text: template.content,\r\n        business_id: businessId,\r\n        agent_id: agentId,\r\n        context: {\r\n          conversation_history: [\r\n            { role: \"user\", content: \"I'm interested in your products\" },\r\n            { role: \"assistant\", content: \"I'd be happy to tell you about our products. What type are you interested in?\" }\r\n          ],\r\n          extracted_data: {\r\n            customer_name: \"John Doe\",\r\n            product_interest: \"shoes\",\r\n            budget: \"$100\"\r\n          }\r\n        }\r\n      };\r\n      \r\n      let previewSuccess = false;\r\n      let errorMessage = '';\r\n      \r\n      // Try multiple possible endpoints (for compatibility)\r\n      const endpoints = [\r\n        '/templates/preview',\r\n        '/templates/render',\r\n        '/render_template',\r\n        '/api/templates/preview'\r\n      ];\r\n      \r\n      let response = null;\r\n      for (const endpoint of endpoints) {\r\n        try {\r\n          console.log(`Trying to preview template with endpoint: ${endpoint}`);\r\n          \r\n          response = await fetch(endpoint, {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n              'Accept': 'application/json',\r\n              'Authorization': `Bearer ${businessApiKey}`\r\n            },\r\n            credentials: 'include',\r\n            body: JSON.stringify(previewRequest),\r\n          });\r\n          \r\n          if (response.ok) {\r\n            const data = await response.json();\r\n            console.log('Preview response:', data);\r\n            setPreviewData(data);\r\n            setShowPreview(true);\r\n            previewSuccess = true;\r\n            break;\r\n          } else {\r\n            const errData = await response.json().catch(() => ({}));\r\n            errorMessage = errData.message || errData.error || `Failed with status ${response.status}`;\r\n            console.warn(`Endpoint ${endpoint} failed: ${errorMessage}`);\r\n          }\r\n        } catch (endpointErr) {\r\n          console.warn(`Endpoint ${endpoint} failed:`, endpointErr);\r\n          errorMessage = endpointErr.message;\r\n        }\r\n      }\r\n      \r\n      // If no endpoint worked, use fallback preview\r\n      if (!previewSuccess) {\r\n        console.log('All endpoint attempts failed, using local preview');\r\n        \r\n        // Simple variable replacement for demonstration\r\n        let previewText = template.content;\r\n        \r\n        // Replace variables with sample values\r\n        template.variables.forEach(variable => {\r\n          const sampleValue = `[Sample ${variable}]`;\r\n          previewText = previewText.replace(new RegExp(`{${variable}}`, 'g'), sampleValue);\r\n        });\r\n        \r\n        setPreviewData({ \r\n          rendered_text: previewText,\r\n          message: \"Using client-side preview (API endpoints not available)\",\r\n          is_fallback: true\r\n        });\r\n        setShowPreview(true);\r\n        \r\n        // Show notification\r\n        showSnackbar(`Using fallback preview. Server error: ${errorMessage}`, 'warning');\r\n      }\r\n    } catch (err) {\r\n      console.error('Error generating preview:', err);\r\n      showSnackbar(`Failed to generate preview: ${err.message}`, 'error');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n  \r\n  // Handle template save\r\n  const handleSaveTemplate = async () => {\r\n    if (!template.template_name || !template.content || !template.template_type) {\r\n      showSnackbar('Template name, content, and type are required', 'error');\r\n      return;\r\n    }\r\n    \r\n    // Validate credentials if needed\r\n    if (!businessId || !businessApiKey) {\r\n      showSnackbar('Business ID and API Key are required', 'error');\r\n      setShowBusinessIdInput(true);\r\n      return;\r\n    }\r\n    \r\n    setIsLoading(true);\r\n    try {\r\n      // Check if we're creating a new template or editing an existing one\r\n      const isNewTemplate = templateId === 'new' || !template.template_id;\r\n      \r\n      // Use the API_CONFIG for consistent endpoints\r\n      const endpoint = isNewTemplate \r\n        ? API_CONFIG.ENDPOINTS.TEMPLATES \r\n        : `${API_CONFIG.ENDPOINTS.TEMPLATES}/${template.template_id}`;\r\n      \r\n      const url = `${API_CONFIG.BASE_URL}${endpoint}`;\r\n      \r\n      console.log(`Saving template to URL: ${url}, method: ${isNewTemplate ? 'POST' : 'PUT'}`);\r\n      \r\n      const method = isNewTemplate ? 'POST' : 'PUT';\r\n      \r\n      // Prepare the request payload with the correct field names\r\n      const payload = {\r\n        template_name: template.template_name,\r\n        content: template.content,\r\n        system_prompt: template.system_prompt || '',\r\n        template_type: template.template_type,\r\n        business_id: normalizeUUID(businessId),\r\n      };\r\n      \r\n      // Only include template_id for existing templates\r\n      if (!isNewTemplate && template.template_id) {\r\n        payload.template_id = template.template_id;\r\n      }\r\n      \r\n      // Add agent_id if available\r\n      if (agentId) {\r\n        payload.agent_id = normalizeUUID(agentId);\r\n      }\r\n      \r\n      console.log('Payload with normalized IDs:', payload);\r\n      \r\n      const response = await fetch(url, {\r\n        method,\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Accept': 'application/json',\r\n          'Authorization': `Bearer ${businessApiKey}`\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify(payload)\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        const errorData = await response.json().catch(() => ({}));\r\n        throw new Error(errorData.error || errorData.message || `Failed to ${isNewTemplate ? 'create' : 'update'} template`);\r\n      }\r\n      \r\n      const data = await response.json();\r\n      showSnackbar(`Template ${isNewTemplate ? 'created' : 'updated'} successfully`, 'success');\r\n      \r\n      // If creating a new template, update the URL to edit mode\r\n      if (isNewTemplate && data.template_id) {\r\n        // Set a flag in localStorage to trigger a refresh on the templates list\r\n        localStorage.setItem('template_updated', 'true');\r\n        \r\n        // Update the browser URL without navigating away\r\n        window.history.replaceState(\r\n          null, \r\n          '', \r\n          `/template-editor/${data.template_id}?business_id=${businessId}${agentId ? `&agent_id=${agentId}` : ''}`\r\n        );\r\n        \r\n        // Update the template with the new ID\r\n        setTemplate(prev => ({\r\n          ...prev,\r\n          template_id: data.template_id\r\n        }));\r\n        \r\n        // Update the templateId state\r\n        setTemplateId(data.template_id);\r\n      }\r\n    } catch (err) {\r\n      console.error('Error saving template:', err);\r\n      showSnackbar(err.message, 'error');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n  \r\n  // Navigate back to templates list\r\n  const handleCancel = () => {\r\n    navigate('/templates');\r\n  };\r\n  \r\n  // Handle template type change\r\n  const handleTemplateTypeChange = (e) => {\r\n    const newType = e.target.value;\r\n    console.log('Template type changed to:', newType);\r\n    setTemplate(prev => {\r\n      const updated = { \r\n        ...prev, \r\n        template_type: newType\r\n      };\r\n      console.log('Updated template state:', updated);\r\n      return updated;\r\n    });\r\n  };\r\n  \r\n  // Snackbar functions\r\n  const showSnackbar = (message, severity = 'success') => {\r\n    setSnackbar({\r\n      open: true,\r\n      message,\r\n      severity\r\n    });\r\n  };\r\n  \r\n  const handleCloseSnackbar = () => {\r\n    setSnackbar(prev => ({\r\n      ...prev,\r\n      open: false\r\n    }));\r\n  };\r\n  \r\n  return (\r\n    <Paper sx={{ p: 3, mb: 3, maxWidth: 1200, mx: 'auto' }}>\r\n      {/* Back button and title */}\r\n      <Box sx={{ display: 'flex', alignItems: 'center', mb: 3 }}>\r\n        <IconButton onClick={handleCancel} sx={{ mr: 1 }}>\r\n          <ArrowBackIcon />\r\n        </IconButton>\r\n        <Typography variant=\"h5\">\r\n          {template.template_id && template.template_id !== 'new' ? 'Edit Template' : 'Create New Template'}\r\n        </Typography>\r\n        <Box sx={{ flexGrow: 1 }} />\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={handleSaveTemplate}\r\n          disabled={isLoading || !template.template_name.trim() || !template.content.trim()}\r\n          startIcon={isLoading ? <CircularProgress size={24} /> : <SaveIcon />}\r\n        >\r\n          Save Template\r\n        </Button>\r\n      </Box>\r\n      \r\n      {/* Business ID input section */}\r\n      {(showBusinessIdInput || !businessId || !businessApiKey) && (\r\n        <Box sx={{ mb: 3, p: 2, border: '1px dashed', borderColor: 'warning.main', borderRadius: 1 }}>\r\n          <Typography variant=\"subtitle1\" color=\"warning.main\" gutterBottom>\r\n            Business Credentials Required\r\n          </Typography>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} md={5}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Business ID\"\r\n                value={businessId}\r\n                onChange={(e) => setBusinessId(e.target.value)}\r\n                placeholder=\"Enter your business ID\"\r\n                helperText=\"Required for saving templates\"\r\n                required\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={5}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Business API Key\"\r\n                value={businessApiKey}\r\n                onChange={(e) => setBusinessApiKey(e.target.value)}\r\n                placeholder=\"Enter your business API key\"\r\n                helperText=\"Required for authentication\"\r\n                type=\"password\"\r\n                required\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={2}>\r\n              <Button \r\n                variant=\"contained\" \r\n                color=\"primary\"\r\n                onClick={saveCredentials}\r\n                fullWidth\r\n                sx={{ height: '56px' }}\r\n              >\r\n                Validate & Save\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n      )}\r\n      \r\n      {/* Agent ID input section */}\r\n      {(showAgentIdInput || !agentId) && (\r\n        <Box sx={{ mb: 3, p: 2, border: '1px dashed', borderColor: 'warning.main', borderRadius: 1 }}>\r\n          <Typography variant=\"subtitle1\" color=\"warning.main\" gutterBottom>\r\n            Agent ID Required\r\n          </Typography>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} md={5}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Agent ID\"\r\n                value={agentId}\r\n                onChange={(e) => setAgentId(e.target.value)}\r\n                placeholder=\"Enter your agent ID\"\r\n                helperText=\"Required for saving templates\"\r\n                required\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n      )}\r\n      \r\n      {/* Template information section */}\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} md={6}>\r\n          <TextField\r\n            fullWidth\r\n            label=\"Template Name\"\r\n            value={template.template_name}\r\n            onChange={(e) => setTemplate(prev => ({ ...prev, template_name: e.target.value }))}\r\n            required\r\n            error={!template.template_name.trim()}\r\n            helperText={!template.template_name.trim() ? \"Template name is required\" : \"\"}\r\n            sx={{ mb: 2 }}\r\n          />\r\n          \r\n          <FormControl fullWidth sx={{ mb: 2 }}>\r\n            <InputLabel id=\"template-type-label\">Template Type</InputLabel>\r\n            <Select\r\n              labelId=\"template-type-label\"\r\n              value={template.template_type}\r\n              label=\"Template Type\"\r\n              onChange={handleTemplateTypeChange}\r\n            >\r\n              <ListSubheader>Regular Templates</ListSubheader>\r\n              {templateTypes\r\n                .filter(type => type.group === 'Regular')\r\n                .map((type) => (\r\n                  <MenuItem key={type.value} value={type.value}>\r\n                    {type.label}\r\n                  </MenuItem>\r\n                ))\r\n              }\r\n              <ListSubheader>Default Templates</ListSubheader>\r\n              {templateTypes\r\n                .filter(type => type.group === 'Default')\r\n                .map((type) => (\r\n                  <MenuItem key={type.value} value={type.value}>\r\n                    {type.label}\r\n                  </MenuItem>\r\n                ))\r\n              }\r\n            </Select>\r\n          </FormControl>\r\n          \r\n          <TextField\r\n            fullWidth\r\n            label=\"Template Description\"\r\n            value={template.template_description}\r\n            onChange={(e) => setTemplate(prev => ({ ...prev, template_description: e.target.value }))}\r\n            multiline\r\n            rows={2}\r\n            sx={{ mb: 2 }}\r\n          />\r\n          \r\n          <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\r\n            <Typography variant=\"subtitle1\" sx={{ mr: 2 }}>\r\n              Detected Variables:\r\n            </Typography>\r\n            <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1 }}>\r\n              {template.variables.length > 0 ? (\r\n                template.variables.map((variable, index) => (\r\n                  <Chip \r\n                    key={index} \r\n                    label={variable} \r\n                    color=\"primary\" \r\n                    variant=\"outlined\" \r\n                  />\r\n                ))\r\n              ) : (\r\n                <Typography variant=\"body2\" color=\"text.secondary\">\r\n                  No variables detected. Use {\"{variable_name}\"} syntax.\r\n                </Typography>\r\n              )}\r\n            </Box>\r\n          </Box>\r\n          \r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            onClick={handlePreview}\r\n            disabled={!template.content.trim()}\r\n            startIcon={<VisibilityIcon />}\r\n            sx={{ mt: 2 }}\r\n          >\r\n            Preview Template\r\n          </Button>\r\n        </Grid>\r\n        \r\n        <Grid item xs={12} md={6}>\r\n          <Typography variant=\"subtitle1\" gutterBottom>\r\n            Template Content\r\n            <Tooltip title=\"Use {variable_name} syntax to create variables in your template\">\r\n              <IconButton size=\"small\">\r\n                <HelpOutlineIcon fontSize=\"small\" />\r\n              </IconButton>\r\n            </Tooltip>\r\n          </Typography>\r\n          <TextField\r\n            fullWidth\r\n            multiline\r\n            rows={10}\r\n            value={template.content}\r\n            onChange={(e) => setTemplate({ ...template, content: e.target.value })}\r\n            placeholder=\"Enter your template content here with variables in {curly_braces}...\"\r\n            sx={{ \r\n              mb: 2, \r\n              fontFamily: 'monospace',\r\n              '& .MuiInputBase-input': {\r\n                fontFamily: 'monospace',\r\n              }\r\n            }}\r\n          />\r\n          \r\n          <Grid item xs={12}>\r\n            <TextField\r\n              label=\"System Prompt (Optional)\"\r\n              value={template.system_prompt}\r\n              onChange={(e) => setTemplate({ ...template, system_prompt: e.target.value })}\r\n              fullWidth\r\n              multiline\r\n              rows={4}\r\n              margin=\"normal\"\r\n              variant=\"outlined\"\r\n              placeholder=\"Enter optional system prompt for the model...\"\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      \r\n      {/* Preview Dialog */}\r\n      <Dialog \r\n        open={showPreview} \r\n        onClose={() => setShowPreview(false)}\r\n        maxWidth=\"md\"\r\n        fullWidth\r\n      >\r\n        <DialogTitle>Template Preview</DialogTitle>\r\n        <DialogContent>\r\n          <Typography variant=\"subtitle1\" gutterBottom>\r\n            Template: {template.template_name}\r\n          </Typography>\r\n          <Typography variant=\"subtitle2\" color=\"text.secondary\" gutterBottom>\r\n            Type: {template.template_type}\r\n          </Typography>\r\n          <Divider sx={{ my: 2 }} />\r\n          <Box sx={{ \r\n            bgcolor: 'background.paper', \r\n            p: 2, \r\n            borderRadius: 1,\r\n            border: '1px solid',\r\n            borderColor: 'divider',\r\n            maxHeight: '500px',\r\n            overflow: 'auto',\r\n            fontFamily: 'monospace',\r\n            whiteSpace: 'pre-wrap',\r\n            wordBreak: 'break-word'\r\n          }}>\r\n            {previewData?.rendered_text || previewData?.content || 'No preview data available'}\r\n          </Box>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setShowPreview(false)}>Close</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      \r\n      {/* Snackbar for notifications */}\r\n      <Snackbar\r\n        open={snackbar.open}\r\n        autoHideDuration={6000}\r\n        onClose={handleCloseSnackbar}\r\n        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      >\r\n        <Alert onClose={handleCloseSnackbar} severity={snackbar.severity} sx={{ width: '100%' }}>\r\n          {snackbar.message}\r\n        </Alert>\r\n      </Snackbar>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default TemplateEditor; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}